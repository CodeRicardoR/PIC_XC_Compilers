

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Oct 18 13:50:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F258
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F258 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001C8A                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _BufferDAT
    88  001C8A  58                 	db	88
    89  001C8B  58                 	db	88
    90  001C8C  58                 	db	88
    91  001C8D  58                 	db	88
    92  001C8E  58                 	db	88
    93  001C8F  58                 	db	88
    94  001C90  58                 	db	88
    95  001C91  58                 	db	88
    96  001C92  58                 	db	88
    97  001C93  58                 	db	88
    98  001C94  58                 	db	88
    99  001C95  58                 	db	88
   100  001C96  00                 	db	0
   101                           
   102                           ;initializer for _DateTimeGPS
   103  001C97  58                 	db	88
   104  001C98  58                 	db	88
   105  001C99  58                 	db	88
   106  001C9A  58                 	db	88
   107  001C9B  58                 	db	88
   108  001C9C  58                 	db	88
   109  001C9D  58                 	db	88
   110  001C9E  58                 	db	88
   111  001C9F  58                 	db	88
   112  001CA0  58                 	db	88
   113  001CA1  58                 	db	88
   114  001CA2  58                 	db	88
   115  001CA3  00                 	db	0
   116  0000                     _TXREG	set	4013
   117  0000                     _RCREG	set	4014
   118  0000                     _SPBRG	set	4015
   119  0000                     _TXSTA	set	4012
   120  0000                     _TXSTAbits	set	4012
   121  0000                     _RCSTA	set	4011
   122  0000                     _SSPSTATbits	set	4039
   123  0000                     _TRISCbits	set	3988
   124  0000                     _T1CONbits	set	4045
   125  0000                     _LATAbits	set	3977
   126  0000                     _INTCON	set	4082
   127  0000                     _LATCbits	set	3979
   128  0000                     _TRISBbits	set	3987
   129  0000                     _T0CONbits	set	4053
   130  0000                     _PORTBbits	set	3969
   131  0000                     _PORTCbits	set	3970
   132  0000                     _LATA	set	3977
   133  0000                     _PIE1bits	set	3997
   134  0000                     _RCSTAbits	set	4011
   135  0000                     _ADCON1bits	set	4033
   136  0000                     _T0CON	set	4053
   137  0000                     _TMR0L	set	4054
   138  0000                     _TMR0H	set	4055
   139  0000                     _INTCONbits	set	4082
   140  0000                     _PIR1bits	set	3998
   141  0000                     _INTCON2bits	set	4081
   142  0000                     _SSPCON1bits	set	4038
   143  0000                     _SSPSTAT	set	4039
   144  0000                     _T1CON	set	4045
   145  0000                     _TMR1L	set	4046
   146  0000                     _TMR1H	set	4047
   147  0000                     _RCONbits	set	4048
   148  0000                     _TRISA	set	3986
   149  0000                     _LATC	set	3979
   150  0000                     _LATB	set	3978
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISB	set	3987
   153  0000                     _SSPBUF	set	4041
   154                           
   155                           	psect	smallconst
   156  000600                     __psmallconst:
   157                           	callstack 0
   158  000600  00                 	db	0
   159  000601                     STR_3:
   160  000601  4E                 	db	78	;'N'
   161  000602  4E                 	db	78	;'N'
   162  000603  4E                 	db	78	;'N'
   163  000604  4E                 	db	78	;'N'
   164  000605  4A                 	db	74	;'J'
   165  000606  52                 	db	82	;'R'
   166  000607  4F                 	db	79	;'O'
   167  000608  43                 	db	67	;'C'
   168  000609  4D                 	db	77	;'M'
   169  00060A  44                 	db	68	;'D'
   170  00060B  00                 	db	0
   171  00060C                     STR_5:
   172  00060C  4E                 	db	78	;'N'
   173  00060D  4E                 	db	78	;'N'
   174  00060E  4E                 	db	78	;'N'
   175  00060F  4E                 	db	78	;'N'
   176  000610  4A                 	db	74	;'J'
   177  000611  52                 	db	82	;'R'
   178  000612  4F                 	db	79	;'O'
   179  000613  44                 	db	68	;'D'
   180  000614  41                 	db	65	;'A'
   181  000615  54                 	db	84	;'T'
   182  000616  00                 	db	0
   183  000617                     STR_1:
   184  000617  4A                 	db	74	;'J'
   185  000618  52                 	db	82	;'R'
   186  000619  4F                 	db	79	;'O'
   187  00061A  41                 	db	65	;'A'
   188  00061B  44                 	db	68	;'D'
   189  00061C  51                 	db	81	;'Q'
   190  00061D  30                 	db	48	;'0'
   191  00061E  39                 	db	57	;'9'
   192  00061F  2C                 	db	44
   193  000620  00                 	db	0
   194  000621                     STR_2:
   195  000621  2C                 	db	44
   196  000622  0A                 	db	10
   197  000623  0D                 	db	13
   198  000624  00                 	db	0
   199  000625  00                 	db	0	; dummy byte at the end
   200  0000                     
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204  001B60                     __pcinit:
   205                           	callstack 0
   206  001B60                     start_initialization:
   207                           	callstack 0
   208  001B60                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Initialize objects allocated to COMRAM (26 bytes)
   212                           ; load TBLPTR registers with __pidataCOMRAM
   213  001B60  0E8A               	movlw	low __pidataCOMRAM
   214  001B62  6EF6               	movwf	tblptrl,c
   215  001B64  0E1C               	movlw	high __pidataCOMRAM
   216  001B66  6EF7               	movwf	tblptrh,c
   217  001B68  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   218  001B6A  6EF8               	movwf	tblptru,c
   219  001B6C  EE00  F02A         	lfsr	0,__pdataCOMRAM
   220  001B70  EE10 F01A          	lfsr	1,26
   221  001B74                     copy_data0:
   222  001B74  0009               	tblrd		*+
   223  001B76  CFF5 FFEE          	movff	tablat,postinc0
   224  001B7A  50E5               	movf	postdec1,w,c
   225  001B7C  50E1               	movf	fsr1l,w,c
   226  001B7E  E1FA               	bnz	copy_data0
   227                           
   228                           ; Clear objects allocated to BANK0 (1 bytes)
   229  001B80  0100               	movlb	0
   230  001B82  6BA6               	clrf	__pbssBANK0& (0+255),b
   231                           
   232                           ; Clear objects allocated to COMRAM (6 bytes)
   233  001B84  6A49               	clrf	(__pbssCOMRAM+5)& (0+255),c
   234  001B86  6A48               	clrf	(__pbssCOMRAM+4)& (0+255),c
   235  001B88  6A47               	clrf	(__pbssCOMRAM+3)& (0+255),c
   236  001B8A  6A46               	clrf	(__pbssCOMRAM+2)& (0+255),c
   237  001B8C  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
   238  001B8E  6A44               	clrf	__pbssCOMRAM& (0+255),c
   239  001B90                     end_of_initialization:
   240                           	callstack 0
   241  001B90                     __end_of__initialization:
   242                           	callstack 0
   243  001B90  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   244  001B92  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   245  001B94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   246  001B96  6EF8               	movwf	tblptru,c
   247  001B98  0100               	movlb	0
   248  001B9A  EF13  F003         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251  000044                     __pbssCOMRAM:
   252                           	callstack 0
   253  000044                     	ds	5
   254  000049                     _RxBuffer:
   255                           	callstack 0
   256  000049                     	ds	1
   257                           
   258                           	psect	dataCOMRAM
   259  00002A                     __pdataCOMRAM:
   260                           	callstack 0
   261  00002A                     _BufferDAT:
   262                           	callstack 0
   263  00002A                     	ds	13
   264  000037                     _DateTimeGPS:
   265                           	callstack 0
   266  000037                     	ds	13
   267                           
   268                           	psect	bssBANK0
   269  0000A6                     __pbssBANK0:
   270                           	callstack 0
   271  0000A6                     _conta1:
   272                           	callstack 0
   273  0000A6                     	ds	1
   274                           
   275                           	psect	cstackBANK0
   276  000060                     __pcstackBANK0:
   277                           	callstack 0
   278  000060                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x0
   281  000060                     	ds	8
   282  000068                     main@SumData_Y:
   283                           	callstack 0
   284                           
   285                           ; 8 bytes @ 0x8
   286  000068                     	ds	8
   287  000070                     main@SumData_Z:
   288                           	callstack 0
   289                           
   290                           ; 8 bytes @ 0x10
   291  000070                     	ds	8
   292  000078                     main@SumData_TC:
   293                           	callstack 0
   294                           
   295                           ; 8 bytes @ 0x18
   296  000078                     	ds	8
   297  000080                     main@SumData_TS:
   298                           	callstack 0
   299                           
   300                           ; 8 bytes @ 0x20
   301  000080                     	ds	8
   302  000088                     main@Data_Y:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x28
   306  000088                     	ds	4
   307  00008C                     main@Data_Z:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x2C
   311  00008C                     	ds	4
   312  000090                     main@Data_TC:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x30
   316  000090                     	ds	4
   317  000094                     main@Data_TS:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x34
   321  000094                     	ds	4
   322  000098                     main@SumData_X:
   323                           	callstack 0
   324                           
   325                           ; 8 bytes @ 0x38
   326  000098                     	ds	8
   327  0000A0                     main@Data_X:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x40
   331  0000A0                     	ds	4
   332  0000A4                     main@ID:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x44
   336  0000A4                     	ds	1
   337  0000A5                     main@conta:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x45
   341  0000A5                     	ds	1
   342                           
   343                           	psect	cstackCOMRAM
   344  000001                     __pcstackCOMRAM:
   345                           	callstack 0
   346  000001                     ReadByteSW_USART@conta:
   347                           	callstack 0
   348  000001                     i2WriteByte_USART@byte:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x0
   352  000001                     	ds	1
   353  000002                     GPS_TIMEDATE@LimitConta:
   354                           	callstack 0
   355  000002                     i2print_string@str:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x1
   359  000002                     	ds	1
   360  000003                     GPS_TIMEDATE@conta:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x2
   364  000003                     	ds	1
   365  000004                     i2TransmitDAT_USART@DAT_ID:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369  000004                     	ds	1
   370  000005                     i2TransmitDAT_USART@conta:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x4
   374  000005                     	ds	1
   375  000006                     ??_Interrups:
   376                           
   377                           ; 1 bytes @ 0x5
   378  000006                     	ds	10
   379  000010                     ?___aodiv:
   380                           	callstack 0
   381  000010                     TransferByte_SPI@data:
   382                           	callstack 0
   383  000010                     WriteByte_USART@byte:
   384                           	callstack 0
   385  000010                     ReceiveCMD_USART@conta_byte:
   386                           	callstack 0
   387  000010                     ReceiveDAT_USART@data_byte:
   388                           	callstack 0
   389  000010                     ___aodiv@dividend:
   390                           	callstack 0
   391                           
   392                           ; 8 bytes @ 0xF
   393  000010                     	ds	1
   394  000011                     ??_ResetAD7177:
   395  000011                     ?_ReadADC32:
   396                           	callstack 0
   397  000011                     ReadRegister_1bytesAD7177@command:
   398                           	callstack 0
   399  000011                     ReadRegister_2bytesAD7177@command:
   400                           	callstack 0
   401  000011                     WriteRegister_2bytesAD7177@BYTE_HIGH:
   402                           	callstack 0
   403  000011                     ReceiveCMD_USART@data_byte:
   404                           	callstack 0
   405  000011                     ReceiveDAT_USART@conta_byte:
   406                           	callstack 0
   407  000011                     print_string@str:
   408                           	callstack 0
   409  000011                     print_value@value:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x10
   413  000011                     	ds	1
   414  000012                     ResetAD7177@conta:
   415                           	callstack 0
   416  000012                     WriteRegister_2bytesAD7177@BYTE_LOW:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x11
   420  000012                     	ds	1
   421  000013                     WriteRegister_2bytesAD7177@command:
   422                           	callstack 0
   423  000013                     TransmitCMD_USART@CMD_ID:
   424                           	callstack 0
   425  000013                     TransmitDAT_USART@DAT_ID:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x12
   429  000013                     	ds	1
   430  000014                     TransmitDAT_USART@conta:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x13
   434  000014                     	ds	1
   435  000015                     ??_ReadADC32:
   436  000015                     ??_print_value:
   437                           
   438                           ; 1 bytes @ 0x14
   439  000015                     	ds	3
   440  000018                     ___aodiv@divisor:
   441                           	callstack 0
   442                           
   443                           ; 8 bytes @ 0x17
   444  000018                     	ds	1
   445  000019                     ReadADC32@DataADC:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x18
   449  000019                     	ds	1
   450  00001A                     print_value@Bytes:
   451                           	callstack 0
   452                           
   453                           ; 5 bytes @ 0x19
   454  00001A                     	ds	3
   455  00001D                     ReadADC32@byte3:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x1C
   459  00001D                     	ds	1
   460  00001E                     ReadADC32@byte2:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x1D
   464  00001E                     	ds	1
   465  00001F                     ReadADC32@byte1:
   466                           	callstack 0
   467  00001F                     print_value@conta:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x1E
   471  00001F                     	ds	1
   472  000020                     ReadADC32@byte0:
   473                           	callstack 0
   474  000020                     ___aodiv@counter:
   475                           	callstack 0
   476  000020                     print_value@RegTemp:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x1F
   480  000020                     	ds	1
   481  000021                     ___aodiv@sign:
   482                           	callstack 0
   483  000021                     ReadADC32@data_ini:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x20
   487  000021                     	ds	1
   488  000022                     ___aodiv@quotient:
   489                           	callstack 0
   490                           
   491                           ; 8 bytes @ 0x21
   492  000022                     	ds	8
   493                           
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 131 in file "Timig_AD7177.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  SumData_X       8   56[BANK0 ] long long 
   504 ;;  SumData_TS      8   32[BANK0 ] long long 
   505 ;;  SumData_TC      8   24[BANK0 ] long long 
   506 ;;  SumData_Z       8   16[BANK0 ] long long 
   507 ;;  SumData_Y       8    8[BANK0 ] long long 
   508 ;;  Data_X          4   64[BANK0 ] long 
   509 ;;  Data_TS         4   52[BANK0 ] long 
   510 ;;  Data_TC         4   48[BANK0 ] long 
   511 ;;  Data_Z          4   44[BANK0 ] long 
   512 ;;  Data_Y          4   40[BANK0 ] long 
   513 ;;  conta           1   69[BANK0 ] unsigned char 
   514 ;;  ID              1   68[BANK0 ] unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   524 ;;      Params:         0       0       0       0       0       0       0
   525 ;;      Locals:         0      62       0       0       0       0       0
   526 ;;      Temps:          0       8       0       0       0       0       0
   527 ;;      Totals:         0      70       0       0       0       0       0
   528 ;;Total ram usage:       70 bytes
   529 ;; Hardware stack levels required when called: 7
   530 ;; This function calls:
   531 ;;		_ClosePort_SPI
   532 ;;		_CloseSerialPort
   533 ;;		_ConfigPort_SPI
   534 ;;		_ConfigSerialPort
   535 ;;		_OpenPort_SPI
   536 ;;		_OpenSerialPort
   537 ;;		_ReadADC32
   538 ;;		_ReadRegister_1bytesAD7177
   539 ;;		_ReadRegister_2bytesAD7177
   540 ;;		_ReceiveCMD_USART
   541 ;;		_ReceiveDAT_USART
   542 ;;		_ResetAD7177
   543 ;;		_TransferByte_SPI
   544 ;;		_TransmitCMD_USART
   545 ;;		_TransmitDAT_USART
   546 ;;		_WriteRegister_2bytesAD7177
   547 ;;		___aodiv
   548 ;;		_print_string
   549 ;;		_print_value
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556  000626                     __ptext0:
   557                           	callstack 0
   558  000626                     _main:
   559                           	callstack 24
   560  000626  FFFF               	dw	65535	; assembler added errata NOP
   561                           
   562                           ;Timig_AD7177.c: 132:     unsigned char ID,conta;;Timig_AD7177.c: 134:     signed long D
      +                          ata_X, Data_Y, Data_Z, Data_TC, Data_TS;;Timig_AD7177.c: 135:     signed long long SumDa
      +                          ta_X, SumData_Y, SumData_Z, SumData_TC, SumData_TS;;Timig_AD7177.c: 140:     ADCON1bits.
      +                          PCFG = 0x07;
   563  000628  50C1               	movf	193,w,c	;volatile
   564  00062A  0BF0               	andlw	-16
   565  00062C  0907               	iorlw	7
   566  00062E  6EC1               	movwf	193,c	;volatile
   567                           
   568                           ;Timig_AD7177.c: 141:     LATA = 0;
   569  000630  0E00               	movlw	0
   570  000632  6E89               	movwf	137,c	;volatile
   571                           
   572                           ;Timig_AD7177.c: 142:     LATB = 0;
   573  000634  0E00               	movlw	0
   574  000636  6E8A               	movwf	138,c	;volatile
   575                           
   576                           ;Timig_AD7177.c: 143:     LATC = 0;
   577  000638  0E00               	movlw	0
   578  00063A  6E8B               	movwf	139,c	;volatile
   579                           
   580                           ;Timig_AD7177.c: 144:     TRISA = 0;
   581  00063C  0E00               	movlw	0
   582  00063E  6E92               	movwf	146,c	;volatile
   583                           
   584                           ;Timig_AD7177.c: 145:     TRISB = 0;
   585  000640  0E00               	movlw	0
   586  000642  6E93               	movwf	147,c	;volatile
   587                           
   588                           ;Timig_AD7177.c: 146:     TRISC = 0;
   589  000644  0E00               	movlw	0
   590  000646  6E94               	movwf	148,c	;volatile
   591  000648                     
   592                           ;Timig_AD7177.c: 147:     TRISBbits.TRISB0 = 1;
   593  000648  8093               	bsf	147,0,c	;volatile
   594  00064A                     
   595                           ;Timig_AD7177.c: 150:     LATCbits.LATC2 = 1;
   596  00064A  848B               	bsf	139,2,c	;volatile
   597  00064C                     
   598                           ;Timig_AD7177.c: 151:     ConfigPort_SPI();
   599  00064C  EC5F  F00E         	call	_ConfigPort_SPI	;wreg free
   600                           
   601                           ;Timig_AD7177.c: 152:     OpenPort_SPI();
   602  000650  EC7B  F00E         	call	_OpenPort_SPI	;wreg free
   603  000654                     
   604                           ;Timig_AD7177.c: 155:     ConfigSerialPort();
   605  000654  EC6C  F00E         	call	_ConfigSerialPort	;wreg free
   606  000658                     
   607                           ;Timig_AD7177.c: 156:     OpenSerialPort();
   608  000658  EC77  F00E         	call	_OpenSerialPort	;wreg free
   609  00065C                     
   610                           ;Timig_AD7177.c: 160:     RCONbits.IPEN = 0;
   611  00065C  9ED0               	bcf	208,7,c	;volatile
   612  00065E                     
   613                           ;Timig_AD7177.c: 161:     INTCON = 0x00;
   614  00065E  0E00               	movlw	0
   615  000660  6EF2               	movwf	242,c	;volatile
   616  000662                     
   617                           ;Timig_AD7177.c: 163:     INTCONbits.PEIE = 1;
   618  000662  8CF2               	bsf	242,6,c	;volatile
   619  000664                     
   620                           ;Timig_AD7177.c: 164:     INTCONbits.GIE = 1;
   621  000664  8EF2               	bsf	242,7,c	;volatile
   622  000666                     
   623                           ;Timig_AD7177.c: 167:     LATAbits.LATA2 = 0;
   624  000666  9489               	bcf	137,2,c	;volatile
   625  000668                     
   626                           ;Timig_AD7177.c: 168:     LATAbits.LATA1 = 0;
   627  000668  9289               	bcf	137,1,c	;volatile
   628  00066A                     l3256:
   629  00066A  FFFF               	dw	65535	; assembler added errata NOP
   630                           
   631                           ;Timig_AD7177.c: 171:         ID = ReceiveCMD_USART();
   632  00066C  EC02  F00C         	call	_ReceiveCMD_USART	;wreg free
   633  000670  0100               	movlb	0	; () banked
   634  000672  6FA4               	movwf	main@ID& (0+255),b
   635                           
   636                           ;Timig_AD7177.c: 172:         switch(ID){
   637  000674  EFDD  F008         	goto	l3592
   638  000678                     l3258:
   639  000678  FFFF               	dw	65535	; assembler added errata NOP
   640                           
   641                           ; BSR set to: 0
   642                           ;Timig_AD7177.c: 175:                 ResetAD7177();
   643  00067A  EC90  F00D         	call	_ResetAD7177	;wreg free
   644  00067E                     
   645                           ;Timig_AD7177.c: 176:                 WriteRegister_2bytesAD7177(0x01, 0x00, 0x2C);
   646  00067E  0E00               	movlw	0
   647  000680  6E11               	movwf	WriteRegister_2bytesAD7177@BYTE_HIGH^0,c
   648  000682  0E2C               	movlw	44
   649  000684  6E12               	movwf	WriteRegister_2bytesAD7177@BYTE_LOW^0,c
   650  000686  0E01               	movlw	1
   651  000688  EC27  F00E         	call	_WriteRegister_2bytesAD7177
   652  00068C                     
   653                           ;Timig_AD7177.c: 177:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
   654  00068C  0E30               	movlw	48
   655  00068E  0100               	movlb	0	; () banked
   656  000690  6F60               	movwf	??_main& (0+255),b
   657  000692  0EE7               	movlw	231
   658  000694                     u1917:
   659  000694  FFFF               	dw	65535	; errata NOP
   660  000696  2EE8               	decfsz	wreg,f,c
   661  000698  D7FD               	bra	u1917
   662  00069A  2F60               	decfsz	??_main& (0+255),f,b
   663  00069C  D7FB               	bra	u1917
   664  00069E  F000               	nop	
   665  0006A0                     
   666                           ;Timig_AD7177.c: 178:                 WriteRegister_2bytesAD7177(0x20, 0x1F, 0x00);
   667  0006A0  0E1F               	movlw	31
   668  0006A2  6E11               	movwf	WriteRegister_2bytesAD7177@BYTE_HIGH^0,c
   669  0006A4  0E00               	movlw	0
   670  0006A6  6E12               	movwf	WriteRegister_2bytesAD7177@BYTE_LOW^0,c
   671  0006A8  0E20               	movlw	32
   672  0006AA  EC27  F00E         	call	_WriteRegister_2bytesAD7177
   673  0006AE                     
   674                           ;Timig_AD7177.c: 179:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
   675  0006AE  0E30               	movlw	48
   676  0006B0  0100               	movlb	0	; () banked
   677  0006B2  6F60               	movwf	??_main& (0+255),b
   678  0006B4  0EE7               	movlw	231
   679  0006B6                     u1927:
   680  0006B6  FFFF               	dw	65535	; errata NOP
   681  0006B8  2EE8               	decfsz	wreg,f,c
   682  0006BA  D7FD               	bra	u1927
   683  0006BC  2F60               	decfsz	??_main& (0+255),f,b
   684  0006BE  D7FB               	bra	u1927
   685  0006C0  F000               	nop	
   686  0006C2                     
   687                           ;Timig_AD7177.c: 180:                 WriteRegister_2bytesAD7177(0x02, 0x00, 0x02);
   688  0006C2  0E00               	movlw	0
   689  0006C4  6E11               	movwf	WriteRegister_2bytesAD7177@BYTE_HIGH^0,c
   690  0006C6  0E02               	movlw	2
   691  0006C8  6E12               	movwf	WriteRegister_2bytesAD7177@BYTE_LOW^0,c
   692  0006CA  0E02               	movlw	2
   693  0006CC  EC27  F00E         	call	_WriteRegister_2bytesAD7177
   694  0006D0                     
   695                           ;Timig_AD7177.c: 182:                 TransmitCMD_USART('0');
   696  0006D0  0E30               	movlw	48
   697  0006D2  ECCF  F00D         	call	_TransmitCMD_USART
   698                           
   699                           ;Timig_AD7177.c: 183:                 break;
   700  0006D6  EF35  F003         	goto	l3256
   701  0006DA                     l3272:
   702  0006DA  FFFF               	dw	65535	; assembler added errata NOP
   703                           
   704                           ; BSR set to: 0
   705                           ;Timig_AD7177.c: 185:                 TransmitCMD_USART('1');
   706  0006DC  0E31               	movlw	49
   707  0006DE  ECCF  F00D         	call	_TransmitCMD_USART
   708  0006E2                     
   709                           ;Timig_AD7177.c: 187:                 ID = ReceiveDAT_USART();
   710  0006E2  EC06  F00B         	call	_ReceiveDAT_USART	;wreg free
   711  0006E6  0100               	movlb	0	; () banked
   712  0006E8  6FA4               	movwf	main@ID& (0+255),b
   713  0006EA                     
   714                           ; BSR set to: 0
   715                           ;Timig_AD7177.c: 188:                 if(ID == 'X'){
   716  0006EA  0E58               	movlw	88
   717  0006EC  19A4               	xorwf	main@ID& (0+255),w,b
   718  0006EE  A4D8               	btfss	status,2,c
   719  0006F0  EF7C  F003         	goto	u1731
   720  0006F4  EF7F  F003         	goto	u1730
   721  0006F8                     u1731:
   722  0006F8  FFFF               	dw	65535	; assembler added errata NOP
   723  0006FA  EF83  F003         	goto	l3280
   724  0006FE                     u1730:
   725  0006FE  FFFF               	dw	65535	; assembler added errata NOP
   726  000700                     
   727                           ; BSR set to: 0
   728                           ;Timig_AD7177.c: 189:                     RCSTAbits.CREN = 1;
   729  000700  88AB               	bsf	171,4,c	;volatile
   730                           
   731                           ;Timig_AD7177.c: 190:                 }else if(ID == '1'){
   732  000702  EF35  F003         	goto	l3256
   733  000706                     l3280:
   734  000706  FFFF               	dw	65535	; assembler added errata NOP
   735                           
   736                           ; BSR set to: 0
   737  000708  0E31               	movlw	49
   738  00070A  19A4               	xorwf	main@ID& (0+255),w,b
   739  00070C  A4D8               	btfss	status,2,c
   740  00070E  EF8B  F003         	goto	u1741
   741  000712  EF8E  F003         	goto	u1740
   742  000716                     u1741:
   743  000716  FFFF               	dw	65535	; assembler added errata NOP
   744  000718  EF10  F009         	goto	l118
   745  00071C                     u1740:
   746  00071C  FFFF               	dw	65535	; assembler added errata NOP
   747  00071E                     
   748                           ; BSR set to: 0
   749                           ;Timig_AD7177.c: 191:                     WriteRegister_2bytesAD7177(BufferDAT[0], Buffe
      +                          rDAT[1], BufferDAT[2]);
   750  00071E  C02B  F011         	movff	_BufferDAT+1,WriteRegister_2bytesAD7177@BYTE_HIGH
   751  000722  C02C  F012         	movff	_BufferDAT+2,WriteRegister_2bytesAD7177@BYTE_LOW
   752  000726  502A               	movf	_BufferDAT^0,w,c
   753  000728  EC27  F00E         	call	_WriteRegister_2bytesAD7177
   754  00072C  EF35  F003         	goto	l3256
   755  000730                     l3284:
   756  000730  FFFF               	dw	65535	; assembler added errata NOP
   757                           
   758                           ; BSR set to: 0
   759                           ;Timig_AD7177.c: 196:                 TransmitCMD_USART('2');
   760  000732  0E32               	movlw	50
   761  000734  ECCF  F00D         	call	_TransmitCMD_USART
   762  000738                     
   763                           ;Timig_AD7177.c: 198:                 ID = ReceiveDAT_USART();
   764  000738  EC06  F00B         	call	_ReceiveDAT_USART	;wreg free
   765  00073C  0100               	movlb	0	; () banked
   766  00073E  6FA4               	movwf	main@ID& (0+255),b
   767  000740                     
   768                           ; BSR set to: 0
   769                           ;Timig_AD7177.c: 199:                 if(ID == 'X'){
   770  000740  0E58               	movlw	88
   771  000742  19A4               	xorwf	main@ID& (0+255),w,b
   772  000744  A4D8               	btfss	status,2,c
   773  000746  EFA7  F003         	goto	u1751
   774  00074A  EFAA  F003         	goto	u1750
   775  00074E                     u1751:
   776  00074E  FFFF               	dw	65535	; assembler added errata NOP
   777  000750  EFAE  F003         	goto	l3292
   778  000754                     u1750:
   779  000754  FFFF               	dw	65535	; assembler added errata NOP
   780  000756                     
   781                           ; BSR set to: 0
   782                           ;Timig_AD7177.c: 200:                     RCSTAbits.CREN = 1;
   783  000756  88AB               	bsf	171,4,c	;volatile
   784                           
   785                           ;Timig_AD7177.c: 201:                 }else if(ID == '2'){
   786  000758  EF35  F003         	goto	l3256
   787  00075C                     l3292:
   788  00075C  FFFF               	dw	65535	; assembler added errata NOP
   789                           
   790                           ; BSR set to: 0
   791  00075E  0E32               	movlw	50
   792  000760  19A4               	xorwf	main@ID& (0+255),w,b
   793  000762  A4D8               	btfss	status,2,c
   794  000764  EFB6  F003         	goto	u1761
   795  000768  EFB9  F003         	goto	u1760
   796  00076C                     u1761:
   797  00076C  FFFF               	dw	65535	; assembler added errata NOP
   798  00076E  EF10  F009         	goto	l118
   799  000772                     u1760:
   800  000772  FFFF               	dw	65535	; assembler added errata NOP
   801  000774                     
   802                           ; BSR set to: 0
   803                           ;Timig_AD7177.c: 202:                     ReadRegister_2bytesAD7177(BufferDAT[0]);
   804  000774  502A               	movf	_BufferDAT^0,w,c
   805  000776  EC05  F00E         	call	_ReadRegister_2bytesAD7177
   806  00077A                     
   807                           ;Timig_AD7177.c: 203:                     TransmitDAT_USART(ID);
   808  00077A  0100               	movlb	0	; () banked
   809  00077C  51A4               	movf	main@ID& (0+255),w,b
   810  00077E  EC3C  F00D         	call	_TransmitDAT_USART
   811  000782  EF35  F003         	goto	l3256
   812  000786                     l3298:
   813  000786  FFFF               	dw	65535	; assembler added errata NOP
   814                           
   815                           ; BSR set to: 0
   816                           ;Timig_AD7177.c: 208:                 TransmitCMD_USART('3');
   817  000788  0E33               	movlw	51
   818  00078A  ECCF  F00D         	call	_TransmitCMD_USART
   819  00078E                     
   820                           ;Timig_AD7177.c: 210:                 ID = ReceiveDAT_USART();
   821  00078E  EC06  F00B         	call	_ReceiveDAT_USART	;wreg free
   822  000792  0100               	movlb	0	; () banked
   823  000794  6FA4               	movwf	main@ID& (0+255),b
   824  000796                     
   825                           ; BSR set to: 0
   826                           ;Timig_AD7177.c: 211:                 if(ID == 'X'){
   827  000796  0E58               	movlw	88
   828  000798  19A4               	xorwf	main@ID& (0+255),w,b
   829  00079A  A4D8               	btfss	status,2,c
   830  00079C  EFD2  F003         	goto	u1771
   831  0007A0  EFD5  F003         	goto	u1770
   832  0007A4                     u1771:
   833  0007A4  FFFF               	dw	65535	; assembler added errata NOP
   834  0007A6  EFD9  F003         	goto	l3306
   835  0007AA                     u1770:
   836  0007AA  FFFF               	dw	65535	; assembler added errata NOP
   837  0007AC                     
   838                           ; BSR set to: 0
   839                           ;Timig_AD7177.c: 212:                      RCSTAbits.CREN = 1;
   840  0007AC  88AB               	bsf	171,4,c	;volatile
   841                           
   842                           ;Timig_AD7177.c: 213:                 }else if(ID == '3'){
   843  0007AE  EF35  F003         	goto	l3256
   844  0007B2                     l3306:
   845  0007B2  FFFF               	dw	65535	; assembler added errata NOP
   846                           
   847                           ; BSR set to: 0
   848  0007B4  0E33               	movlw	51
   849  0007B6  19A4               	xorwf	main@ID& (0+255),w,b
   850  0007B8  A4D8               	btfss	status,2,c
   851  0007BA  EFE1  F003         	goto	u1781
   852  0007BE  EFE4  F003         	goto	u1780
   853  0007C2                     u1781:
   854  0007C2  FFFF               	dw	65535	; assembler added errata NOP
   855  0007C4  EF10  F009         	goto	l118
   856  0007C8                     u1780:
   857  0007C8  FFFF               	dw	65535	; assembler added errata NOP
   858  0007CA  EF28  F004         	goto	l3310
   859  0007CE                     l132:
   860  0007CE  FFFF               	dw	65535	; assembler added errata NOP
   861                           
   862                           ; BSR set to: 0
   863                           ;Timig_AD7177.c: 216:                             LATAbits.LA5 = 0;
   864  0007D0  9A89               	bcf	137,5,c	;volatile
   865                           
   866                           ;Timig_AD7177.c: 217:                             LATAbits.LA4 = 1;
   867  0007D2  8889               	bsf	137,4,c	;volatile
   868                           
   869                           ;Timig_AD7177.c: 218:                             LATCbits.LC0 = 0;
   870  0007D4  908B               	bcf	139,0,c	;volatile
   871                           
   872                           ;Timig_AD7177.c: 219:                             LATCbits.LC1 = 0;
   873  0007D6  928B               	bcf	139,1,c	;volatile
   874                           
   875                           ;Timig_AD7177.c: 220:                             break;
   876  0007D8  EF5B  F004         	goto	l3312
   877  0007DC                     l134:
   878  0007DC  FFFF               	dw	65535	; assembler added errata NOP
   879                           
   880                           ; BSR set to: 0
   881                           ;Timig_AD7177.c: 222:                             LATAbits.LA5 = 0;
   882  0007DE  9A89               	bcf	137,5,c	;volatile
   883                           
   884                           ;Timig_AD7177.c: 223:                             LATAbits.LA4 = 1;
   885  0007E0  8889               	bsf	137,4,c	;volatile
   886                           
   887                           ;Timig_AD7177.c: 224:                             LATCbits.LC0 = 1;
   888  0007E2  808B               	bsf	139,0,c	;volatile
   889                           
   890                           ;Timig_AD7177.c: 225:                             LATCbits.LC1 = 0;
   891  0007E4  928B               	bcf	139,1,c	;volatile
   892                           
   893                           ;Timig_AD7177.c: 226:                             break;
   894  0007E6  EF5B  F004         	goto	l3312
   895  0007EA                     l135:
   896  0007EA  FFFF               	dw	65535	; assembler added errata NOP
   897                           
   898                           ; BSR set to: 0
   899                           ;Timig_AD7177.c: 228:                             LATAbits.LA5 = 1;
   900  0007EC  8A89               	bsf	137,5,c	;volatile
   901                           
   902                           ;Timig_AD7177.c: 229:                             LATAbits.LA4 = 0;
   903  0007EE  9889               	bcf	137,4,c	;volatile
   904                           
   905                           ;Timig_AD7177.c: 230:                             LATCbits.LC0 = 0;
   906  0007F0  908B               	bcf	139,0,c	;volatile
   907                           
   908                           ;Timig_AD7177.c: 231:                             LATCbits.LC1 = 0;
   909  0007F2  928B               	bcf	139,1,c	;volatile
   910                           
   911                           ;Timig_AD7177.c: 232:                             break;
   912  0007F4  EF5B  F004         	goto	l3312
   913  0007F8                     l136:
   914  0007F8  FFFF               	dw	65535	; assembler added errata NOP
   915                           
   916                           ; BSR set to: 0
   917                           ;Timig_AD7177.c: 234:                             LATAbits.LA5 = 1;
   918  0007FA  8A89               	bsf	137,5,c	;volatile
   919                           
   920                           ;Timig_AD7177.c: 235:                             LATAbits.LA4 = 0;
   921  0007FC  9889               	bcf	137,4,c	;volatile
   922                           
   923                           ;Timig_AD7177.c: 236:                             LATCbits.LC0 = 1;
   924  0007FE  808B               	bsf	139,0,c	;volatile
   925                           
   926                           ;Timig_AD7177.c: 237:                             LATCbits.LC1 = 0;
   927  000800  928B               	bcf	139,1,c	;volatile
   928                           
   929                           ;Timig_AD7177.c: 238:                             break;
   930  000802  EF5B  F004         	goto	l3312
   931  000806                     l137:
   932  000806  FFFF               	dw	65535	; assembler added errata NOP
   933                           
   934                           ; BSR set to: 0
   935                           ;Timig_AD7177.c: 240:                             LATAbits.LA5 = 1;
   936  000808  8A89               	bsf	137,5,c	;volatile
   937                           
   938                           ;Timig_AD7177.c: 241:                             LATAbits.LA4 = 0;
   939  00080A  9889               	bcf	137,4,c	;volatile
   940                           
   941                           ;Timig_AD7177.c: 242:                             LATCbits.LC0 = 1;
   942  00080C  808B               	bsf	139,0,c	;volatile
   943                           
   944                           ;Timig_AD7177.c: 243:                             LATCbits.LC1 = 1;
   945  00080E  828B               	bsf	139,1,c	;volatile
   946                           
   947                           ;Timig_AD7177.c: 244:                             break;
   948  000810  EF5B  F004         	goto	l3312
   949  000814                     l138:
   950  000814  FFFF               	dw	65535	; assembler added errata NOP
   951                           
   952                           ; BSR set to: 0
   953                           ;Timig_AD7177.c: 246:                             LATAbits.LA5 = 0;
   954  000816  9A89               	bcf	137,5,c	;volatile
   955                           
   956                           ;Timig_AD7177.c: 247:                             LATAbits.LA4 = 1;
   957  000818  8889               	bsf	137,4,c	;volatile
   958                           
   959                           ;Timig_AD7177.c: 248:                             LATCbits.LC0 = 0;
   960  00081A  908B               	bcf	139,0,c	;volatile
   961                           
   962                           ;Timig_AD7177.c: 249:                             LATCbits.LC1 = 1;
   963  00081C  828B               	bsf	139,1,c	;volatile
   964                           
   965                           ;Timig_AD7177.c: 250:                             break;
   966  00081E  EF5B  F004         	goto	l3312
   967  000822                     l139:
   968  000822  FFFF               	dw	65535	; assembler added errata NOP
   969                           
   970                           ; BSR set to: 0
   971                           ;Timig_AD7177.c: 252:                             LATAbits.LA5 = 0;
   972  000824  9A89               	bcf	137,5,c	;volatile
   973                           
   974                           ;Timig_AD7177.c: 253:                             LATAbits.LA4 = 1;
   975  000826  8889               	bsf	137,4,c	;volatile
   976                           
   977                           ;Timig_AD7177.c: 254:                             LATCbits.LC0 = 1;
   978  000828  808B               	bsf	139,0,c	;volatile
   979                           
   980                           ;Timig_AD7177.c: 255:                             LATCbits.LC1 = 1;
   981  00082A  828B               	bsf	139,1,c	;volatile
   982                           
   983                           ;Timig_AD7177.c: 256:                             break;
   984  00082C  EF5B  F004         	goto	l3312
   985  000830                     l140:
   986  000830  FFFF               	dw	65535	; assembler added errata NOP
   987                           
   988                           ; BSR set to: 0
   989                           ;Timig_AD7177.c: 258:                             LATAbits.LA5 = 1;
   990  000832  8A89               	bsf	137,5,c	;volatile
   991                           
   992                           ;Timig_AD7177.c: 259:                             LATAbits.LA4 = 0;
   993  000834  9889               	bcf	137,4,c	;volatile
   994                           
   995                           ;Timig_AD7177.c: 260:                             LATCbits.LC0 = 0;
   996  000836  908B               	bcf	139,0,c	;volatile
   997                           
   998                           ;Timig_AD7177.c: 261:                             LATCbits.LC1 = 1;
   999  000838  828B               	bsf	139,1,c	;volatile
  1000                           
  1001                           ;Timig_AD7177.c: 262:                             break;
  1002  00083A  EF5B  F004         	goto	l3312
  1003  00083E                     l141:
  1004  00083E  FFFF               	dw	65535	; assembler added errata NOP
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;Timig_AD7177.c: 264:                             LATAbits.LA5 = 1;
  1008  000840  8A89               	bsf	137,5,c	;volatile
  1009                           
  1010                           ;Timig_AD7177.c: 265:                             LATAbits.LA4 = 1;
  1011  000842  8889               	bsf	137,4,c	;volatile
  1012                           
  1013                           ;Timig_AD7177.c: 266:                             break;
  1014  000844  EF5B  F004         	goto	l3312
  1015  000848                     l142:
  1016  000848  FFFF               	dw	65535	; assembler added errata NOP
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;Timig_AD7177.c: 268:                             __nop();
  1020  00084A  F000               	nop	
  1021                           
  1022                           ;Timig_AD7177.c: 269:                     }
  1023  00084C  EF5B  F004         	goto	l3312
  1024  000850                     l3310:
  1025  000850  FFFF               	dw	65535	; assembler added errata NOP
  1026                           
  1027                           ; BSR set to: 0
  1028  000852  502A               	movf	_BufferDAT^0,w,c
  1029  000854  6F60               	movwf	??_main& (0+255),b
  1030  000856  6B61               	clrf	(??_main+1)& (0+255),b
  1031                           
  1032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1033                           ; Switch size 1, requested type "simple"
  1034                           ; Number of cases is 1, Range of values is 0 to 0
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte            4     3 (average)
  1038                           ;	Chosen strategy is simple_byte
  1039  000858  5161               	movf	(??_main+1)& (0+255),w,b
  1040  00085A  0A00               	xorlw	0	; case 0
  1041  00085C  B4D8               	btfsc	status,2,c
  1042  00085E  EF33  F004         	goto	l3670
  1043  000862  EF24  F004         	goto	l142
  1044  000866                     l3670:
  1045  000866  FFFF               	dw	65535	; assembler added errata NOP
  1046                           
  1047                           ; BSR set to: 0
  1048                           ; Switch size 1, requested type "simple"
  1049                           ; Number of cases is 9, Range of values is 49 to 90
  1050                           ; switch strategies available:
  1051                           ; Name         Instructions Cycles
  1052                           ; simple_byte           28    15 (average)
  1053                           ;	Chosen strategy is simple_byte
  1054  000868  5160               	movf	??_main& (0+255),w,b
  1055  00086A  0A31               	xorlw	49	; case 49
  1056  00086C  B4D8               	btfsc	status,2,c
  1057  00086E  EF0A  F004         	goto	l138
  1058  000872  0A03               	xorlw	3	; case 50
  1059  000874  B4D8               	btfsc	status,2,c
  1060  000876  EF11  F004         	goto	l139
  1061  00087A  0A01               	xorlw	1	; case 51
  1062  00087C  B4D8               	btfsc	status,2,c
  1063  00087E  EF18  F004         	goto	l140
  1064  000882  0A70               	xorlw	112	; case 67
  1065  000884  B4D8               	btfsc	status,2,c
  1066  000886  EFFC  F003         	goto	l136
  1067  00088A  0A04               	xorlw	4	; case 71
  1068  00088C  B4D8               	btfsc	status,2,c
  1069  00088E  EF1F  F004         	goto	l141
  1070  000892  0A14               	xorlw	20	; case 83
  1071  000894  B4D8               	btfsc	status,2,c
  1072  000896  EF03  F004         	goto	l137
  1073  00089A  0A0B               	xorlw	11	; case 88
  1074  00089C  B4D8               	btfsc	status,2,c
  1075  00089E  EFE7  F003         	goto	l132
  1076  0008A2  0A01               	xorlw	1	; case 89
  1077  0008A4  B4D8               	btfsc	status,2,c
  1078  0008A6  EFEE  F003         	goto	l134
  1079  0008AA  0A03               	xorlw	3	; case 90
  1080  0008AC  B4D8               	btfsc	status,2,c
  1081  0008AE  EFF5  F003         	goto	l135
  1082  0008B2  EF24  F004         	goto	l142
  1083  0008B6                     l3312:
  1084  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  1085                           
  1086                           ;Timig_AD7177.c: 270:                     TransmitDAT_USART(ID);
  1087  0008B8  0100               	movlb	0	; () banked
  1088  0008BA  51A4               	movf	main@ID& (0+255),w,b
  1089  0008BC  EC3C  F00D         	call	_TransmitDAT_USART
  1090  0008C0  EF35  F003         	goto	l3256
  1091  0008C4                     l3314:
  1092  0008C4  FFFF               	dw	65535	; assembler added errata NOP
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;Timig_AD7177.c: 275:                 TransmitCMD_USART('4');
  1096  0008C6  0E34               	movlw	52
  1097  0008C8  ECCF  F00D         	call	_TransmitCMD_USART
  1098  0008CC                     
  1099                           ;Timig_AD7177.c: 277:                 LATCbits.LATC2 = 0;
  1100  0008CC  948B               	bcf	139,2,c	;volatile
  1101  0008CE                     
  1102                           ;Timig_AD7177.c: 278:                 TransferByte_SPI(0x01);
  1103  0008CE  0E01               	movlw	1
  1104  0008D0  ECE2  F00D         	call	_TransferByte_SPI
  1105  0008D4                     
  1106                           ;Timig_AD7177.c: 279:                 TransferByte_SPI(0x00);
  1107  0008D4  0E00               	movlw	0
  1108  0008D6  ECE2  F00D         	call	_TransferByte_SPI
  1109  0008DA                     
  1110                           ;Timig_AD7177.c: 280:                 TransferByte_SPI(0x1C);
  1111  0008DA  0E1C               	movlw	28
  1112  0008DC  ECE2  F00D         	call	_TransferByte_SPI
  1113  0008E0                     
  1114                           ;Timig_AD7177.c: 283:                 conta1 = 0;
  1115  0008E0  0E00               	movlw	0
  1116  0008E2  0100               	movlb	0	; () banked
  1117  0008E4  6FA6               	movwf	_conta1& (0+255),b
  1118  0008E6                     
  1119                           ; BSR set to: 0
  1120                           ;Timig_AD7177.c: 284:                 TMR1H = 0;
  1121  0008E6  0E00               	movlw	0
  1122  0008E8  6ECF               	movwf	207,c	;volatile
  1123  0008EA                     
  1124                           ; BSR set to: 0
  1125                           ;Timig_AD7177.c: 285:                 TMR1L = 0;
  1126  0008EA  0E00               	movlw	0
  1127  0008EC  6ECE               	movwf	206,c	;volatile
  1128  0008EE                     
  1129                           ; BSR set to: 0
  1130                           ;Timig_AD7177.c: 286:                 T1CON = 0xB1;
  1131  0008EE  0EB1               	movlw	177
  1132  0008F0  6ECD               	movwf	205,c	;volatile
  1133  0008F2                     
  1134                           ; BSR set to: 0
  1135                           ;Timig_AD7177.c: 287:                 PIR1bits.TMR1IF = 0;
  1136  0008F2  909E               	bcf	158,0,c	;volatile
  1137  0008F4                     
  1138                           ; BSR set to: 0
  1139                           ;Timig_AD7177.c: 288:                 PIE1bits.TMR1IE = 1;
  1140  0008F4  809D               	bsf	157,0,c	;volatile
  1141  0008F6                     
  1142                           ; BSR set to: 0
  1143                           ;Timig_AD7177.c: 290:                 Data_X = ReadADC32();
  1144  0008F6  ECEF  F009         	call	_ReadADC32	;wreg free
  1145  0008FA  C011  F0A0         	movff	?_ReadADC32,main@Data_X
  1146  0008FE  C012  F0A1         	movff	?_ReadADC32+1,main@Data_X+1
  1147  000902  C013  F0A2         	movff	?_ReadADC32+2,main@Data_X+2
  1148  000906  C014  F0A3         	movff	?_ReadADC32+3,main@Data_X+3
  1149  00090A                     
  1150                           ;Timig_AD7177.c: 291:                 LATCbits.LATC2 = 1;
  1151  00090A  848B               	bsf	139,2,c	;volatile
  1152  00090C                     
  1153                           ;Timig_AD7177.c: 292:                 T1CONbits.TMR1ON = 0;
  1154  00090C  90CD               	bcf	205,0,c	;volatile
  1155  00090E                     
  1156                           ;Timig_AD7177.c: 293:                 PIE1bits.TMR1IE = 0;
  1157  00090E  909D               	bcf	157,0,c	;volatile
  1158  000910                     
  1159                           ;Timig_AD7177.c: 294:                 BufferDAT[0] = TMR1L;
  1160  000910  CFCE F02A          	movff	4046,_BufferDAT	;volatile
  1161  000914                     
  1162                           ;Timig_AD7177.c: 295:                 BufferDAT[1] = TMR1H;
  1163  000914  CFCF F02B          	movff	4047,_BufferDAT+1	;volatile
  1164  000918                     
  1165                           ;Timig_AD7177.c: 296:                 BufferDAT[2] = conta1;
  1166  000918  C0A6  F02C         	movff	_conta1,_BufferDAT+2
  1167  00091C                     
  1168                           ;Timig_AD7177.c: 297:                 TransmitDAT_USART('4');
  1169  00091C  0E34               	movlw	52
  1170  00091E  EC3C  F00D         	call	_TransmitDAT_USART
  1171  000922                     l3352:
  1172  000922  FFFF               	dw	65535	; assembler added errata NOP
  1173                           
  1174                           ;Timig_AD7177.c: 298:                 _delay((unsigned long)((500)*(39321600UL/4000.0)))
      +                          ;
  1175  000924  0E13               	movlw	19
  1176  000926  0100               	movlb	0	; () banked
  1177  000928  6F61               	movwf	(??_main+1)& (0+255),b
  1178  00092A  0EB7               	movlw	183
  1179  00092C  6F60               	movwf	??_main& (0+255),b
  1180  00092E  0E99               	movlw	153
  1181  000930                     u1937:
  1182  000930  FFFF               	dw	65535	; errata NOP
  1183  000932  2EE8               	decfsz	wreg,f,c
  1184  000934  D7FD               	bra	u1937
  1185  000936  2F60               	decfsz	??_main& (0+255),f,b
  1186  000938  D7FB               	bra	u1937
  1187  00093A  2F61               	decfsz	(??_main+1)& (0+255),f,b
  1188  00093C  D7F9               	bra	u1937
  1189  00093E  D000               	nop2	
  1190  000940  F000               	nop	
  1191  000942                     
  1192                           ;Timig_AD7177.c: 301:                 print_value(Data_X);
  1193  000942  C0A0  F011         	movff	main@Data_X,print_value@value
  1194  000946  C0A1  F012         	movff	main@Data_X+1,print_value@value+1
  1195  00094A  C0A2  F013         	movff	main@Data_X+2,print_value@value+2
  1196  00094E  C0A3  F014         	movff	main@Data_X+3,print_value@value+3
  1197  000952  EC81  F00A         	call	_print_value	;wreg free
  1198                           
  1199                           ;Timig_AD7177.c: 303:                 break;
  1200  000956  EF35  F003         	goto	l3256
  1201  00095A                     l3356:
  1202  00095A  FFFF               	dw	65535	; assembler added errata NOP
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;Timig_AD7177.c: 305:                 TransmitCMD_USART('5');
  1206  00095C  0E35               	movlw	53
  1207  00095E  ECCF  F00D         	call	_TransmitCMD_USART
  1208  000962                     
  1209                           ;Timig_AD7177.c: 306:                 SumData_X = 0;
  1210  000962  EE20  F098         	lfsr	2,main@SumData_X
  1211  000966  0E07               	movlw	7
  1212  000968                     u1791:
  1213  000968  6ADE               	clrf	postinc2,c
  1214  00096A  06E8               	decf	wreg,f,c
  1215  00096C  E2FD               	bc	u1791
  1216  00096E                     
  1217                           ;Timig_AD7177.c: 307:                 conta1 = 0;
  1218  00096E  0E00               	movlw	0
  1219  000970  0100               	movlb	0	; () banked
  1220  000972  6FA6               	movwf	_conta1& (0+255),b
  1221  000974                     
  1222                           ; BSR set to: 0
  1223                           ;Timig_AD7177.c: 308:                 TMR1H = 0;
  1224  000974  0E00               	movlw	0
  1225  000976  6ECF               	movwf	207,c	;volatile
  1226  000978                     
  1227                           ; BSR set to: 0
  1228                           ;Timig_AD7177.c: 309:                 TMR1L = 0;
  1229  000978  0E00               	movlw	0
  1230  00097A  6ECE               	movwf	206,c	;volatile
  1231  00097C                     
  1232                           ; BSR set to: 0
  1233                           ;Timig_AD7177.c: 310:                 T1CON = 0xB1;
  1234  00097C  0EB1               	movlw	177
  1235  00097E  6ECD               	movwf	205,c	;volatile
  1236  000980                     
  1237                           ; BSR set to: 0
  1238                           ;Timig_AD7177.c: 311:                 PIR1bits.TMR1IF = 0;
  1239  000980  909E               	bcf	158,0,c	;volatile
  1240  000982                     
  1241                           ; BSR set to: 0
  1242                           ;Timig_AD7177.c: 312:                 PIE1bits.TMR1IE = 1;
  1243  000982  809D               	bsf	157,0,c	;volatile
  1244  000984                     
  1245                           ; BSR set to: 0
  1246                           ;Timig_AD7177.c: 313:                 LATCbits.LATC2 = 0;
  1247  000984  948B               	bcf	139,2,c	;volatile
  1248  000986                     
  1249                           ; BSR set to: 0
  1250                           ;Timig_AD7177.c: 314:                 for(conta=0; conta<10; conta++){
  1251  000986  0E00               	movlw	0
  1252  000988  6FA5               	movwf	main@conta& (0+255),b
  1253  00098A                     l3380:
  1254  00098A  FFFF               	dw	65535	; assembler added errata NOP
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;Timig_AD7177.c: 315:                     Data_X = ReadADC32();
  1258  00098C  ECEF  F009         	call	_ReadADC32	;wreg free
  1259  000990  C011  F0A0         	movff	?_ReadADC32,main@Data_X
  1260  000994  C012  F0A1         	movff	?_ReadADC32+1,main@Data_X+1
  1261  000998  C013  F0A2         	movff	?_ReadADC32+2,main@Data_X+2
  1262  00099C  C014  F0A3         	movff	?_ReadADC32+3,main@Data_X+3
  1263  0009A0                     
  1264                           ;Timig_AD7177.c: 316:                     SumData_X = (signed long long) SumData_X + Dat
      +                          a_X;
  1265  0009A0  C0A0  F060         	movff	main@Data_X,??_main
  1266  0009A4  C0A1  F061         	movff	main@Data_X+1,??_main+1
  1267  0009A8  C0A2  F062         	movff	main@Data_X+2,??_main+2
  1268  0009AC  C0A3  F063         	movff	main@Data_X+3,??_main+3
  1269  0009B0  0100               	movlb	0	; () banked
  1270  0009B2  6B64               	clrf	(??_main+4)& (0+255),b
  1271  0009B4  BF63               	btfsc	(??_main+3)& (0+255),7,b
  1272  0009B6  6964               	setf	(??_main+4)& (0+255),b
  1273  0009B8  C064  F065         	movff	??_main+4,??_main+5
  1274  0009BC  C064  F066         	movff	??_main+4,??_main+6
  1275  0009C0  C064  F067         	movff	??_main+4,??_main+7
  1276  0009C4  5198               	movf	main@SumData_X& (0+255),w,b
  1277  0009C6  2560               	addwf	??_main& (0+255),w,b
  1278  0009C8  6F98               	movwf	main@SumData_X& (0+255),b
  1279  0009CA  5199               	movf	(main@SumData_X+1)& (0+255),w,b
  1280  0009CC  2161               	addwfc	(??_main+1)& (0+255),w,b
  1281  0009CE  6F99               	movwf	(main@SumData_X+1)& (0+255),b
  1282  0009D0  519A               	movf	(main@SumData_X+2)& (0+255),w,b
  1283  0009D2  2162               	addwfc	(??_main+2)& (0+255),w,b
  1284  0009D4  6F9A               	movwf	(main@SumData_X+2)& (0+255),b
  1285  0009D6  519B               	movf	(main@SumData_X+3)& (0+255),w,b
  1286  0009D8  2163               	addwfc	(??_main+3)& (0+255),w,b
  1287  0009DA  6F9B               	movwf	(main@SumData_X+3)& (0+255),b
  1288  0009DC  519C               	movf	(main@SumData_X+4)& (0+255),w,b
  1289  0009DE  2164               	addwfc	(??_main+4)& (0+255),w,b
  1290  0009E0  6F9C               	movwf	(main@SumData_X+4)& (0+255),b
  1291  0009E2  519D               	movf	(main@SumData_X+5)& (0+255),w,b
  1292  0009E4  2165               	addwfc	(??_main+5)& (0+255),w,b
  1293  0009E6  6F9D               	movwf	(main@SumData_X+5)& (0+255),b
  1294  0009E8  519E               	movf	(main@SumData_X+6)& (0+255),w,b
  1295  0009EA  2166               	addwfc	(??_main+6)& (0+255),w,b
  1296  0009EC  6F9E               	movwf	(main@SumData_X+6)& (0+255),b
  1297  0009EE  519F               	movf	(main@SumData_X+7)& (0+255),w,b
  1298  0009F0  2167               	addwfc	(??_main+7)& (0+255),w,b
  1299  0009F2  6F9F               	movwf	(main@SumData_X+7)& (0+255),b
  1300  0009F4                     
  1301                           ; BSR set to: 0
  1302                           ;Timig_AD7177.c: 317:                 }
  1303  0009F4  2BA5               	incf	main@conta& (0+255),f,b
  1304  0009F6                     
  1305                           ; BSR set to: 0
  1306  0009F6  0E09               	movlw	9
  1307  0009F8  65A5               	cpfsgt	main@conta& (0+255),b
  1308  0009FA  EF01  F005         	goto	u1801
  1309  0009FE  EF04  F005         	goto	u1800
  1310  000A02                     u1801:
  1311  000A02  FFFF               	dw	65535	; assembler added errata NOP
  1312  000A04  EFC5  F004         	goto	l3380
  1313  000A08                     u1800:
  1314  000A08  FFFF               	dw	65535	; assembler added errata NOP
  1315  000A0A                     
  1316                           ; BSR set to: 0
  1317                           ;Timig_AD7177.c: 318:                 LATCbits.LATC2 = 1;
  1318  000A0A  848B               	bsf	139,2,c	;volatile
  1319  000A0C                     
  1320                           ; BSR set to: 0
  1321                           ;Timig_AD7177.c: 319:                 Data_X = (signed long long) SumData_X/10;
  1322  000A0C  C098  F010         	movff	main@SumData_X,___aodiv@dividend
  1323  000A10  C099  F011         	movff	main@SumData_X+1,___aodiv@dividend+1
  1324  000A14  C09A  F012         	movff	main@SumData_X+2,___aodiv@dividend+2
  1325  000A18  C09B  F013         	movff	main@SumData_X+3,___aodiv@dividend+3
  1326  000A1C  C09C  F014         	movff	main@SumData_X+4,___aodiv@dividend+4
  1327  000A20  C09D  F015         	movff	main@SumData_X+5,___aodiv@dividend+5
  1328  000A24  C09E  F016         	movff	main@SumData_X+6,___aodiv@dividend+6
  1329  000A28  C09F  F017         	movff	main@SumData_X+7,___aodiv@dividend+7
  1330  000A2C  0E0A               	movlw	10
  1331  000A2E  6E18               	movwf	___aodiv@divisor^0,c
  1332  000A30  0E00               	movlw	0
  1333  000A32  6E19               	movwf	(___aodiv@divisor+1)^0,c
  1334  000A34  0E00               	movlw	0
  1335  000A36  6E1A               	movwf	(___aodiv@divisor+2)^0,c
  1336  000A38  0E00               	movlw	0
  1337  000A3A  6E1B               	movwf	(___aodiv@divisor+3)^0,c
  1338  000A3C  0E00               	movlw	0
  1339  000A3E  6E1C               	movwf	(___aodiv@divisor+4)^0,c
  1340  000A40  0E00               	movlw	0
  1341  000A42  6E1D               	movwf	(___aodiv@divisor+5)^0,c
  1342  000A44  0E00               	movlw	0
  1343  000A46  6E1E               	movwf	(___aodiv@divisor+6)^0,c
  1344  000A48  0E00               	movlw	0
  1345  000A4A  6E1F               	movwf	(___aodiv@divisor+7)^0,c
  1346  000A4C  EC15  F009         	call	___aodiv	;wreg free
  1347  000A50  C010  F060         	movff	?___aodiv,??_main
  1348  000A54  C011  F061         	movff	?___aodiv+1,??_main+1
  1349  000A58  C012  F062         	movff	?___aodiv+2,??_main+2
  1350  000A5C  C013  F063         	movff	?___aodiv+3,??_main+3
  1351  000A60  C014  F064         	movff	?___aodiv+4,??_main+4
  1352  000A64  C015  F065         	movff	?___aodiv+5,??_main+5
  1353  000A68  C016  F066         	movff	?___aodiv+6,??_main+6
  1354  000A6C  C017  F067         	movff	?___aodiv+7,??_main+7
  1355  000A70  C060  F0A0         	movff	??_main,main@Data_X
  1356  000A74  C061  F0A1         	movff	??_main+1,main@Data_X+1
  1357  000A78  C062  F0A2         	movff	??_main+2,main@Data_X+2
  1358  000A7C  C063  F0A3         	movff	??_main+3,main@Data_X+3
  1359  000A80                     
  1360                           ;Timig_AD7177.c: 320:                 T1CONbits.TMR1ON = 0;
  1361  000A80  90CD               	bcf	205,0,c	;volatile
  1362  000A82                     
  1363                           ;Timig_AD7177.c: 321:                 PIE1bits.TMR1IE = 0;
  1364  000A82  909D               	bcf	157,0,c	;volatile
  1365  000A84                     
  1366                           ;Timig_AD7177.c: 322:                 BufferDAT[0] = TMR1L;
  1367  000A84  CFCE F02A          	movff	4046,_BufferDAT	;volatile
  1368  000A88                     
  1369                           ;Timig_AD7177.c: 323:                 BufferDAT[1] = TMR1H;
  1370  000A88  CFCF F02B          	movff	4047,_BufferDAT+1	;volatile
  1371  000A8C                     
  1372                           ;Timig_AD7177.c: 324:                 BufferDAT[2] = conta1;
  1373  000A8C  C0A6  F02C         	movff	_conta1,_BufferDAT+2
  1374  000A90                     
  1375                           ;Timig_AD7177.c: 325:                 TransmitDAT_USART('5');
  1376  000A90  0E35               	movlw	53
  1377  000A92  EC3C  F00D         	call	_TransmitDAT_USART
  1378  000A96  EF91  F004         	goto	l3352
  1379  000A9A                     l3406:
  1380  000A9A  FFFF               	dw	65535	; assembler added errata NOP
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;Timig_AD7177.c: 333:                 TransmitCMD_USART('6');
  1384  000A9C  0E36               	movlw	54
  1385  000A9E  ECCF  F00D         	call	_TransmitCMD_USART
  1386  000AA2                     
  1387                           ;Timig_AD7177.c: 334:                 ReadRegister_1bytesAD7177(0x40);
  1388  000AA2  0E40               	movlw	64
  1389  000AA4  EC52  F00E         	call	_ReadRegister_1bytesAD7177
  1390  000AA8                     
  1391                           ;Timig_AD7177.c: 335:                 TransmitDAT_USART('6');
  1392  000AA8  0E36               	movlw	54
  1393  000AAA  EC3C  F00D         	call	_TransmitDAT_USART
  1394                           
  1395                           ;Timig_AD7177.c: 336:                 break;
  1396  000AAE  EF35  F003         	goto	l3256
  1397  000AB2                     l3412:
  1398  000AB2  FFFF               	dw	65535	; assembler added errata NOP
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;Timig_AD7177.c: 338:                 TransmitCMD_USART('7');
  1402  000AB4  0E37               	movlw	55
  1403  000AB6  ECCF  F00D         	call	_TransmitCMD_USART
  1404  000ABA                     
  1405                           ;Timig_AD7177.c: 339:                 conta1 = 0;
  1406  000ABA  0E00               	movlw	0
  1407  000ABC  0100               	movlb	0	; () banked
  1408  000ABE  6FA6               	movwf	_conta1& (0+255),b
  1409  000AC0                     
  1410                           ; BSR set to: 0
  1411                           ;Timig_AD7177.c: 340:                 TMR1H = 0;
  1412  000AC0  0E00               	movlw	0
  1413  000AC2  6ECF               	movwf	207,c	;volatile
  1414  000AC4                     
  1415                           ; BSR set to: 0
  1416                           ;Timig_AD7177.c: 341:                 TMR1L = 0;
  1417  000AC4  0E00               	movlw	0
  1418  000AC6  6ECE               	movwf	206,c	;volatile
  1419  000AC8                     
  1420                           ; BSR set to: 0
  1421                           ;Timig_AD7177.c: 342:                 T1CON = 0xB1;
  1422  000AC8  0EB1               	movlw	177
  1423  000ACA  6ECD               	movwf	205,c	;volatile
  1424  000ACC                     
  1425                           ; BSR set to: 0
  1426                           ;Timig_AD7177.c: 343:                 PIR1bits.TMR1IF = 0;
  1427  000ACC  909E               	bcf	158,0,c	;volatile
  1428  000ACE                     
  1429                           ; BSR set to: 0
  1430                           ;Timig_AD7177.c: 344:                 PIE1bits.TMR1IE = 1;
  1431  000ACE  809D               	bsf	157,0,c	;volatile
  1432  000AD0                     
  1433                           ; BSR set to: 0
  1434                           ;Timig_AD7177.c: 346:                 LATAbits.LATA1 = 1;
  1435  000AD0  8289               	bsf	137,1,c	;volatile
  1436  000AD2                     
  1437                           ; BSR set to: 0
  1438                           ;Timig_AD7177.c: 347:                 SumData_X = 0;
  1439  000AD2  EE20  F098         	lfsr	2,main@SumData_X
  1440  000AD6  0E07               	movlw	7
  1441  000AD8                     u1811:
  1442  000AD8  6ADE               	clrf	postinc2,c
  1443  000ADA  06E8               	decf	wreg,f,c
  1444  000ADC  E2FD               	bc	u1811
  1445  000ADE                     
  1446                           ; BSR set to: 0
  1447                           ;Timig_AD7177.c: 348:                 SumData_Y = 0;
  1448  000ADE  EE20  F068         	lfsr	2,main@SumData_Y
  1449  000AE2  0E07               	movlw	7
  1450  000AE4                     u1821:
  1451  000AE4  6ADE               	clrf	postinc2,c
  1452  000AE6  06E8               	decf	wreg,f,c
  1453  000AE8  E2FD               	bc	u1821
  1454  000AEA                     
  1455                           ; BSR set to: 0
  1456                           ;Timig_AD7177.c: 349:                 SumData_Z = 0;
  1457  000AEA  EE20  F070         	lfsr	2,main@SumData_Z
  1458  000AEE  0E07               	movlw	7
  1459  000AF0                     u1831:
  1460  000AF0  6ADE               	clrf	postinc2,c
  1461  000AF2  06E8               	decf	wreg,f,c
  1462  000AF4  E2FD               	bc	u1831
  1463  000AF6                     
  1464                           ; BSR set to: 0
  1465                           ;Timig_AD7177.c: 350:                 SumData_TC = 0;
  1466  000AF6  EE20  F078         	lfsr	2,main@SumData_TC
  1467  000AFA  0E07               	movlw	7
  1468  000AFC                     u1841:
  1469  000AFC  6ADE               	clrf	postinc2,c
  1470  000AFE  06E8               	decf	wreg,f,c
  1471  000B00  E2FD               	bc	u1841
  1472  000B02                     
  1473                           ; BSR set to: 0
  1474                           ;Timig_AD7177.c: 351:                 SumData_TS = 0;
  1475  000B02  EE20  F080         	lfsr	2,main@SumData_TS
  1476  000B06  0E07               	movlw	7
  1477  000B08                     u1851:
  1478  000B08  6ADE               	clrf	postinc2,c
  1479  000B0A  06E8               	decf	wreg,f,c
  1480  000B0C  E2FD               	bc	u1851
  1481  000B0E                     
  1482                           ; BSR set to: 0
  1483                           ;Timig_AD7177.c: 352:                 LATCbits.LATC2 = 0;
  1484  000B0E  948B               	bcf	139,2,c	;volatile
  1485  000B10                     
  1486                           ; BSR set to: 0
  1487                           ;Timig_AD7177.c: 355:                 LATAbits.LA5 = 0;
  1488  000B10  9A89               	bcf	137,5,c	;volatile
  1489  000B12                     
  1490                           ; BSR set to: 0
  1491                           ;Timig_AD7177.c: 356:                 LATAbits.LA4 = 1;
  1492  000B12  8889               	bsf	137,4,c	;volatile
  1493  000B14                     
  1494                           ; BSR set to: 0
  1495                           ;Timig_AD7177.c: 357:                 LATCbits.LC0 = 0;
  1496  000B14  908B               	bcf	139,0,c	;volatile
  1497  000B16                     
  1498                           ; BSR set to: 0
  1499                           ;Timig_AD7177.c: 358:                 LATCbits.LC1 = 0;
  1500  000B16  928B               	bcf	139,1,c	;volatile
  1501  000B18                     
  1502                           ; BSR set to: 0
  1503                           ;Timig_AD7177.c: 359:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
  1504  000B18  0E30               	movlw	48
  1505  000B1A  0100               	movlb	0	; () banked
  1506  000B1C  6F60               	movwf	??_main& (0+255),b
  1507  000B1E  0EE7               	movlw	231
  1508  000B20                     u1947:
  1509  000B20  FFFF               	dw	65535	; errata NOP
  1510  000B22  2EE8               	decfsz	wreg,f,c
  1511  000B24  D7FD               	bra	u1947
  1512  000B26  2F60               	decfsz	??_main& (0+255),f,b
  1513  000B28  D7FB               	bra	u1947
  1514  000B2A  F000               	nop	
  1515  000B2C                     
  1516                           ;Timig_AD7177.c: 360:                 LATAbits.LATA2 = 1;
  1517  000B2C  8489               	bsf	137,2,c	;volatile
  1518  000B2E  ECEF  F009         	call	_ReadADC32	;wreg free
  1519  000B32                     
  1520                           ;Timig_AD7177.c: 362:                 for(conta=0; conta<10; conta++){
  1521  000B32  0E00               	movlw	0
  1522  000B34  0100               	movlb	0	; () banked
  1523  000B36  6FA5               	movwf	main@conta& (0+255),b
  1524  000B38                     l3460:
  1525  000B38  FFFF               	dw	65535	; assembler added errata NOP
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;Timig_AD7177.c: 363:                     Data_X = ReadADC32();
  1529  000B3A  ECEF  F009         	call	_ReadADC32	;wreg free
  1530  000B3E  C011  F0A0         	movff	?_ReadADC32,main@Data_X
  1531  000B42  C012  F0A1         	movff	?_ReadADC32+1,main@Data_X+1
  1532  000B46  C013  F0A2         	movff	?_ReadADC32+2,main@Data_X+2
  1533  000B4A  C014  F0A3         	movff	?_ReadADC32+3,main@Data_X+3
  1534  000B4E                     
  1535                           ;Timig_AD7177.c: 364:                     SumData_X = (signed long long) SumData_X + Dat
      +                          a_X;
  1536  000B4E  C0A0  F060         	movff	main@Data_X,??_main
  1537  000B52  C0A1  F061         	movff	main@Data_X+1,??_main+1
  1538  000B56  C0A2  F062         	movff	main@Data_X+2,??_main+2
  1539  000B5A  C0A3  F063         	movff	main@Data_X+3,??_main+3
  1540  000B5E  0100               	movlb	0	; () banked
  1541  000B60  6B64               	clrf	(??_main+4)& (0+255),b
  1542  000B62  BF63               	btfsc	(??_main+3)& (0+255),7,b
  1543  000B64  6964               	setf	(??_main+4)& (0+255),b
  1544  000B66  C064  F065         	movff	??_main+4,??_main+5
  1545  000B6A  C064  F066         	movff	??_main+4,??_main+6
  1546  000B6E  C064  F067         	movff	??_main+4,??_main+7
  1547  000B72  5198               	movf	main@SumData_X& (0+255),w,b
  1548  000B74  2560               	addwf	??_main& (0+255),w,b
  1549  000B76  6F98               	movwf	main@SumData_X& (0+255),b
  1550  000B78  5199               	movf	(main@SumData_X+1)& (0+255),w,b
  1551  000B7A  2161               	addwfc	(??_main+1)& (0+255),w,b
  1552  000B7C  6F99               	movwf	(main@SumData_X+1)& (0+255),b
  1553  000B7E  519A               	movf	(main@SumData_X+2)& (0+255),w,b
  1554  000B80  2162               	addwfc	(??_main+2)& (0+255),w,b
  1555  000B82  6F9A               	movwf	(main@SumData_X+2)& (0+255),b
  1556  000B84  519B               	movf	(main@SumData_X+3)& (0+255),w,b
  1557  000B86  2163               	addwfc	(??_main+3)& (0+255),w,b
  1558  000B88  6F9B               	movwf	(main@SumData_X+3)& (0+255),b
  1559  000B8A  519C               	movf	(main@SumData_X+4)& (0+255),w,b
  1560  000B8C  2164               	addwfc	(??_main+4)& (0+255),w,b
  1561  000B8E  6F9C               	movwf	(main@SumData_X+4)& (0+255),b
  1562  000B90  519D               	movf	(main@SumData_X+5)& (0+255),w,b
  1563  000B92  2165               	addwfc	(??_main+5)& (0+255),w,b
  1564  000B94  6F9D               	movwf	(main@SumData_X+5)& (0+255),b
  1565  000B96  519E               	movf	(main@SumData_X+6)& (0+255),w,b
  1566  000B98  2166               	addwfc	(??_main+6)& (0+255),w,b
  1567  000B9A  6F9E               	movwf	(main@SumData_X+6)& (0+255),b
  1568  000B9C  519F               	movf	(main@SumData_X+7)& (0+255),w,b
  1569  000B9E  2167               	addwfc	(??_main+7)& (0+255),w,b
  1570  000BA0  6F9F               	movwf	(main@SumData_X+7)& (0+255),b
  1571  000BA2                     
  1572                           ; BSR set to: 0
  1573                           ;Timig_AD7177.c: 365:                 }
  1574  000BA2  2BA5               	incf	main@conta& (0+255),f,b
  1575  000BA4                     
  1576                           ; BSR set to: 0
  1577  000BA4  0E09               	movlw	9
  1578  000BA6  65A5               	cpfsgt	main@conta& (0+255),b
  1579  000BA8  EFD8  F005         	goto	u1861
  1580  000BAC  EFDB  F005         	goto	u1860
  1581  000BB0                     u1861:
  1582  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  1583  000BB2  EF9C  F005         	goto	l3460
  1584  000BB6                     u1860:
  1585  000BB6  FFFF               	dw	65535	; assembler added errata NOP
  1586  000BB8                     
  1587                           ; BSR set to: 0
  1588                           ;Timig_AD7177.c: 366:                 LATAbits.LATA2 = 0;
  1589  000BB8  9489               	bcf	137,2,c	;volatile
  1590                           
  1591                           ;Timig_AD7177.c: 369:                 LATAbits.LA5 = 0;
  1592  000BBA  9A89               	bcf	137,5,c	;volatile
  1593                           
  1594                           ;Timig_AD7177.c: 370:                 LATAbits.LA4 = 1;
  1595  000BBC  8889               	bsf	137,4,c	;volatile
  1596                           
  1597                           ;Timig_AD7177.c: 371:                 LATCbits.LC0 = 1;
  1598  000BBE  808B               	bsf	139,0,c	;volatile
  1599                           
  1600                           ;Timig_AD7177.c: 372:                 LATCbits.LC1 = 0;
  1601  000BC0  928B               	bcf	139,1,c	;volatile
  1602  000BC2                     
  1603                           ; BSR set to: 0
  1604                           ;Timig_AD7177.c: 373:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
  1605  000BC2  0E30               	movlw	48
  1606  000BC4  0100               	movlb	0	; () banked
  1607  000BC6  6F60               	movwf	??_main& (0+255),b
  1608  000BC8  0EE7               	movlw	231
  1609  000BCA                     u1957:
  1610  000BCA  FFFF               	dw	65535	; errata NOP
  1611  000BCC  2EE8               	decfsz	wreg,f,c
  1612  000BCE  D7FD               	bra	u1957
  1613  000BD0  2F60               	decfsz	??_main& (0+255),f,b
  1614  000BD2  D7FB               	bra	u1957
  1615  000BD4  F000               	nop	
  1616  000BD6                     
  1617                           ;Timig_AD7177.c: 374:                 LATAbits.LATA2 = 1;
  1618  000BD6  8489               	bsf	137,2,c	;volatile
  1619  000BD8                     
  1620                           ;Timig_AD7177.c: 375:                 Data_Y = ReadADC32();
  1621  000BD8  ECEF  F009         	call	_ReadADC32	;wreg free
  1622  000BDC  C011  F088         	movff	?_ReadADC32,main@Data_Y
  1623  000BE0  C012  F089         	movff	?_ReadADC32+1,main@Data_Y+1
  1624  000BE4  C013  F08A         	movff	?_ReadADC32+2,main@Data_Y+2
  1625  000BE8  C014  F08B         	movff	?_ReadADC32+3,main@Data_Y+3
  1626  000BEC                     
  1627                           ;Timig_AD7177.c: 376:                 for(conta=0; conta<10; conta++){
  1628  000BEC  0E00               	movlw	0
  1629  000BEE  0100               	movlb	0	; () banked
  1630  000BF0  6FA5               	movwf	main@conta& (0+255),b
  1631  000BF2                     l3480:
  1632  000BF2  FFFF               	dw	65535	; assembler added errata NOP
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;Timig_AD7177.c: 377:                     Data_Y = ReadADC32();
  1636  000BF4  ECEF  F009         	call	_ReadADC32	;wreg free
  1637  000BF8  C011  F088         	movff	?_ReadADC32,main@Data_Y
  1638  000BFC  C012  F089         	movff	?_ReadADC32+1,main@Data_Y+1
  1639  000C00  C013  F08A         	movff	?_ReadADC32+2,main@Data_Y+2
  1640  000C04  C014  F08B         	movff	?_ReadADC32+3,main@Data_Y+3
  1641  000C08                     
  1642                           ;Timig_AD7177.c: 378:                     SumData_Y = (signed long long) SumData_Y + Dat
      +                          a_Y;
  1643  000C08  C088  F060         	movff	main@Data_Y,??_main
  1644  000C0C  C089  F061         	movff	main@Data_Y+1,??_main+1
  1645  000C10  C08A  F062         	movff	main@Data_Y+2,??_main+2
  1646  000C14  C08B  F063         	movff	main@Data_Y+3,??_main+3
  1647  000C18  0100               	movlb	0	; () banked
  1648  000C1A  6B64               	clrf	(??_main+4)& (0+255),b
  1649  000C1C  BF63               	btfsc	(??_main+3)& (0+255),7,b
  1650  000C1E  6964               	setf	(??_main+4)& (0+255),b
  1651  000C20  C064  F065         	movff	??_main+4,??_main+5
  1652  000C24  C064  F066         	movff	??_main+4,??_main+6
  1653  000C28  C064  F067         	movff	??_main+4,??_main+7
  1654  000C2C  5168               	movf	main@SumData_Y& (0+255),w,b
  1655  000C2E  2560               	addwf	??_main& (0+255),w,b
  1656  000C30  6F68               	movwf	main@SumData_Y& (0+255),b
  1657  000C32  5169               	movf	(main@SumData_Y+1)& (0+255),w,b
  1658  000C34  2161               	addwfc	(??_main+1)& (0+255),w,b
  1659  000C36  6F69               	movwf	(main@SumData_Y+1)& (0+255),b
  1660  000C38  516A               	movf	(main@SumData_Y+2)& (0+255),w,b
  1661  000C3A  2162               	addwfc	(??_main+2)& (0+255),w,b
  1662  000C3C  6F6A               	movwf	(main@SumData_Y+2)& (0+255),b
  1663  000C3E  516B               	movf	(main@SumData_Y+3)& (0+255),w,b
  1664  000C40  2163               	addwfc	(??_main+3)& (0+255),w,b
  1665  000C42  6F6B               	movwf	(main@SumData_Y+3)& (0+255),b
  1666  000C44  516C               	movf	(main@SumData_Y+4)& (0+255),w,b
  1667  000C46  2164               	addwfc	(??_main+4)& (0+255),w,b
  1668  000C48  6F6C               	movwf	(main@SumData_Y+4)& (0+255),b
  1669  000C4A  516D               	movf	(main@SumData_Y+5)& (0+255),w,b
  1670  000C4C  2165               	addwfc	(??_main+5)& (0+255),w,b
  1671  000C4E  6F6D               	movwf	(main@SumData_Y+5)& (0+255),b
  1672  000C50  516E               	movf	(main@SumData_Y+6)& (0+255),w,b
  1673  000C52  2166               	addwfc	(??_main+6)& (0+255),w,b
  1674  000C54  6F6E               	movwf	(main@SumData_Y+6)& (0+255),b
  1675  000C56  516F               	movf	(main@SumData_Y+7)& (0+255),w,b
  1676  000C58  2167               	addwfc	(??_main+7)& (0+255),w,b
  1677  000C5A  6F6F               	movwf	(main@SumData_Y+7)& (0+255),b
  1678  000C5C                     
  1679                           ; BSR set to: 0
  1680                           ;Timig_AD7177.c: 379:                 }
  1681  000C5C  2BA5               	incf	main@conta& (0+255),f,b
  1682  000C5E                     
  1683                           ; BSR set to: 0
  1684  000C5E  0E09               	movlw	9
  1685  000C60  65A5               	cpfsgt	main@conta& (0+255),b
  1686  000C62  EF35  F006         	goto	u1871
  1687  000C66  EF38  F006         	goto	u1870
  1688  000C6A                     u1871:
  1689  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  1690  000C6C  EFF9  F005         	goto	l3480
  1691  000C70                     u1870:
  1692  000C70  FFFF               	dw	65535	; assembler added errata NOP
  1693  000C72                     
  1694                           ; BSR set to: 0
  1695                           ;Timig_AD7177.c: 380:                 LATAbits.LATA2 = 0;
  1696  000C72  9489               	bcf	137,2,c	;volatile
  1697                           
  1698                           ;Timig_AD7177.c: 383:                 LATAbits.LA5 = 1;
  1699  000C74  8A89               	bsf	137,5,c	;volatile
  1700                           
  1701                           ;Timig_AD7177.c: 384:                 LATAbits.LA4 = 0;
  1702  000C76  9889               	bcf	137,4,c	;volatile
  1703                           
  1704                           ;Timig_AD7177.c: 385:                 LATCbits.LC0 = 0;
  1705  000C78  908B               	bcf	139,0,c	;volatile
  1706                           
  1707                           ;Timig_AD7177.c: 386:                 LATCbits.LC1 = 0;
  1708  000C7A  928B               	bcf	139,1,c	;volatile
  1709  000C7C                     
  1710                           ; BSR set to: 0
  1711                           ;Timig_AD7177.c: 387:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
  1712  000C7C  0E30               	movlw	48
  1713  000C7E  0100               	movlb	0	; () banked
  1714  000C80  6F60               	movwf	??_main& (0+255),b
  1715  000C82  0EE7               	movlw	231
  1716  000C84                     u1967:
  1717  000C84  FFFF               	dw	65535	; errata NOP
  1718  000C86  2EE8               	decfsz	wreg,f,c
  1719  000C88  D7FD               	bra	u1967
  1720  000C8A  2F60               	decfsz	??_main& (0+255),f,b
  1721  000C8C  D7FB               	bra	u1967
  1722  000C8E  F000               	nop	
  1723  000C90                     
  1724                           ;Timig_AD7177.c: 388:                 LATAbits.LATA2 = 1;
  1725  000C90  8489               	bsf	137,2,c	;volatile
  1726  000C92                     
  1727                           ;Timig_AD7177.c: 389:                 Data_Z = ReadADC32();
  1728  000C92  ECEF  F009         	call	_ReadADC32	;wreg free
  1729  000C96  C011  F08C         	movff	?_ReadADC32,main@Data_Z
  1730  000C9A  C012  F08D         	movff	?_ReadADC32+1,main@Data_Z+1
  1731  000C9E  C013  F08E         	movff	?_ReadADC32+2,main@Data_Z+2
  1732  000CA2  C014  F08F         	movff	?_ReadADC32+3,main@Data_Z+3
  1733  000CA6                     
  1734                           ;Timig_AD7177.c: 390:                 for(conta=0; conta<10; conta++){
  1735  000CA6  0E00               	movlw	0
  1736  000CA8  0100               	movlb	0	; () banked
  1737  000CAA  6FA5               	movwf	main@conta& (0+255),b
  1738  000CAC                     l3500:
  1739  000CAC  FFFF               	dw	65535	; assembler added errata NOP
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;Timig_AD7177.c: 391:                     Data_Z = ReadADC32();
  1743  000CAE  ECEF  F009         	call	_ReadADC32	;wreg free
  1744  000CB2  C011  F08C         	movff	?_ReadADC32,main@Data_Z
  1745  000CB6  C012  F08D         	movff	?_ReadADC32+1,main@Data_Z+1
  1746  000CBA  C013  F08E         	movff	?_ReadADC32+2,main@Data_Z+2
  1747  000CBE  C014  F08F         	movff	?_ReadADC32+3,main@Data_Z+3
  1748  000CC2                     
  1749                           ;Timig_AD7177.c: 392:                     SumData_Z = (signed long long) SumData_Z + Dat
      +                          a_Z;
  1750  000CC2  C08C  F060         	movff	main@Data_Z,??_main
  1751  000CC6  C08D  F061         	movff	main@Data_Z+1,??_main+1
  1752  000CCA  C08E  F062         	movff	main@Data_Z+2,??_main+2
  1753  000CCE  C08F  F063         	movff	main@Data_Z+3,??_main+3
  1754  000CD2  0100               	movlb	0	; () banked
  1755  000CD4  6B64               	clrf	(??_main+4)& (0+255),b
  1756  000CD6  BF63               	btfsc	(??_main+3)& (0+255),7,b
  1757  000CD8  6964               	setf	(??_main+4)& (0+255),b
  1758  000CDA  C064  F065         	movff	??_main+4,??_main+5
  1759  000CDE  C064  F066         	movff	??_main+4,??_main+6
  1760  000CE2  C064  F067         	movff	??_main+4,??_main+7
  1761  000CE6  5170               	movf	main@SumData_Z& (0+255),w,b
  1762  000CE8  2560               	addwf	??_main& (0+255),w,b
  1763  000CEA  6F70               	movwf	main@SumData_Z& (0+255),b
  1764  000CEC  5171               	movf	(main@SumData_Z+1)& (0+255),w,b
  1765  000CEE  2161               	addwfc	(??_main+1)& (0+255),w,b
  1766  000CF0  6F71               	movwf	(main@SumData_Z+1)& (0+255),b
  1767  000CF2  5172               	movf	(main@SumData_Z+2)& (0+255),w,b
  1768  000CF4  2162               	addwfc	(??_main+2)& (0+255),w,b
  1769  000CF6  6F72               	movwf	(main@SumData_Z+2)& (0+255),b
  1770  000CF8  5173               	movf	(main@SumData_Z+3)& (0+255),w,b
  1771  000CFA  2163               	addwfc	(??_main+3)& (0+255),w,b
  1772  000CFC  6F73               	movwf	(main@SumData_Z+3)& (0+255),b
  1773  000CFE  5174               	movf	(main@SumData_Z+4)& (0+255),w,b
  1774  000D00  2164               	addwfc	(??_main+4)& (0+255),w,b
  1775  000D02  6F74               	movwf	(main@SumData_Z+4)& (0+255),b
  1776  000D04  5175               	movf	(main@SumData_Z+5)& (0+255),w,b
  1777  000D06  2165               	addwfc	(??_main+5)& (0+255),w,b
  1778  000D08  6F75               	movwf	(main@SumData_Z+5)& (0+255),b
  1779  000D0A  5176               	movf	(main@SumData_Z+6)& (0+255),w,b
  1780  000D0C  2166               	addwfc	(??_main+6)& (0+255),w,b
  1781  000D0E  6F76               	movwf	(main@SumData_Z+6)& (0+255),b
  1782  000D10  5177               	movf	(main@SumData_Z+7)& (0+255),w,b
  1783  000D12  2167               	addwfc	(??_main+7)& (0+255),w,b
  1784  000D14  6F77               	movwf	(main@SumData_Z+7)& (0+255),b
  1785  000D16                     
  1786                           ; BSR set to: 0
  1787                           ;Timig_AD7177.c: 393:                 }
  1788  000D16  2BA5               	incf	main@conta& (0+255),f,b
  1789  000D18                     
  1790                           ; BSR set to: 0
  1791  000D18  0E09               	movlw	9
  1792  000D1A  65A5               	cpfsgt	main@conta& (0+255),b
  1793  000D1C  EF92  F006         	goto	u1881
  1794  000D20  EF95  F006         	goto	u1880
  1795  000D24                     u1881:
  1796  000D24  FFFF               	dw	65535	; assembler added errata NOP
  1797  000D26  EF56  F006         	goto	l3500
  1798  000D2A                     u1880:
  1799  000D2A  FFFF               	dw	65535	; assembler added errata NOP
  1800  000D2C                     
  1801                           ; BSR set to: 0
  1802                           ;Timig_AD7177.c: 394:                 LATAbits.LATA2 = 0;
  1803  000D2C  9489               	bcf	137,2,c	;volatile
  1804                           
  1805                           ;Timig_AD7177.c: 397:                 LATAbits.LA5 = 1;
  1806  000D2E  8A89               	bsf	137,5,c	;volatile
  1807                           
  1808                           ;Timig_AD7177.c: 398:                 LATAbits.LA4 = 0;
  1809  000D30  9889               	bcf	137,4,c	;volatile
  1810                           
  1811                           ;Timig_AD7177.c: 399:                 LATCbits.LC0 = 1;
  1812  000D32  808B               	bsf	139,0,c	;volatile
  1813                           
  1814                           ;Timig_AD7177.c: 400:                 LATCbits.LC1 = 0;
  1815  000D34  928B               	bcf	139,1,c	;volatile
  1816  000D36                     
  1817                           ; BSR set to: 0
  1818                           ;Timig_AD7177.c: 401:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
  1819  000D36  0E30               	movlw	48
  1820  000D38  0100               	movlb	0	; () banked
  1821  000D3A  6F60               	movwf	??_main& (0+255),b
  1822  000D3C  0EE7               	movlw	231
  1823  000D3E                     u1977:
  1824  000D3E  FFFF               	dw	65535	; errata NOP
  1825  000D40  2EE8               	decfsz	wreg,f,c
  1826  000D42  D7FD               	bra	u1977
  1827  000D44  2F60               	decfsz	??_main& (0+255),f,b
  1828  000D46  D7FB               	bra	u1977
  1829  000D48  F000               	nop	
  1830  000D4A                     
  1831                           ;Timig_AD7177.c: 402:                 LATAbits.LATA2 = 1;
  1832  000D4A  8489               	bsf	137,2,c	;volatile
  1833  000D4C                     
  1834                           ;Timig_AD7177.c: 403:                 Data_TC = ReadADC32();
  1835  000D4C  ECEF  F009         	call	_ReadADC32	;wreg free
  1836  000D50  C011  F090         	movff	?_ReadADC32,main@Data_TC
  1837  000D54  C012  F091         	movff	?_ReadADC32+1,main@Data_TC+1
  1838  000D58  C013  F092         	movff	?_ReadADC32+2,main@Data_TC+2
  1839  000D5C  C014  F093         	movff	?_ReadADC32+3,main@Data_TC+3
  1840  000D60                     
  1841                           ;Timig_AD7177.c: 404:                 for(conta=0; conta<10; conta++){
  1842  000D60  0E00               	movlw	0
  1843  000D62  0100               	movlb	0	; () banked
  1844  000D64  6FA5               	movwf	main@conta& (0+255),b
  1845  000D66                     l3520:
  1846  000D66  FFFF               	dw	65535	; assembler added errata NOP
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;Timig_AD7177.c: 405:                     Data_TC = ReadADC32();
  1850  000D68  ECEF  F009         	call	_ReadADC32	;wreg free
  1851  000D6C  C011  F090         	movff	?_ReadADC32,main@Data_TC
  1852  000D70  C012  F091         	movff	?_ReadADC32+1,main@Data_TC+1
  1853  000D74  C013  F092         	movff	?_ReadADC32+2,main@Data_TC+2
  1854  000D78  C014  F093         	movff	?_ReadADC32+3,main@Data_TC+3
  1855  000D7C                     
  1856                           ;Timig_AD7177.c: 406:                     SumData_TC = (signed long long) SumData_TC + D
      +                          ata_TC;
  1857  000D7C  C090  F060         	movff	main@Data_TC,??_main
  1858  000D80  C091  F061         	movff	main@Data_TC+1,??_main+1
  1859  000D84  C092  F062         	movff	main@Data_TC+2,??_main+2
  1860  000D88  C093  F063         	movff	main@Data_TC+3,??_main+3
  1861  000D8C  0100               	movlb	0	; () banked
  1862  000D8E  6B64               	clrf	(??_main+4)& (0+255),b
  1863  000D90  BF63               	btfsc	(??_main+3)& (0+255),7,b
  1864  000D92  6964               	setf	(??_main+4)& (0+255),b
  1865  000D94  C064  F065         	movff	??_main+4,??_main+5
  1866  000D98  C064  F066         	movff	??_main+4,??_main+6
  1867  000D9C  C064  F067         	movff	??_main+4,??_main+7
  1868  000DA0  5178               	movf	main@SumData_TC& (0+255),w,b
  1869  000DA2  2560               	addwf	??_main& (0+255),w,b
  1870  000DA4  6F78               	movwf	main@SumData_TC& (0+255),b
  1871  000DA6  5179               	movf	(main@SumData_TC+1)& (0+255),w,b
  1872  000DA8  2161               	addwfc	(??_main+1)& (0+255),w,b
  1873  000DAA  6F79               	movwf	(main@SumData_TC+1)& (0+255),b
  1874  000DAC  517A               	movf	(main@SumData_TC+2)& (0+255),w,b
  1875  000DAE  2162               	addwfc	(??_main+2)& (0+255),w,b
  1876  000DB0  6F7A               	movwf	(main@SumData_TC+2)& (0+255),b
  1877  000DB2  517B               	movf	(main@SumData_TC+3)& (0+255),w,b
  1878  000DB4  2163               	addwfc	(??_main+3)& (0+255),w,b
  1879  000DB6  6F7B               	movwf	(main@SumData_TC+3)& (0+255),b
  1880  000DB8  517C               	movf	(main@SumData_TC+4)& (0+255),w,b
  1881  000DBA  2164               	addwfc	(??_main+4)& (0+255),w,b
  1882  000DBC  6F7C               	movwf	(main@SumData_TC+4)& (0+255),b
  1883  000DBE  517D               	movf	(main@SumData_TC+5)& (0+255),w,b
  1884  000DC0  2165               	addwfc	(??_main+5)& (0+255),w,b
  1885  000DC2  6F7D               	movwf	(main@SumData_TC+5)& (0+255),b
  1886  000DC4  517E               	movf	(main@SumData_TC+6)& (0+255),w,b
  1887  000DC6  2166               	addwfc	(??_main+6)& (0+255),w,b
  1888  000DC8  6F7E               	movwf	(main@SumData_TC+6)& (0+255),b
  1889  000DCA  517F               	movf	(main@SumData_TC+7)& (0+255),w,b
  1890  000DCC  2167               	addwfc	(??_main+7)& (0+255),w,b
  1891  000DCE  6F7F               	movwf	(main@SumData_TC+7)& (0+255),b
  1892  000DD0                     
  1893                           ; BSR set to: 0
  1894                           ;Timig_AD7177.c: 407:                 }
  1895  000DD0  2BA5               	incf	main@conta& (0+255),f,b
  1896  000DD2                     
  1897                           ; BSR set to: 0
  1898  000DD2  0E09               	movlw	9
  1899  000DD4  65A5               	cpfsgt	main@conta& (0+255),b
  1900  000DD6  EFEF  F006         	goto	u1891
  1901  000DDA  EFF2  F006         	goto	u1890
  1902  000DDE                     u1891:
  1903  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  1904  000DE0  EFB3  F006         	goto	l3520
  1905  000DE4                     u1890:
  1906  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  1907  000DE6                     
  1908                           ; BSR set to: 0
  1909                           ;Timig_AD7177.c: 408:                 LATAbits.LATA2 = 0;
  1910  000DE6  9489               	bcf	137,2,c	;volatile
  1911                           
  1912                           ;Timig_AD7177.c: 411:                 LATAbits.LA5 = 1;
  1913  000DE8  8A89               	bsf	137,5,c	;volatile
  1914                           
  1915                           ;Timig_AD7177.c: 412:                 LATAbits.LA4 = 0;
  1916  000DEA  9889               	bcf	137,4,c	;volatile
  1917                           
  1918                           ;Timig_AD7177.c: 413:                 LATCbits.LC0 = 1;
  1919  000DEC  808B               	bsf	139,0,c	;volatile
  1920                           
  1921                           ;Timig_AD7177.c: 414:                 LATCbits.LC1 = 1;
  1922  000DEE  828B               	bsf	139,1,c	;volatile
  1923  000DF0                     
  1924                           ; BSR set to: 0
  1925                           ;Timig_AD7177.c: 415:                 _delay((unsigned long)((5)*(39321600UL/4000.0)));
  1926  000DF0  0E30               	movlw	48
  1927  000DF2  0100               	movlb	0	; () banked
  1928  000DF4  6F60               	movwf	??_main& (0+255),b
  1929  000DF6  0EE7               	movlw	231
  1930  000DF8                     u1987:
  1931  000DF8  FFFF               	dw	65535	; errata NOP
  1932  000DFA  2EE8               	decfsz	wreg,f,c
  1933  000DFC  D7FD               	bra	u1987
  1934  000DFE  2F60               	decfsz	??_main& (0+255),f,b
  1935  000E00  D7FB               	bra	u1987
  1936  000E02  F000               	nop	
  1937  000E04                     
  1938                           ;Timig_AD7177.c: 416:                 LATAbits.LATA2 = 1;
  1939  000E04  8489               	bsf	137,2,c	;volatile
  1940  000E06                     
  1941                           ;Timig_AD7177.c: 417:                 Data_TS = ReadADC32();
  1942  000E06  ECEF  F009         	call	_ReadADC32	;wreg free
  1943  000E0A  C011  F094         	movff	?_ReadADC32,main@Data_TS
  1944  000E0E  C012  F095         	movff	?_ReadADC32+1,main@Data_TS+1
  1945  000E12  C013  F096         	movff	?_ReadADC32+2,main@Data_TS+2
  1946  000E16  C014  F097         	movff	?_ReadADC32+3,main@Data_TS+3
  1947  000E1A                     
  1948                           ;Timig_AD7177.c: 418:                 for(conta=0; conta<10; conta++){
  1949  000E1A  0E00               	movlw	0
  1950  000E1C  0100               	movlb	0	; () banked
  1951  000E1E  6FA5               	movwf	main@conta& (0+255),b
  1952  000E20                     l3540:
  1953  000E20  FFFF               	dw	65535	; assembler added errata NOP
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;Timig_AD7177.c: 419:                     Data_TS = ReadADC32();
  1957  000E22  ECEF  F009         	call	_ReadADC32	;wreg free
  1958  000E26  C011  F094         	movff	?_ReadADC32,main@Data_TS
  1959  000E2A  C012  F095         	movff	?_ReadADC32+1,main@Data_TS+1
  1960  000E2E  C013  F096         	movff	?_ReadADC32+2,main@Data_TS+2
  1961  000E32  C014  F097         	movff	?_ReadADC32+3,main@Data_TS+3
  1962  000E36                     
  1963                           ;Timig_AD7177.c: 420:                     SumData_TS = (signed long long) SumData_TS + D
      +                          ata_TS;
  1964  000E36  C094  F060         	movff	main@Data_TS,??_main
  1965  000E3A  C095  F061         	movff	main@Data_TS+1,??_main+1
  1966  000E3E  C096  F062         	movff	main@Data_TS+2,??_main+2
  1967  000E42  C097  F063         	movff	main@Data_TS+3,??_main+3
  1968  000E46  0100               	movlb	0	; () banked
  1969  000E48  6B64               	clrf	(??_main+4)& (0+255),b
  1970  000E4A  BF63               	btfsc	(??_main+3)& (0+255),7,b
  1971  000E4C  6964               	setf	(??_main+4)& (0+255),b
  1972  000E4E  C064  F065         	movff	??_main+4,??_main+5
  1973  000E52  C064  F066         	movff	??_main+4,??_main+6
  1974  000E56  C064  F067         	movff	??_main+4,??_main+7
  1975  000E5A  5180               	movf	main@SumData_TS& (0+255),w,b
  1976  000E5C  2560               	addwf	??_main& (0+255),w,b
  1977  000E5E  6F80               	movwf	main@SumData_TS& (0+255),b
  1978  000E60  5181               	movf	(main@SumData_TS+1)& (0+255),w,b
  1979  000E62  2161               	addwfc	(??_main+1)& (0+255),w,b
  1980  000E64  6F81               	movwf	(main@SumData_TS+1)& (0+255),b
  1981  000E66  5182               	movf	(main@SumData_TS+2)& (0+255),w,b
  1982  000E68  2162               	addwfc	(??_main+2)& (0+255),w,b
  1983  000E6A  6F82               	movwf	(main@SumData_TS+2)& (0+255),b
  1984  000E6C  5183               	movf	(main@SumData_TS+3)& (0+255),w,b
  1985  000E6E  2163               	addwfc	(??_main+3)& (0+255),w,b
  1986  000E70  6F83               	movwf	(main@SumData_TS+3)& (0+255),b
  1987  000E72  5184               	movf	(main@SumData_TS+4)& (0+255),w,b
  1988  000E74  2164               	addwfc	(??_main+4)& (0+255),w,b
  1989  000E76  6F84               	movwf	(main@SumData_TS+4)& (0+255),b
  1990  000E78  5185               	movf	(main@SumData_TS+5)& (0+255),w,b
  1991  000E7A  2165               	addwfc	(??_main+5)& (0+255),w,b
  1992  000E7C  6F85               	movwf	(main@SumData_TS+5)& (0+255),b
  1993  000E7E  5186               	movf	(main@SumData_TS+6)& (0+255),w,b
  1994  000E80  2166               	addwfc	(??_main+6)& (0+255),w,b
  1995  000E82  6F86               	movwf	(main@SumData_TS+6)& (0+255),b
  1996  000E84  5187               	movf	(main@SumData_TS+7)& (0+255),w,b
  1997  000E86  2167               	addwfc	(??_main+7)& (0+255),w,b
  1998  000E88  6F87               	movwf	(main@SumData_TS+7)& (0+255),b
  1999  000E8A                     
  2000                           ; BSR set to: 0
  2001                           ;Timig_AD7177.c: 421:                 }
  2002  000E8A  2BA5               	incf	main@conta& (0+255),f,b
  2003  000E8C                     
  2004                           ; BSR set to: 0
  2005  000E8C  0E09               	movlw	9
  2006  000E8E  65A5               	cpfsgt	main@conta& (0+255),b
  2007  000E90  EF4C  F007         	goto	u1901
  2008  000E94  EF4F  F007         	goto	u1900
  2009  000E98                     u1901:
  2010  000E98  FFFF               	dw	65535	; assembler added errata NOP
  2011  000E9A  EF10  F007         	goto	l3540
  2012  000E9E                     u1900:
  2013  000E9E  FFFF               	dw	65535	; assembler added errata NOP
  2014  000EA0                     
  2015                           ; BSR set to: 0
  2016                           ;Timig_AD7177.c: 422:                 LATAbits.LATA2 = 0;
  2017  000EA0  9489               	bcf	137,2,c	;volatile
  2018                           
  2019                           ;Timig_AD7177.c: 424:                 LATCbits.LATC2 = 1;
  2020  000EA2  848B               	bsf	139,2,c	;volatile
  2021                           
  2022                           ;Timig_AD7177.c: 427:                 LATAbits.LATA2 = 1;
  2023  000EA4  8489               	bsf	137,2,c	;volatile
  2024  000EA6                     
  2025                           ; BSR set to: 0
  2026                           ;Timig_AD7177.c: 428:                 Data_X = (signed long long) SumData_X/10;
  2027  000EA6  C098  F010         	movff	main@SumData_X,___aodiv@dividend
  2028  000EAA  C099  F011         	movff	main@SumData_X+1,___aodiv@dividend+1
  2029  000EAE  C09A  F012         	movff	main@SumData_X+2,___aodiv@dividend+2
  2030  000EB2  C09B  F013         	movff	main@SumData_X+3,___aodiv@dividend+3
  2031  000EB6  C09C  F014         	movff	main@SumData_X+4,___aodiv@dividend+4
  2032  000EBA  C09D  F015         	movff	main@SumData_X+5,___aodiv@dividend+5
  2033  000EBE  C09E  F016         	movff	main@SumData_X+6,___aodiv@dividend+6
  2034  000EC2  C09F  F017         	movff	main@SumData_X+7,___aodiv@dividend+7
  2035  000EC6  0E0A               	movlw	10
  2036  000EC8  6E18               	movwf	___aodiv@divisor^0,c
  2037  000ECA  0E00               	movlw	0
  2038  000ECC  6E19               	movwf	(___aodiv@divisor+1)^0,c
  2039  000ECE  0E00               	movlw	0
  2040  000ED0  6E1A               	movwf	(___aodiv@divisor+2)^0,c
  2041  000ED2  0E00               	movlw	0
  2042  000ED4  6E1B               	movwf	(___aodiv@divisor+3)^0,c
  2043  000ED6  0E00               	movlw	0
  2044  000ED8  6E1C               	movwf	(___aodiv@divisor+4)^0,c
  2045  000EDA  0E00               	movlw	0
  2046  000EDC  6E1D               	movwf	(___aodiv@divisor+5)^0,c
  2047  000EDE  0E00               	movlw	0
  2048  000EE0  6E1E               	movwf	(___aodiv@divisor+6)^0,c
  2049  000EE2  0E00               	movlw	0
  2050  000EE4  6E1F               	movwf	(___aodiv@divisor+7)^0,c
  2051  000EE6  EC15  F009         	call	___aodiv	;wreg free
  2052  000EEA  C010  F060         	movff	?___aodiv,??_main
  2053  000EEE  C011  F061         	movff	?___aodiv+1,??_main+1
  2054  000EF2  C012  F062         	movff	?___aodiv+2,??_main+2
  2055  000EF6  C013  F063         	movff	?___aodiv+3,??_main+3
  2056  000EFA  C014  F064         	movff	?___aodiv+4,??_main+4
  2057  000EFE  C015  F065         	movff	?___aodiv+5,??_main+5
  2058  000F02  C016  F066         	movff	?___aodiv+6,??_main+6
  2059  000F06  C017  F067         	movff	?___aodiv+7,??_main+7
  2060  000F0A  C060  F0A0         	movff	??_main,main@Data_X
  2061  000F0E  C061  F0A1         	movff	??_main+1,main@Data_X+1
  2062  000F12  C062  F0A2         	movff	??_main+2,main@Data_X+2
  2063  000F16  C063  F0A3         	movff	??_main+3,main@Data_X+3
  2064                           
  2065                           ;Timig_AD7177.c: 429:                 Data_Y = (signed long long) SumData_Y/10;
  2066  000F1A  C068  F010         	movff	main@SumData_Y,___aodiv@dividend
  2067  000F1E  C069  F011         	movff	main@SumData_Y+1,___aodiv@dividend+1
  2068  000F22  C06A  F012         	movff	main@SumData_Y+2,___aodiv@dividend+2
  2069  000F26  C06B  F013         	movff	main@SumData_Y+3,___aodiv@dividend+3
  2070  000F2A  C06C  F014         	movff	main@SumData_Y+4,___aodiv@dividend+4
  2071  000F2E  C06D  F015         	movff	main@SumData_Y+5,___aodiv@dividend+5
  2072  000F32  C06E  F016         	movff	main@SumData_Y+6,___aodiv@dividend+6
  2073  000F36  C06F  F017         	movff	main@SumData_Y+7,___aodiv@dividend+7
  2074  000F3A  0E0A               	movlw	10
  2075  000F3C  6E18               	movwf	___aodiv@divisor^0,c
  2076  000F3E  0E00               	movlw	0
  2077  000F40  6E19               	movwf	(___aodiv@divisor+1)^0,c
  2078  000F42  0E00               	movlw	0
  2079  000F44  6E1A               	movwf	(___aodiv@divisor+2)^0,c
  2080  000F46  0E00               	movlw	0
  2081  000F48  6E1B               	movwf	(___aodiv@divisor+3)^0,c
  2082  000F4A  0E00               	movlw	0
  2083  000F4C  6E1C               	movwf	(___aodiv@divisor+4)^0,c
  2084  000F4E  0E00               	movlw	0
  2085  000F50  6E1D               	movwf	(___aodiv@divisor+5)^0,c
  2086  000F52  0E00               	movlw	0
  2087  000F54  6E1E               	movwf	(___aodiv@divisor+6)^0,c
  2088  000F56  0E00               	movlw	0
  2089  000F58  6E1F               	movwf	(___aodiv@divisor+7)^0,c
  2090  000F5A  EC15  F009         	call	___aodiv	;wreg free
  2091  000F5E  C010  F060         	movff	?___aodiv,??_main
  2092  000F62  C011  F061         	movff	?___aodiv+1,??_main+1
  2093  000F66  C012  F062         	movff	?___aodiv+2,??_main+2
  2094  000F6A  C013  F063         	movff	?___aodiv+3,??_main+3
  2095  000F6E  C014  F064         	movff	?___aodiv+4,??_main+4
  2096  000F72  C015  F065         	movff	?___aodiv+5,??_main+5
  2097  000F76  C016  F066         	movff	?___aodiv+6,??_main+6
  2098  000F7A  C017  F067         	movff	?___aodiv+7,??_main+7
  2099  000F7E  C060  F088         	movff	??_main,main@Data_Y
  2100  000F82  C061  F089         	movff	??_main+1,main@Data_Y+1
  2101  000F86  C062  F08A         	movff	??_main+2,main@Data_Y+2
  2102  000F8A  C063  F08B         	movff	??_main+3,main@Data_Y+3
  2103                           
  2104                           ;Timig_AD7177.c: 430:                 Data_Z = (signed long long) SumData_Z/10;
  2105  000F8E  C070  F010         	movff	main@SumData_Z,___aodiv@dividend
  2106  000F92  C071  F011         	movff	main@SumData_Z+1,___aodiv@dividend+1
  2107  000F96  C072  F012         	movff	main@SumData_Z+2,___aodiv@dividend+2
  2108  000F9A  C073  F013         	movff	main@SumData_Z+3,___aodiv@dividend+3
  2109  000F9E  C074  F014         	movff	main@SumData_Z+4,___aodiv@dividend+4
  2110  000FA2  C075  F015         	movff	main@SumData_Z+5,___aodiv@dividend+5
  2111  000FA6  C076  F016         	movff	main@SumData_Z+6,___aodiv@dividend+6
  2112  000FAA  C077  F017         	movff	main@SumData_Z+7,___aodiv@dividend+7
  2113  000FAE  0E0A               	movlw	10
  2114  000FB0  6E18               	movwf	___aodiv@divisor^0,c
  2115  000FB2  0E00               	movlw	0
  2116  000FB4  6E19               	movwf	(___aodiv@divisor+1)^0,c
  2117  000FB6  0E00               	movlw	0
  2118  000FB8  6E1A               	movwf	(___aodiv@divisor+2)^0,c
  2119  000FBA  0E00               	movlw	0
  2120  000FBC  6E1B               	movwf	(___aodiv@divisor+3)^0,c
  2121  000FBE  0E00               	movlw	0
  2122  000FC0  6E1C               	movwf	(___aodiv@divisor+4)^0,c
  2123  000FC2  0E00               	movlw	0
  2124  000FC4  6E1D               	movwf	(___aodiv@divisor+5)^0,c
  2125  000FC6  0E00               	movlw	0
  2126  000FC8  6E1E               	movwf	(___aodiv@divisor+6)^0,c
  2127  000FCA  0E00               	movlw	0
  2128  000FCC  6E1F               	movwf	(___aodiv@divisor+7)^0,c
  2129  000FCE  EC15  F009         	call	___aodiv	;wreg free
  2130  000FD2  C010  F060         	movff	?___aodiv,??_main
  2131  000FD6  C011  F061         	movff	?___aodiv+1,??_main+1
  2132  000FDA  C012  F062         	movff	?___aodiv+2,??_main+2
  2133  000FDE  C013  F063         	movff	?___aodiv+3,??_main+3
  2134  000FE2  C014  F064         	movff	?___aodiv+4,??_main+4
  2135  000FE6  C015  F065         	movff	?___aodiv+5,??_main+5
  2136  000FEA  C016  F066         	movff	?___aodiv+6,??_main+6
  2137  000FEE  C017  F067         	movff	?___aodiv+7,??_main+7
  2138  000FF2  C060  F08C         	movff	??_main,main@Data_Z
  2139  000FF6  C061  F08D         	movff	??_main+1,main@Data_Z+1
  2140  000FFA  C062  F08E         	movff	??_main+2,main@Data_Z+2
  2141  000FFE  C063  F08F         	movff	??_main+3,main@Data_Z+3
  2142                           
  2143                           ;Timig_AD7177.c: 431:                 Data_TC = (signed long long) SumData_TC/10;
  2144  001002  C078  F010         	movff	main@SumData_TC,___aodiv@dividend
  2145  001006  C079  F011         	movff	main@SumData_TC+1,___aodiv@dividend+1
  2146  00100A  C07A  F012         	movff	main@SumData_TC+2,___aodiv@dividend+2
  2147  00100E  C07B  F013         	movff	main@SumData_TC+3,___aodiv@dividend+3
  2148  001012  C07C  F014         	movff	main@SumData_TC+4,___aodiv@dividend+4
  2149  001016  C07D  F015         	movff	main@SumData_TC+5,___aodiv@dividend+5
  2150  00101A  C07E  F016         	movff	main@SumData_TC+6,___aodiv@dividend+6
  2151  00101E  C07F  F017         	movff	main@SumData_TC+7,___aodiv@dividend+7
  2152  001022  0E0A               	movlw	10
  2153  001024  6E18               	movwf	___aodiv@divisor^0,c
  2154  001026  0E00               	movlw	0
  2155  001028  6E19               	movwf	(___aodiv@divisor+1)^0,c
  2156  00102A  0E00               	movlw	0
  2157  00102C  6E1A               	movwf	(___aodiv@divisor+2)^0,c
  2158  00102E  0E00               	movlw	0
  2159  001030  6E1B               	movwf	(___aodiv@divisor+3)^0,c
  2160  001032  0E00               	movlw	0
  2161  001034  6E1C               	movwf	(___aodiv@divisor+4)^0,c
  2162  001036  0E00               	movlw	0
  2163  001038  6E1D               	movwf	(___aodiv@divisor+5)^0,c
  2164  00103A  0E00               	movlw	0
  2165  00103C  6E1E               	movwf	(___aodiv@divisor+6)^0,c
  2166  00103E  0E00               	movlw	0
  2167  001040  6E1F               	movwf	(___aodiv@divisor+7)^0,c
  2168  001042  EC15  F009         	call	___aodiv	;wreg free
  2169  001046  C010  F060         	movff	?___aodiv,??_main
  2170  00104A  C011  F061         	movff	?___aodiv+1,??_main+1
  2171  00104E  C012  F062         	movff	?___aodiv+2,??_main+2
  2172  001052  C013  F063         	movff	?___aodiv+3,??_main+3
  2173  001056  C014  F064         	movff	?___aodiv+4,??_main+4
  2174  00105A  C015  F065         	movff	?___aodiv+5,??_main+5
  2175  00105E  C016  F066         	movff	?___aodiv+6,??_main+6
  2176  001062  C017  F067         	movff	?___aodiv+7,??_main+7
  2177  001066  C060  F090         	movff	??_main,main@Data_TC
  2178  00106A  C061  F091         	movff	??_main+1,main@Data_TC+1
  2179  00106E  C062  F092         	movff	??_main+2,main@Data_TC+2
  2180  001072  C063  F093         	movff	??_main+3,main@Data_TC+3
  2181                           
  2182                           ;Timig_AD7177.c: 432:                 Data_TS = (signed long long) SumData_TS/10;
  2183  001076  C080  F010         	movff	main@SumData_TS,___aodiv@dividend
  2184  00107A  C081  F011         	movff	main@SumData_TS+1,___aodiv@dividend+1
  2185  00107E  C082  F012         	movff	main@SumData_TS+2,___aodiv@dividend+2
  2186  001082  C083  F013         	movff	main@SumData_TS+3,___aodiv@dividend+3
  2187  001086  C084  F014         	movff	main@SumData_TS+4,___aodiv@dividend+4
  2188  00108A  C085  F015         	movff	main@SumData_TS+5,___aodiv@dividend+5
  2189  00108E  C086  F016         	movff	main@SumData_TS+6,___aodiv@dividend+6
  2190  001092  C087  F017         	movff	main@SumData_TS+7,___aodiv@dividend+7
  2191  001096  0E0A               	movlw	10
  2192  001098  6E18               	movwf	___aodiv@divisor^0,c
  2193  00109A  0E00               	movlw	0
  2194  00109C  6E19               	movwf	(___aodiv@divisor+1)^0,c
  2195  00109E  0E00               	movlw	0
  2196  0010A0  6E1A               	movwf	(___aodiv@divisor+2)^0,c
  2197  0010A2  0E00               	movlw	0
  2198  0010A4  6E1B               	movwf	(___aodiv@divisor+3)^0,c
  2199  0010A6  0E00               	movlw	0
  2200  0010A8  6E1C               	movwf	(___aodiv@divisor+4)^0,c
  2201  0010AA  0E00               	movlw	0
  2202  0010AC  6E1D               	movwf	(___aodiv@divisor+5)^0,c
  2203  0010AE  0E00               	movlw	0
  2204  0010B0  6E1E               	movwf	(___aodiv@divisor+6)^0,c
  2205  0010B2  0E00               	movlw	0
  2206  0010B4  6E1F               	movwf	(___aodiv@divisor+7)^0,c
  2207  0010B6  EC15  F009         	call	___aodiv	;wreg free
  2208  0010BA  C010  F060         	movff	?___aodiv,??_main
  2209  0010BE  C011  F061         	movff	?___aodiv+1,??_main+1
  2210  0010C2  C012  F062         	movff	?___aodiv+2,??_main+2
  2211  0010C6  C013  F063         	movff	?___aodiv+3,??_main+3
  2212  0010CA  C014  F064         	movff	?___aodiv+4,??_main+4
  2213  0010CE  C015  F065         	movff	?___aodiv+5,??_main+5
  2214  0010D2  C016  F066         	movff	?___aodiv+6,??_main+6
  2215  0010D6  C017  F067         	movff	?___aodiv+7,??_main+7
  2216  0010DA  C060  F094         	movff	??_main,main@Data_TS
  2217  0010DE  C061  F095         	movff	??_main+1,main@Data_TS+1
  2218  0010E2  C062  F096         	movff	??_main+2,main@Data_TS+2
  2219  0010E6  C063  F097         	movff	??_main+3,main@Data_TS+3
  2220  0010EA                     
  2221                           ;Timig_AD7177.c: 433:                 LATAbits.LATA2 = 0;
  2222  0010EA  9489               	bcf	137,2,c	;volatile
  2223  0010EC                     
  2224                           ;Timig_AD7177.c: 437:                 print_string("JROADQ09,");
  2225  0010EC  0E17               	movlw	low STR_1
  2226  0010EE  6E11               	movwf	print_string@str^0,c
  2227  0010F0  0E06               	movlw	high STR_1
  2228  0010F2  6E12               	movwf	(print_string@str+1)^0,c
  2229  0010F4  ECCE  F00C         	call	_print_string	;wreg free
  2230  0010F8                     
  2231                           ;Timig_AD7177.c: 438:                 print_value(Data_X);
  2232  0010F8  C0A0  F011         	movff	main@Data_X,print_value@value
  2233  0010FC  C0A1  F012         	movff	main@Data_X+1,print_value@value+1
  2234  001100  C0A2  F013         	movff	main@Data_X+2,print_value@value+2
  2235  001104  C0A3  F014         	movff	main@Data_X+3,print_value@value+3
  2236  001108  EC81  F00A         	call	_print_value	;wreg free
  2237  00110C                     
  2238                           ;Timig_AD7177.c: 439:                 print_value(Data_Y);
  2239  00110C  C088  F011         	movff	main@Data_Y,print_value@value
  2240  001110  C089  F012         	movff	main@Data_Y+1,print_value@value+1
  2241  001114  C08A  F013         	movff	main@Data_Y+2,print_value@value+2
  2242  001118  C08B  F014         	movff	main@Data_Y+3,print_value@value+3
  2243  00111C  EC81  F00A         	call	_print_value	;wreg free
  2244  001120                     
  2245                           ;Timig_AD7177.c: 440:                 print_value(Data_Z);
  2246  001120  C08C  F011         	movff	main@Data_Z,print_value@value
  2247  001124  C08D  F012         	movff	main@Data_Z+1,print_value@value+1
  2248  001128  C08E  F013         	movff	main@Data_Z+2,print_value@value+2
  2249  00112C  C08F  F014         	movff	main@Data_Z+3,print_value@value+3
  2250  001130  EC81  F00A         	call	_print_value	;wreg free
  2251  001134                     
  2252                           ;Timig_AD7177.c: 441:                 print_value(Data_TC);
  2253  001134  C090  F011         	movff	main@Data_TC,print_value@value
  2254  001138  C091  F012         	movff	main@Data_TC+1,print_value@value+1
  2255  00113C  C092  F013         	movff	main@Data_TC+2,print_value@value+2
  2256  001140  C093  F014         	movff	main@Data_TC+3,print_value@value+3
  2257  001144  EC81  F00A         	call	_print_value	;wreg free
  2258  001148                     
  2259                           ;Timig_AD7177.c: 442:                 print_value(Data_TS);
  2260  001148  C094  F011         	movff	main@Data_TS,print_value@value
  2261  00114C  C095  F012         	movff	main@Data_TS+1,print_value@value+1
  2262  001150  C096  F013         	movff	main@Data_TS+2,print_value@value+2
  2263  001154  C097  F014         	movff	main@Data_TS+3,print_value@value+3
  2264  001158  EC81  F00A         	call	_print_value	;wreg free
  2265                           
  2266                           ;Timig_AD7177.c: 443:                 print_string(",\n\r");
  2267  00115C  0E21               	movlw	low STR_2
  2268  00115E  6E11               	movwf	print_string@str^0,c
  2269  001160  0E06               	movlw	high STR_2
  2270  001162  6E12               	movwf	(print_string@str+1)^0,c
  2271  001164  ECCE  F00C         	call	_print_string	;wreg free
  2272  001168                     
  2273                           ;Timig_AD7177.c: 444:                 LATAbits.LATA1 = 0;
  2274  001168  9289               	bcf	137,1,c	;volatile
  2275  00116A                     
  2276                           ;Timig_AD7177.c: 446:                 T1CONbits.TMR1ON = 0;
  2277  00116A  90CD               	bcf	205,0,c	;volatile
  2278  00116C                     
  2279                           ;Timig_AD7177.c: 447:                 PIE1bits.TMR1IE = 0;
  2280  00116C  909D               	bcf	157,0,c	;volatile
  2281  00116E                     
  2282                           ;Timig_AD7177.c: 448:                 BufferDAT[0] = TMR1L;
  2283  00116E  CFCE F02A          	movff	4046,_BufferDAT	;volatile
  2284  001172                     
  2285                           ;Timig_AD7177.c: 449:                 BufferDAT[1] = TMR1H;
  2286  001172  CFCF F02B          	movff	4047,_BufferDAT+1	;volatile
  2287  001176                     
  2288                           ;Timig_AD7177.c: 450:                 BufferDAT[2] = conta1;
  2289  001176  C0A6  F02C         	movff	_conta1,_BufferDAT+2
  2290  00117A                     
  2291                           ;Timig_AD7177.c: 451:                 _delay((unsigned long)((500)*(39321600UL/4000.0)))
      +                          ;
  2292  00117A  0E13               	movlw	19
  2293  00117C  0100               	movlb	0	; () banked
  2294  00117E  6F61               	movwf	(??_main+1)& (0+255),b
  2295  001180  0EB7               	movlw	183
  2296  001182  6F60               	movwf	??_main& (0+255),b
  2297  001184  0E99               	movlw	153
  2298  001186                     u1997:
  2299  001186  FFFF               	dw	65535	; errata NOP
  2300  001188  2EE8               	decfsz	wreg,f,c
  2301  00118A  D7FD               	bra	u1997
  2302  00118C  2F60               	decfsz	??_main& (0+255),f,b
  2303  00118E  D7FB               	bra	u1997
  2304  001190  2F61               	decfsz	(??_main+1)& (0+255),f,b
  2305  001192  D7F9               	bra	u1997
  2306  001194  D000               	nop2	
  2307  001196  F000               	nop	
  2308  001198                     
  2309                           ;Timig_AD7177.c: 452:                 TransmitDAT_USART('5');
  2310  001198  0E35               	movlw	53
  2311  00119A  EC3C  F00D         	call	_TransmitDAT_USART
  2312                           
  2313                           ;Timig_AD7177.c: 453:                 break;
  2314  00119E  EF35  F003         	goto	l3256
  2315  0011A2                     l3580:
  2316  0011A2  FFFF               	dw	65535	; assembler added errata NOP
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;Timig_AD7177.c: 455:                 TransmitCMD_USART('8');
  2320  0011A4  0E38               	movlw	56
  2321  0011A6  ECCF  F00D         	call	_TransmitCMD_USART
  2322  0011AA                     
  2323                           ;Timig_AD7177.c: 458:                 INTCON2bits.INTEDG0 = 0;
  2324  0011AA  9CF1               	bcf	241,6,c	;volatile
  2325  0011AC                     
  2326                           ;Timig_AD7177.c: 459:                 INTCONbits.INT0IF = 0;
  2327  0011AC  92F2               	bcf	242,1,c	;volatile
  2328  0011AE                     
  2329                           ;Timig_AD7177.c: 460:                 INTCONbits.INT0IE = 1;
  2330  0011AE  88F2               	bsf	242,4,c	;volatile
  2331  0011B0                     
  2332                           ;Timig_AD7177.c: 462:                 PIE1bits.TMR1IE = 0;
  2333  0011B0  909D               	bcf	157,0,c	;volatile
  2334  0011B2                     l3590:
  2335  0011B2  FFFF               	dw	65535	; assembler added errata NOP
  2336                           
  2337                           ;Timig_AD7177.c: 464:                 __nop();
  2338  0011B4  F000               	nop	
  2339                           
  2340                           ;Timig_AD7177.c: 465:         }
  2341  0011B6  EF35  F003         	goto	l3256
  2342  0011BA                     l3592:
  2343  0011BA  FFFF               	dw	65535	; assembler added errata NOP
  2344                           
  2345                           ; BSR set to: 0
  2346  0011BC  51A4               	movf	main@ID& (0+255),w,b
  2347  0011BE  6F60               	movwf	??_main& (0+255),b
  2348  0011C0  6B61               	clrf	(??_main+1)& (0+255),b
  2349                           
  2350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 1, Range of values is 0 to 0
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte            4     3 (average)
  2356                           ;	Chosen strategy is simple_byte
  2357  0011C2  5161               	movf	(??_main+1)& (0+255),w,b
  2358  0011C4  0A00               	xorlw	0	; case 0
  2359  0011C6  B4D8               	btfsc	status,2,c
  2360  0011C8  EFE8  F008         	goto	l3672
  2361  0011CC  EFD9  F008         	goto	l3590
  2362  0011D0                     l3672:
  2363  0011D0  FFFF               	dw	65535	; assembler added errata NOP
  2364                           
  2365                           ; BSR set to: 0
  2366                           ; Switch size 1, requested type "simple"
  2367                           ; Number of cases is 9, Range of values is 48 to 56
  2368                           ; switch strategies available:
  2369                           ; Name         Instructions Cycles
  2370                           ; simple_byte           28    15 (average)
  2371                           ;	Chosen strategy is simple_byte
  2372  0011D2  5160               	movf	??_main& (0+255),w,b
  2373  0011D4  0A30               	xorlw	48	; case 48
  2374  0011D6  B4D8               	btfsc	status,2,c
  2375  0011D8  EF3C  F003         	goto	l3258
  2376  0011DC  0A01               	xorlw	1	; case 49
  2377  0011DE  B4D8               	btfsc	status,2,c
  2378  0011E0  EF6D  F003         	goto	l3272
  2379  0011E4  0A03               	xorlw	3	; case 50
  2380  0011E6  B4D8               	btfsc	status,2,c
  2381  0011E8  EF98  F003         	goto	l3284
  2382  0011EC  0A01               	xorlw	1	; case 51
  2383  0011EE  B4D8               	btfsc	status,2,c
  2384  0011F0  EFC3  F003         	goto	l3298
  2385  0011F4  0A07               	xorlw	7	; case 52
  2386  0011F6  B4D8               	btfsc	status,2,c
  2387  0011F8  EF62  F004         	goto	l3314
  2388  0011FC  0A01               	xorlw	1	; case 53
  2389  0011FE  B4D8               	btfsc	status,2,c
  2390  001200  EFAD  F004         	goto	l3356
  2391  001204  0A03               	xorlw	3	; case 54
  2392  001206  B4D8               	btfsc	status,2,c
  2393  001208  EF4D  F005         	goto	l3406
  2394  00120C  0A01               	xorlw	1	; case 55
  2395  00120E  B4D8               	btfsc	status,2,c
  2396  001210  EF59  F005         	goto	l3412
  2397  001214  0A0F               	xorlw	15	; case 56
  2398  001216  B4D8               	btfsc	status,2,c
  2399  001218  EFD1  F008         	goto	l3580
  2400  00121C  EFD9  F008         	goto	l3590
  2401  001220                     l118:
  2402  001220  FFFF               	dw	65535	; assembler added errata NOP
  2403                           
  2404                           ; BSR set to: 0
  2405  001222  EF35  F003         	goto	l3256
  2406  001226  EF78  F000         	goto	start
  2407  00122A                     __end_of_main:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _print_value *****************
  2411 ;; Defined at:
  2412 ;;		line 137 in file "LIB18F_USART.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  value           4   16[COMRAM] long 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  Bytes           5   25[COMRAM] unsigned char [5]
  2417 ;;  RegTemp         4   31[COMRAM] long 
  2418 ;;  conta           1   30[COMRAM] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2428 ;;      Params:         4       0       0       0       0       0       0
  2429 ;;      Locals:        10       0       0       0       0       0       0
  2430 ;;      Temps:          5       0       0       0       0       0       0
  2431 ;;      Totals:        19       0       0       0       0       0       0
  2432 ;;Total ram usage:       19 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 5
  2435 ;; This function calls:
  2436 ;;		_WriteByte_USART
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text1
  2443  001502                     __ptext1:
  2444                           	callstack 0
  2445  001502                     _print_value:
  2446                           	callstack 0
  2447  001502  FFFF               	dw	65535	; assembler added errata NOP
  2448  001504                     
  2449                           ;LIB18F_USART.c: 139:     unsigned char Bytes[5]={0,0,0,0};
  2450  001504  EE20  F01A         	lfsr	2,print_value@Bytes
  2451  001508  0E04               	movlw	4
  2452  00150A                     u1231:
  2453  00150A  6ADE               	clrf	postinc2,c
  2454  00150C  06E8               	decf	wreg,f,c
  2455  00150E  E2FD               	bc	u1231
  2456  001510                     
  2457                           ;LIB18F_USART.c: 140:     signed long RegTemp;;LIB18F_USART.c: 141:     unsigned char co
      +                          nta;;LIB18F_USART.c: 144:     RegTemp = value>>24;
  2458  001510  0E18               	movlw	24
  2459  001512  6E15               	movwf	??_print_value^0,c
  2460  001514  C011  F016         	movff	print_value@value,??_print_value+1
  2461  001518  C012  F017         	movff	print_value@value+1,??_print_value+2
  2462  00151C  C013  F018         	movff	print_value@value+2,??_print_value+3
  2463  001520  C014  F019         	movff	print_value@value+3,??_print_value+4
  2464  001524                     u1245:
  2465  001524  FFFF               	dw	65535	; assembler added errata NOP
  2466  001526  6615               	tstfsz	??_print_value^0,c
  2467  001528  EF98  F00A         	goto	u1246
  2468  00152C  EFA1  F00A         	goto	u1247
  2469  001530                     u1246:
  2470  001530  FFFF               	dw	65535	; assembler added errata NOP
  2471  001532  3419               	rlcf	(??_print_value+4)^0,w,c
  2472  001534  3219               	rrcf	(??_print_value+4)^0,f,c
  2473  001536  3218               	rrcf	(??_print_value+3)^0,f,c
  2474  001538  3217               	rrcf	(??_print_value+2)^0,f,c
  2475  00153A  3216               	rrcf	(??_print_value+1)^0,f,c
  2476  00153C  2E15               	decfsz	??_print_value^0,f,c
  2477  00153E  EF92  F00A         	goto	u1245
  2478  001542                     u1247:
  2479  001542  FFFF               	dw	65535	; assembler added errata NOP
  2480  001544  C016  F020         	movff	??_print_value+1,print_value@RegTemp
  2481  001548  C017  F021         	movff	??_print_value+2,print_value@RegTemp+1
  2482  00154C  C018  F022         	movff	??_print_value+3,print_value@RegTemp+2
  2483  001550  C019  F023         	movff	??_print_value+4,print_value@RegTemp+3
  2484  001554                     
  2485                           ;LIB18F_USART.c: 145:     Bytes[3] = (unsigned char) RegTemp;
  2486  001554  C020  F01D         	movff	print_value@RegTemp,print_value@Bytes+3
  2487  001558                     
  2488                           ;LIB18F_USART.c: 147:     RegTemp = value>>16;
  2489  001558  0E10               	movlw	16
  2490  00155A  6E15               	movwf	??_print_value^0,c
  2491  00155C  C011  F016         	movff	print_value@value,??_print_value+1
  2492  001560  C012  F017         	movff	print_value@value+1,??_print_value+2
  2493  001564  C013  F018         	movff	print_value@value+2,??_print_value+3
  2494  001568  C014  F019         	movff	print_value@value+3,??_print_value+4
  2495  00156C                     u1255:
  2496  00156C  FFFF               	dw	65535	; assembler added errata NOP
  2497  00156E  6615               	tstfsz	??_print_value^0,c
  2498  001570  EFBC  F00A         	goto	u1256
  2499  001574  EFC5  F00A         	goto	u1257
  2500  001578                     u1256:
  2501  001578  FFFF               	dw	65535	; assembler added errata NOP
  2502  00157A  3419               	rlcf	(??_print_value+4)^0,w,c
  2503  00157C  3219               	rrcf	(??_print_value+4)^0,f,c
  2504  00157E  3218               	rrcf	(??_print_value+3)^0,f,c
  2505  001580  3217               	rrcf	(??_print_value+2)^0,f,c
  2506  001582  3216               	rrcf	(??_print_value+1)^0,f,c
  2507  001584  2E15               	decfsz	??_print_value^0,f,c
  2508  001586  EFB6  F00A         	goto	u1255
  2509  00158A                     u1257:
  2510  00158A  FFFF               	dw	65535	; assembler added errata NOP
  2511  00158C  C016  F020         	movff	??_print_value+1,print_value@RegTemp
  2512  001590  C017  F021         	movff	??_print_value+2,print_value@RegTemp+1
  2513  001594  C018  F022         	movff	??_print_value+3,print_value@RegTemp+2
  2514  001598  C019  F023         	movff	??_print_value+4,print_value@RegTemp+3
  2515  00159C                     
  2516                           ;LIB18F_USART.c: 148:     Bytes[2] = (unsigned char) RegTemp;
  2517  00159C  C020  F01C         	movff	print_value@RegTemp,print_value@Bytes+2
  2518  0015A0                     
  2519                           ;LIB18F_USART.c: 150:     RegTemp = value>>8;
  2520  0015A0  C012  F015         	movff	print_value@value+1,??_print_value
  2521  0015A4  C013  F016         	movff	print_value@value+2,??_print_value+1
  2522  0015A8  C014  F017         	movff	print_value@value+3,??_print_value+2
  2523  0015AC  6A18               	clrf	(??_print_value+3)^0,c
  2524  0015AE  BE17               	btfsc	(??_print_value+2)^0,7,c
  2525  0015B0  6818               	setf	(??_print_value+3)^0,c
  2526  0015B2  C015  F020         	movff	??_print_value,print_value@RegTemp
  2527  0015B6  C016  F021         	movff	??_print_value+1,print_value@RegTemp+1
  2528  0015BA  C017  F022         	movff	??_print_value+2,print_value@RegTemp+2
  2529  0015BE  C018  F023         	movff	??_print_value+3,print_value@RegTemp+3
  2530  0015C2                     
  2531                           ;LIB18F_USART.c: 151:     Bytes[1] = (unsigned char) RegTemp;
  2532  0015C2  C020  F01B         	movff	print_value@RegTemp,print_value@Bytes+1
  2533  0015C6                     
  2534                           ;LIB18F_USART.c: 153:     RegTemp = value;
  2535  0015C6  C011  F020         	movff	print_value@value,print_value@RegTemp
  2536  0015CA  C012  F021         	movff	print_value@value+1,print_value@RegTemp+1
  2537  0015CE  C013  F022         	movff	print_value@value+2,print_value@RegTemp+2
  2538  0015D2  C014  F023         	movff	print_value@value+3,print_value@RegTemp+3
  2539  0015D6                     
  2540                           ;LIB18F_USART.c: 154:     Bytes[0] = (unsigned char) RegTemp;
  2541  0015D6  C020  F01A         	movff	print_value@RegTemp,print_value@Bytes
  2542  0015DA                     
  2543                           ;LIB18F_USART.c: 156:     for(conta=0; conta<4; conta++){
  2544  0015DA  0E00               	movlw	0
  2545  0015DC  6E1F               	movwf	print_value@conta^0,c
  2546  0015DE                     l2522:
  2547  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  2548                           
  2549                           ;LIB18F_USART.c: 157:         WriteByte_USART(Bytes[conta]);
  2550  0015E0  0E1A               	movlw	low print_value@Bytes
  2551  0015E2  241F               	addwf	print_value@conta^0,w,c
  2552  0015E4  6ED9               	movwf	fsr2l,c
  2553  0015E6  6ADA               	clrf	fsr2h,c
  2554  0015E8  0E00               	movlw	high print_value@Bytes
  2555  0015EA  22DA               	addwfc	fsr2h,f,c
  2556  0015EC  50DF               	movf	indf2,w,c
  2557  0015EE  ECF4  F00D         	call	_WriteByte_USART
  2558  0015F2                     
  2559                           ;LIB18F_USART.c: 158:     }
  2560  0015F2  2A1F               	incf	print_value@conta^0,f,c
  2561  0015F4  0E03               	movlw	3
  2562  0015F6  641F               	cpfsgt	print_value@conta^0,c
  2563  0015F8  EF00  F00B         	goto	u1261
  2564  0015FC  EF03  F00B         	goto	u1260
  2565  001600                     u1261:
  2566  001600  FFFF               	dw	65535	; assembler added errata NOP
  2567  001602  EFEF  F00A         	goto	l2522
  2568  001606                     u1260:
  2569  001606  FFFF               	dw	65535	; assembler added errata NOP
  2570  001608  0012               	return		;funcret
  2571  00160A  FFFF               	dw	65535	; errata NOP
  2572  00160C                     __end_of_print_value:
  2573                           	callstack 0
  2574                           
  2575 ;; *************** function ___aodiv *****************
  2576 ;; Defined at:
  2577 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  dividend        8   15[COMRAM] long long 
  2580 ;;  divisor         8   23[COMRAM] long long 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  quotient        8   33[COMRAM] long long 
  2583 ;;  sign            1   32[COMRAM] unsigned char 
  2584 ;;  counter         1   31[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  8   15[COMRAM] long long 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2594 ;;      Params:        16       0       0       0       0       0       0
  2595 ;;      Locals:        10       0       0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0
  2597 ;;      Totals:        26       0       0       0       0       0       0
  2598 ;;Total ram usage:       26 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 4
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text2
  2609  00122A                     __ptext2:
  2610                           	callstack 0
  2611  00122A                     ___aodiv:
  2612                           	callstack 0
  2613  00122A  FFFF               	dw	65535	; assembler added errata NOP
  2614  00122C  0E00               	movlw	0
  2615  00122E  6E21               	movwf	___aodiv@sign^0,c
  2616  001230  BE1F               	btfsc	(___aodiv@divisor+7)^0,7,c
  2617  001232  EF20  F009         	goto	u1270
  2618  001236  EF1D  F009         	goto	u1271
  2619  00123A                     u1271:
  2620  00123A  FFFF               	dw	65535	; assembler added errata NOP
  2621  00123C  EF33  F009         	goto	l2548
  2622  001240                     u1270:
  2623  001240  FFFF               	dw	65535	; assembler added errata NOP
  2624  001242  1E1F               	comf	(___aodiv@divisor+7)^0,f,c
  2625  001244  1E1E               	comf	(___aodiv@divisor+6)^0,f,c
  2626  001246  1E1D               	comf	(___aodiv@divisor+5)^0,f,c
  2627  001248  1E1C               	comf	(___aodiv@divisor+4)^0,f,c
  2628  00124A  1E1B               	comf	(___aodiv@divisor+3)^0,f,c
  2629  00124C  1E1A               	comf	(___aodiv@divisor+2)^0,f,c
  2630  00124E  1E19               	comf	(___aodiv@divisor+1)^0,f,c
  2631  001250  6C18               	negf	___aodiv@divisor^0,c
  2632  001252  0E00               	movlw	0
  2633  001254  2219               	addwfc	(___aodiv@divisor+1)^0,f,c
  2634  001256  221A               	addwfc	(___aodiv@divisor+2)^0,f,c
  2635  001258  221B               	addwfc	(___aodiv@divisor+3)^0,f,c
  2636  00125A  221C               	addwfc	(___aodiv@divisor+4)^0,f,c
  2637  00125C  221D               	addwfc	(___aodiv@divisor+5)^0,f,c
  2638  00125E  221E               	addwfc	(___aodiv@divisor+6)^0,f,c
  2639  001260  221F               	addwfc	(___aodiv@divisor+7)^0,f,c
  2640  001262  0E01               	movlw	1
  2641  001264  6E21               	movwf	___aodiv@sign^0,c
  2642  001266                     l2548:
  2643  001266  FFFF               	dw	65535	; assembler added errata NOP
  2644  001268  BE17               	btfsc	(___aodiv@dividend+7)^0,7,c
  2645  00126A  EF3C  F009         	goto	u1280
  2646  00126E  EF39  F009         	goto	u1281
  2647  001272                     u1281:
  2648  001272  FFFF               	dw	65535	; assembler added errata NOP
  2649  001274  EF4F  F009         	goto	l2554
  2650  001278                     u1280:
  2651  001278  FFFF               	dw	65535	; assembler added errata NOP
  2652  00127A  1E17               	comf	(___aodiv@dividend+7)^0,f,c
  2653  00127C  1E16               	comf	(___aodiv@dividend+6)^0,f,c
  2654  00127E  1E15               	comf	(___aodiv@dividend+5)^0,f,c
  2655  001280  1E14               	comf	(___aodiv@dividend+4)^0,f,c
  2656  001282  1E13               	comf	(___aodiv@dividend+3)^0,f,c
  2657  001284  1E12               	comf	(___aodiv@dividend+2)^0,f,c
  2658  001286  1E11               	comf	(___aodiv@dividend+1)^0,f,c
  2659  001288  6C10               	negf	___aodiv@dividend^0,c
  2660  00128A  0E00               	movlw	0
  2661  00128C  2211               	addwfc	(___aodiv@dividend+1)^0,f,c
  2662  00128E  2212               	addwfc	(___aodiv@dividend+2)^0,f,c
  2663  001290  2213               	addwfc	(___aodiv@dividend+3)^0,f,c
  2664  001292  2214               	addwfc	(___aodiv@dividend+4)^0,f,c
  2665  001294  2215               	addwfc	(___aodiv@dividend+5)^0,f,c
  2666  001296  2216               	addwfc	(___aodiv@dividend+6)^0,f,c
  2667  001298  2217               	addwfc	(___aodiv@dividend+7)^0,f,c
  2668  00129A  0E01               	movlw	1
  2669  00129C  1A21               	xorwf	___aodiv@sign^0,f,c
  2670  00129E                     l2554:
  2671  00129E  FFFF               	dw	65535	; assembler added errata NOP
  2672  0012A0  EE20  F022         	lfsr	2,___aodiv@quotient
  2673  0012A4  0E07               	movlw	7
  2674  0012A6                     u1291:
  2675  0012A6  6ADE               	clrf	postinc2,c
  2676  0012A8  06E8               	decf	wreg,f,c
  2677  0012AA  E2FD               	bc	u1291
  2678  0012AC  5018               	movf	___aodiv@divisor^0,w,c
  2679  0012AE  1019               	iorwf	(___aodiv@divisor+1)^0,w,c
  2680  0012B0  101A               	iorwf	(___aodiv@divisor+2)^0,w,c
  2681  0012B2  101B               	iorwf	(___aodiv@divisor+3)^0,w,c
  2682  0012B4  101C               	iorwf	(___aodiv@divisor+4)^0,w,c
  2683  0012B6  101D               	iorwf	(___aodiv@divisor+5)^0,w,c
  2684  0012B8  101E               	iorwf	(___aodiv@divisor+6)^0,w,c
  2685  0012BA  101F               	iorwf	(___aodiv@divisor+7)^0,w,c
  2686  0012BC  B4D8               	btfsc	status,2,c
  2687  0012BE  EF63  F009         	goto	u1301
  2688  0012C2  EF66  F009         	goto	u1300
  2689  0012C6                     u1301:
  2690  0012C6  FFFF               	dw	65535	; assembler added errata NOP
  2691  0012C8  EFC1  F009         	goto	l2576
  2692  0012CC                     u1300:
  2693  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  2694  0012CE  0E01               	movlw	1
  2695  0012D0  6E20               	movwf	___aodiv@counter^0,c
  2696  0012D2  EF76  F009         	goto	l2562
  2697  0012D6                     l2560:
  2698  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  2699  0012D8  90D8               	bcf	status,0,c
  2700  0012DA  3618               	rlcf	___aodiv@divisor^0,f,c
  2701  0012DC  3619               	rlcf	(___aodiv@divisor+1)^0,f,c
  2702  0012DE  361A               	rlcf	(___aodiv@divisor+2)^0,f,c
  2703  0012E0  361B               	rlcf	(___aodiv@divisor+3)^0,f,c
  2704  0012E2  361C               	rlcf	(___aodiv@divisor+4)^0,f,c
  2705  0012E4  361D               	rlcf	(___aodiv@divisor+5)^0,f,c
  2706  0012E6  361E               	rlcf	(___aodiv@divisor+6)^0,f,c
  2707  0012E8  361F               	rlcf	(___aodiv@divisor+7)^0,f,c
  2708  0012EA  2A20               	incf	___aodiv@counter^0,f,c
  2709  0012EC                     l2562:
  2710  0012EC  FFFF               	dw	65535	; assembler added errata NOP
  2711  0012EE  AE1F               	btfss	(___aodiv@divisor+7)^0,7,c
  2712  0012F0  EF7C  F009         	goto	u1311
  2713  0012F4  EF7F  F009         	goto	u1310
  2714  0012F8                     u1311:
  2715  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  2716  0012FA  EF6B  F009         	goto	l2560
  2717  0012FE                     u1310:
  2718  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  2719  001300                     l2564:
  2720  001300  FFFF               	dw	65535	; assembler added errata NOP
  2721  001302  90D8               	bcf	status,0,c
  2722  001304  3622               	rlcf	___aodiv@quotient^0,f,c
  2723  001306  3623               	rlcf	(___aodiv@quotient+1)^0,f,c
  2724  001308  3624               	rlcf	(___aodiv@quotient+2)^0,f,c
  2725  00130A  3625               	rlcf	(___aodiv@quotient+3)^0,f,c
  2726  00130C  3626               	rlcf	(___aodiv@quotient+4)^0,f,c
  2727  00130E  3627               	rlcf	(___aodiv@quotient+5)^0,f,c
  2728  001310  3628               	rlcf	(___aodiv@quotient+6)^0,f,c
  2729  001312  3629               	rlcf	(___aodiv@quotient+7)^0,f,c
  2730  001314  5018               	movf	___aodiv@divisor^0,w,c
  2731  001316  5C10               	subwf	___aodiv@dividend^0,w,c
  2732  001318  5019               	movf	(___aodiv@divisor+1)^0,w,c
  2733  00131A  5811               	subwfb	(___aodiv@dividend+1)^0,w,c
  2734  00131C  501A               	movf	(___aodiv@divisor+2)^0,w,c
  2735  00131E  5812               	subwfb	(___aodiv@dividend+2)^0,w,c
  2736  001320  501B               	movf	(___aodiv@divisor+3)^0,w,c
  2737  001322  5813               	subwfb	(___aodiv@dividend+3)^0,w,c
  2738  001324  501C               	movf	(___aodiv@divisor+4)^0,w,c
  2739  001326  5814               	subwfb	(___aodiv@dividend+4)^0,w,c
  2740  001328  501D               	movf	(___aodiv@divisor+5)^0,w,c
  2741  00132A  5815               	subwfb	(___aodiv@dividend+5)^0,w,c
  2742  00132C  501E               	movf	(___aodiv@divisor+6)^0,w,c
  2743  00132E  5816               	subwfb	(___aodiv@dividend+6)^0,w,c
  2744  001330  501F               	movf	(___aodiv@divisor+7)^0,w,c
  2745  001332  5817               	subwfb	(___aodiv@dividend+7)^0,w,c
  2746  001334  A0D8               	btfss	status,0,c
  2747  001336  EF9F  F009         	goto	u1321
  2748  00133A  EFA2  F009         	goto	u1320
  2749  00133E                     u1321:
  2750  00133E  FFFF               	dw	65535	; assembler added errata NOP
  2751  001340  EFB4  F009         	goto	l2572
  2752  001344                     u1320:
  2753  001344  FFFF               	dw	65535	; assembler added errata NOP
  2754  001346  5018               	movf	___aodiv@divisor^0,w,c
  2755  001348  5E10               	subwf	___aodiv@dividend^0,f,c
  2756  00134A  5019               	movf	(___aodiv@divisor+1)^0,w,c
  2757  00134C  5A11               	subwfb	(___aodiv@dividend+1)^0,f,c
  2758  00134E  501A               	movf	(___aodiv@divisor+2)^0,w,c
  2759  001350  5A12               	subwfb	(___aodiv@dividend+2)^0,f,c
  2760  001352  501B               	movf	(___aodiv@divisor+3)^0,w,c
  2761  001354  5A13               	subwfb	(___aodiv@dividend+3)^0,f,c
  2762  001356  501C               	movf	(___aodiv@divisor+4)^0,w,c
  2763  001358  5A14               	subwfb	(___aodiv@dividend+4)^0,f,c
  2764  00135A  501D               	movf	(___aodiv@divisor+5)^0,w,c
  2765  00135C  5A15               	subwfb	(___aodiv@dividend+5)^0,f,c
  2766  00135E  501E               	movf	(___aodiv@divisor+6)^0,w,c
  2767  001360  5A16               	subwfb	(___aodiv@dividend+6)^0,f,c
  2768  001362  501F               	movf	(___aodiv@divisor+7)^0,w,c
  2769  001364  5A17               	subwfb	(___aodiv@dividend+7)^0,f,c
  2770  001366  8022               	bsf	___aodiv@quotient^0,0,c
  2771  001368                     l2572:
  2772  001368  FFFF               	dw	65535	; assembler added errata NOP
  2773  00136A  90D8               	bcf	status,0,c
  2774  00136C  321F               	rrcf	(___aodiv@divisor+7)^0,f,c
  2775  00136E  321E               	rrcf	(___aodiv@divisor+6)^0,f,c
  2776  001370  321D               	rrcf	(___aodiv@divisor+5)^0,f,c
  2777  001372  321C               	rrcf	(___aodiv@divisor+4)^0,f,c
  2778  001374  321B               	rrcf	(___aodiv@divisor+3)^0,f,c
  2779  001376  321A               	rrcf	(___aodiv@divisor+2)^0,f,c
  2780  001378  3219               	rrcf	(___aodiv@divisor+1)^0,f,c
  2781  00137A  3218               	rrcf	___aodiv@divisor^0,f,c
  2782  00137C  2E20               	decfsz	___aodiv@counter^0,f,c
  2783  00137E  EF80  F009         	goto	l2564
  2784  001382                     l2576:
  2785  001382  FFFF               	dw	65535	; assembler added errata NOP
  2786  001384  5021               	movf	___aodiv@sign^0,w,c
  2787  001386  B4D8               	btfsc	status,2,c
  2788  001388  EFC8  F009         	goto	u1331
  2789  00138C  EFCB  F009         	goto	u1330
  2790  001390                     u1331:
  2791  001390  FFFF               	dw	65535	; assembler added errata NOP
  2792  001392  EFDC  F009         	goto	l2580
  2793  001396                     u1330:
  2794  001396  FFFF               	dw	65535	; assembler added errata NOP
  2795  001398  1E29               	comf	(___aodiv@quotient+7)^0,f,c
  2796  00139A  1E28               	comf	(___aodiv@quotient+6)^0,f,c
  2797  00139C  1E27               	comf	(___aodiv@quotient+5)^0,f,c
  2798  00139E  1E26               	comf	(___aodiv@quotient+4)^0,f,c
  2799  0013A0  1E25               	comf	(___aodiv@quotient+3)^0,f,c
  2800  0013A2  1E24               	comf	(___aodiv@quotient+2)^0,f,c
  2801  0013A4  1E23               	comf	(___aodiv@quotient+1)^0,f,c
  2802  0013A6  6C22               	negf	___aodiv@quotient^0,c
  2803  0013A8  0E00               	movlw	0
  2804  0013AA  2223               	addwfc	(___aodiv@quotient+1)^0,f,c
  2805  0013AC  2224               	addwfc	(___aodiv@quotient+2)^0,f,c
  2806  0013AE  2225               	addwfc	(___aodiv@quotient+3)^0,f,c
  2807  0013B0  2226               	addwfc	(___aodiv@quotient+4)^0,f,c
  2808  0013B2  2227               	addwfc	(___aodiv@quotient+5)^0,f,c
  2809  0013B4  2228               	addwfc	(___aodiv@quotient+6)^0,f,c
  2810  0013B6  2229               	addwfc	(___aodiv@quotient+7)^0,f,c
  2811  0013B8                     l2580:
  2812  0013B8  FFFF               	dw	65535	; assembler added errata NOP
  2813  0013BA  C022  F010         	movff	___aodiv@quotient,?___aodiv
  2814  0013BE  C023  F011         	movff	___aodiv@quotient+1,?___aodiv+1
  2815  0013C2  C024  F012         	movff	___aodiv@quotient+2,?___aodiv+2
  2816  0013C6  C025  F013         	movff	___aodiv@quotient+3,?___aodiv+3
  2817  0013CA  C026  F014         	movff	___aodiv@quotient+4,?___aodiv+4
  2818  0013CE  C027  F015         	movff	___aodiv@quotient+5,?___aodiv+5
  2819  0013D2  C028  F016         	movff	___aodiv@quotient+6,?___aodiv+6
  2820  0013D6  C029  F017         	movff	___aodiv@quotient+7,?___aodiv+7
  2821  0013DA  0012               	return		;funcret
  2822  0013DC  FFFF               	dw	65535	; errata NOP
  2823  0013DE                     __end_of___aodiv:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _WriteRegister_2bytesAD7177 *****************
  2827 ;; Defined at:
  2828 ;;		line 89 in file "LIB18F_SPI.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  command         1    wreg     unsigned char 
  2831 ;;  BYTE_HIGH       1   16[COMRAM] unsigned char 
  2832 ;;  BYTE_LOW        1   17[COMRAM] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  command         1   18[COMRAM] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2844 ;;      Params:         2       0       0       0       0       0       0
  2845 ;;      Locals:         1       0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0
  2847 ;;      Totals:         3       0       0       0       0       0       0
  2848 ;;Total ram usage:        3 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 5
  2851 ;; This function calls:
  2852 ;;		_TransferByte_SPI
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text3
  2859  001C4E                     __ptext3:
  2860                           	callstack 0
  2861  001C4E                     _WriteRegister_2bytesAD7177:
  2862                           	callstack 0
  2863  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  2864                           
  2865                           ;incstack = 0
  2866                           ;WriteRegister_2bytesAD7177@command stored from wreg
  2867  001C50  6E13               	movwf	WriteRegister_2bytesAD7177@command^0,c
  2868  001C52                     
  2869                           ;LIB18F_SPI.c: 91:     LATCbits.LATC2 = 0;
  2870  001C52  948B               	bcf	139,2,c	;volatile
  2871  001C54                     
  2872                           ;LIB18F_SPI.c: 92:     TransferByte_SPI(command);
  2873  001C54  5013               	movf	WriteRegister_2bytesAD7177@command^0,w,c
  2874  001C56  ECE2  F00D         	call	_TransferByte_SPI
  2875                           
  2876                           ;LIB18F_SPI.c: 93:     TransferByte_SPI(BYTE_HIGH);
  2877  001C5A  5011               	movf	WriteRegister_2bytesAD7177@BYTE_HIGH^0,w,c
  2878  001C5C  ECE2  F00D         	call	_TransferByte_SPI
  2879                           
  2880                           ;LIB18F_SPI.c: 94:     TransferByte_SPI(BYTE_LOW);
  2881  001C60  5012               	movf	WriteRegister_2bytesAD7177@BYTE_LOW^0,w,c
  2882  001C62  ECE2  F00D         	call	_TransferByte_SPI
  2883  001C66                     
  2884                           ;LIB18F_SPI.c: 95:     LATCbits.LATC2 = 1;
  2885  001C66  848B               	bsf	139,2,c	;volatile
  2886  001C68  0012               	return		;funcret
  2887  001C6A  FFFF               	dw	65535	; errata NOP
  2888  001C6C                     __end_of_WriteRegister_2bytesAD7177:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _TransmitDAT_USART *****************
  2892 ;; Defined at:
  2893 ;;		line 125 in file "LIB18F_USART.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  DAT_ID          1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  DAT_ID          1   18[COMRAM] unsigned char 
  2898 ;;  conta           1   19[COMRAM] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2908 ;;      Params:         0       0       0       0       0       0       0
  2909 ;;      Locals:         2       0       0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0
  2911 ;;      Totals:         2       0       0       0       0       0       0
  2912 ;;Total ram usage:        2 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 6
  2915 ;; This function calls:
  2916 ;;		_WriteByte_USART
  2917 ;;		_print_string
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text4
  2924  001A78                     __ptext4:
  2925                           	callstack 0
  2926  001A78                     _TransmitDAT_USART:
  2927                           	callstack 0
  2928  001A78  FFFF               	dw	65535	; assembler added errata NOP
  2929                           
  2930                           ;incstack = 0
  2931                           ;TransmitDAT_USART@DAT_ID stored from wreg
  2932  001A7A  6E13               	movwf	TransmitDAT_USART@DAT_ID^0,c
  2933  001A7C                     
  2934                           ;LIB18F_USART.c: 126:     unsigned char conta;;LIB18F_USART.c: 128:     print_string("NN
      +                          NNJRODAT");
  2935  001A7C  0E0C               	movlw	low STR_5
  2936  001A7E  6E11               	movwf	print_string@str^0,c
  2937  001A80  0E06               	movlw	high STR_5
  2938  001A82  6E12               	movwf	(print_string@str+1)^0,c
  2939  001A84  ECCE  F00C         	call	_print_string	;wreg free
  2940  001A88                     
  2941                           ;LIB18F_USART.c: 129:     WriteByte_USART(DAT_ID);
  2942  001A88  5013               	movf	TransmitDAT_USART@DAT_ID^0,w,c
  2943  001A8A  ECF4  F00D         	call	_WriteByte_USART
  2944  001A8E                     
  2945                           ;LIB18F_USART.c: 130:     for(conta=0; conta<12; conta++){
  2946  001A8E  0E00               	movlw	0
  2947  001A90  6E14               	movwf	TransmitDAT_USART@conta^0,c
  2948  001A92                     l2310:
  2949  001A92  FFFF               	dw	65535	; assembler added errata NOP
  2950                           
  2951                           ;LIB18F_USART.c: 131:         WriteByte_USART(BufferDAT[conta]);
  2952  001A94  0E2A               	movlw	low _BufferDAT
  2953  001A96  2414               	addwf	TransmitDAT_USART@conta^0,w,c
  2954  001A98  6ED9               	movwf	fsr2l,c
  2955  001A9A  6ADA               	clrf	fsr2h,c
  2956  001A9C  0E00               	movlw	high _BufferDAT
  2957  001A9E  22DA               	addwfc	fsr2h,f,c
  2958  001AA0  50DF               	movf	indf2,w,c
  2959  001AA2  ECF4  F00D         	call	_WriteByte_USART
  2960  001AA6                     
  2961                           ;LIB18F_USART.c: 132:     }
  2962  001AA6  2A14               	incf	TransmitDAT_USART@conta^0,f,c
  2963  001AA8  0E0B               	movlw	11
  2964  001AAA  6414               	cpfsgt	TransmitDAT_USART@conta^0,c
  2965  001AAC  EF5A  F00D         	goto	u1071
  2966  001AB0  EF5D  F00D         	goto	u1070
  2967  001AB4                     u1071:
  2968  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  2969  001AB6  EF49  F00D         	goto	l2310
  2970  001ABA                     u1070:
  2971  001ABA  FFFF               	dw	65535	; assembler added errata NOP
  2972  001ABC                     
  2973                           ;LIB18F_USART.c: 133:     print_string("\n\r");
  2974  001ABC  0E22               	movlw	low (STR_2+1)
  2975  001ABE  6E11               	movwf	print_string@str^0,c
  2976  001AC0  0E06               	movlw	high (STR_2+1)
  2977  001AC2  6E12               	movwf	(print_string@str+1)^0,c
  2978  001AC4  ECCE  F00C         	call	_print_string	;wreg free
  2979  001AC8  0012               	return		;funcret
  2980  001ACA  FFFF               	dw	65535	; errata NOP
  2981  001ACC                     __end_of_TransmitDAT_USART:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _TransmitCMD_USART *****************
  2985 ;; Defined at:
  2986 ;;		line 118 in file "LIB18F_USART.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  CMD_ID          1    wreg     unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  CMD_ID          1   18[COMRAM] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3000 ;;      Params:         0       0       0       0       0       0       0
  3001 ;;      Locals:         1       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0
  3003 ;;      Totals:         1       0       0       0       0       0       0
  3004 ;;Total ram usage:        1 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 6
  3007 ;; This function calls:
  3008 ;;		_WriteByte_USART
  3009 ;;		_print_string
  3010 ;; This function is called by:
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text5
  3016  001B9E                     __ptext5:
  3017                           	callstack 0
  3018  001B9E                     _TransmitCMD_USART:
  3019                           	callstack 0
  3020  001B9E  FFFF               	dw	65535	; assembler added errata NOP
  3021                           
  3022                           ;incstack = 0
  3023                           ;TransmitCMD_USART@CMD_ID stored from wreg
  3024  001BA0  6E13               	movwf	TransmitCMD_USART@CMD_ID^0,c
  3025  001BA2                     
  3026                           ;LIB18F_USART.c: 119:     print_string("NNNNJROCMD");
  3027  001BA2  0E01               	movlw	low STR_3
  3028  001BA4  6E11               	movwf	print_string@str^0,c
  3029  001BA6  0E06               	movlw	high STR_3
  3030  001BA8  6E12               	movwf	(print_string@str+1)^0,c
  3031  001BAA  ECCE  F00C         	call	_print_string	;wreg free
  3032  001BAE                     
  3033                           ;LIB18F_USART.c: 120:     WriteByte_USART(CMD_ID);
  3034  001BAE  5013               	movf	TransmitCMD_USART@CMD_ID^0,w,c
  3035  001BB0  ECF4  F00D         	call	_WriteByte_USART
  3036  001BB4                     
  3037                           ;LIB18F_USART.c: 121:     print_string("\n\r");
  3038  001BB4  0E22               	movlw	low (STR_2+1)
  3039  001BB6  6E11               	movwf	print_string@str^0,c
  3040  001BB8  0E06               	movlw	high (STR_2+1)
  3041  001BBA  6E12               	movwf	(print_string@str+1)^0,c
  3042  001BBC  ECCE  F00C         	call	_print_string	;wreg free
  3043  001BC0  0012               	return		;funcret
  3044  001BC2  FFFF               	dw	65535	; errata NOP
  3045  001BC4                     __end_of_TransmitCMD_USART:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _print_string *****************
  3049 ;; Defined at:
  3050 ;;		line 45 in file "LIB18F_USART.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  str             2   16[COMRAM] PTR unsigned char 
  3053 ;;		 -> STR_6(3), STR_5(11), STR_4(3), STR_3(11), 
  3054 ;;		 -> STR_2(4), STR_1(10), DateTimeGPS(13), 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3066 ;;      Params:         2       0       0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0
  3069 ;;      Totals:         2       0       0       0       0       0       0
  3070 ;;Total ram usage:        2 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 5
  3073 ;; This function calls:
  3074 ;;		_WriteByte_USART
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;;		_TransmitCMD_USART
  3078 ;;		_TransmitDAT_USART
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text6
  3083  00199C                     __ptext6:
  3084                           	callstack 0
  3085  00199C                     _print_string:
  3086                           	callstack 0
  3087  00199C  FFFF               	dw	65535	; assembler added errata NOP
  3088  00199E                     
  3089                           ;LIB18F_USART.c: 46:     while(*str != '\0'){
  3090  00199E  EFE7  F00C         	goto	l2158
  3091  0019A2                     l2154:
  3092  0019A2  FFFF               	dw	65535	; assembler added errata NOP
  3093                           
  3094                           ;LIB18F_USART.c: 47:         WriteByte_USART(*str);
  3095  0019A4  C011  FFF6         	movff	print_string@str,tblptrl
  3096  0019A8  C012  FFF7         	movff	print_string@str+1,tblptrh
  3097  0019AC  6AF8               	clrf	tblptru,c
  3098  0019AE  0E05               	movlw	(high __ramtop+-1)
  3099  0019B0  64F7               	cpfsgt	tblptrh,c
  3100  0019B2  D004               	bra	u897
  3101  0019B4  0008               	tblrd		*
  3102  0019B6  FFFF               	dw	65535	; errata NOP
  3103  0019B8  50F5               	movf	tablat,w,c
  3104  0019BA  D005               	bra	u890
  3105  0019BC                     u897:
  3106  0019BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3107  0019C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3108  0019C4  50EF               	movf	indf0,w,c
  3109  0019C6                     u890:
  3110  0019C6  ECF4  F00D         	call	_WriteByte_USART
  3111  0019CA                     
  3112                           ;LIB18F_USART.c: 48:         str++;
  3113  0019CA  4A11               	infsnz	print_string@str^0,f,c
  3114  0019CC  2A12               	incf	(print_string@str+1)^0,f,c
  3115  0019CE                     l2158:
  3116  0019CE  FFFF               	dw	65535	; assembler added errata NOP
  3117                           
  3118                           ;LIB18F_USART.c: 46:     while(*str != '\0'){
  3119  0019D0  C011  FFF6         	movff	print_string@str,tblptrl
  3120  0019D4  C012  FFF7         	movff	print_string@str+1,tblptrh
  3121  0019D8  6AF8               	clrf	tblptru,c
  3122  0019DA  0E05               	movlw	(high __ramtop+-1)
  3123  0019DC  64F7               	cpfsgt	tblptrh,c
  3124  0019DE  D004               	bra	u907
  3125  0019E0  0008               	tblrd		*
  3126  0019E2  FFFF               	dw	65535	; errata NOP
  3127  0019E4  50F5               	movf	tablat,w,c
  3128  0019E6  D005               	bra	u900
  3129  0019E8                     u907:
  3130  0019E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3131  0019EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3132  0019F0  50EF               	movf	indf0,w,c
  3133  0019F2                     u900:
  3134  0019F2  0900               	iorlw	0
  3135  0019F4  A4D8               	btfss	status,2,c
  3136  0019F6  EFFF  F00C         	goto	u911
  3137  0019FA  EF02  F00D         	goto	u910
  3138  0019FE                     u911:
  3139  0019FE  FFFF               	dw	65535	; assembler added errata NOP
  3140  001A00  EFD1  F00C         	goto	l2154
  3141  001A04                     u910:
  3142  001A04  FFFF               	dw	65535	; assembler added errata NOP
  3143  001A06  0012               	return		;funcret
  3144  001A08  FFFF               	dw	65535	; errata NOP
  3145  001A0A                     __end_of_print_string:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _WriteByte_USART *****************
  3149 ;; Defined at:
  3150 ;;		line 37 in file "LIB18F_USART.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  byte            1    wreg     unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  byte            1   15[COMRAM] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3164 ;;      Params:         0       0       0       0       0       0       0
  3165 ;;      Locals:         1       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0
  3167 ;;      Totals:         1       0       0       0       0       0       0
  3168 ;;Total ram usage:        1 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 4
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_print_string
  3175 ;;		_TransmitCMD_USART
  3176 ;;		_TransmitDAT_USART
  3177 ;;		_print_value
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text7
  3182  001BE8                     __ptext7:
  3183                           	callstack 0
  3184  001BE8                     _WriteByte_USART:
  3185                           	callstack 0
  3186  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  3187                           
  3188                           ;incstack = 0
  3189                           ;WriteByte_USART@byte stored from wreg
  3190  001BEA  6E10               	movwf	WriteByte_USART@byte^0,c
  3191  001BEC                     
  3192                           ;LIB18F_USART.c: 39:     TXREG = byte;
  3193  001BEC  C010  FFAD         	movff	WriteByte_USART@byte,4013	;volatile
  3194  001BF0                     
  3195                           ;LIB18F_USART.c: 40:     __nop();
  3196  001BF0  F000               	nop	
  3197  001BF2                     l257:
  3198  001BF2  FFFF               	dw	65535	; assembler added errata NOP
  3199  001BF4  A2AC               	btfss	172,1,c	;volatile
  3200  001BF6  EFFF  F00D         	goto	u871
  3201  001BFA  EF02  F00E         	goto	u870
  3202  001BFE                     u871:
  3203  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  3204  001C00  EFF9  F00D         	goto	l257
  3205  001C04                     u870:
  3206  001C04  FFFF               	dw	65535	; assembler added errata NOP
  3207  001C06  0012               	return		;funcret
  3208  001C08  FFFF               	dw	65535	; errata NOP
  3209  001C0A                     __end_of_WriteByte_USART:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _ResetAD7177 *****************
  3213 ;; Defined at:
  3214 ;;		line 45 in file "LIB18F_SPI.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  conta           1   17[COMRAM] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3228 ;;      Params:         0       0       0       0       0       0       0
  3229 ;;      Locals:         1       0       0       0       0       0       0
  3230 ;;      Temps:          1       0       0       0       0       0       0
  3231 ;;      Totals:         2       0       0       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 5
  3235 ;; This function calls:
  3236 ;;		_TransferByte_SPI
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text8
  3243  001B20                     __ptext8:
  3244                           	callstack 0
  3245  001B20                     _ResetAD7177:
  3246                           	callstack 0
  3247  001B20  FFFF               	dw	65535	; assembler added errata NOP
  3248  001B22                     
  3249                           ;LIB18F_SPI.c: 46:     unsigned char conta;;LIB18F_SPI.c: 48:     LATCbits.LATC2 = 0;
  3250  001B22  948B               	bcf	139,2,c	;volatile
  3251  001B24                     
  3252                           ;LIB18F_SPI.c: 49:     for(conta=0;conta<9;conta++){
  3253  001B24  0E00               	movlw	0
  3254  001B26  6E12               	movwf	ResetAD7177@conta^0,c
  3255  001B28                     l2386:
  3256  001B28  FFFF               	dw	65535	; assembler added errata NOP
  3257                           
  3258                           ;LIB18F_SPI.c: 50:         TransferByte_SPI(0xFF);
  3259  001B2A  0EFF               	movlw	255
  3260  001B2C  ECE2  F00D         	call	_TransferByte_SPI
  3261  001B30                     
  3262                           ;LIB18F_SPI.c: 51:     }
  3263  001B30  2A12               	incf	ResetAD7177@conta^0,f,c
  3264  001B32  0E08               	movlw	8
  3265  001B34  6412               	cpfsgt	ResetAD7177@conta^0,c
  3266  001B36  EF9F  F00D         	goto	u1141
  3267  001B3A  EFA2  F00D         	goto	u1140
  3268  001B3E                     u1141:
  3269  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  3270  001B40  EF94  F00D         	goto	l2386
  3271  001B44                     u1140:
  3272  001B44  FFFF               	dw	65535	; assembler added errata NOP
  3273  001B46                     
  3274                           ;LIB18F_SPI.c: 52:     LATCbits.LATC2 = 1;
  3275  001B46  848B               	bsf	139,2,c	;volatile
  3276  001B48                     
  3277                           ;LIB18F_SPI.c: 53:     _delay((unsigned long)((3)*(39321600UL/4000.0)));
  3278  001B48  0E1D               	movlw	29
  3279  001B4A  6E11               	movwf	??_ResetAD7177^0,c
  3280  001B4C  0EBD               	movlw	189
  3281  001B4E                     u2007:
  3282  001B4E  FFFF               	dw	65535	; errata NOP
  3283  001B50  2EE8               	decfsz	wreg,f,c
  3284  001B52  D7FD               	bra	u2007
  3285  001B54  2E11               	decfsz	??_ResetAD7177^0,f,c
  3286  001B56  D7FB               	bra	u2007
  3287  001B58  D000               	nop2	
  3288  001B5A  F000               	nop	
  3289  001B5C  0012               	return		;funcret
  3290  001B5E  FFFF               	dw	65535	; errata NOP
  3291  001B60                     __end_of_ResetAD7177:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _ReceiveDAT_USART *****************
  3295 ;; Defined at:
  3296 ;;		line 84 in file "LIB18F_USART.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  conta_byte      1   16[COMRAM] unsigned char 
  3301 ;;  data_byte       1   15[COMRAM] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      unsigned char 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3311 ;;      Params:         0       0       0       0       0       0       0
  3312 ;;      Locals:         2       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0
  3314 ;;      Totals:         2       0       0       0       0       0       0
  3315 ;;Total ram usage:        2 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 5
  3318 ;; This function calls:
  3319 ;;		_ReadByte_USART
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text9
  3326  00160C                     __ptext9:
  3327                           	callstack 0
  3328  00160C                     _ReceiveDAT_USART:
  3329                           	callstack 0
  3330  00160C  FFFF               	dw	65535	; assembler added errata NOP
  3331  00160E                     
  3332                           ;LIB18F_USART.c: 85:     unsigned char conta_byte;;LIB18F_USART.c: 86:     unsigned char
      +                           data_byte;;LIB18F_USART.c: 88:     for(conta_byte=0; conta_byte<10;conta_byte++){
  3333  00160E  0E00               	movlw	0
  3334  001610  6E11               	movwf	ReceiveDAT_USART@conta_byte^0,c
  3335  001612                     l2418:
  3336  001612  FFFF               	dw	65535	; assembler added errata NOP
  3337                           
  3338                           ;LIB18F_USART.c: 89:         data_byte = ReadByte_USART();
  3339  001614  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3340  001618  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3341  00161A                     
  3342                           ;LIB18F_USART.c: 90:         if(data_byte == 'J'){
  3343  00161A  0E4A               	movlw	74
  3344  00161C  1810               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  3345  00161E  A4D8               	btfss	status,2,c
  3346  001620  EF14  F00B         	goto	u1151
  3347  001624  EF17  F00B         	goto	u1150
  3348  001628                     u1151:
  3349  001628  FFFF               	dw	65535	; assembler added errata NOP
  3350  00162A  EF1A  F00B         	goto	l2424
  3351  00162E                     u1150:
  3352  00162E  FFFF               	dw	65535	; assembler added errata NOP
  3353  001630  EF25  F00B         	goto	l2428
  3354  001634                     l2424:
  3355  001634  FFFF               	dw	65535	; assembler added errata NOP
  3356                           
  3357                           ;LIB18F_USART.c: 93:     }
  3358  001636  2A11               	incf	ReceiveDAT_USART@conta_byte^0,f,c
  3359  001638  0E09               	movlw	9
  3360  00163A  6411               	cpfsgt	ReceiveDAT_USART@conta_byte^0,c
  3361  00163C  EF22  F00B         	goto	u1161
  3362  001640  EF25  F00B         	goto	u1160
  3363  001644                     u1161:
  3364  001644  FFFF               	dw	65535	; assembler added errata NOP
  3365  001646  EF09  F00B         	goto	l2418
  3366  00164A                     u1160:
  3367  00164A                     l2428:
  3368  00164A  FFFF               	dw	65535	; assembler added errata NOP
  3369                           
  3370                           ;LIB18F_USART.c: 94:     if(conta_byte < 10){
  3371  00164C  0E0A               	movlw	10
  3372  00164E  6011               	cpfslt	ReceiveDAT_USART@conta_byte^0,c
  3373  001650  EF2C  F00B         	goto	u1171
  3374  001654  EF2F  F00B         	goto	u1170
  3375  001658                     u1171:
  3376  001658  FFFF               	dw	65535	; assembler added errata NOP
  3377  00165A  EF83  F00B         	goto	l282
  3378  00165E                     u1170:
  3379  00165E  FFFF               	dw	65535	; assembler added errata NOP
  3380  001660                     
  3381                           ;LIB18F_USART.c: 95:         data_byte = ReadByte_USART();
  3382  001660  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3383  001664  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3384  001666                     
  3385                           ;LIB18F_USART.c: 96:         if(data_byte == 'R'){
  3386  001666  0E52               	movlw	82
  3387  001668  1810               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  3388  00166A  A4D8               	btfss	status,2,c
  3389  00166C  EF3A  F00B         	goto	u1181
  3390  001670  EF3D  F00B         	goto	u1180
  3391  001674                     u1181:
  3392  001674  FFFF               	dw	65535	; assembler added errata NOP
  3393  001676  EF83  F00B         	goto	l282
  3394  00167A                     u1180:
  3395  00167A  FFFF               	dw	65535	; assembler added errata NOP
  3396  00167C                     
  3397                           ;LIB18F_USART.c: 97:             data_byte = ReadByte_USART();
  3398  00167C  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3399  001680  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3400  001682                     
  3401                           ;LIB18F_USART.c: 98:             if(data_byte == 'O'){
  3402  001682  0E4F               	movlw	79
  3403  001684  1810               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  3404  001686  A4D8               	btfss	status,2,c
  3405  001688  EF48  F00B         	goto	u1191
  3406  00168C  EF4B  F00B         	goto	u1190
  3407  001690                     u1191:
  3408  001690  FFFF               	dw	65535	; assembler added errata NOP
  3409  001692  EF83  F00B         	goto	l282
  3410  001696                     u1190:
  3411  001696  FFFF               	dw	65535	; assembler added errata NOP
  3412  001698                     
  3413                           ;LIB18F_USART.c: 99:                 data_byte = ReadByte_USART();
  3414  001698  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3415  00169C  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3416  00169E                     
  3417                           ;LIB18F_USART.c: 100:                 if(data_byte == 'D'){
  3418  00169E  0E44               	movlw	68
  3419  0016A0  1810               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  3420  0016A2  A4D8               	btfss	status,2,c
  3421  0016A4  EF56  F00B         	goto	u1201
  3422  0016A8  EF59  F00B         	goto	u1200
  3423  0016AC                     u1201:
  3424  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  3425  0016AE  EF83  F00B         	goto	l282
  3426  0016B2                     u1200:
  3427  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  3428  0016B4                     
  3429                           ;LIB18F_USART.c: 101:                     data_byte = ReadByte_USART();
  3430  0016B4  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3431  0016B8  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3432                           
  3433                           ;LIB18F_USART.c: 102:                     data_byte = ReadByte_USART();
  3434  0016BA  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3435  0016BE  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3436                           
  3437                           ;LIB18F_USART.c: 103:                     BufferDAT[12] = ReadByte_USART();
  3438  0016C0  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3439  0016C4  6E36               	movwf	(_BufferDAT+12)^0,c
  3440  0016C6                     
  3441                           ;LIB18F_USART.c: 104:                     for(conta_byte=0; conta_byte<12;conta_byte++){
  3442  0016C6  0E00               	movlw	0
  3443  0016C8  6E11               	movwf	ReceiveDAT_USART@conta_byte^0,c
  3444  0016CA                     l2450:
  3445  0016CA  FFFF               	dw	65535	; assembler added errata NOP
  3446                           
  3447                           ;LIB18F_USART.c: 105:                         BufferDAT[conta_byte] = ReadByte_USART();
  3448  0016CC  0E2A               	movlw	low _BufferDAT
  3449  0016CE  2411               	addwf	ReceiveDAT_USART@conta_byte^0,w,c
  3450  0016D0  6ED9               	movwf	fsr2l,c
  3451  0016D2  6ADA               	clrf	fsr2h,c
  3452  0016D4  0E00               	movlw	high _BufferDAT
  3453  0016D6  22DA               	addwfc	fsr2h,f,c
  3454  0016D8  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3455  0016DC  6EDF               	movwf	indf2,c
  3456  0016DE                     
  3457                           ;LIB18F_USART.c: 106:                     }
  3458  0016DE  2A11               	incf	ReceiveDAT_USART@conta_byte^0,f,c
  3459  0016E0  0E0B               	movlw	11
  3460  0016E2  6411               	cpfsgt	ReceiveDAT_USART@conta_byte^0,c
  3461  0016E4  EF76  F00B         	goto	u1211
  3462  0016E8  EF79  F00B         	goto	u1210
  3463  0016EC                     u1211:
  3464  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  3465  0016EE  EF65  F00B         	goto	l2450
  3466  0016F2                     u1210:
  3467  0016F2  FFFF               	dw	65535	; assembler added errata NOP
  3468  0016F4                     
  3469                           ;LIB18F_USART.c: 107:                     data_byte = ReadByte_USART();
  3470  0016F4  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3471  0016F8  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3472                           
  3473                           ;LIB18F_USART.c: 108:                     data_byte = ReadByte_USART();
  3474  0016FA  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3475  0016FE  6E10               	movwf	ReceiveDAT_USART@data_byte^0,c
  3476  001700                     
  3477                           ;LIB18F_USART.c: 109:                     return BufferDAT[12];
  3478  001700  5036               	movf	(_BufferDAT+12)^0,w,c
  3479  001702  EF86  F00B         	goto	l288
  3480  001706                     l282:
  3481  001706  FFFF               	dw	65535	; assembler added errata NOP
  3482                           
  3483                           ;LIB18F_USART.c: 114:     RCSTAbits.CREN = 0;
  3484  001708  98AB               	bcf	171,4,c	;volatile
  3485  00170A                     
  3486                           ;LIB18F_USART.c: 115:     return 'X';
  3487  00170A  0E58               	movlw	88
  3488  00170C                     l288:
  3489  00170C  FFFF               	dw	65535	; assembler added errata NOP
  3490  00170E  0012               	return		;funcret
  3491  001710  FFFF               	dw	65535	; errata NOP
  3492  001712                     __end_of_ReceiveDAT_USART:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _ReceiveCMD_USART *****************
  3496 ;; Defined at:
  3497 ;;		line 53 in file "LIB18F_USART.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  data_byte       1   16[COMRAM] unsigned char 
  3502 ;;  conta_byte      1   15[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      unsigned char 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3512 ;;      Params:         0       0       0       0       0       0       0
  3513 ;;      Locals:         2       0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0
  3515 ;;      Totals:         2       0       0       0       0       0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 5
  3519 ;; This function calls:
  3520 ;;		_ReadByte_USART
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text10
  3527  001804                     __ptext10:
  3528                           	callstack 0
  3529  001804                     _ReceiveCMD_USART:
  3530                           	callstack 0
  3531  001804  FFFF               	dw	65535	; assembler added errata NOP
  3532  001806                     
  3533                           ;LIB18F_USART.c: 54:     unsigned char conta_byte;;LIB18F_USART.c: 55:     unsigned char
      +                           data_byte;;LIB18F_USART.c: 57:     for(conta_byte=0; conta_byte<10;conta_byte++){
  3534  001806  0E00               	movlw	0
  3535  001808  6E10               	movwf	ReceiveCMD_USART@conta_byte^0,c
  3536  00180A                     l2344:
  3537  00180A  FFFF               	dw	65535	; assembler added errata NOP
  3538                           
  3539                           ;LIB18F_USART.c: 58:         data_byte = ReadByte_USART();
  3540  00180C  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3541  001810  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3542  001812                     
  3543                           ;LIB18F_USART.c: 59:         if(data_byte == 'J'){
  3544  001812  0E4A               	movlw	74
  3545  001814  1811               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  3546  001816  A4D8               	btfss	status,2,c
  3547  001818  EF10  F00C         	goto	u1081
  3548  00181C  EF13  F00C         	goto	u1080
  3549  001820                     u1081:
  3550  001820  FFFF               	dw	65535	; assembler added errata NOP
  3551  001822  EF16  F00C         	goto	l2350
  3552  001826                     u1080:
  3553  001826  FFFF               	dw	65535	; assembler added errata NOP
  3554  001828  EF21  F00C         	goto	l2354
  3555  00182C                     l2350:
  3556  00182C  FFFF               	dw	65535	; assembler added errata NOP
  3557                           
  3558                           ;LIB18F_USART.c: 62:     }
  3559  00182E  2A10               	incf	ReceiveCMD_USART@conta_byte^0,f,c
  3560  001830  0E09               	movlw	9
  3561  001832  6410               	cpfsgt	ReceiveCMD_USART@conta_byte^0,c
  3562  001834  EF1E  F00C         	goto	u1091
  3563  001838  EF21  F00C         	goto	u1090
  3564  00183C                     u1091:
  3565  00183C  FFFF               	dw	65535	; assembler added errata NOP
  3566  00183E  EF05  F00C         	goto	l2344
  3567  001842                     u1090:
  3568  001842                     l2354:
  3569  001842  FFFF               	dw	65535	; assembler added errata NOP
  3570                           
  3571                           ;LIB18F_USART.c: 63:     if(conta_byte < 10){
  3572  001844  0E0A               	movlw	10
  3573  001846  6010               	cpfslt	ReceiveCMD_USART@conta_byte^0,c
  3574  001848  EF28  F00C         	goto	u1101
  3575  00184C  EF2B  F00C         	goto	u1100
  3576  001850                     u1101:
  3577  001850  FFFF               	dw	65535	; assembler added errata NOP
  3578  001852  EF68  F00C         	goto	l272
  3579  001856                     u1100:
  3580  001856  FFFF               	dw	65535	; assembler added errata NOP
  3581  001858                     
  3582                           ;LIB18F_USART.c: 64:         data_byte = ReadByte_USART();
  3583  001858  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3584  00185C  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3585  00185E                     
  3586                           ;LIB18F_USART.c: 65:         if(data_byte == 'R'){
  3587  00185E  0E52               	movlw	82
  3588  001860  1811               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  3589  001862  A4D8               	btfss	status,2,c
  3590  001864  EF36  F00C         	goto	u1111
  3591  001868  EF39  F00C         	goto	u1110
  3592  00186C                     u1111:
  3593  00186C  FFFF               	dw	65535	; assembler added errata NOP
  3594  00186E  EF68  F00C         	goto	l272
  3595  001872                     u1110:
  3596  001872  FFFF               	dw	65535	; assembler added errata NOP
  3597  001874                     
  3598                           ;LIB18F_USART.c: 66:             data_byte = ReadByte_USART();
  3599  001874  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3600  001878  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3601  00187A                     
  3602                           ;LIB18F_USART.c: 67:             if(data_byte == 'O'){
  3603  00187A  0E4F               	movlw	79
  3604  00187C  1811               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  3605  00187E  A4D8               	btfss	status,2,c
  3606  001880  EF44  F00C         	goto	u1121
  3607  001884  EF47  F00C         	goto	u1120
  3608  001888                     u1121:
  3609  001888  FFFF               	dw	65535	; assembler added errata NOP
  3610  00188A  EF68  F00C         	goto	l272
  3611  00188E                     u1120:
  3612  00188E  FFFF               	dw	65535	; assembler added errata NOP
  3613  001890                     
  3614                           ;LIB18F_USART.c: 68:                 data_byte = ReadByte_USART();
  3615  001890  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3616  001894  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3617  001896                     
  3618                           ;LIB18F_USART.c: 69:                 if(data_byte == 'C'){
  3619  001896  0E43               	movlw	67
  3620  001898  1811               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  3621  00189A  A4D8               	btfss	status,2,c
  3622  00189C  EF52  F00C         	goto	u1131
  3623  0018A0  EF55  F00C         	goto	u1130
  3624  0018A4                     u1131:
  3625  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  3626  0018A6  EF68  F00C         	goto	l272
  3627  0018AA                     u1130:
  3628  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  3629  0018AC                     
  3630                           ;LIB18F_USART.c: 70:                     data_byte = ReadByte_USART();
  3631  0018AC  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3632  0018B0  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3633                           
  3634                           ;LIB18F_USART.c: 71:                     data_byte = ReadByte_USART();
  3635  0018B2  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3636  0018B6  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3637                           
  3638                           ;LIB18F_USART.c: 72:                     BufferDAT[12] = ReadByte_USART();
  3639  0018B8  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3640  0018BC  6E36               	movwf	(_BufferDAT+12)^0,c
  3641                           
  3642                           ;LIB18F_USART.c: 73:                     data_byte = ReadByte_USART();
  3643  0018BE  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3644  0018C2  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3645                           
  3646                           ;LIB18F_USART.c: 74:                     data_byte = ReadByte_USART();
  3647  0018C4  EC36  F00E         	call	_ReadByte_USART	;wreg free
  3648  0018C8  6E11               	movwf	ReceiveCMD_USART@data_byte^0,c
  3649  0018CA                     
  3650                           ;LIB18F_USART.c: 75:                     return BufferDAT[12];
  3651  0018CA  5036               	movf	(_BufferDAT+12)^0,w,c
  3652  0018CC  EF6B  F00C         	goto	l276
  3653  0018D0                     l272:
  3654  0018D0  FFFF               	dw	65535	; assembler added errata NOP
  3655                           
  3656                           ;LIB18F_USART.c: 80:     RCSTAbits.CREN = 0;
  3657  0018D2  98AB               	bcf	171,4,c	;volatile
  3658  0018D4                     
  3659                           ;LIB18F_USART.c: 81:     return 'X';
  3660  0018D4  0E58               	movlw	88
  3661  0018D6                     l276:
  3662  0018D6  FFFF               	dw	65535	; assembler added errata NOP
  3663  0018D8  0012               	return		;funcret
  3664  0018DA  FFFF               	dw	65535	; errata NOP
  3665  0018DC                     __end_of_ReceiveCMD_USART:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _ReadByte_USART *****************
  3669 ;; Defined at:
  3670 ;;		line 30 in file "LIB18F_USART.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      unsigned char 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3684 ;;      Params:         0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 4
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_ReceiveCMD_USART
  3695 ;;		_ReceiveDAT_USART
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text11
  3700  001C6C                     __ptext11:
  3701                           	callstack 0
  3702  001C6C                     _ReadByte_USART:
  3703                           	callstack 0
  3704  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  3705  001C6E                     
  3706                           ;LIB18F_USART.c: 32:     __nop();
  3707  001C6E  F000               	nop	
  3708  001C70                     l251:
  3709  001C70  FFFF               	dw	65535	; assembler added errata NOP
  3710  001C72  AA9E               	btfss	158,5,c	;volatile
  3711  001C74  EF3E  F00E         	goto	u931
  3712  001C78  EF41  F00E         	goto	u930
  3713  001C7C                     u931:
  3714  001C7C  FFFF               	dw	65535	; assembler added errata NOP
  3715  001C7E  EF38  F00E         	goto	l251
  3716  001C82                     u930:
  3717  001C82  FFFF               	dw	65535	; assembler added errata NOP
  3718  001C84                     
  3719                           ;LIB18F_USART.c: 34:     return RCREG;
  3720  001C84  50AE               	movf	174,w,c	;volatile
  3721  001C86  0012               	return		;funcret
  3722  001C88  FFFF               	dw	65535	; errata NOP
  3723  001C8A                     __end_of_ReadByte_USART:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _ReadRegister_2bytesAD7177 *****************
  3727 ;; Defined at:
  3728 ;;		line 68 in file "LIB18F_SPI.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  command         1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  command         1   16[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3742 ;;      Params:         0       0       0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 5
  3749 ;; This function calls:
  3750 ;;		_TransferByte_SPI
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text12
  3757  001C0A                     __ptext12:
  3758                           	callstack 0
  3759  001C0A                     _ReadRegister_2bytesAD7177:
  3760                           	callstack 0
  3761  001C0A  FFFF               	dw	65535	; assembler added errata NOP
  3762                           
  3763                           ;incstack = 0
  3764                           ;ReadRegister_2bytesAD7177@command stored from wreg
  3765  001C0C  6E11               	movwf	ReadRegister_2bytesAD7177@command^0,c
  3766  001C0E                     
  3767                           ;LIB18F_SPI.c: 70:     LATCbits.LATC2 = 0;
  3768  001C0E  948B               	bcf	139,2,c	;volatile
  3769  001C10                     
  3770                           ;LIB18F_SPI.c: 71:     TransferByte_SPI(command);
  3771  001C10  5011               	movf	ReadRegister_2bytesAD7177@command^0,w,c
  3772  001C12  ECE2  F00D         	call	_TransferByte_SPI
  3773                           
  3774                           ;LIB18F_SPI.c: 72:     BufferDAT[0] = TransferByte_SPI(0x00);
  3775  001C16  0E00               	movlw	0
  3776  001C18  ECE2  F00D         	call	_TransferByte_SPI
  3777  001C1C  6E2A               	movwf	_BufferDAT^0,c
  3778                           
  3779                           ;LIB18F_SPI.c: 73:     BufferDAT[1] = TransferByte_SPI(0x00);
  3780  001C1E  0E00               	movlw	0
  3781  001C20  ECE2  F00D         	call	_TransferByte_SPI
  3782  001C24  6E2B               	movwf	(_BufferDAT+1)^0,c
  3783  001C26                     
  3784                           ;LIB18F_SPI.c: 74:     LATCbits.LATC2 = 1;
  3785  001C26  848B               	bsf	139,2,c	;volatile
  3786  001C28  0012               	return		;funcret
  3787  001C2A  FFFF               	dw	65535	; errata NOP
  3788  001C2C                     __end_of_ReadRegister_2bytesAD7177:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function _ReadRegister_1bytesAD7177 *****************
  3792 ;; Defined at:
  3793 ;;		line 58 in file "LIB18F_SPI.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  command         1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  command         1   16[COMRAM] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         0       0       0       0       0       0       0
  3808 ;;      Locals:         1       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0
  3810 ;;      Totals:         1       0       0       0       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 5
  3814 ;; This function calls:
  3815 ;;		_TransferByte_SPI
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text13
  3822  001CA4                     __ptext13:
  3823                           	callstack 0
  3824  001CA4                     _ReadRegister_1bytesAD7177:
  3825                           	callstack 0
  3826  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  3827                           
  3828                           ;incstack = 0
  3829                           ;ReadRegister_1bytesAD7177@command stored from wreg
  3830  001CA6  6E11               	movwf	ReadRegister_1bytesAD7177@command^0,c
  3831  001CA8                     
  3832                           ;LIB18F_SPI.c: 60:     LATCbits.LATC2 = 0;
  3833  001CA8  948B               	bcf	139,2,c	;volatile
  3834  001CAA                     
  3835                           ;LIB18F_SPI.c: 61:     TransferByte_SPI(command);
  3836  001CAA  5011               	movf	ReadRegister_1bytesAD7177@command^0,w,c
  3837  001CAC  ECE2  F00D         	call	_TransferByte_SPI
  3838                           
  3839                           ;LIB18F_SPI.c: 62:     BufferDAT[0] = TransferByte_SPI(0x00);
  3840  001CB0  0E00               	movlw	0
  3841  001CB2  ECE2  F00D         	call	_TransferByte_SPI
  3842  001CB6  6E2A               	movwf	_BufferDAT^0,c
  3843  001CB8                     
  3844                           ;LIB18F_SPI.c: 63:     LATCbits.LATC2 = 1;
  3845  001CB8  848B               	bsf	139,2,c	;volatile
  3846  001CBA  0012               	return		;funcret
  3847  001CBC  FFFF               	dw	65535	; errata NOP
  3848  001CBE                     __end_of_ReadRegister_1bytesAD7177:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _ReadADC32 *****************
  3852 ;; Defined at:
  3853 ;;		line 472 in file "Timig_AD7177.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  data_ini        4   32[COMRAM] unsigned long 
  3858 ;;  DataADC         4   24[COMRAM] long 
  3859 ;;  byte0           1   31[COMRAM] unsigned char 
  3860 ;;  byte1           1   30[COMRAM] unsigned char 
  3861 ;;  byte2           1   29[COMRAM] unsigned char 
  3862 ;;  byte3           1   28[COMRAM] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  4   16[COMRAM] long 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3872 ;;      Params:         4       0       0       0       0       0       0
  3873 ;;      Locals:        12       0       0       0       0       0       0
  3874 ;;      Temps:          4       0       0       0       0       0       0
  3875 ;;      Totals:        20       0       0       0       0       0       0
  3876 ;;Total ram usage:       20 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 5
  3879 ;; This function calls:
  3880 ;;		_TransferByte_SPI
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text14
  3887  0013DE                     __ptext14:
  3888                           	callstack 0
  3889  0013DE                     _ReadADC32:
  3890                           	callstack 0
  3891  0013DE  FFFF               	dw	65535	; assembler added errata NOP
  3892  0013E0                     l166:
  3893  0013E0  FFFF               	dw	65535	; assembler added errata NOP
  3894  0013E2  B882               	btfsc	130,4,c	;volatile
  3895  0013E4  EFF6  F009         	goto	u1221
  3896  0013E8  EFF9  F009         	goto	u1220
  3897  0013EC                     u1221:
  3898  0013EC  FFFF               	dw	65535	; assembler added errata NOP
  3899  0013EE  EFF0  F009         	goto	l166
  3900  0013F2                     u1220:
  3901  0013F2  FFFF               	dw	65535	; assembler added errata NOP
  3902  0013F4                     
  3903                           ;Timig_AD7177.c: 478:     TransferByte_SPI(0x44);
  3904  0013F4  0E44               	movlw	68
  3905  0013F6  ECE2  F00D         	call	_TransferByte_SPI
  3906                           
  3907                           ;Timig_AD7177.c: 479:     byte3 = TransferByte_SPI(0x00);
  3908  0013FA  0E00               	movlw	0
  3909  0013FC  ECE2  F00D         	call	_TransferByte_SPI
  3910  001400  6E1D               	movwf	ReadADC32@byte3^0,c
  3911                           
  3912                           ;Timig_AD7177.c: 480:     byte2 = TransferByte_SPI(0x00);
  3913  001402  0E00               	movlw	0
  3914  001404  ECE2  F00D         	call	_TransferByte_SPI
  3915  001408  6E1E               	movwf	ReadADC32@byte2^0,c
  3916                           
  3917                           ;Timig_AD7177.c: 481:     byte1 = TransferByte_SPI(0x00);
  3918  00140A  0E00               	movlw	0
  3919  00140C  ECE2  F00D         	call	_TransferByte_SPI
  3920  001410  6E1F               	movwf	ReadADC32@byte1^0,c
  3921                           
  3922                           ;Timig_AD7177.c: 482:     byte0 = TransferByte_SPI(0x00);
  3923  001412  0E00               	movlw	0
  3924  001414  ECE2  F00D         	call	_TransferByte_SPI
  3925  001418  6E20               	movwf	ReadADC32@byte0^0,c
  3926  00141A                     
  3927                           ;Timig_AD7177.c: 486:     data_ini = 0;
  3928  00141A  0E00               	movlw	0
  3929  00141C  6E21               	movwf	ReadADC32@data_ini^0,c
  3930  00141E  0E00               	movlw	0
  3931  001420  6E22               	movwf	(ReadADC32@data_ini+1)^0,c
  3932  001422  0E00               	movlw	0
  3933  001424  6E23               	movwf	(ReadADC32@data_ini+2)^0,c
  3934  001426  0E00               	movlw	0
  3935  001428  6E24               	movwf	(ReadADC32@data_ini+3)^0,c
  3936  00142A                     
  3937                           ;Timig_AD7177.c: 487:     data_ini = data_ini | (unsigned long)byte3<<24;
  3938  00142A  C01D  F015         	movff	ReadADC32@byte3,??_ReadADC32
  3939  00142E  6A16               	clrf	(??_ReadADC32+1)^0,c
  3940  001430  6A17               	clrf	(??_ReadADC32+2)^0,c
  3941  001432  6A18               	clrf	(??_ReadADC32+3)^0,c
  3942  001434  C015  F018         	movff	??_ReadADC32,??_ReadADC32+3
  3943  001438  6A17               	clrf	(??_ReadADC32+2)^0,c
  3944  00143A  6A16               	clrf	(??_ReadADC32+1)^0,c
  3945  00143C  6A15               	clrf	??_ReadADC32^0,c
  3946  00143E  5021               	movf	ReadADC32@data_ini^0,w,c
  3947  001440  1015               	iorwf	??_ReadADC32^0,w,c
  3948  001442  6E21               	movwf	ReadADC32@data_ini^0,c
  3949  001444  5022               	movf	(ReadADC32@data_ini+1)^0,w,c
  3950  001446  1016               	iorwf	(??_ReadADC32+1)^0,w,c
  3951  001448  6E22               	movwf	(ReadADC32@data_ini+1)^0,c
  3952  00144A  5023               	movf	(ReadADC32@data_ini+2)^0,w,c
  3953  00144C  1017               	iorwf	(??_ReadADC32+2)^0,w,c
  3954  00144E  6E23               	movwf	(ReadADC32@data_ini+2)^0,c
  3955  001450  5024               	movf	(ReadADC32@data_ini+3)^0,w,c
  3956  001452  1018               	iorwf	(??_ReadADC32+3)^0,w,c
  3957  001454  6E24               	movwf	(ReadADC32@data_ini+3)^0,c
  3958  001456                     
  3959                           ;Timig_AD7177.c: 488:     data_ini = data_ini | (unsigned long)byte2<<16;
  3960  001456  C01E  F015         	movff	ReadADC32@byte2,??_ReadADC32
  3961  00145A  6A16               	clrf	(??_ReadADC32+1)^0,c
  3962  00145C  6A17               	clrf	(??_ReadADC32+2)^0,c
  3963  00145E  6A18               	clrf	(??_ReadADC32+3)^0,c
  3964  001460  C016  F018         	movff	??_ReadADC32+1,??_ReadADC32+3
  3965  001464  C015  F017         	movff	??_ReadADC32,??_ReadADC32+2
  3966  001468  6A16               	clrf	(??_ReadADC32+1)^0,c
  3967  00146A  6A15               	clrf	??_ReadADC32^0,c
  3968  00146C  5021               	movf	ReadADC32@data_ini^0,w,c
  3969  00146E  1015               	iorwf	??_ReadADC32^0,w,c
  3970  001470  6E21               	movwf	ReadADC32@data_ini^0,c
  3971  001472  5022               	movf	(ReadADC32@data_ini+1)^0,w,c
  3972  001474  1016               	iorwf	(??_ReadADC32+1)^0,w,c
  3973  001476  6E22               	movwf	(ReadADC32@data_ini+1)^0,c
  3974  001478  5023               	movf	(ReadADC32@data_ini+2)^0,w,c
  3975  00147A  1017               	iorwf	(??_ReadADC32+2)^0,w,c
  3976  00147C  6E23               	movwf	(ReadADC32@data_ini+2)^0,c
  3977  00147E  5024               	movf	(ReadADC32@data_ini+3)^0,w,c
  3978  001480  1018               	iorwf	(??_ReadADC32+3)^0,w,c
  3979  001482  6E24               	movwf	(ReadADC32@data_ini+3)^0,c
  3980  001484                     
  3981                           ;Timig_AD7177.c: 489:     data_ini = data_ini | (unsigned long)byte1<<8;
  3982  001484  C01F  F015         	movff	ReadADC32@byte1,??_ReadADC32
  3983  001488  6A16               	clrf	(??_ReadADC32+1)^0,c
  3984  00148A  6A17               	clrf	(??_ReadADC32+2)^0,c
  3985  00148C  6A18               	clrf	(??_ReadADC32+3)^0,c
  3986  00148E  C017  F018         	movff	??_ReadADC32+2,??_ReadADC32+3
  3987  001492  C016  F017         	movff	??_ReadADC32+1,??_ReadADC32+2
  3988  001496  C015  F016         	movff	??_ReadADC32,??_ReadADC32+1
  3989  00149A  6A15               	clrf	??_ReadADC32^0,c
  3990  00149C  5021               	movf	ReadADC32@data_ini^0,w,c
  3991  00149E  1015               	iorwf	??_ReadADC32^0,w,c
  3992  0014A0  6E21               	movwf	ReadADC32@data_ini^0,c
  3993  0014A2  5022               	movf	(ReadADC32@data_ini+1)^0,w,c
  3994  0014A4  1016               	iorwf	(??_ReadADC32+1)^0,w,c
  3995  0014A6  6E22               	movwf	(ReadADC32@data_ini+1)^0,c
  3996  0014A8  5023               	movf	(ReadADC32@data_ini+2)^0,w,c
  3997  0014AA  1017               	iorwf	(??_ReadADC32+2)^0,w,c
  3998  0014AC  6E23               	movwf	(ReadADC32@data_ini+2)^0,c
  3999  0014AE  5024               	movf	(ReadADC32@data_ini+3)^0,w,c
  4000  0014B0  1018               	iorwf	(??_ReadADC32+3)^0,w,c
  4001  0014B2  6E24               	movwf	(ReadADC32@data_ini+3)^0,c
  4002  0014B4                     
  4003                           ;Timig_AD7177.c: 490:     data_ini = data_ini | (unsigned long)byte0;
  4004  0014B4  5021               	movf	ReadADC32@data_ini^0,w,c
  4005  0014B6  1020               	iorwf	ReadADC32@byte0^0,w,c
  4006  0014B8  6E21               	movwf	ReadADC32@data_ini^0,c
  4007  0014BA  5022               	movf	(ReadADC32@data_ini+1)^0,w,c
  4008  0014BC  6E22               	movwf	(ReadADC32@data_ini+1)^0,c
  4009  0014BE  5023               	movf	(ReadADC32@data_ini+2)^0,w,c
  4010  0014C0  6E23               	movwf	(ReadADC32@data_ini+2)^0,c
  4011  0014C2  5024               	movf	(ReadADC32@data_ini+3)^0,w,c
  4012  0014C4  6E24               	movwf	(ReadADC32@data_ini+3)^0,c
  4013  0014C6                     
  4014                           ;Timig_AD7177.c: 491:     data_ini = data_ini ^ 0x80000000;
  4015  0014C6  0E00               	movlw	0
  4016  0014C8  1821               	xorwf	ReadADC32@data_ini^0,w,c
  4017  0014CA  6E21               	movwf	ReadADC32@data_ini^0,c
  4018  0014CC  0E00               	movlw	0
  4019  0014CE  1822               	xorwf	(ReadADC32@data_ini+1)^0,w,c
  4020  0014D0  6E22               	movwf	(ReadADC32@data_ini+1)^0,c
  4021  0014D2  0E00               	movlw	0
  4022  0014D4  1823               	xorwf	(ReadADC32@data_ini+2)^0,w,c
  4023  0014D6  6E23               	movwf	(ReadADC32@data_ini+2)^0,c
  4024  0014D8  0E80               	movlw	128
  4025  0014DA  1824               	xorwf	(ReadADC32@data_ini+3)^0,w,c
  4026  0014DC  6E24               	movwf	(ReadADC32@data_ini+3)^0,c
  4027  0014DE                     
  4028                           ;Timig_AD7177.c: 492:     DataADC = (signed long) data_ini;
  4029  0014DE  C021  F019         	movff	ReadADC32@data_ini,ReadADC32@DataADC
  4030  0014E2  C022  F01A         	movff	ReadADC32@data_ini+1,ReadADC32@DataADC+1
  4031  0014E6  C023  F01B         	movff	ReadADC32@data_ini+2,ReadADC32@DataADC+2
  4032  0014EA  C024  F01C         	movff	ReadADC32@data_ini+3,ReadADC32@DataADC+3
  4033  0014EE                     
  4034                           ;Timig_AD7177.c: 494:     return DataADC;
  4035  0014EE  C019  F011         	movff	ReadADC32@DataADC,?_ReadADC32
  4036  0014F2  C01A  F012         	movff	ReadADC32@DataADC+1,?_ReadADC32+1
  4037  0014F6  C01B  F013         	movff	ReadADC32@DataADC+2,?_ReadADC32+2
  4038  0014FA  C01C  F014         	movff	ReadADC32@DataADC+3,?_ReadADC32+3
  4039  0014FE  0012               	return		;funcret
  4040  001500  FFFF               	dw	65535	; errata NOP
  4041  001502                     __end_of_ReadADC32:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function _TransferByte_SPI *****************
  4045 ;; Defined at:
  4046 ;;		line 35 in file "LIB18F_SPI.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  data            1    wreg     unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  data            1   15[COMRAM] unsigned char 
  4051 ;;  valor           1    0        unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      unsigned char 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4061 ;;      Params:         0       0       0       0       0       0       0
  4062 ;;      Locals:         1       0       0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0
  4064 ;;      Totals:         1       0       0       0       0       0       0
  4065 ;;Total ram usage:        1 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 4
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_main
  4072 ;;		_ReadADC32
  4073 ;;		_ResetAD7177
  4074 ;;		_ReadRegister_1bytesAD7177
  4075 ;;		_ReadRegister_2bytesAD7177
  4076 ;;		_WriteRegister_2bytesAD7177
  4077 ;;		_ReadRegister_3bytesAD7177
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text15
  4082  001BC4                     __ptext15:
  4083                           	callstack 0
  4084  001BC4                     _TransferByte_SPI:
  4085                           	callstack 0
  4086  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  4087                           
  4088                           ;incstack = 0
  4089                           ;TransferByte_SPI@data stored from wreg
  4090  001BC6  6E10               	movwf	TransferByte_SPI@data^0,c
  4091  001BC8  50C9               	movf	201,w,c	;volatile
  4092  001BCA                     
  4093                           ;LIB18F_SPI.c: 39:     SSPBUF = data;
  4094  001BCA  C010  FFC9         	movff	TransferByte_SPI@data,4041	;volatile
  4095  001BCE                     l197:
  4096  001BCE  FFFF               	dw	65535	; assembler added errata NOP
  4097  001BD0  A0C7               	btfss	199,0,c	;volatile
  4098  001BD2  EFED  F00D         	goto	u921
  4099  001BD6  EFF0  F00D         	goto	u920
  4100  001BDA                     u921:
  4101  001BDA  FFFF               	dw	65535	; assembler added errata NOP
  4102  001BDC  EFE7  F00D         	goto	l197
  4103  001BE0                     u920:
  4104  001BE0  FFFF               	dw	65535	; assembler added errata NOP
  4105  001BE2                     
  4106                           ;LIB18F_SPI.c: 41:     return SSPBUF;
  4107  001BE2  50C9               	movf	201,w,c	;volatile
  4108  001BE4  0012               	return		;funcret
  4109  001BE6  FFFF               	dw	65535	; errata NOP
  4110  001BE8                     __end_of_TransferByte_SPI:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _OpenSerialPort *****************
  4114 ;; Defined at:
  4115 ;;		line 20 in file "LIB18F_USART.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		None
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4129 ;;      Params:         0       0       0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 4
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text16
  4144  001CEE                     __ptext16:
  4145                           	callstack 0
  4146  001CEE                     _OpenSerialPort:
  4147                           	callstack 0
  4148  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  4149  001CF0                     
  4150                           ;LIB18F_USART.c: 22:     RCSTAbits.SPEN = 1;
  4151  001CF0  8EAB               	bsf	171,7,c	;volatile
  4152  001CF2  0012               	return		;funcret
  4153  001CF4  FFFF               	dw	65535	; errata NOP
  4154  001CF6                     __end_of_OpenSerialPort:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _OpenPort_SPI *****************
  4158 ;; Defined at:
  4159 ;;		line 23 in file "LIB18F_SPI.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		None
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4173 ;;      Params:         0       0       0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0
  4176 ;;      Totals:         0       0       0       0       0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 4
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text17
  4188  001CF6                     __ptext17:
  4189                           	callstack 0
  4190  001CF6                     _OpenPort_SPI:
  4191                           	callstack 0
  4192  001CF6  FFFF               	dw	65535	; assembler added errata NOP
  4193  001CF8                     
  4194                           ;LIB18F_SPI.c: 25:     SSPCON1bits.SSPEN = 1;
  4195  001CF8  8AC6               	bsf	198,5,c	;volatile
  4196  001CFA  0012               	return		;funcret
  4197  001CFC  FFFF               	dw	65535	; errata NOP
  4198  001CFE                     __end_of_OpenPort_SPI:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _ConfigSerialPort *****************
  4202 ;; Defined at:
  4203 ;;		line 9 in file "LIB18F_USART.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4217 ;;      Params:         0       0       0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; Hardware stack levels required when called: 4
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text18
  4232  001CD8                     __ptext18:
  4233                           	callstack 0
  4234  001CD8                     _ConfigSerialPort:
  4235                           	callstack 0
  4236  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  4237  001CDA                     
  4238                           ;LIB18F_USART.c: 11:     TRISCbits.TRISC6 = 0;
  4239  001CDA  9C94               	bcf	148,6,c	;volatile
  4240                           
  4241                           ;LIB18F_USART.c: 12:     TRISCbits.TRISC7 = 1;
  4242  001CDC  8E94               	bsf	148,7,c	;volatile
  4243  001CDE                     
  4244                           ;LIB18F_USART.c: 14:     TXSTA = 0b00100100;
  4245  001CDE  0E24               	movlw	36
  4246  001CE0  6EAC               	movwf	172,c	;volatile
  4247                           
  4248                           ;LIB18F_USART.c: 15:     RCSTA = 0b00010000;
  4249  001CE2  0E10               	movlw	16
  4250  001CE4  6EAB               	movwf	171,c	;volatile
  4251                           
  4252                           ;LIB18F_USART.c: 17:     SPBRG = 63;
  4253  001CE6  0E3F               	movlw	63
  4254  001CE8  6EAF               	movwf	175,c	;volatile
  4255  001CEA  0012               	return		;funcret
  4256  001CEC  FFFF               	dw	65535	; errata NOP
  4257  001CEE                     __end_of_ConfigSerialPort:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _ConfigPort_SPI *****************
  4261 ;; Defined at:
  4262 ;;		line 11 in file "LIB18F_SPI.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4276 ;;      Params:         0       0       0       0       0       0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0
  4279 ;;      Totals:         0       0       0       0       0       0       0
  4280 ;;Total ram usage:        0 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; Hardware stack levels required when called: 4
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text19
  4291  001CBE                     __ptext19:
  4292                           	callstack 0
  4293  001CBE                     _ConfigPort_SPI:
  4294                           	callstack 0
  4295  001CBE  FFFF               	dw	65535	; assembler added errata NOP
  4296  001CC0                     
  4297                           ;LIB18F_SPI.c: 13:     TRISCbits.TRISC3 = 0;
  4298  001CC0  9694               	bcf	148,3,c	;volatile
  4299                           
  4300                           ;LIB18F_SPI.c: 14:     TRISCbits.TRISC4 = 1;
  4301  001CC2  8894               	bsf	148,4,c	;volatile
  4302                           
  4303                           ;LIB18F_SPI.c: 15:     TRISCbits.TRISC5 = 0;
  4304  001CC4  9A94               	bcf	148,5,c	;volatile
  4305  001CC6                     
  4306                           ;LIB18F_SPI.c: 17:     SSPSTAT = 0b00000000;
  4307  001CC6  0E00               	movlw	0
  4308  001CC8  6EC7               	movwf	199,c	;volatile
  4309  001CCA                     
  4310                           ;LIB18F_SPI.c: 18:     SSPCON1bits.CKP = 1;
  4311  001CCA  88C6               	bsf	198,4,c	;volatile
  4312                           
  4313                           ;LIB18F_SPI.c: 19:     SSPCON1bits.SSPM = 0x01;
  4314  001CCC  50C6               	movf	198,w,c	;volatile
  4315  001CCE  0BF0               	andlw	-16
  4316  001CD0  0901               	iorlw	1
  4317  001CD2  6EC6               	movwf	198,c	;volatile
  4318  001CD4  0012               	return		;funcret
  4319  001CD6  FFFF               	dw	65535	; errata NOP
  4320  001CD8                     __end_of_ConfigPort_SPI:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _CloseSerialPort *****************
  4324 ;; Defined at:
  4325 ;;		line 25 in file "LIB18F_USART.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		None
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4339 ;;      Params:         0       0       0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 4
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text20
  4354  001CFE                     __ptext20:
  4355                           	callstack 0
  4356  001CFE                     _CloseSerialPort:
  4357                           	callstack 26
  4358  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  4359                           
  4360                           ;LIB18F_USART.c: 27:     RCSTAbits.SPEN = 0;
  4361  001D00  9EAB               	bcf	171,7,c	;volatile
  4362  001D02  0012               	return		;funcret
  4363  001D04  FFFF               	dw	65535	; errata NOP
  4364  001D06                     __end_of_CloseSerialPort:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function _ClosePort_SPI *****************
  4368 ;; Defined at:
  4369 ;;		line 29 in file "LIB18F_SPI.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		None
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4383 ;;      Params:         0       0       0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 4
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text21
  4398  001D06                     __ptext21:
  4399                           	callstack 0
  4400  001D06                     _ClosePort_SPI:
  4401                           	callstack 26
  4402  001D06  FFFF               	dw	65535	; assembler added errata NOP
  4403                           
  4404                           ;LIB18F_SPI.c: 31:     SSPCON1bits.SSPEN = 0;
  4405  001D08  9AC6               	bcf	198,5,c	;volatile
  4406  001D0A  0012               	return		;funcret
  4407  001D0C  FFFF               	dw	65535	; errata NOP
  4408  001D0E                     __end_of_ClosePort_SPI:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function _Interrups *****************
  4412 ;; Defined at:
  4413 ;;		line 103 in file "Timig_AD7177.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4427 ;;      Params:         0       0       0       0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0
  4429 ;;      Temps:         10       0       0       0       0       0       0
  4430 ;;      Totals:        10       0       0       0       0       0       0
  4431 ;;Total ram usage:       10 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 3
  4434 ;; This function calls:
  4435 ;;		_GPS_TIMEDATE
  4436 ;;		i2_TransmitDAT_USART
  4437 ;;		i2_print_string
  4438 ;; This function is called by:
  4439 ;;		Interrupt level 2
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	intcode
  4444  000008                     __pintcode:
  4445                           	callstack 0
  4446  000008                     _Interrups:
  4447                           	callstack 0
  4448  000008  FFFF               	dw	65535	; assembler added errata NOP
  4449                           
  4450                           ;incstack = 0
  4451  00000A  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4452  00000C  CFE9 F008          	movff	fsr0l,??_Interrups+2
  4453  000010  CFEA F009          	movff	fsr0h,??_Interrups+3
  4454  000014  CFD9 F00A          	movff	fsr2l,??_Interrups+4
  4455  000018  CFDA F00B          	movff	fsr2h,??_Interrups+5
  4456  00001C  CFF6 F00C          	movff	tblptrl,??_Interrups+6
  4457  000020  CFF7 F00D          	movff	tblptrh,??_Interrups+7
  4458  000024  CFF8 F00E          	movff	tblptru,??_Interrups+8
  4459  000028  CFF5 F00F          	movff	tablat,??_Interrups+9
  4460  00002C                     
  4461                           ;Timig_AD7177.c: 105:     if((PIE1bits.TMR1IE == 1) && (PIR1bits.TMR1IF == 1)){
  4462  00002C  A09D               	btfss	157,0,c	;volatile
  4463  00002E  EF1B  F000         	goto	i2u135_41
  4464  000032  EF1E  F000         	goto	i2u135_40
  4465  000036                     i2u135_41:
  4466  000036  FFFF               	dw	65535	; assembler added errata NOP
  4467  000038  EF2D  F000         	goto	i2l107
  4468  00003C                     i2u135_40:
  4469  00003C  FFFF               	dw	65535	; assembler added errata NOP
  4470  00003E  A09E               	btfss	158,0,c	;volatile
  4471  000040  EF24  F000         	goto	i2u136_41
  4472  000044  EF27  F000         	goto	i2u136_40
  4473  000048                     i2u136_41:
  4474  000048  FFFF               	dw	65535	; assembler added errata NOP
  4475  00004A  EF2D  F000         	goto	i2l107
  4476  00004E                     i2u136_40:
  4477  00004E  FFFF               	dw	65535	; assembler added errata NOP
  4478  000050                     
  4479                           ;Timig_AD7177.c: 106:         PIR1bits.TMR1IF = 0;
  4480  000050  909E               	bcf	158,0,c	;volatile
  4481  000052                     
  4482                           ;Timig_AD7177.c: 107:         conta1++;
  4483  000052  0100               	movlb	0	; () banked
  4484  000054  2BA6               	incf	_conta1& (0+255),f,b
  4485                           
  4486                           ;Timig_AD7177.c: 108:     }
  4487  000056  EF64  F000         	goto	i2l110
  4488  00005A                     i2l107:
  4489  00005A  FFFF               	dw	65535	; assembler added errata NOP
  4490  00005C  A8F2               	btfss	242,4,c	;volatile
  4491  00005E  EF33  F000         	goto	i2u137_41
  4492  000062  EF36  F000         	goto	i2u137_40
  4493  000066                     i2u137_41:
  4494  000066  FFFF               	dw	65535	; assembler added errata NOP
  4495  000068  EF64  F000         	goto	i2l110
  4496  00006C                     i2u137_40:
  4497  00006C  FFFF               	dw	65535	; assembler added errata NOP
  4498  00006E  A2F2               	btfss	242,1,c	;volatile
  4499  000070  EF3C  F000         	goto	i2u138_41
  4500  000074  EF3F  F000         	goto	i2u138_40
  4501  000078                     i2u138_41:
  4502  000078  FFFF               	dw	65535	; assembler added errata NOP
  4503  00007A  EF64  F000         	goto	i2l110
  4504  00007E                     i2u138_40:
  4505  00007E  FFFF               	dw	65535	; assembler added errata NOP
  4506  000080                     
  4507                           ;Timig_AD7177.c: 110:         INTCONbits.INT0IF = 0;
  4508  000080  92F2               	bcf	242,1,c	;volatile
  4509  000082                     
  4510                           ;Timig_AD7177.c: 113:         TMR0H = 0;
  4511  000082  0E00               	movlw	0
  4512  000084  6ED7               	movwf	215,c	;volatile
  4513                           
  4514                           ;Timig_AD7177.c: 114:         TMR0L = 0;
  4515  000086  0E00               	movlw	0
  4516  000088  6ED6               	movwf	214,c	;volatile
  4517                           
  4518                           ;Timig_AD7177.c: 115:         T0CON = 0b10000011;
  4519  00008A  0E83               	movlw	131
  4520  00008C  6ED5               	movwf	213,c	;volatile
  4521  00008E                     
  4522                           ;Timig_AD7177.c: 117:         GPS_TIMEDATE();
  4523  00008E  EC89  F00B         	call	_GPS_TIMEDATE	;wreg free
  4524  000092                     
  4525                           ;Timig_AD7177.c: 119:         T0CONbits.TMR0ON = 0;
  4526  000092  9ED5               	bcf	213,7,c	;volatile
  4527  000094                     
  4528                           ;Timig_AD7177.c: 120:         BufferDAT[0] = TMR0L;
  4529  000094  CFD6 F02A          	movff	4054,_BufferDAT	;volatile
  4530  000098                     
  4531                           ;Timig_AD7177.c: 121:         BufferDAT[1] = TMR0H;
  4532  000098  CFD7 F02B          	movff	4055,_BufferDAT+1	;volatile
  4533  00009C                     
  4534                           ;Timig_AD7177.c: 122:         TransmitDAT_USART('8');
  4535  00009C  0E38               	movlw	56
  4536  00009E  EC66  F00D         	call	i2_TransmitDAT_USART
  4537  0000A2                     
  4538                           ;Timig_AD7177.c: 123:         _delay((unsigned long)((500)*(39321600UL/4000.0)));
  4539  0000A2  0E13               	movlw	19
  4540  0000A4  6E07               	movwf	(??_Interrups+1)^0,c
  4541  0000A6  0EB7               	movlw	183
  4542  0000A8  6E06               	movwf	??_Interrups^0,c
  4543  0000AA  0E9A               	movlw	154
  4544  0000AC                     i2u201_47:
  4545  0000AC  FFFF               	dw	65535	; errata NOP
  4546  0000AE  2EE8               	decfsz	wreg,f,c
  4547  0000B0  D7FD               	bra	i2u201_47
  4548  0000B2  2E06               	decfsz	??_Interrups^0,f,c
  4549  0000B4  D7FB               	bra	i2u201_47
  4550  0000B6  2E07               	decfsz	(??_Interrups+1)^0,f,c
  4551  0000B8  D7F9               	bra	i2u201_47
  4552  0000BA                     
  4553                           ;Timig_AD7177.c: 124:         print_string(DateTimeGPS);
  4554  0000BA  0E37               	movlw	low _DateTimeGPS
  4555  0000BC  6E02               	movwf	i2print_string@str^0,c
  4556  0000BE  0E00               	movlw	high _DateTimeGPS
  4557  0000C0  6E03               	movwf	(i2print_string@str+1)^0,c
  4558  0000C2  EC05  F00D         	call	i2_print_string	;wreg free
  4559  0000C6                     
  4560                           ;Timig_AD7177.c: 125:         INTCONbits.INT0IE = 0;
  4561  0000C6  98F2               	bcf	242,4,c	;volatile
  4562  0000C8                     i2l110:
  4563  0000C8  FFFF               	dw	65535	; assembler added errata NOP
  4564  0000CA  C00F  FFF5         	movff	??_Interrups+9,tablat
  4565  0000CE  C00E  FFF8         	movff	??_Interrups+8,tblptru
  4566  0000D2  C00D  FFF7         	movff	??_Interrups+7,tblptrh
  4567  0000D6  C00C  FFF6         	movff	??_Interrups+6,tblptrl
  4568  0000DA  C00B  FFDA         	movff	??_Interrups+5,fsr2h
  4569  0000DE  C00A  FFD9         	movff	??_Interrups+4,fsr2l
  4570  0000E2  C009  FFEA         	movff	??_Interrups+3,fsr0h
  4571  0000E6  C008  FFE9         	movff	??_Interrups+2,fsr0l
  4572  0000EA  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4573  0000EC  0011               	retfie		f
  4574  0000EE  FFFF               	dw	65535	; errata NOP
  4575  0000F0                     __end_of_Interrups:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function i2_TransmitDAT_USART *****************
  4579 ;; Defined at:
  4580 ;;		line 125 in file "LIB18F_USART.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  DAT_ID          1    wreg     unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  DAT_ID          1    3[COMRAM] unsigned char 
  4585 ;;  conta           1    4[COMRAM] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4595 ;;      Params:         0       0       0       0       0       0       0
  4596 ;;      Locals:         2       0       0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0
  4598 ;;      Totals:         2       0       0       0       0       0       0
  4599 ;;Total ram usage:        2 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 2
  4602 ;; This function calls:
  4603 ;;		i2_WriteByte_USART
  4604 ;;		i2_print_string
  4605 ;; This function is called by:
  4606 ;;		_Interrups
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text23
  4611  001ACC                     __ptext23:
  4612                           	callstack 0
  4613  001ACC                     i2_TransmitDAT_USART:
  4614                           	callstack 0
  4615  001ACC  FFFF               	dw	65535	; assembler added errata NOP
  4616                           
  4617                           ;incstack = 0
  4618                           ;i2TransmitDAT_USART@DAT_ID stored from wreg
  4619  001ACE  6E04               	movwf	i2TransmitDAT_USART@DAT_ID^0,c
  4620  001AD0                     
  4621                           ;LIB18F_USART.c: 126:     unsigned char conta;;LIB18F_USART.c: 128:     print_string("NN
      +                          NNJRODAT");
  4622  001AD0  0E0C               	movlw	low STR_5
  4623  001AD2  6E02               	movwf	i2print_string@str^0,c
  4624  001AD4  0E06               	movlw	high STR_5
  4625  001AD6  6E03               	movwf	(i2print_string@str+1)^0,c
  4626  001AD8  EC05  F00D         	call	i2_print_string	;wreg free
  4627  001ADC                     
  4628                           ;LIB18F_USART.c: 129:     WriteByte_USART(DAT_ID);
  4629  001ADC  5004               	movf	i2TransmitDAT_USART@DAT_ID^0,w,c
  4630  001ADE  EC16  F00E         	call	i2_WriteByte_USART
  4631  001AE2                     
  4632                           ;LIB18F_USART.c: 130:     for(conta=0; conta<12; conta++){
  4633  001AE2  0E00               	movlw	0
  4634  001AE4  6E05               	movwf	i2TransmitDAT_USART@conta^0,c
  4635  001AE6                     i2l2594:
  4636  001AE6  FFFF               	dw	65535	; assembler added errata NOP
  4637                           
  4638                           ;LIB18F_USART.c: 131:         WriteByte_USART(BufferDAT[conta]);
  4639  001AE8  0E2A               	movlw	low _BufferDAT
  4640  001AEA  2405               	addwf	i2TransmitDAT_USART@conta^0,w,c
  4641  001AEC  6ED9               	movwf	fsr2l,c
  4642  001AEE  6ADA               	clrf	fsr2h,c
  4643  001AF0  0E00               	movlw	high _BufferDAT
  4644  001AF2  22DA               	addwfc	fsr2h,f,c
  4645  001AF4  50DF               	movf	indf2,w,c
  4646  001AF6  EC16  F00E         	call	i2_WriteByte_USART
  4647  001AFA                     
  4648                           ;LIB18F_USART.c: 132:     }
  4649  001AFA  2A05               	incf	i2TransmitDAT_USART@conta^0,f,c
  4650  001AFC  0E0B               	movlw	11
  4651  001AFE  6405               	cpfsgt	i2TransmitDAT_USART@conta^0,c
  4652  001B00  EF84  F00D         	goto	i2u134_41
  4653  001B04  EF87  F00D         	goto	i2u134_40
  4654  001B08                     i2u134_41:
  4655  001B08  FFFF               	dw	65535	; assembler added errata NOP
  4656  001B0A  EF73  F00D         	goto	i2l2594
  4657  001B0E                     i2u134_40:
  4658  001B0E  FFFF               	dw	65535	; assembler added errata NOP
  4659  001B10                     
  4660                           ;LIB18F_USART.c: 133:     print_string("\n\r");
  4661  001B10  0E22               	movlw	low (STR_2+1)
  4662  001B12  6E02               	movwf	i2print_string@str^0,c
  4663  001B14  0E06               	movlw	high (STR_2+1)
  4664  001B16  6E03               	movwf	(i2print_string@str+1)^0,c
  4665  001B18  EC05  F00D         	call	i2_print_string	;wreg free
  4666  001B1C  0012               	return		;funcret
  4667  001B1E  FFFF               	dw	65535	; errata NOP
  4668  001B20                     __end_ofi2_TransmitDAT_USART:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function i2_print_string *****************
  4672 ;; Defined at:
  4673 ;;		line 45 in file "LIB18F_USART.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  str             2    1[COMRAM] PTR unsigned char 
  4676 ;;		 -> STR_6(3), STR_5(11), STR_4(3), STR_3(11), 
  4677 ;;		 -> STR_2(4), STR_1(10), DateTimeGPS(13), 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4689 ;;      Params:         2       0       0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0
  4692 ;;      Totals:         2       0       0       0       0       0       0
  4693 ;;Total ram usage:        2 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 1
  4696 ;; This function calls:
  4697 ;;		i2_WriteByte_USART
  4698 ;; This function is called by:
  4699 ;;		_Interrups
  4700 ;;		i2_TransmitDAT_USART
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text24
  4705  001A0A                     __ptext24:
  4706                           	callstack 0
  4707  001A0A                     i2_print_string:
  4708                           	callstack 0
  4709  001A0A  FFFF               	dw	65535	; assembler added errata NOP
  4710  001A0C                     
  4711                           ;LIB18F_USART.c: 46:     while(*str != '\0'){
  4712  001A0C  EF1E  F00D         	goto	i2l2238
  4713  001A10                     i2l2234:
  4714  001A10  FFFF               	dw	65535	; assembler added errata NOP
  4715                           
  4716                           ;LIB18F_USART.c: 47:         WriteByte_USART(*str);
  4717  001A12  C002  FFF6         	movff	i2print_string@str,tblptrl
  4718  001A16  C003  FFF7         	movff	i2print_string@str+1,tblptrh
  4719  001A1A  6AF8               	clrf	tblptru,c
  4720  001A1C  0E05               	movlw	(high __ramtop+-1)
  4721  001A1E  64F7               	cpfsgt	tblptrh,c
  4722  001A20  D004               	bra	i2u98_47
  4723  001A22  0008               	tblrd		*
  4724  001A24  FFFF               	dw	65535	; errata NOP
  4725  001A26  50F5               	movf	tablat,w,c
  4726  001A28  D005               	bra	i2u98_40
  4727  001A2A                     i2u98_47:
  4728  001A2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4729  001A2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4730  001A32  50EF               	movf	indf0,w,c
  4731  001A34                     i2u98_40:
  4732  001A34  EC16  F00E         	call	i2_WriteByte_USART
  4733  001A38                     
  4734                           ;LIB18F_USART.c: 48:         str++;
  4735  001A38  4A02               	infsnz	i2print_string@str^0,f,c
  4736  001A3A  2A03               	incf	(i2print_string@str+1)^0,f,c
  4737  001A3C                     i2l2238:
  4738  001A3C  FFFF               	dw	65535	; assembler added errata NOP
  4739                           
  4740                           ;LIB18F_USART.c: 46:     while(*str != '\0'){
  4741  001A3E  C002  FFF6         	movff	i2print_string@str,tblptrl
  4742  001A42  C003  FFF7         	movff	i2print_string@str+1,tblptrh
  4743  001A46  6AF8               	clrf	tblptru,c
  4744  001A48  0E05               	movlw	(high __ramtop+-1)
  4745  001A4A  64F7               	cpfsgt	tblptrh,c
  4746  001A4C  D004               	bra	i2u99_47
  4747  001A4E  0008               	tblrd		*
  4748  001A50  FFFF               	dw	65535	; errata NOP
  4749  001A52  50F5               	movf	tablat,w,c
  4750  001A54  D005               	bra	i2u99_40
  4751  001A56                     i2u99_47:
  4752  001A56  CFF6 FFE9          	movff	tblptrl,fsr0l
  4753  001A5A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4754  001A5E  50EF               	movf	indf0,w,c
  4755  001A60                     i2u99_40:
  4756  001A60  0900               	iorlw	0
  4757  001A62  A4D8               	btfss	status,2,c
  4758  001A64  EF36  F00D         	goto	i2u100_41
  4759  001A68  EF39  F00D         	goto	i2u100_40
  4760  001A6C                     i2u100_41:
  4761  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  4762  001A6E  EF08  F00D         	goto	i2l2234
  4763  001A72                     i2u100_40:
  4764  001A72  FFFF               	dw	65535	; assembler added errata NOP
  4765  001A74  0012               	return		;funcret
  4766  001A76  FFFF               	dw	65535	; errata NOP
  4767  001A78                     __end_ofi2_print_string:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function i2_WriteByte_USART *****************
  4771 ;; Defined at:
  4772 ;;		line 37 in file "LIB18F_USART.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  byte            1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  byte            1    0[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4786 ;;      Params:         0       0       0       0       0       0       0
  4787 ;;      Locals:         1       0       0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0
  4789 ;;      Totals:         1       0       0       0       0       0       0
  4790 ;;Total ram usage:        1 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		i2_print_string
  4796 ;;		i2_TransmitDAT_USART
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text25
  4801  001C2C                     __ptext25:
  4802                           	callstack 0
  4803  001C2C                     i2_WriteByte_USART:
  4804                           	callstack 0
  4805  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  4806                           
  4807                           ;incstack = 0
  4808                           ;i2WriteByte_USART@byte stored from wreg
  4809  001C2E  6E01               	movwf	i2WriteByte_USART@byte^0,c
  4810  001C30                     
  4811                           ;LIB18F_USART.c: 39:     TXREG = byte;
  4812  001C30  C001  FFAD         	movff	i2WriteByte_USART@byte,4013	;volatile
  4813  001C34                     
  4814                           ;LIB18F_USART.c: 40:     __nop();
  4815  001C34  F000               	nop	
  4816  001C36                     i2l257:
  4817  001C36  FFFF               	dw	65535	; assembler added errata NOP
  4818  001C38  A2AC               	btfss	172,1,c	;volatile
  4819  001C3A  EF21  F00E         	goto	i2u88_41
  4820  001C3E  EF24  F00E         	goto	i2u88_40
  4821  001C42                     i2u88_41:
  4822  001C42  FFFF               	dw	65535	; assembler added errata NOP
  4823  001C44  EF1B  F00E         	goto	i2l257
  4824  001C48                     i2u88_40:
  4825  001C48  FFFF               	dw	65535	; assembler added errata NOP
  4826  001C4A  0012               	return		;funcret
  4827  001C4C  FFFF               	dw	65535	; errata NOP
  4828  001C4E                     __end_ofi2_WriteByte_USART:
  4829                           	callstack 0
  4830                           
  4831 ;; *************** function _GPS_TIMEDATE *****************
  4832 ;; Defined at:
  4833 ;;		line 175 in file "LIBGPS_38400.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  conta           1    2[COMRAM] unsigned char 
  4838 ;;  LimitConta      1    1[COMRAM] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4848 ;;      Params:         0       0       0       0       0       0       0
  4849 ;;      Locals:         2       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0
  4851 ;;      Totals:         2       0       0       0       0       0       0
  4852 ;;Total ram usage:        2 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 1
  4855 ;; This function calls:
  4856 ;;		_ReadByteSW_USART
  4857 ;; This function is called by:
  4858 ;;		_Interrups
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text26
  4863  001712                     __ptext26:
  4864                           	callstack 0
  4865  001712                     _GPS_TIMEDATE:
  4866                           	callstack 0
  4867  001712  FFFF               	dw	65535	; assembler added errata NOP
  4868  001714                     
  4869                           ;LIBGPS_38400.c: 180:     unsigned char LimitConta = 0;
  4870  001714  0E00               	movlw	0
  4871  001716  6E02               	movwf	GPS_TIMEDATE@LimitConta^0,c
  4872                           
  4873                           ;LIBGPS_38400.c: 184:     while(LimitConta < 140){
  4874  001718  EFF5  F00B         	goto	i2l2298
  4875  00171C                     i2l2242:
  4876  00171C  FFFF               	dw	65535	; assembler added errata NOP
  4877                           
  4878                           ;LIBGPS_38400.c: 185:         ReadByteSW_USART();
  4879  00171E  EC6E  F00C         	call	_ReadByteSW_USART	;wreg free
  4880  001722                     
  4881                           ;LIBGPS_38400.c: 186:         LimitConta++;
  4882  001722  2A02               	incf	GPS_TIMEDATE@LimitConta^0,f,c
  4883  001724                     
  4884                           ;LIBGPS_38400.c: 187:         if(RxBuffer == 'C'){
  4885  001724  0E43               	movlw	67
  4886  001726  1849               	xorwf	_RxBuffer^0,w,c
  4887  001728  A4D8               	btfss	status,2,c
  4888  00172A  EF99  F00B         	goto	i2u101_41
  4889  00172E  EF9C  F00B         	goto	i2u101_40
  4890  001732                     i2u101_41:
  4891  001732  FFFF               	dw	65535	; assembler added errata NOP
  4892  001734  EFF5  F00B         	goto	i2l2298
  4893  001738                     i2u101_40:
  4894  001738  FFFF               	dw	65535	; assembler added errata NOP
  4895  00173A                     
  4896                           ;LIBGPS_38400.c: 189:             ReadByteSW_USART();
  4897  00173A  EC6E  F00C         	call	_ReadByteSW_USART	;wreg free
  4898  00173E                     
  4899                           ;LIBGPS_38400.c: 190:             LimitConta++;
  4900  00173E  2A02               	incf	GPS_TIMEDATE@LimitConta^0,f,c
  4901  001740                     
  4902                           ;LIBGPS_38400.c: 192:             for(conta=0; conta<6; conta++){
  4903  001740  0E00               	movlw	0
  4904  001742  6E03               	movwf	GPS_TIMEDATE@conta^0,c
  4905  001744                     i2l2258:
  4906  001744  FFFF               	dw	65535	; assembler added errata NOP
  4907                           
  4908                           ;LIBGPS_38400.c: 193:                 ReadByteSW_USART();
  4909  001746  EC6E  F00C         	call	_ReadByteSW_USART	;wreg free
  4910  00174A                     
  4911                           ;LIBGPS_38400.c: 194:                 LimitConta++;
  4912  00174A  2A02               	incf	GPS_TIMEDATE@LimitConta^0,f,c
  4913  00174C                     
  4914                           ;LIBGPS_38400.c: 195:                 DateTimeGPS[conta] = RxBuffer;
  4915  00174C  0E37               	movlw	low _DateTimeGPS
  4916  00174E  2403               	addwf	GPS_TIMEDATE@conta^0,w,c
  4917  001750  6ED9               	movwf	fsr2l,c
  4918  001752  6ADA               	clrf	fsr2h,c
  4919  001754  0E00               	movlw	high _DateTimeGPS
  4920  001756  22DA               	addwfc	fsr2h,f,c
  4921  001758  C049  FFDF         	movff	_RxBuffer,indf2
  4922  00175C                     
  4923                           ;LIBGPS_38400.c: 196:             }
  4924  00175C  2A03               	incf	GPS_TIMEDATE@conta^0,f,c
  4925  00175E  0E05               	movlw	5
  4926  001760  6403               	cpfsgt	GPS_TIMEDATE@conta^0,c
  4927  001762  EFB5  F00B         	goto	i2u102_41
  4928  001766  EFB8  F00B         	goto	i2u102_40
  4929  00176A                     i2u102_41:
  4930  00176A  FFFF               	dw	65535	; assembler added errata NOP
  4931  00176C  EFA2  F00B         	goto	i2l2258
  4932  001770                     i2u102_40:
  4933  001770  FFFF               	dw	65535	; assembler added errata NOP
  4934  001772                     
  4935                           ;LIBGPS_38400.c: 198:             conta = 0;
  4936  001772  0E00               	movlw	0
  4937  001774  6E03               	movwf	GPS_TIMEDATE@conta^0,c
  4938                           
  4939                           ;LIBGPS_38400.c: 199:             while(conta<8){
  4940  001776  EFCD  F00B         	goto	i2l2278
  4941  00177A                     i2l2270:
  4942  00177A  FFFF               	dw	65535	; assembler added errata NOP
  4943                           
  4944                           ;LIBGPS_38400.c: 200:                 ReadByteSW_USART();
  4945  00177C  EC6E  F00C         	call	_ReadByteSW_USART	;wreg free
  4946  001780                     
  4947                           ;LIBGPS_38400.c: 201:                 LimitConta++;
  4948  001780  2A02               	incf	GPS_TIMEDATE@LimitConta^0,f,c
  4949  001782                     
  4950                           ;LIBGPS_38400.c: 202:                 if(RxBuffer == ','){
  4951  001782  0E2C               	movlw	44
  4952  001784  1849               	xorwf	_RxBuffer^0,w,c
  4953  001786  A4D8               	btfss	status,2,c
  4954  001788  EFC8  F00B         	goto	i2u103_41
  4955  00178C  EFCB  F00B         	goto	i2u103_40
  4956  001790                     i2u103_41:
  4957  001790  FFFF               	dw	65535	; assembler added errata NOP
  4958  001792  EFCD  F00B         	goto	i2l2278
  4959  001796                     i2u103_40:
  4960  001796  FFFF               	dw	65535	; assembler added errata NOP
  4961  001798                     
  4962                           ;LIBGPS_38400.c: 203:                     conta++;
  4963  001798  2A03               	incf	GPS_TIMEDATE@conta^0,f,c
  4964  00179A                     i2l2278:
  4965  00179A  FFFF               	dw	65535	; assembler added errata NOP
  4966                           
  4967                           ;LIBGPS_38400.c: 199:             while(conta<8){
  4968  00179C  0E07               	movlw	7
  4969  00179E  6403               	cpfsgt	GPS_TIMEDATE@conta^0,c
  4970  0017A0  EFD4  F00B         	goto	i2u104_41
  4971  0017A4  EFD7  F00B         	goto	i2u104_40
  4972  0017A8                     i2u104_41:
  4973  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  4974  0017AA  EFBD  F00B         	goto	i2l2270
  4975  0017AE                     i2u104_40:
  4976  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  4977  0017B0                     
  4978                           ;LIBGPS_38400.c: 207:             for(conta=0; conta<6; conta++){
  4979  0017B0  0E00               	movlw	0
  4980  0017B2  6E03               	movwf	GPS_TIMEDATE@conta^0,c
  4981  0017B4                     i2l2286:
  4982  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  4983                           
  4984                           ;LIBGPS_38400.c: 208:                 ReadByteSW_USART();
  4985  0017B6  EC6E  F00C         	call	_ReadByteSW_USART	;wreg free
  4986  0017BA                     
  4987                           ;LIBGPS_38400.c: 209:                 LimitConta++;
  4988  0017BA  2A02               	incf	GPS_TIMEDATE@LimitConta^0,f,c
  4989  0017BC                     
  4990                           ;LIBGPS_38400.c: 210:                 DateTimeGPS[conta + 6] = RxBuffer;
  4991  0017BC  0E3D               	movlw	low (_DateTimeGPS+6)
  4992  0017BE  2403               	addwf	GPS_TIMEDATE@conta^0,w,c
  4993  0017C0  6ED9               	movwf	fsr2l,c
  4994  0017C2  6ADA               	clrf	fsr2h,c
  4995  0017C4  0E00               	movlw	high (_DateTimeGPS+6)
  4996  0017C6  22DA               	addwfc	fsr2h,f,c
  4997  0017C8  C049  FFDF         	movff	_RxBuffer,indf2
  4998  0017CC                     
  4999                           ;LIBGPS_38400.c: 211:             }
  5000  0017CC  2A03               	incf	GPS_TIMEDATE@conta^0,f,c
  5001  0017CE  0E05               	movlw	5
  5002  0017D0  6403               	cpfsgt	GPS_TIMEDATE@conta^0,c
  5003  0017D2  EFED  F00B         	goto	i2u105_41
  5004  0017D6  EFF0  F00B         	goto	i2u105_40
  5005  0017DA                     i2u105_41:
  5006  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  5007  0017DC  EFDA  F00B         	goto	i2l2286
  5008  0017E0                     i2u105_40:
  5009  0017E0  FFFF               	dw	65535	; assembler added errata NOP
  5010  0017E2                     
  5011                           ;LIBGPS_38400.c: 212:             DateTimeGPS[12] = '\0';
  5012  0017E2  0E00               	movlw	0
  5013  0017E4  6E43               	movwf	(_DateTimeGPS+12)^0,c
  5014                           
  5015                           ;LIBGPS_38400.c: 214:             break;
  5016  0017E6  EFFF  F00B         	goto	i2l380
  5017  0017EA                     i2l2298:
  5018  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  5019                           
  5020                           ;LIBGPS_38400.c: 184:     while(LimitConta < 140){
  5021  0017EC  0E8B               	movlw	139
  5022  0017EE  6402               	cpfsgt	GPS_TIMEDATE@LimitConta^0,c
  5023  0017F0  EFFC  F00B         	goto	i2u106_41
  5024  0017F4  EFFF  F00B         	goto	i2u106_40
  5025  0017F8                     i2u106_41:
  5026  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  5027  0017FA  EF8E  F00B         	goto	i2l2242
  5028  0017FE                     i2u106_40:
  5029  0017FE                     i2l380:
  5030  0017FE  FFFF               	dw	65535	; assembler added errata NOP
  5031  001800  0012               	return		;funcret
  5032  001802  FFFF               	dw	65535	; errata NOP
  5033  001804                     __end_of_GPS_TIMEDATE:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _ReadByteSW_USART *****************
  5037 ;; Defined at:
  5038 ;;		line 9 in file "LIBGPS_38400.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  conta           1    0[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5052 ;;      Params:         0       0       0       0       0       0       0
  5053 ;;      Locals:         1       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0
  5055 ;;      Totals:         1       0       0       0       0       0       0
  5056 ;;Total ram usage:        1 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_GPS_TIMEDATE
  5062 ;;		_GPS_STATUS
  5063 ;;		_GPS_LATITUDE
  5064 ;;		_GPS_LONGITUDE
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text27
  5069  0018DC                     __ptext27:
  5070                           	callstack 0
  5071  0018DC                     _ReadByteSW_USART:
  5072                           	callstack 0
  5073  0018DC  FFFF               	dw	65535	; assembler added errata NOP
  5074  0018DE                     
  5075                           ;LIBGPS_38400.c: 10:     unsigned char conta;;LIBGPS_38400.c: 12:     RxBuffer = 0;
  5076  0018DE  0E00               	movlw	0
  5077  0018E0  6E49               	movwf	_RxBuffer^0,c
  5078  0018E2                     i2l318:
  5079  0018E2  FFFF               	dw	65535	; assembler added errata NOP
  5080  0018E4  B081               	btfsc	129,0,c	;volatile
  5081  0018E6  EF77  F00C         	goto	i2u94_41
  5082  0018EA  EF7A  F00C         	goto	i2u94_40
  5083  0018EE                     i2u94_41:
  5084  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  5085  0018F0  EF71  F00C         	goto	i2l318
  5086  0018F4                     i2u94_40:
  5087  0018F4  FFFF               	dw	65535	; assembler added errata NOP
  5088  0018F6                     
  5089                           ;LIBGPS_38400.c: 14:     _delay((unsigned long)((12)*(39321600UL/4000000.0)));
  5090  0018F6  0E1D               	movlw	29
  5091  0018F8                     i2u202_47:
  5092  0018F8  FFFF               	dw	65535	; errata NOP
  5093  0018FA  2EE8               	decfsz	wreg,f,c
  5094  0018FC  D7FD               	bra	i2u202_47
  5095  0018FE  F000               	nop	
  5096  001900                     
  5097                           ;LIBGPS_38400.c: 15:     __nop();
  5098  001900  F000               	nop	
  5099  001902                     
  5100                           ;LIBGPS_38400.c: 16:     __nop();
  5101  001902  F000               	nop	
  5102  001904                     
  5103                           ;LIBGPS_38400.c: 17:     __nop();
  5104  001904  F000               	nop	
  5105  001906                     
  5106                           ;LIBGPS_38400.c: 18:     __nop();
  5107  001906  F000               	nop	
  5108  001908                     
  5109                           ;LIBGPS_38400.c: 19:     __nop();
  5110  001908  F000               	nop	
  5111  00190A                     
  5112                           ;LIBGPS_38400.c: 20:     __nop();
  5113  00190A  F000               	nop	
  5114  00190C                     
  5115                           ;LIBGPS_38400.c: 21:     for(conta=0; conta<7; conta++){
  5116  00190C  0E00               	movlw	0
  5117  00190E  6E01               	movwf	ReadByteSW_USART@conta^0,c
  5118  001910                     i2l2192:
  5119  001910  FFFF               	dw	65535	; assembler added errata NOP
  5120                           
  5121                           ;LIBGPS_38400.c: 22:         _delay((unsigned long)((24)*(39321600UL/4000000.0)));
  5122  001912  0E3A               	movlw	58
  5123  001914                     i2u203_47:
  5124  001914  FFFF               	dw	65535	; errata NOP
  5125  001916  2EE8               	decfsz	wreg,f,c
  5126  001918  D7FD               	bra	i2u203_47
  5127  00191A  D000               	nop2	
  5128  00191C  F000               	nop	
  5129  00191E                     
  5130                           ;LIBGPS_38400.c: 23:         __nop();
  5131  00191E  F000               	nop	
  5132  001920                     
  5133                           ;LIBGPS_38400.c: 24:         __nop();
  5134  001920  F000               	nop	
  5135  001922                     
  5136                           ;LIBGPS_38400.c: 25:         __nop();
  5137  001922  F000               	nop	
  5138  001924                     
  5139                           ;LIBGPS_38400.c: 26:         __nop();
  5140  001924  F000               	nop	
  5141  001926                     
  5142                           ;LIBGPS_38400.c: 27:         __nop();
  5143  001926  F000               	nop	
  5144  001928                     
  5145                           ;LIBGPS_38400.c: 28:         if(PORTBbits.RB0 == 1){
  5146  001928  A081               	btfss	129,0,c	;volatile
  5147  00192A  EF99  F00C         	goto	i2u95_41
  5148  00192E  EF9C  F00C         	goto	i2u95_40
  5149  001932                     i2u95_41:
  5150  001932  FFFF               	dw	65535	; assembler added errata NOP
  5151  001934  EFA0  F00C         	goto	i2l323
  5152  001938                     i2u95_40:
  5153  001938  FFFF               	dw	65535	; assembler added errata NOP
  5154  00193A                     
  5155                           ;LIBGPS_38400.c: 29:             RxBuffer = RxBuffer | 0x80;
  5156  00193A  5049               	movf	_RxBuffer^0,w,c
  5157  00193C  0980               	iorlw	128
  5158  00193E  6E49               	movwf	_RxBuffer^0,c
  5159  001940                     i2l323:
  5160  001940  FFFF               	dw	65535	; assembler added errata NOP
  5161                           
  5162                           ;LIBGPS_38400.c: 31:         RxBuffer >>= 1;
  5163  001942  90D8               	bcf	status,0,c
  5164  001944  3249               	rrcf	_RxBuffer^0,f,c
  5165  001946                     
  5166                           ;LIBGPS_38400.c: 32:     }
  5167  001946  2A01               	incf	ReadByteSW_USART@conta^0,f,c
  5168  001948  0E06               	movlw	6
  5169  00194A  6401               	cpfsgt	ReadByteSW_USART@conta^0,c
  5170  00194C  EFAA  F00C         	goto	i2u96_41
  5171  001950  EFAD  F00C         	goto	i2u96_40
  5172  001954                     i2u96_41:
  5173  001954  FFFF               	dw	65535	; assembler added errata NOP
  5174  001956  EF88  F00C         	goto	i2l2192
  5175  00195A                     i2u96_40:
  5176  00195A  FFFF               	dw	65535	; assembler added errata NOP
  5177  00195C                     
  5178                           ;LIBGPS_38400.c: 33:     _delay((unsigned long)((24)*(39321600UL/4000000.0)));
  5179  00195C  0E3A               	movlw	58
  5180  00195E                     i2u204_47:
  5181  00195E  FFFF               	dw	65535	; errata NOP
  5182  001960  2EE8               	decfsz	wreg,f,c
  5183  001962  D7FD               	bra	i2u204_47
  5184  001964  D000               	nop2	
  5185  001966  F000               	nop	
  5186  001968                     
  5187                           ;LIBGPS_38400.c: 34:     __nop();
  5188  001968  F000               	nop	
  5189  00196A                     
  5190                           ;LIBGPS_38400.c: 35:     __nop();
  5191  00196A  F000               	nop	
  5192  00196C                     
  5193                           ;LIBGPS_38400.c: 36:     __nop();
  5194  00196C  F000               	nop	
  5195  00196E                     
  5196                           ;LIBGPS_38400.c: 37:     __nop();
  5197  00196E  F000               	nop	
  5198  001970                     
  5199                           ;LIBGPS_38400.c: 38:     __nop();
  5200  001970  F000               	nop	
  5201  001972                     
  5202                           ;LIBGPS_38400.c: 39:     if(PORTBbits.RB0 == 1){
  5203  001972  A081               	btfss	129,0,c	;volatile
  5204  001974  EFBE  F00C         	goto	i2u97_41
  5205  001978  EFC1  F00C         	goto	i2u97_40
  5206  00197C                     i2u97_41:
  5207  00197C  FFFF               	dw	65535	; assembler added errata NOP
  5208  00197E  EFC5  F00C         	goto	i2l2228
  5209  001982                     i2u97_40:
  5210  001982  FFFF               	dw	65535	; assembler added errata NOP
  5211  001984                     
  5212                           ;LIBGPS_38400.c: 40:         RxBuffer = RxBuffer | 0x80;
  5213  001984  5049               	movf	_RxBuffer^0,w,c
  5214  001986  0980               	iorlw	128
  5215  001988  6E49               	movwf	_RxBuffer^0,c
  5216  00198A                     i2l2228:
  5217  00198A  FFFF               	dw	65535	; assembler added errata NOP
  5218                           
  5219                           ;LIBGPS_38400.c: 42:     _delay((unsigned long)((24)*(39321600UL/4000000.0)));
  5220  00198C  0E3A               	movlw	58
  5221  00198E                     i2u205_47:
  5222  00198E  FFFF               	dw	65535	; errata NOP
  5223  001990  2EE8               	decfsz	wreg,f,c
  5224  001992  D7FD               	bra	i2u205_47
  5225  001994  D000               	nop2	
  5226  001996  F000               	nop	
  5227  001998  0012               	return		;funcret
  5228  00199A  FFFF               	dw	65535	; errata NOP
  5229  00199C                     __end_of_ReadByteSW_USART:
  5230                           	callstack 0
  5231                           
  5232                           	psect	rparam
  5233  0000                     
  5234                           	psect	temp
  5235  00004A                     btemp:
  5236                           	callstack 0
  5237  00004A                     	ds	1
  5238  0000                     int$flags	set	btemp
  5239  0000                     wtemp8	set	btemp+1
  5240  0000                     ttemp5	set	btemp+1
  5241  0000                     ttemp6	set	btemp+4
  5242  0000                     ttemp7	set	btemp+8
  5243                           
  5244                           	psect	idloc
  5245                           
  5246                           ;Config register IDLOC0 @ 0x200000
  5247                           ;	unspecified, using default values
  5248  200000                     	org	2097152
  5249  200000  FF                 	db	255
  5250                           
  5251                           ;Config register IDLOC1 @ 0x200001
  5252                           ;	unspecified, using default values
  5253  200001                     	org	2097153
  5254  200001  FF                 	db	255
  5255                           
  5256                           ;Config register IDLOC2 @ 0x200002
  5257                           ;	unspecified, using default values
  5258  200002                     	org	2097154
  5259  200002  FF                 	db	255
  5260                           
  5261                           ;Config register IDLOC3 @ 0x200003
  5262                           ;	unspecified, using default values
  5263  200003                     	org	2097155
  5264  200003  FF                 	db	255
  5265                           
  5266                           ;Config register IDLOC4 @ 0x200004
  5267                           ;	unspecified, using default values
  5268  200004                     	org	2097156
  5269  200004  FF                 	db	255
  5270                           
  5271                           ;Config register IDLOC5 @ 0x200005
  5272                           ;	unspecified, using default values
  5273  200005                     	org	2097157
  5274  200005  FF                 	db	255
  5275                           
  5276                           ;Config register IDLOC6 @ 0x200006
  5277                           ;	unspecified, using default values
  5278  200006                     	org	2097158
  5279  200006  FF                 	db	255
  5280                           
  5281                           ;Config register IDLOC7 @ 0x200007
  5282                           ;	unspecified, using default values
  5283  200007                     	org	2097159
  5284  200007  FF                 	db	255
  5285                           
  5286                           	psect	config
  5287                           
  5288                           ; Padding undefined space
  5289  300000                     	org	3145728
  5290  300000  FF                 	db	255
  5291                           
  5292                           ;Config register CONFIG1H @ 0x300001
  5293                           ;	Oscillator Selection bits
  5294                           ;	OSC = HSPLL, HS oscillator with PLL enabled/Clock frequency = (4 x FOSC)
  5295                           ;	Oscillator System Clock Switch Enable bit
  5296                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  5297  300001                     	org	3145729
  5298  300001  26                 	db	38
  5299                           
  5300                           ;Config register CONFIG2L @ 0x300002
  5301                           ;	Power-up Timer Enable bit
  5302                           ;	PWRT = ON, PWRT enabled
  5303                           ;	Brown-out Reset Enable bit
  5304                           ;	BOR = ON, Brown-out Reset enabled
  5305                           ;	Brown-out Reset Voltage bits
  5306                           ;	BORV = 25, VBOR set to 2.5V
  5307  300002                     	org	3145730
  5308  300002  0E                 	db	14
  5309                           
  5310                           ;Config register CONFIG2H @ 0x300003
  5311                           ;	Watchdog Timer Enable bit
  5312                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5313                           ;	Watchdog Timer Postscale Select bits
  5314                           ;	WDTPS = 128, 1:128
  5315  300003                     	org	3145731
  5316  300003  0E                 	db	14
  5317                           
  5318                           ;Config register CONFIG4L @ 0x300006
  5319                           ;	Stack Full/Underflow Reset Enable bit
  5320                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  5321                           ;	Low-Voltage ICSP Enable bit
  5322                           ;	LVP = OFF, Low-Voltage ICSP disabled
  5323                           ;	Background Debugger Enable bit
  5324                           ;	DEBUG = 0x1, unprogrammed default
  5325  300006                     	org	3145734
  5326  300006  80                 	db	128
  5327                           
  5328                           ; Padding undefined space
  5329  300007                     	org	3145735
  5330  300007  FF                 	db	255
  5331                           
  5332                           ;Config register CONFIG5L @ 0x300008
  5333                           ;	Code Protection bit
  5334                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  5335                           ;	Code Protection bit
  5336                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  5337                           ;	Code Protection bit
  5338                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  5339                           ;	Code Protection bit
  5340                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  5341  300008                     	org	3145736
  5342  300008  0F                 	db	15
  5343                           
  5344                           ;Config register CONFIG5H @ 0x300009
  5345                           ;	Boot Block Code Protection bit
  5346                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  5347                           ;	Data EEPROM Code Protection bit
  5348                           ;	CPD = OFF, Data EEPROM not code protected
  5349  300009                     	org	3145737
  5350  300009  C0                 	db	192
  5351                           
  5352                           ;Config register CONFIG6L @ 0x30000A
  5353                           ;	Write Protection bit
  5354                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  5355                           ;	Write Protection bit
  5356                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  5357                           ;	Write Protection bit
  5358                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  5359                           ;	Write Protection bit
  5360                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  5361  30000A                     	org	3145738
  5362  30000A  0F                 	db	15
  5363                           
  5364                           ;Config register CONFIG6H @ 0x30000B
  5365                           ;	Configuration Register Write Protection bit
  5366                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  5367                           ;	Boot Block Write Protection bit
  5368                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  5369                           ;	Data EEPROM Write Protection bit
  5370                           ;	WRTD = OFF, Data EEPROM not write protected
  5371  30000B                     	org	3145739
  5372  30000B  E0                 	db	224
  5373                           
  5374                           ;Config register CONFIG7L @ 0x30000C
  5375                           ;	Table Read Protection bit
  5376                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  5377                           ;	Table Read Protection bit
  5378                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  5379                           ;	Table Read Protection bit
  5380                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  5381                           ;	Table Read Protection bit
  5382                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  5383  30000C                     	org	3145740
  5384  30000C  0F                 	db	15
  5385                           
  5386                           ;Config register CONFIG7H @ 0x30000D
  5387                           ;	Boot Block Table Read Protection bit
  5388                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  5389  30000D                     	org	3145741
  5390  30000D  40                 	db	64
  5391                           tosu	equ	0xFFF
  5392                           tosh	equ	0xFFE
  5393                           tosl	equ	0xFFD
  5394                           stkptr	equ	0xFFC
  5395                           pclatu	equ	0xFFB
  5396                           pclath	equ	0xFFA
  5397                           pcl	equ	0xFF9
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           indf0	equ	0xFEF
  5405                           postinc0	equ	0xFEE
  5406                           postdec0	equ	0xFED
  5407                           preinc0	equ	0xFEC
  5408                           plusw0	equ	0xFEB
  5409                           fsr0h	equ	0xFEA
  5410                           fsr0l	equ	0xFE9
  5411                           wreg	equ	0xFE8
  5412                           indf1	equ	0xFE7
  5413                           postinc1	equ	0xFE6
  5414                           postdec1	equ	0xFE5
  5415                           preinc1	equ	0xFE4
  5416                           plusw1	equ	0xFE3
  5417                           fsr1h	equ	0xFE2
  5418                           fsr1l	equ	0xFE1
  5419                           bsr	equ	0xFE0
  5420                           indf2	equ	0xFDF
  5421                           postinc2	equ	0xFDE
  5422                           postdec2	equ	0xFDD
  5423                           preinc2	equ	0xFDC
  5424                           plusw2	equ	0xFDB
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        26
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      73
    BANK0           160     70      71
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    print_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[3]), STR_5(CODE[11]), STR_4(CODE[3]), STR_3(CODE[11]), 
		 -> STR_2(CODE[4]), STR_1(CODE[10]), DateTimeGPS(COMRAM[13]), 


Critical Paths under _main in COMRAM

    _main->___aodiv
    _print_value->_WriteByte_USART
    _WriteRegister_2bytesAD7177->_TransferByte_SPI
    _TransmitDAT_USART->_print_string
    _TransmitCMD_USART->_print_string
    _print_string->_WriteByte_USART
    _ResetAD7177->_TransferByte_SPI
    _ReadRegister_2bytesAD7177->_TransferByte_SPI
    _ReadRegister_1bytesAD7177->_TransferByte_SPI
    _ReadADC32->_TransferByte_SPI

Critical Paths under _Interrups in COMRAM

    _Interrups->i2_TransmitDAT_USART
    i2_TransmitDAT_USART->i2_print_string
    i2_print_string->i2_WriteByte_USART
    _GPS_TIMEDATE->_ReadByteSW_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrups in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrups in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrups in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrups in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrups in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrups in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0    7102
                                              0 BANK0     70    70      0
                      _ClosePort_SPI
                    _CloseSerialPort
                     _ConfigPort_SPI
                   _ConfigSerialPort
                       _OpenPort_SPI
                     _OpenSerialPort
                          _ReadADC32
          _ReadRegister_1bytesAD7177
          _ReadRegister_2bytesAD7177
                   _ReceiveCMD_USART
                   _ReceiveDAT_USART
                        _ResetAD7177
                   _TransferByte_SPI
                  _TransmitCMD_USART
                  _TransmitDAT_USART
         _WriteRegister_2bytesAD7177
                            ___aodiv
                       _print_string
                        _print_value
 ---------------------------------------------------------------------------------
 (1) _print_value                                         19    15      4     899
                                             16 COMRAM    19    15      4
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (1) ___aodiv                                             26    10     16    1212
                                             15 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _WriteRegister_2bytesAD7177                           3     1      2     697
                                             16 COMRAM     3     1      2
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (1) _TransmitDAT_USART                                    2     2      0     685
                                             18 COMRAM     2     2      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (1) _TransmitCMD_USART                                    1     1      0     617
                                             18 COMRAM     1     1      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (1) _print_string                                         2     0      2     573
                                             16 COMRAM     2     0      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (2) _WriteByte_USART                                      1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ResetAD7177                                          2     2      0      69
                                             16 COMRAM     2     2      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (1) _ReceiveDAT_USART                                     2     2      0     232
                                             15 COMRAM     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (1) _ReceiveCMD_USART                                     2     2      0     164
                                             15 COMRAM     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (2) _ReadByte_USART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadRegister_2bytesAD7177                            1     1      0      45
                                             16 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (1) _ReadRegister_1bytesAD7177                            1     1      0      45
                                             16 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (1) _ReadADC32                                           20    16      4     277
                                             16 COMRAM    20    16      4
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (2) _TransferByte_SPI                                     2     2      0      23
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenSerialPort                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenPort_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigSerialPort                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPort_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseSerialPort                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClosePort_SPI                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrups                                           10    10      0     638
                                              5 COMRAM    10    10      0
                       _GPS_TIMEDATE
                i2_TransmitDAT_USART
                     i2_print_string
 ---------------------------------------------------------------------------------
 (5) i2_TransmitDAT_USART                                  2     2      0     257
                                              3 COMRAM     2     2      0
                  i2_WriteByte_USART
                     i2_print_string
 ---------------------------------------------------------------------------------
 (5) i2_print_string                                       2     0      2     145
                                              1 COMRAM     2     0      2
                  i2_WriteByte_USART
 ---------------------------------------------------------------------------------
 (6) i2_WriteByte_USART                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _GPS_TIMEDATE                                         2     2      0     236
                                              1 COMRAM     2     2      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (6) _ReadByteSW_USART                                     1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClosePort_SPI
   _CloseSerialPort
   _ConfigPort_SPI
   _ConfigSerialPort
   _OpenPort_SPI
   _OpenSerialPort
   _ReadADC32
     _TransferByte_SPI
   _ReadRegister_1bytesAD7177
     _TransferByte_SPI
   _ReadRegister_2bytesAD7177
     _TransferByte_SPI
   _ReceiveCMD_USART
     _ReadByte_USART
   _ReceiveDAT_USART
     _ReadByte_USART
   _ResetAD7177
     _TransferByte_SPI
   _TransferByte_SPI
   _TransmitCMD_USART
     _WriteByte_USART
     _print_string
       _WriteByte_USART
   _TransmitDAT_USART
     _WriteByte_USART
     _print_string
   _WriteRegister_2bytesAD7177
     _TransferByte_SPI
   ___aodiv
   _print_string
   _print_value
     _WriteByte_USART

 _Interrups (ROOT)
   _GPS_TIMEDATE
     _ReadByteSW_USART
   i2_TransmitDAT_USART
     i2_WriteByte_USART
     i2_print_string
       i2_WriteByte_USART
   i2_print_string

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      47       5       44.4%
BITBIGSFRlll        81      0       0      27        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      49       1       77.7%
BITBIGSFRhlh        19      0       0      17        0.0%
BITBIGSFRhlllhh     11      0       0      22        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhllll       C      0       0      23        0.0%
BITBIGSFRlhh         8      0       0      24        0.0%
BITBIGSFRllh         6      0       0      26        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRhllhh       4      0       0      18        0.0%
BITBIGSFRhllhll      4      0       0      21        0.0%
BITBIGSFRhllhlh      3      0       0      19        0.0%
BITBIGSFRhllhlh      1      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      28        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Oct 18 13:50:29 2022

                                                  ?_OpenSerialPort 0001  
                                        _ReadRegister_2bytesAD7177 1C0A  
                                                      _SSPSTATbits 000FC7  
                                                              l200 1BE4  
                                                              l211 1C28  
                                                              l204 1B46  
                                                              l140 0830  
                                                              l132 07CE  
                                                              l205 1B5C  
                                                              l141 083E  
                                                              l150 0BB8  
                                                              l142 0848  
                                                              l134 07DC  
                                                              l118 1220  
                                                              l303 1608  
                                                              l135 07EA  
                                                              l208 1CBA  
                                                              l152 0C72  
                                                              l136 07F8  
                                                              l217 1C68  
                                                              l137 0806  
                                                              l242 1CEA  
                                                              l154 0D2C  
                                                              l146 0A0A  
                                                              l138 0814  
                                                              l251 1C70  
                                                              l139 0822  
                                                              l260 1C06  
                                                              l156 0DE6  
                                                              l245 1CF2  
                                                              l166 13E0  
                                                              l254 1C86  
                                                              l158 0EA0  
                                                              l191 1CFA  
                                                              l248 1D02  
                                                              l272 18D0  
                                                              l169 14FE  
                                                              l257 1BF2  
                                                              l194 1D0A  
                                                              l282 1706  
                                                              l266 1A06  
                                                              l291 1BC0  
                                                              l188 1CD4  
                                                              l276 18D6  
                                                              l197 1BCE  
                                                              l199 1BE2  
                                                              l288 170C  
                                                              l296 1AC8  
                                                              l497 13DA  
                                                              u900 19F2  
                                                              u910 1A04  
                                                              u911 19FE  
                                                              u920 1BE0  
                                                              u921 1BDA  
                                                              u930 1C82  
                                                              u931 1C7C  
                                                              u907 19E8  
                                                              u870 1C04  
                                                              u871 1BFE  
                                                              u890 19C6  
                                                              u897 19BC  
                                          TransmitDAT_USART@DAT_ID 0013  
                                                              wreg 000FE8  
                                           TransmitDAT_USART@conta 0014  
                                                             l2300 1A7C  
                                                             l2310 1A92  
                                                             l2302 1A88  
                                                             l2320 1CC0  
                                                             l2160 1BC8  
                                                             l2144 1BEC  
                                                             l2152 199E  
                                                             l2312 1AA6  
                                                             l2304 1A8E  
                                                             l2400 1C66  
                                                             l2322 1CC6  
                                                             l2330 1CDA  
                                                             l2162 1BCA  
                                                             l2146 1BF0  
                                                             l2154 19A2  
                                                             l2314 1AA8  
                                                             l2324 1CCA  
                                                             l2332 1CDE  
                                                             l2164 1C6E  
                                                             l2420 161A  
                                                             l2412 160E  
                                                             l2156 19CA  
                                                             l2404 1BA2  
                                                             l2316 1ABC  
                                                             l2500 1510  
                                                             l3300 078E  
                                                             l2166 1C84  
                                                             l2350 182C  
                                                             l2430 1660  
                                                             l2158 19CE  
                                                             l2406 1BAE  
                                                             l2510 15C2  
                                                             l2502 1554  
                                                             l3310 0850  
                                                             l3302 0796  
                                                             l2328 1CF8  
                                                             l2336 1CF0  
                                                             l2360 1874  
                                                             l2352 1830  
                                                             l2344 180A  
                                                             l2440 169E  
                                                             l2432 1666  
                                                             l2424 1634  
                                                             l2408 1BB4  
                                                             l2512 15C6  
                                                             l2504 1558  
                                                             l3400 0A90  
                                                             l3320 08D4  
                                                             l3312 08B6  
                                                             l3304 07AC  
                                                             l3240 0654  
                                                             l3232 0626  
                                                             l2530 1CAA  
                                                             l2370 18CA  
                                                             l2362 187A  
                                                             l2354 1842  
                                                             l2346 1812  
                                                             l2338 1806  
                                                             l2450 16CA  
                                                             l2442 16B4  
                                                             l2434 167C  
                                                             l2426 1638  
                                                             l2418 1612  
                                                             l2522 15DE  
                                                             l2514 15D6  
                                                             l2506 159C  
                                                             l3410 0AA8  
                                                             l3330 08EE  
                                                             l3322 08DA  
                                                             l3314 08C4  
                                                             l3306 07B2  
                                                             l3250 0664  
                                                             l3242 0658  
                                                             l3234 0648  
                                                             l2532 1CB8  
                                                             l2364 1890  
                                                             l2356 1858  
                                                             l2452 16DE  
                                                             l2444 16C6  
                                                             l2436 1682  
                                                             l2428 164A  
                                                             l2380 1B24  
                                                             l2540 122C  
                                                             l2524 15F2  
                                                             l2516 15DA  
                                                             l2508 15A0  
                                                             l3500 0CAC  
                                                             l3420 0AC8  
                                                             l3412 0AB2  
                                                             l3340 090C  
                                                             l3332 08F2  
                                                             l3324 08E0  
                                                             l3316 08CC  
                                                             l3260 067E  
                                                             l3252 0666  
                                                             l3244 065C  
                                                             l3236 064A  
                                                             l2470 1C26  
                                                             l2374 18D4  
                                                             l2366 1896  
                                                             l2358 185E  
                                                             l2462 170A  
                                                             l2454 16E0  
                                                             l2438 1698  
                                                             l2390 1B32  
                                                             l2550 127A  
                                                             l2542 1230  
                                                             l2526 15F4  
                                                             l3510 0D4A  
                                                             l3502 0CC2  
                                                             l3430 0ADE  
                                                             l3422 0ACC  
                                                             l3414 0ABA  
                                                             l3406 0A9A  
                                                             l3350 091C  
                                                             l3342 090E  
                                                             l3334 08F4  
                                                             l3326 08E6  
                                                             l3318 08CE  
                                                             l3270 06D0  
                                                             l3262 068C  
                                                             l3254 0668  
                                                             l3246 065E  
                                                             l3238 064C  
                                                             l2536 1CFE  
                                                             l2480 141A  
                                                             l2528 1CA8  
                                                             l2368 18AC  
                                                             l2456 16F4  
                                                             l2392 1B48  
                                                             l2560 12D6  
                                                             l2552 129A  
                                                             l2544 1242  
                                                             l3520 0D66  
                                                             l3512 0D4C  
                                                             l3504 0D16  
                                                             l3440 0B10  
                                                             l3432 0AEA  
                                                             l3424 0ACE  
                                                             l3416 0AC0  
                                                             l3408 0AA2  
                                                             l3360 096E  
                                                             l3352 0922  
                                                             l3344 0910  
                                                             l3336 08F6  
                                                             l3328 08EA  
                                                             l3280 0706  
                                                             l3272 06DA  
                                                             l3264 06A0  
                                                             l3256 066A  
                                                             l3248 0662  
                                                             l2538 1D06  
                                                             l2490 14C6  
                                                             l2482 142A  
                                                             l2474 13E0  
                                                             l2466 1C0E  
                                                             l2458 1700  
                                                             l2386 1B28  
                                                             l2378 1B22  
                                                             l2570 1366  
                                                             l2562 12EC  
                                                             l2554 129E  
                                                             l2546 1262  
                                                             l3530 0E04  
                                                             l3522 0D7C  
                                                             l3514 0D60  
                                                             l3506 0D18  
                                                             l3450 0B2C  
                                                             l3442 0B12  
                                                             l3434 0AF6  
                                                             l3426 0AD0  
                                                             l3418 0AC4  
                                                             l3370 0982  
                                                             l3362 0974  
                                                             l3354 0942  
                                                             l3346 0914  
                                                             l3338 090A  
                                                             l3290 0756  
                                                             l3282 071E  
                                                             l3274 06E2  
                                                             l3266 06AE  
                                                             l3258 0678  
                                                             l2492 14DE  
                                                             l2484 1456  
                                                             l2476 13F4  
                                                             l2468 1C10  
                                                             l2388 1B30  
                                                             l2396 1C52  
                                                             l2580 13B8  
                                                             l2572 1368  
                                                             l2564 1300  
                                                             l2556 12AC  
                                                             l2548 1266  
                                                             l3540 0E20  
                                                             l3532 0E06  
                                                             l3524 0DD0  
                                                             l3508 0D36  
                                                             l3460 0B38  
                                                             l3452 0B2E  
                                                             l3444 0B14  
                                                             l3436 0B02  
                                                             l3428 0AD2  
                                                             l3380 098A  
                                                             l3372 0984  
                                                             l3364 0978  
                                                             l3356 095A  
                                                             l3348 0918  
                                                             l3292 075C  
                                                             l3284 0730  
                                                             l3276 06EA  
                                                             l3268 06C2  
                                                             l2494 14EE  
                                                             l2486 1484  
                                                             l2478 141A  
                                                             l2398 1C54  
                                                             l2574 137C  
                                                             l2566 1314  
                                                             l2558 12CE  
                                                             l3550 10EA  
                                                             l3542 0E36  
                                                             l3534 0E1A  
                                                             l3526 0DD2  
                                                             l3470 0BD6  
                                                             l3462 0B4E  
                                                             l3454 0B32  
                                                             l3446 0B16  
                                                             l3438 0B0E  
                                                             l3390 0A80  
                                                             l3382 09A0  
                                                             l3374 0986  
                                                             l3366 097C  
                                                             l3358 0962  
                                                             l3294 0774  
                                                             l3286 0738  
                                                             l3278 0700  
                                                             l2488 14B4  
                                                             l2568 1346  
                                                             l2576 1382  
                                                             l3560 1134  
                                                             l3552 10EC  
                                                             l3544 0E8A  
                                                             l3528 0DF0  
                                                             l3480 0BF2  
                                                             l3472 0BD8  
                                                             l3464 0BA2  
                                                             l3448 0B18  
                                                             l3392 0A82  
                                                             l3384 09F4  
                                                             l3368 0980  
                                                             l3296 077A  
                                                             l3288 0740  
                                                             l2578 1398  
                                                             l2498 1504  
                                                             l3570 116E  
                                                             l3562 1148  
                                                             l3554 10F8  
                                                             l3546 0E8C  
                                                             l3490 0C90  
                                                             l3482 0C08  
                                                             l3474 0BEC  
                                                             l3466 0BA4  
                                                             l3394 0A84  
                                                             l3386 09F6  
                                                             l3298 0786  
                                                             l3580 11A2  
                                                             l3572 1172  
                                                             l3564 1168  
                                                             l3556 110C  
                                                             l3548 0EA6  
                                                             l3492 0C92  
                                                             l3484 0C5C  
                                                             l3468 0BC2  
                                                             l3396 0A88  
                                                             l3388 0A0C  
                                                             l3590 11B2  
                                                             l3582 11AA  
                                                             l3574 1176  
                                                             l3566 116A  
                                                             l3558 1120  
                                                             l3494 0CA6  
                                                             l3486 0C5E  
                                                             l3398 0A8C  
                                                             l3670 0866  
                                                             l3672 11D0  
                                                             l3584 11AC  
                                                             l3576 117A  
                                                             l3568 116C  
                                                             l3488 0C7C  
                                                             l3592 11BA  
                                                             l3586 11AE  
                                                             l3578 1198  
                                                             l3588 11B0  
                                                             STR_1 0617  
                                                             STR_2 0621  
                                                             STR_3 0601  
                                                             STR_4 0622  
                                                             STR_5 060C  
                                                             STR_6 0622  
                                                             u1100 1856  
                                                             u1101 1850  
                                                             u1110 1872  
                                                             u1111 186C  
                                                             u1120 188E  
                                                             u1200 16B2  
                                                             u1121 1888  
                                                             u1201 16AC  
                                                             u1130 18AA  
                                                             u1210 16F2  
                                                             u1131 18A4  
                                                             u1211 16EC  
                                                             u1220 13F2  
                                                             u1140 1B44  
                                                             u1300 12CC  
                                                             u1221 13EC  
                                                             u1141 1B3E  
                                                             u1301 12C6  
                                                             u1150 162E  
                                                             u1070 1ABA  
                                                             u1310 12FE  
                                                             u1151 1628  
                                                             u2007 1B4E  
                                                             u1071 1AB4  
                                                             u1311 12F8  
                                                             u1231 150A  
                                                             u1080 1826  
                                                             u1160 164A  
                                                             u1320 1344  
                                                             u1081 1820  
                                                             u1161 1644  
                                                             u1321 133E  
                                                             u1090 1842  
                                                             u1170 165E  
                                                             u1330 1396  
                                                             u1091 183C  
                                                             u1171 1658  
                                                             u1331 1390  
                                                             u1180 167A  
                                                             u1260 1606  
                                                             u1181 1674  
                                                             u1261 1600  
                                                             u1245 1524  
                                                             _LATA 000F89  
                                                             u1190 1696  
                                                             u1270 1240  
                                                             u1246 1530  
                                                             _LATB 000F8A  
                                                             u1191 1690  
                                                             u1271 123A  
                                                             u1255 156C  
                                                             u1247 1542  
                                                             _LATC 000F8B  
                                                             u1280 1278  
                                                             u1256 1578  
                                                             u1281 1272  
                                                             u1257 158A  
                                                             u1291 12A6  
                                                             u1800 0A08  
                                                             u1801 0A02  
                                                             u1730 06FE  
                                                             u1811 0AD8  
                                                             u1731 06F8  
                                                             u1900 0E9E  
                                                             u1740 071C  
                                                             u1901 0E98  
                                                             u1821 0AE4  
                                                             u1741 0716  
                                                             u1750 0754  
                                                             u1831 0AF0  
                                                             u1751 074E  
                                                             u1760 0772  
                                                             u1841 0AFC  
                                                             u1761 076C  
                                                             u1770 07AA  
                                                             u1851 0B08  
                                                             u1771 07A4  
                                                             u1860 0BB6  
                                                             u1780 07C8  
                                                             u1861 0BB0  
                                                             u1781 07C2  
                                                             u1917 0694  
                                                             u1870 0C70  
                                                             u1871 0C6A  
                                                             u1791 0968  
                                                             u1927 06B6  
                                                             u1880 0D2A  
                                                             u1881 0D24  
                                                             u1937 0930  
                                                             u1890 0DE4  
                                                             u1891 0DDE  
                                                             u1947 0B20  
                                                             u1957 0BCA  
                                                             u1967 0C84  
                                                             u1977 0D3E  
                                                             u1987 0DF8  
                                                             u1997 1186  
                                                   ReadADC32@byte0 0020  
                                                   ReadADC32@byte1 001F  
                                                   ReadADC32@byte2 001E  
                                                   ReadADC32@byte3 001D  
                                                             _main 0626  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                          __end_of_CloseSerialPort 1D06  
                                                             btemp 004A  
                                                             start 00F0  
                                                     ___param_bank 000000  
                                                  __end_of___aodiv 13DE  
                                                            ?_main 0001  
                               WriteRegister_2bytesAD7177@BYTE_LOW 0012  
                                                            _T0CON 000FD5  
                                                            _T1CON 000FCD  
                                                      _DateTimeGPS 0037  
                                                            i2l110 00C8  
                                                            i2l107 005A  
                                                            i2l323 1940  
                                                            i2l260 1C4A  
                                                            i2l325 1998  
                                                            i2l318 18E2  
                                                            i2l257 1C36  
                                                            i2l266 1A74  
                                                            i2l380 17FE  
                                                            i2l296 1B1C  
                                                    main@SumData_X 0098  
                                                    main@SumData_Y 0068  
                                                    main@SumData_Z 0070  
                                                            _RCREG 000FAE  
                                                            _RCSTA 000FAB  
                                                            _TMR0H 000FD7  
                                                            _TMR1H 000FCF  
                                                            _TMR0L 000FD6  
                                                            _TMR1L 000FCE  
                                                            _SPBRG 000FAF  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TXREG 000FAD  
                                                            _TXSTA 000FAC  
                                                            tablat 000FF5  
                                                            ttemp5 004B  
                                                            ttemp6 004E  
                                                            ttemp7 0052  
                                                            status 000FD8  
                                                            wtemp8 004B  
                               __end_of_WriteRegister_2bytesAD7177 1C6C  
                                       _WriteRegister_2bytesAD7177 1C4E  
                                           GPS_TIMEDATE@LimitConta 0002  
                                                  __initialization 1B60  
                                                     __end_of_main 122A  
                                                    ??_ResetAD7177 0011  
                                                 ReadADC32@DataADC 0019  
                                                           ??_main 0060  
                                                    __activetblptr 000002  
                                                ?_ReadByteSW_USART 0001  
                                                    ?_GPS_TIMEDATE 0001  
                                               ??_ReadByteSW_USART 0001  
                                                   _ReadByte_USART 1C6C  
                              WriteRegister_2bytesAD7177@BYTE_HIGH 0011  
                                                           i2l2200 1924  
                                                           i2l2210 1948  
                                                           i2l2202 1926  
                                                           i2l2220 196E  
                                                           i2l2212 195C  
                                                           i2l2204 1928  
                                                           i2l2222 1970  
                                                           i2l2214 1968  
                                                           i2l2206 193A  
                                                           i2l2150 1C34  
                                                           i2l2224 1972  
                                                           i2l2216 196A  
                                                           i2l2208 1946  
                                                           i2l2240 1714  
                                                           i2l2232 1A0C  
                                                           i2l2226 1984  
                                                           i2l2218 196C  
                                                           i2l2170 18DE  
                                                           i2l2250 173E  
                                                           i2l2242 171C  
                                                           i2l2234 1A10  
                                                           i2l2228 198A  
                                                           i2l2180 1906  
                                                           i2l2172 18F6  
                                                           i2l2260 174A  
                                                           i2l2252 1740  
                                                           i2l2244 1722  
                                                           i2l2148 1C30  
                                                           i2l2236 1A38  
                                                           i2l2182 1908  
                                                           i2l2174 1900  
                                                           i2l2270 177A  
                                                           i2l2262 174C  
                                                           i2l2246 1724  
                                                           i2l2238 1A3C  
                                                           i2l2192 1910  
                                                           i2l2184 190A  
                                                           i2l2176 1902  
                                                           i2l2280 17B0  
                                                           i2l2272 1780  
                                                           i2l2264 175C  
                                                           i2l2248 173A  
                                                           i2l2600 1B10  
                                                           i2l2194 191E  
                                                           i2l2186 190C  
                                                           i2l2178 1904  
                                                           i2l2290 17BC  
                                                           i2l2274 1782  
                                                           i2l2266 175E  
                                                           i2l2258 1744  
                                                           i2l2610 0052  
                                                           i2l2196 1920  
                                                           i2l2292 17CC  
                                                           i2l2276 1798  
                                                           i2l2268 1772  
                                                           i2l2620 0092  
                                                           i2l2612 006E  
                                                           i2l2604 002C  
                                                           i2l2198 1922  
                                                           i2l2294 17CE  
                                                           i2l2286 17B4  
                                                           i2l2278 179A  
                                                           i2l2630 00BA  
                                                           i2l2622 0094  
                                                           i2l2614 0080  
                                                           i2l2606 003E  
                                                           i2l2296 17E2  
                                                           i2l2288 17BA  
                                                           i2l2632 00C6  
                                                           i2l2624 0098  
                                                           i2l2616 0082  
                                                           i2l2608 0050  
                                                           i2l2298 17EA  
                                                           i2l2626 009C  
                                                           i2l2618 008E  
                                                           i2l2628 00A2  
                                                           i2l2584 1AD0  
                                                           i2l2594 1AE6  
                                                           i2l2586 1ADC  
                                                           i2l2596 1AFA  
                                                           i2l2588 1AE2  
                                                           i2l2598 1AFC  
                                                           _INTCON 000FF2  
                                                   main@SumData_TC 0078  
                                                   main@SumData_TS 0080  
                                                   i2_print_string 1A0A  
                                                           _SSPBUF 000FC9  
                                         __end_of_ReceiveDAT_USART 1712  
                                                 ?_CloseSerialPort 0001  
                                                 print_value@F5255 0044  
                                         __end_of_ReceiveCMD_USART 18DC  
                                         __end_of_ConfigSerialPort 1CEE  
                                                        ??___aodiv 0020  
                                                 print_value@Bytes 001A  
                                                           _conta1 00A6  
                                                 print_value@conta 001F  
                                                 print_value@value 0011  
                                                           isa$std 000001  
                                                 _TransferByte_SPI 1BC4  
                                                           main@ID 00A4  
                                                   ??_GPS_TIMEDATE 0002  
                                           __end_of_ReadByte_USART 1C8A  
                                                     __pdataCOMRAM 002A  
                                                     __mediumconst 0000  
                                              __end_of_ResetAD7177 1B60  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                 ReadRegister_2bytesAD7177@command 0011  
                                           __end_ofi2_print_string 1A78  
                                            i2WriteByte_USART@byte 0001  
                                                       __accesstop 0060  
                                          __end_of__initialization 1B90  
                                                     ?_print_value 0011  
                                                    ?_OpenPort_SPI 0001  
                                                    ___rparam_used 000001  
                                                 ??_OpenSerialPort 0010  
                                            __end_of_ClosePort_SPI 1D0E  
                                                   __pcstackCOMRAM 0001  
                                                __end_of_ReadADC32 1502  
                                                  ?_ReadByte_USART 0001  
                                                __end_of_Interrups 00F0  
                                              i2_TransmitDAT_USART 1ACC  
                                WriteRegister_2bytesAD7177@command 0013  
                                                  ?i2_print_string 0002  
                                                       __pbssBANK0 00A6  
                                                   ??_OpenPort_SPI 0010  
                                             ?i2_TransmitDAT_USART 0001  
                                     ??_WriteRegister_2bytesAD7177 0013  
                                                i2print_string@str 0002  
                                                      _ResetAD7177 1B20  
                                                          i2u94_40 18F4  
                                                          i2u94_41 18EE  
                                                          i2u95_40 1938  
                                                          i2u95_41 1932  
                                                          i2u96_40 195A  
                                                          i2u88_40 1C48  
                                                          i2u96_41 1954  
                                                          i2u88_41 1C42  
                                                          i2u97_40 1982  
                                                          i2u97_41 197C  
                                                          i2u98_40 1A34  
                                                          i2u98_47 1A2A  
                                                          i2u99_40 1A60  
                                                          i2u99_47 1A56  
                                                          _SSPSTAT 000FC7  
                                                ReadADC32@data_ini 0021  
                                             __end_of_GPS_TIMEDATE 1804  
                                        i2TransmitDAT_USART@DAT_ID 0004  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                i2_WriteByte_USART 1C2C  
                                            ??i2_TransmitDAT_USART 0004  
                                                          ___aodiv 122A  
                                               ?i2_WriteByte_USART 0001  
                                                     __psmallconst 0600  
                                                          __pcinit 1B60  
                                                          __ramtop 0600  
                                         i2TransmitDAT_USART@conta 0005  
                                                          __ptext0 0626  
                                                          __ptext1 1502  
                                                          __ptext2 122A  
                                                          __ptext3 1C4E  
                                                          __ptext4 1A78  
                                                          __ptext5 1B9E  
                                                          __ptext6 199C  
                                                          __ptext7 1BE8  
                                                          __ptext8 1B20  
                                                          __ptext9 160C  
                                                        _T0CONbits 000FD5  
                                              ??i2_WriteByte_USART 0001  
                                                        _T1CONbits 000FCD  
                                        ReceiveDAT_USART@data_byte 0010  
                                             end_of_initialization 1B90  
                                              WriteByte_USART@byte 0010  
                                         __end_of_TransferByte_SPI 1BE8  
                                                    __Lmediumconst 0000  
                                                ?_ReceiveDAT_USART 0001  
                                        __end_ofi2_WriteByte_USART 1C4E  
                                                ?_ReceiveCMD_USART 0001  
                                               ??_ReceiveDAT_USART 0010  
                                                ?_ConfigSerialPort 0001  
                                               ??_ReceiveCMD_USART 0010  
                                                        _RCSTAbits 000FAB  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                               ??_ConfigSerialPort 0010  
                                                GPS_TIMEDATE@conta 0003  
                                                ??_WriteByte_USART 0010  
                                                        _PORTBbits 000F81  
                                                        _PORTCbits 000F82  
                                             __end_of_OpenPort_SPI 1CFE  
                                                   _ConfigPort_SPI 1CBE  
                                                        _TRISBbits 000F93  
                                                        _TRISCbits 000F94  
                                                       main@Data_X 00A0  
                                                       main@Data_Y 0088  
                                                       main@Data_Z 008C  
                                                    ?_print_string 0011  
                                                 ResetAD7177@conta 0012  
                                             TransferByte_SPI@data 0010  
                                                        _TXSTAbits 000FAC  
                                                        _BufferDAT 002A  
                                                 ??_ReadByte_USART 0010  
                                                    __pidataCOMRAM 1C8A  
                                           __end_of_ConfigPort_SPI 1CD8  
                                                        _ReadADC32 13DE  
                                                 ??i2_print_string 0004  
                                              start_initialization 1B60  
                                 ReadRegister_1bytesAD7177@command 0011  
                                                   ??_print_string 0013  
                                          TransmitCMD_USART@CMD_ID 0013  
                                                        _Interrups 0008  
                                       ReceiveCMD_USART@conta_byte 0010  
                                                _TransmitDAT_USART 1A78  
                                       ?_ReadRegister_1bytesAD7177 0001  
                                                _TransmitCMD_USART 1B9E  
                                               ?_TransmitDAT_USART 0001  
                                                     ?_ResetAD7177 0001  
                                               ?_TransmitCMD_USART 0001  
                                                  ?_ConfigPort_SPI 0001  
                                                       ?_ReadADC32 0011  
                                                     _GPS_TIMEDATE 1712  
                                                      __pbssCOMRAM 0044  
                                              ??_TransmitDAT_USART 0013  
                                                    __pcstackBANK0 0060  
                                                 ___aodiv@dividend 0010  
                                              ??_TransmitCMD_USART 0013  
                                       ?_ReadRegister_2bytesAD7177 0001  
                                                       ?_Interrups 0001  
                                                 _ReadByteSW_USART 18DC  
                                        __end_of_TransmitDAT_USART 1ACC  
                                        __end_of_TransmitCMD_USART 1BC4  
                                                        __pintcode 0008  
                                                  print_string@str 0011  
                                                         ?___aodiv 0010  
                                                 ___aodiv@quotient 0022  
                                __end_of_ReadRegister_1bytesAD7177 1CBE  
                                                      __smallconst 0600  
                                                ??_CloseSerialPort 0010  
                                __end_of_ReadRegister_2bytesAD7177 1C2C  
                                      __end_ofi2_TransmitDAT_USART 1B20  
                                                         _LATAbits 000F89  
                                                         _LATCbits 000F8B  
                                                ?_TransferByte_SPI 0001  
                                                  _WriteByte_USART 1BE8  
                                                     _OpenPort_SPI 1CF6  
                                                         _PIE1bits 000F9D  
                                                         i2u100_40 1A72  
                                                         i2u100_41 1A6C  
                                               ??_TransferByte_SPI 0010  
                                                         i2u101_40 1738  
                                                         i2u101_41 1732  
                                                         i2u102_40 1770  
                                                         i2u102_41 176A  
                                                         i2u103_40 1796  
                                                         i2u103_41 1790  
                                                         i2u104_40 17AE  
                                                         i2u104_41 17A8  
                                                         i2u105_40 17E0  
                                                         i2u105_41 17DA  
                                                         i2u201_47 00AC  
                                                         i2u106_40 17FE  
                                                         i2u106_41 17F8  
                                                         i2u202_47 18F8  
                                                         i2u203_47 1914  
                                                         i2u204_47 195E  
                                                         i2u205_47 198E  
                                                         i2u134_40 1B0E  
                                                         i2u134_41 1B08  
                                                         i2u135_40 003C  
                                                         i2u135_41 0036  
                                                         i2u136_40 004E  
                                                         i2u136_41 0048  
                                                         i2u137_40 006C  
                                                         i2u137_41 0066  
                                                         i2u138_40 007E  
                                                         i2u138_41 0078  
                                                         _PIR1bits 000F9E  
                                                         _RCONbits 000FD0  
                                                    _ClosePort_SPI 1D06  
                                             __end_of_print_string 1A0A  
                                                       _ADCON1bits 000FC1  
                                                      ??_ReadADC32 0015  
                                                        main@conta 00A5  
                                        ReceiveCMD_USART@data_byte 0011  
                                                      _INTCON2bits 000FF1  
                                                        copy_data0 1B74  
                                                      ??_Interrups 0006  
                                                    ??_print_value 0015  
                                                         _RxBuffer 0049  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                      ?_WriteRegister_2bytesAD7177 0011  
                                                   ?_ClosePort_SPI 0001  
                                                  ___aodiv@divisor 0018  
                                                  ___aodiv@counter 0020  
                                               print_value@RegTemp 0020  
                                                         __ptext10 1804  
                                                         __ptext11 1C6C  
                                                         __ptext20 1CFE  
                                                         __ptext12 1C0A  
                                                         __ptext21 1D06  
                                                         __ptext13 1CA4  
                                                         __ptext14 13DE  
                                                         __ptext23 1ACC  
                                                         __ptext15 1BC4  
                                                         __ptext24 1A0A  
                                                         __ptext16 1CEE  
                                                         __ptext25 1C2C  
                                                         __ptext17 1CF6  
                                                         __ptext26 1712  
                                                         __ptext18 1CD8  
                                                         __ptext27 18DC  
                                                         __ptext19 1CBE  
                                          __end_of_WriteByte_USART 1C0A  
                                              __end_of_print_value 160C  
                                                         isa$xinst 000000  
                                                 ??_ConfigPort_SPI 0010  
                                                         int$flags 004A  
                                      ??_ReadRegister_1bytesAD7177 0011  
                                                   _OpenSerialPort 1CEE  
                                         __end_of_ReadByteSW_USART 199C  
                                                       _INTCONbits 000FF2  
                                            ReadByteSW_USART@conta 0001  
                                      ??_ReadRegister_2bytesAD7177 0011  
                                                         intlevel2 1D0E  
                                                  ??_ClosePort_SPI 0010  
                                       ReceiveDAT_USART@conta_byte 0011  
                                                  _CloseSerialPort 1CFE  
                                           __end_of_OpenSerialPort 1CF6  
                                                 _ReceiveDAT_USART 160C  
                                                 _ReceiveCMD_USART 1804  
                                                 _ConfigSerialPort 1CD8  
                                                      _SSPCON1bits 000FC6  
                                        _ReadRegister_1bytesAD7177 1CA4  
                                                     _print_string 199C  
                                                 ?_WriteByte_USART 0001  
                                                     ___aodiv@sign 0021  
                                                      _print_value 1502  
                                                      main@Data_TC 0090  
                                                      main@Data_TS 0094  
