

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Sep 27 11:26:31 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F258
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F258 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  000BA4                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _BufferDAT
    80  000BA4  58                 	db	88
    81  000BA5  58                 	db	88
    82  000BA6  58                 	db	88
    83  000BA7  58                 	db	88
    84  000BA8  58                 	db	88
    85  000BA9  58                 	db	88
    86  000BAA  58                 	db	88
    87  000BAB  58                 	db	88
    88  000BAC  58                 	db	88
    89  000BAD  58                 	db	88
    90  000BAE  58                 	db	88
    91  000BAF  58                 	db	88
    92  000BB0  00                 	db	0
    93  0000                     _TXREG	set	4013
    94  0000                     _RCREG	set	4014
    95  0000                     _SPBRG	set	4015
    96  0000                     _TXSTA	set	4012
    97  0000                     _LATB	set	3978
    98  0000                     _ADCON1bits	set	4033
    99  0000                     _TXSTAbits	set	4012
   100  0000                     _T2CONbits	set	4042
   101  0000                     _RCSTA	set	4011
   102  0000                     _SSPSTATbits	set	4039
   103  0000                     _TRISCbits	set	3988
   104  0000                     _INTCONbits	set	4082
   105  0000                     _LATC	set	3979
   106  0000                     _PORTB	set	3969
   107  0000                     _PORTCbits	set	3970
   108  0000                     _LATCbits	set	3979
   109  0000                     _PIE1bits	set	3997
   110  0000                     _RCSTAbits	set	4011
   111  0000                     _PIR1bits	set	3998
   112  0000                     _TRISA	set	3986
   113  0000                     _LATA	set	3977
   114  0000                     _SSPCON1bits	set	4038
   115  0000                     _SSPSTAT	set	4039
   116  0000                     _RCONbits	set	4048
   117  0000                     _TRISC	set	3988
   118  0000                     _TRISB	set	3987
   119  0000                     _INTCON	set	4082
   120  0000                     _SSPBUF	set	4041
   121  0000                     _TMR2	set	4044
   122  0000                     _PR2	set	4043
   123  0000                     _T2CON	set	4042
   124                           
   125                           	psect	smallconst
   126  00064C                     __psmallconst:
   127                           	callstack 0
   128  00064C  00                 	db	0
   129  00064D                     STR_1:
   130  00064D  4E                 	db	78	;'N'
   131  00064E  4E                 	db	78	;'N'
   132  00064F  4E                 	db	78	;'N'
   133  000650  4E                 	db	78	;'N'
   134  000651  4A                 	db	74	;'J'
   135  000652  52                 	db	82	;'R'
   136  000653  4F                 	db	79	;'O'
   137  000654  43                 	db	67	;'C'
   138  000655  4D                 	db	77	;'M'
   139  000656  44                 	db	68	;'D'
   140  000657  00                 	db	0
   141  000658                     STR_3:
   142  000658  4E                 	db	78	;'N'
   143  000659  4E                 	db	78	;'N'
   144  00065A  4E                 	db	78	;'N'
   145  00065B  4E                 	db	78	;'N'
   146  00065C  4A                 	db	74	;'J'
   147  00065D  52                 	db	82	;'R'
   148  00065E  4F                 	db	79	;'O'
   149  00065F  44                 	db	68	;'D'
   150  000660  41                 	db	65	;'A'
   151  000661  54                 	db	84	;'T'
   152  000662  00                 	db	0
   153  000663                     STR_2:
   154  000663  0A                 	db	10
   155  000664  0D                 	db	13
   156  000665  00                 	db	0
   157  000666  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  000A2A                     __pcinit:
   163                           	callstack 0
   164  000A2A                     start_initialization:
   165                           	callstack 0
   166  000A2A                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to COMRAM (13 bytes)
   170                           ; load TBLPTR registers with __pidataCOMRAM
   171  000A2A  0EA4               	movlw	low __pidataCOMRAM
   172  000A2C  6EF6               	movwf	tblptrl,c
   173  000A2E  0E0B               	movlw	high __pidataCOMRAM
   174  000A30  6EF7               	movwf	tblptrh,c
   175  000A32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   176  000A34  6EF8               	movwf	tblptru,c
   177  000A36  EE00  F018         	lfsr	0,__pdataCOMRAM
   178  000A3A  EE10 F00D          	lfsr	1,13
   179  000A3E                     copy_data0:
   180  000A3E  0009               	tblrd		*+
   181  000A40  CFF5 FFEE          	movff	tablat,postinc0
   182  000A44  50E5               	movf	postdec1,w,c
   183  000A46  50E1               	movf	fsr1l,w,c
   184  000A48  E1FA               	bnz	copy_data0
   185  000A4A                     end_of_initialization:
   186                           	callstack 0
   187  000A4A                     __end_of__initialization:
   188                           	callstack 0
   189  000A4A  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190  000A4C  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191  000A4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  000A50  6EF8               	movwf	tblptru,c
   193  000A52  0100               	movlb	0
   194  000A54  EF90  F004         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	dataCOMRAM
   197  000018                     __pdataCOMRAM:
   198                           	callstack 0
   199  000018                     _BufferDAT:
   200                           	callstack 0
   201  000018                     	ds	13
   202                           
   203                           	psect	cstackCOMRAM
   204  000001                     __pcstackCOMRAM:
   205                           	callstack 0
   206  000001                     ??_Interval_sleep:
   207  000001                     TransferByte_SPI@data:
   208                           	callstack 0
   209  000001                     ReadByte_USART@conta:
   210                           	callstack 0
   211  000001                     WriteByte_USART@byte:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x0
   215  000001                     	ds	1
   216  000002                     ??_ResetAD7177:
   217  000002                     ReadRegister_1bytesAD7177@command:
   218                           	callstack 0
   219  000002                     ReadRegister_2bytesAD7177@command:
   220                           	callstack 0
   221  000002                     ReadRegister_3bytesAD7177@command:
   222                           	callstack 0
   223  000002                     WriteRegister_2bytesAD7177@BYTE_HIGH:
   224                           	callstack 0
   225  000002                     WriteRegister_3bytesAD7177@BYTE_HIGH:
   226                           	callstack 0
   227  000002                     Interval_sleep@times:
   228                           	callstack 0
   229  000002                     ReadByte_USART@Ready:
   230                           	callstack 0
   231  000002                     print_string@str:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x1
   235  000002                     	ds	1
   236  000003                     ResetAD7177@conta:
   237                           	callstack 0
   238  000003                     WriteRegister_2bytesAD7177@BYTE_LOW:
   239                           	callstack 0
   240  000003                     WriteRegister_3bytesAD7177@BYTE_MEDIUM:
   241                           	callstack 0
   242  000003                     Interval_sleep@i:
   243                           	callstack 0
   244  000003                     ReceiveCMD_USART@conta_byte:
   245                           	callstack 0
   246  000003                     ReceiveDAT_USART@data_byte:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x2
   250  000003                     	ds	1
   251  000004                     WriteRegister_2bytesAD7177@command:
   252                           	callstack 0
   253  000004                     WriteRegister_3bytesAD7177@BYTE_LOW:
   254                           	callstack 0
   255  000004                     ReceiveCMD_USART@data_byte:
   256                           	callstack 0
   257  000004                     ReceiveDAT_USART@conta_byte:
   258                           	callstack 0
   259  000004                     TransmitCMD_USART@CMD_ID:
   260                           	callstack 0
   261  000004                     TransmitDAT_USART@DAT_ID:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x3
   265  000004                     	ds	1
   266  000005                     WriteRegister_3bytesAD7177@command:
   267                           	callstack 0
   268  000005                     TransmitDAT_USART@conta:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x4
   272  000005                     	ds	1
   273  000006                     ??_Interrups:
   274                           
   275                           ; 1 bytes @ 0x5
   276  000006                     	ds	13
   277  000013                     Interrups@samples:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x12
   281  000013                     	ds	1
   282  000014                     Interrups@interval:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x13
   286  000014                     	ds	1
   287  000015                     Interrups@conta:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x14
   291  000015                     	ds	1
   292  000016                     Interrups@conta_10:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x15
   296  000016                     	ds	1
   297  000017                     Interrups@ID:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x16
   301  000017                     	ds	1
   302  000018                     
   303                           ; 1 bytes @ 0x17
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 260 in file "Eval_AD7177.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   323 ;;      Params:         0       0       0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0
   326 ;;      Totals:         0       0       0       0       0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels required when called: 5
   329 ;; This function calls:
   330 ;;		_ClosePort_SPI
   331 ;;		_CloseSerialPort
   332 ;;		_ConfigPort_SPI
   333 ;;		_ConfigSerialPort
   334 ;;		_OpenPort_SPI
   335 ;;		_OpenSerialPort
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text0
   342  000920                     __ptext0:
   343                           	callstack 0
   344  000920                     _main:
   345                           	callstack 26
   346  000920  FFFF               	dw	65535	; assembler added errata NOP
   347                           
   348                           ;Eval_AD7177.c: 264:     ADCON1bits.PCFG = 0x07;
   349  000922  50C1               	movf	193,w,c	;volatile
   350  000924  0BF0               	andlw	-16
   351  000926  0907               	iorlw	7
   352  000928  6EC1               	movwf	193,c	;volatile
   353                           
   354                           ;Eval_AD7177.c: 265:     LATA = 0;
   355  00092A  0E00               	movlw	0
   356  00092C  6E89               	movwf	137,c	;volatile
   357                           
   358                           ;Eval_AD7177.c: 266:     LATB = 0;
   359  00092E  0E00               	movlw	0
   360  000930  6E8A               	movwf	138,c	;volatile
   361                           
   362                           ;Eval_AD7177.c: 267:     LATC = 0;
   363  000932  0E00               	movlw	0
   364  000934  6E8B               	movwf	139,c	;volatile
   365                           
   366                           ;Eval_AD7177.c: 268:     TRISA = 0;
   367  000936  0E00               	movlw	0
   368  000938  6E92               	movwf	146,c	;volatile
   369                           
   370                           ;Eval_AD7177.c: 269:     TRISB = 0;
   371  00093A  0E00               	movlw	0
   372  00093C  6E93               	movwf	147,c	;volatile
   373                           
   374                           ;Eval_AD7177.c: 270:     TRISC = 0;
   375  00093E  0E00               	movlw	0
   376  000940  6E94               	movwf	148,c	;volatile
   377  000942                     
   378                           ;Eval_AD7177.c: 276:     LATCbits.LATC2 = 1;
   379  000942  848B               	bsf	139,2,c	;volatile
   380  000944                     
   381                           ;Eval_AD7177.c: 277:     ConfigPort_SPI();
   382  000944  ECB8  F005         	call	_ConfigPort_SPI	;wreg free
   383                           
   384                           ;Eval_AD7177.c: 278:     OpenPort_SPI();
   385  000948  ECDD  F005         	call	_OpenPort_SPI	;wreg free
   386  00094C                     
   387                           ;Eval_AD7177.c: 281:     ConfigSerialPort();
   388  00094C  EC9A  F005         	call	_ConfigSerialPort	;wreg free
   389  000950                     
   390                           ;Eval_AD7177.c: 282:     OpenSerialPort();
   391  000950  ECD9  F005         	call	_OpenSerialPort	;wreg free
   392  000954                     
   393                           ;Eval_AD7177.c: 287:     RCONbits.IPEN = 0;
   394  000954  9ED0               	bcf	208,7,c	;volatile
   395  000956                     
   396                           ;Eval_AD7177.c: 288:     INTCON = 0x00;
   397  000956  0E00               	movlw	0
   398  000958  6EF2               	movwf	242,c	;volatile
   399  00095A                     
   400                           ;Eval_AD7177.c: 290:     INTCONbits.PEIE = 1;
   401  00095A  8CF2               	bsf	242,6,c	;volatile
   402  00095C                     
   403                           ;Eval_AD7177.c: 291:     INTCONbits.GIE = 1;
   404  00095C  8EF2               	bsf	242,7,c	;volatile
   405  00095E                     l153:
   406  00095E  FFFF               	dw	65535	; assembler added errata NOP
   407  000960  EFAF  F004         	goto	l153
   408  000964  EF24  F003         	goto	start
   409  000968                     __end_of_main:
   410                           	callstack 0
   411                           
   412 ;; *************** function _OpenSerialPort *****************
   413 ;; Defined at:
   414 ;;		line 24 in file "LIB18F_USART.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		None
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   428 ;;      Params:         0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; Hardware stack levels required when called: 4
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text1
   443  000BB2                     __ptext1:
   444                           	callstack 0
   445  000BB2                     _OpenSerialPort:
   446                           	callstack 0
   447  000BB2  FFFF               	dw	65535	; assembler added errata NOP
   448  000BB4                     
   449                           ;LIB18F_USART.c: 26:     RCSTAbits.SPEN = 1;
   450  000BB4  8EAB               	bsf	171,7,c	;volatile
   451  000BB6  0012               	return		;funcret
   452  000BB8  FFFF               	dw	65535	; errata NOP
   453  000BBA                     __end_of_OpenSerialPort:
   454                           	callstack 0
   455                           
   456 ;; *************** function _OpenPort_SPI *****************
   457 ;; Defined at:
   458 ;;		line 23 in file "LIB18F_SPI.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		None
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   472 ;;      Params:         0       0       0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used: 1
   478 ;; Hardware stack levels required when called: 4
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text2
   487  000BBA                     __ptext2:
   488                           	callstack 0
   489  000BBA                     _OpenPort_SPI:
   490                           	callstack 0
   491  000BBA  FFFF               	dw	65535	; assembler added errata NOP
   492  000BBC                     
   493                           ;LIB18F_SPI.c: 25:     SSPCON1bits.SSPEN = 1;
   494  000BBC  8AC6               	bsf	198,5,c	;volatile
   495  000BBE  0012               	return		;funcret
   496  000BC0  FFFF               	dw	65535	; errata NOP
   497  000BC2                     __end_of_OpenPort_SPI:
   498                           	callstack 0
   499                           
   500 ;; *************** function _ConfigSerialPort *****************
   501 ;; Defined at:
   502 ;;		line 8 in file "LIB18F_USART.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   516 ;;      Params:         0       0       0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 4
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text3
   531  000B34                     __ptext3:
   532                           	callstack 0
   533  000B34                     _ConfigSerialPort:
   534                           	callstack 0
   535  000B34  FFFF               	dw	65535	; assembler added errata NOP
   536  000B36                     
   537                           ;LIB18F_USART.c: 10:     TRISCbits.TRISC6 = 0;
   538  000B36  9C94               	bcf	148,6,c	;volatile
   539                           
   540                           ;LIB18F_USART.c: 11:     TRISCbits.TRISC7 = 1;
   541  000B38  8E94               	bsf	148,7,c	;volatile
   542  000B3A                     
   543                           ;LIB18F_USART.c: 13:     TXSTA = 0b00100100;
   544  000B3A  0E24               	movlw	36
   545  000B3C  6EAC               	movwf	172,c	;volatile
   546                           
   547                           ;LIB18F_USART.c: 14:     RCSTA = 0b00010000;
   548  000B3E  0E10               	movlw	16
   549  000B40  6EAB               	movwf	171,c	;volatile
   550                           
   551                           ;LIB18F_USART.c: 16:     SPBRG = 63;
   552  000B42  0E3F               	movlw	63
   553  000B44  6EAF               	movwf	175,c	;volatile
   554  000B46                     
   555                           ;LIB18F_USART.c: 18:     PIE1bits.RCIE = 1;
   556  000B46  8A9D               	bsf	157,5,c	;volatile
   557                           
   558                           ;LIB18F_USART.c: 20:     T2CON = 0b01111011;
   559  000B48  0E7B               	movlw	123
   560  000B4A  6ECA               	movwf	202,c	;volatile
   561  000B4C                     
   562                           ;LIB18F_USART.c: 21:     PR2 = 0xFF;
   563  000B4C  68CB               	setf	203,c	;volatile
   564  000B4E  0012               	return		;funcret
   565  000B50  FFFF               	dw	65535	; errata NOP
   566  000B52                     __end_of_ConfigSerialPort:
   567                           	callstack 0
   568                           
   569 ;; *************** function _ConfigPort_SPI *****************
   570 ;; Defined at:
   571 ;;		line 11 in file "LIB18F_SPI.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   585 ;;      Params:         0       0       0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 4
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text4
   600  000B70                     __ptext4:
   601                           	callstack 0
   602  000B70                     _ConfigPort_SPI:
   603                           	callstack 0
   604  000B70  FFFF               	dw	65535	; assembler added errata NOP
   605  000B72                     
   606                           ;LIB18F_SPI.c: 13:     TRISCbits.TRISC3 = 0;
   607  000B72  9694               	bcf	148,3,c	;volatile
   608                           
   609                           ;LIB18F_SPI.c: 14:     TRISCbits.TRISC4 = 1;
   610  000B74  8894               	bsf	148,4,c	;volatile
   611                           
   612                           ;LIB18F_SPI.c: 15:     TRISCbits.TRISC5 = 0;
   613  000B76  9A94               	bcf	148,5,c	;volatile
   614  000B78                     
   615                           ;LIB18F_SPI.c: 17:     SSPSTAT = 0b00000000;
   616  000B78  0E00               	movlw	0
   617  000B7A  6EC7               	movwf	199,c	;volatile
   618  000B7C                     
   619                           ;LIB18F_SPI.c: 18:     SSPCON1bits.CKP = 1;
   620  000B7C  88C6               	bsf	198,4,c	;volatile
   621                           
   622                           ;LIB18F_SPI.c: 19:     SSPCON1bits.SSPM = 0x01;
   623  000B7E  50C6               	movf	198,w,c	;volatile
   624  000B80  0BF0               	andlw	-16
   625  000B82  0901               	iorlw	1
   626  000B84  6EC6               	movwf	198,c	;volatile
   627  000B86  0012               	return		;funcret
   628  000B88  FFFF               	dw	65535	; errata NOP
   629  000B8A                     __end_of_ConfigPort_SPI:
   630                           	callstack 0
   631                           
   632 ;; *************** function _CloseSerialPort *****************
   633 ;; Defined at:
   634 ;;		line 29 in file "LIB18F_USART.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		None
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   648 ;;      Params:         0       0       0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 4
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text5
   663  000BC2                     __ptext5:
   664                           	callstack 0
   665  000BC2                     _CloseSerialPort:
   666                           	callstack 26
   667  000BC2  FFFF               	dw	65535	; assembler added errata NOP
   668                           
   669                           ;LIB18F_USART.c: 31:     RCSTAbits.SPEN = 0;
   670  000BC4  9EAB               	bcf	171,7,c	;volatile
   671  000BC6  0012               	return		;funcret
   672  000BC8  FFFF               	dw	65535	; errata NOP
   673  000BCA                     __end_of_CloseSerialPort:
   674                           	callstack 0
   675                           
   676 ;; *************** function _ClosePort_SPI *****************
   677 ;; Defined at:
   678 ;;		line 29 in file "LIB18F_SPI.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		None
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   692 ;;      Params:         0       0       0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 4
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text6
   707  000BCA                     __ptext6:
   708                           	callstack 0
   709  000BCA                     _ClosePort_SPI:
   710                           	callstack 26
   711  000BCA  FFFF               	dw	65535	; assembler added errata NOP
   712                           
   713                           ;LIB18F_SPI.c: 31:     SSPCON1bits.SSPEN = 0;
   714  000BCC  9AC6               	bcf	198,5,c	;volatile
   715  000BCE  0012               	return		;funcret
   716  000BD0  FFFF               	dw	65535	; errata NOP
   717  000BD2                     __end_of_ClosePort_SPI:
   718                           	callstack 0
   719                           
   720 ;; *************** function _Interrups *****************
   721 ;; Defined at:
   722 ;;		line 80 in file "Eval_AD7177.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  ID              1   22[COMRAM] unsigned char 
   727 ;;  conta_10        1   21[COMRAM] unsigned char 
   728 ;;  conta           1   20[COMRAM] unsigned char 
   729 ;;  interval        1   19[COMRAM] unsigned char 
   730 ;;  samples         1   18[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   740 ;;      Params:         0       0       0       0       0       0       0
   741 ;;      Locals:         5       0       0       0       0       0       0
   742 ;;      Temps:         13       0       0       0       0       0       0
   743 ;;      Totals:        18       0       0       0       0       0       0
   744 ;;Total ram usage:       18 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 3
   747 ;; This function calls:
   748 ;;		_Interval_sleep
   749 ;;		_ReadRegister_1bytesAD7177
   750 ;;		_ReadRegister_2bytesAD7177
   751 ;;		_ReadRegister_3bytesAD7177
   752 ;;		_ReceiveCMD_USART
   753 ;;		_ReceiveDAT_USART
   754 ;;		_ResetAD7177
   755 ;;		_TransferByte_SPI
   756 ;;		_TransmitCMD_USART
   757 ;;		_TransmitDAT_USART
   758 ;;		_WriteRegister_2bytesAD7177
   759 ;;		_WriteRegister_3bytesAD7177
   760 ;; This function is called by:
   761 ;;		Interrupt level 2
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	intcode
   766  000008                     __pintcode:
   767                           	callstack 0
   768  000008                     _Interrups:
   769                           	callstack 0
   770  000008  FFFF               	dw	65535	; assembler added errata NOP
   771                           
   772                           ;incstack = 0
   773  00000A  8225               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   774  00000C  CFD9 F00D          	movff	fsr2l,??_Interrups+7
   775  000010  CFDA F00E          	movff	fsr2h,??_Interrups+8
   776  000014  CFF6 F00F          	movff	tblptrl,??_Interrups+9
   777  000018  CFF7 F010          	movff	tblptrh,??_Interrups+10
   778  00001C  CFF8 F011          	movff	tblptru,??_Interrups+11
   779  000020  CFF5 F012          	movff	tablat,??_Interrups+12
   780  000024                     
   781                           ;Eval_AD7177.c: 81:     unsigned char ID, conta, samples, interval, conta_10;;Eval_AD717
      +                          7.c: 82:     if((PIE1bits.RC1IE == 1) && (PIR1bits.RC1IF == 1)){
   782  000024  AA9D               	btfss	157,5,c	;volatile
   783  000026  EF17  F000         	goto	i2u52_41
   784  00002A  EF1A  F000         	goto	i2u52_40
   785  00002E                     i2u52_41:
   786  00002E  FFFF               	dw	65535	; assembler added errata NOP
   787  000030  EF14  F003         	goto	i2l148
   788  000034                     i2u52_40:
   789  000034  FFFF               	dw	65535	; assembler added errata NOP
   790  000036  AA9E               	btfss	158,5,c	;volatile
   791  000038  EF20  F000         	goto	i2u53_41
   792  00003C  EF23  F000         	goto	i2u53_40
   793  000040                     i2u53_41:
   794  000040  FFFF               	dw	65535	; assembler added errata NOP
   795  000042  EF14  F003         	goto	i2l148
   796  000046                     i2u53_40:
   797  000046  FFFF               	dw	65535	; assembler added errata NOP
   798  000048                     
   799                           ;Eval_AD7177.c: 83:         ID = ReceiveCMD_USART();
   800  000048  ECB7  F003         	call	_ReceiveCMD_USART	;wreg free
   801  00004C  6E17               	movwf	Interrups@ID^0,c
   802                           
   803                           ;Eval_AD7177.c: 84:         switch(ID){
   804  00004E  EFDD  F002         	goto	i2l1771
   805  000052                     i2l1563:
   806  000052  FFFF               	dw	65535	; assembler added errata NOP
   807                           
   808                           ;Eval_AD7177.c: 86:                 ResetAD7177();
   809  000054  ECD7  F004         	call	_ResetAD7177	;wreg free
   810  000058                     
   811                           ;Eval_AD7177.c: 87:                 TransmitCMD_USART('0');
   812  000058  0E30               	movlw	48
   813  00005A  EC41  F005         	call	_TransmitCMD_USART
   814                           
   815                           ;Eval_AD7177.c: 88:                 break;
   816  00005E  EF14  F003         	goto	i2l148
   817  000062                     i2l1567:
   818  000062  FFFF               	dw	65535	; assembler added errata NOP
   819                           
   820                           ;Eval_AD7177.c: 90:                 TransmitCMD_USART('1');
   821  000064  0E31               	movlw	49
   822  000066  EC41  F005         	call	_TransmitCMD_USART
   823  00006A                     
   824                           ;Eval_AD7177.c: 91:                 ID = ReceiveDAT_USART();
   825  00006A  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
   826  00006E  6E17               	movwf	Interrups@ID^0,c
   827  000070                     
   828                           ;Eval_AD7177.c: 92:                 if(ID == 'X'){
   829  000070  0E58               	movlw	88
   830  000072  1817               	xorwf	Interrups@ID^0,w,c
   831  000074  A4D8               	btfss	status,2,c
   832  000076  EF3F  F000         	goto	i2u54_41
   833  00007A  EF42  F000         	goto	i2u54_40
   834  00007E                     i2u54_41:
   835  00007E  FFFF               	dw	65535	; assembler added errata NOP
   836  000080  EF46  F000         	goto	i2l1575
   837  000084                     i2u54_40:
   838  000084  FFFF               	dw	65535	; assembler added errata NOP
   839  000086                     
   840                           ;Eval_AD7177.c: 93:                     RCSTAbits.CREN = 1;
   841  000086  88AB               	bsf	171,4,c	;volatile
   842                           
   843                           ;Eval_AD7177.c: 94:                 }else if(ID == '1'){
   844  000088  EF55  F000         	goto	i2l1579
   845  00008C                     i2l1575:
   846  00008C  FFFF               	dw	65535	; assembler added errata NOP
   847  00008E  0E31               	movlw	49
   848  000090  1817               	xorwf	Interrups@ID^0,w,c
   849  000092  A4D8               	btfss	status,2,c
   850  000094  EF4E  F000         	goto	i2u55_41
   851  000098  EF51  F000         	goto	i2u55_40
   852  00009C                     i2u55_41:
   853  00009C  FFFF               	dw	65535	; assembler added errata NOP
   854  00009E  EF55  F000         	goto	i2l1579
   855  0000A2                     i2u55_40:
   856  0000A2  FFFF               	dw	65535	; assembler added errata NOP
   857  0000A4                     
   858                           ;Eval_AD7177.c: 95:                     ReadRegister_1bytesAD7177(BufferDAT[0]);
   859  0000A4  5018               	movf	_BufferDAT^0,w,c
   860  0000A6  ECC5  F005         	call	_ReadRegister_1bytesAD7177
   861  0000AA                     i2l1579:
   862  0000AA  FFFF               	dw	65535	; assembler added errata NOP
   863                           
   864                           ;Eval_AD7177.c: 97:                 TransmitDAT_USART(ID);
   865  0000AC  5017               	movf	Interrups@ID^0,w,c
   866  0000AE  EC66  F004         	call	_TransmitDAT_USART
   867                           
   868                           ;Eval_AD7177.c: 98:                 break;
   869  0000B2  EF14  F003         	goto	i2l148
   870  0000B6                     i2l1581:
   871  0000B6  FFFF               	dw	65535	; assembler added errata NOP
   872                           
   873                           ;Eval_AD7177.c: 100:                 TransmitCMD_USART('2');
   874  0000B8  0E32               	movlw	50
   875  0000BA  EC41  F005         	call	_TransmitCMD_USART
   876  0000BE                     
   877                           ;Eval_AD7177.c: 101:                 ID = ReceiveDAT_USART();
   878  0000BE  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
   879  0000C2  6E17               	movwf	Interrups@ID^0,c
   880  0000C4                     
   881                           ;Eval_AD7177.c: 102:                 if(ID == 'X'){
   882  0000C4  0E58               	movlw	88
   883  0000C6  1817               	xorwf	Interrups@ID^0,w,c
   884  0000C8  A4D8               	btfss	status,2,c
   885  0000CA  EF69  F000         	goto	i2u56_41
   886  0000CE  EF6C  F000         	goto	i2u56_40
   887  0000D2                     i2u56_41:
   888  0000D2  FFFF               	dw	65535	; assembler added errata NOP
   889  0000D4  EF70  F000         	goto	i2l1589
   890  0000D8                     i2u56_40:
   891  0000D8  FFFF               	dw	65535	; assembler added errata NOP
   892  0000DA                     
   893                           ;Eval_AD7177.c: 103:                     RCSTAbits.CREN = 1;
   894  0000DA  88AB               	bsf	171,4,c	;volatile
   895                           
   896                           ;Eval_AD7177.c: 104:                 }else if(ID == '2'){
   897  0000DC  EF7F  F000         	goto	i2l1593
   898  0000E0                     i2l1589:
   899  0000E0  FFFF               	dw	65535	; assembler added errata NOP
   900  0000E2  0E32               	movlw	50
   901  0000E4  1817               	xorwf	Interrups@ID^0,w,c
   902  0000E6  A4D8               	btfss	status,2,c
   903  0000E8  EF78  F000         	goto	i2u57_41
   904  0000EC  EF7B  F000         	goto	i2u57_40
   905  0000F0                     i2u57_41:
   906  0000F0  FFFF               	dw	65535	; assembler added errata NOP
   907  0000F2  EF7F  F000         	goto	i2l1593
   908  0000F6                     i2u57_40:
   909  0000F6  FFFF               	dw	65535	; assembler added errata NOP
   910  0000F8                     
   911                           ;Eval_AD7177.c: 105:                     ReadRegister_2bytesAD7177(BufferDAT[0]);
   912  0000F8  5018               	movf	_BufferDAT^0,w,c
   913  0000FA  EC89  F005         	call	_ReadRegister_2bytesAD7177
   914  0000FE                     i2l1593:
   915  0000FE  FFFF               	dw	65535	; assembler added errata NOP
   916                           
   917                           ;Eval_AD7177.c: 107:                 TransmitDAT_USART(ID);
   918  000100  5017               	movf	Interrups@ID^0,w,c
   919  000102  EC66  F004         	call	_TransmitDAT_USART
   920                           
   921                           ;Eval_AD7177.c: 108:                 break;
   922  000106  EF14  F003         	goto	i2l148
   923  00010A                     i2l1595:
   924  00010A  FFFF               	dw	65535	; assembler added errata NOP
   925                           
   926                           ;Eval_AD7177.c: 110:                 TransmitCMD_USART('3');
   927  00010C  0E33               	movlw	51
   928  00010E  EC41  F005         	call	_TransmitCMD_USART
   929  000112                     
   930                           ;Eval_AD7177.c: 111:                 ID = ReceiveDAT_USART();
   931  000112  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
   932  000116  6E17               	movwf	Interrups@ID^0,c
   933  000118                     
   934                           ;Eval_AD7177.c: 112:                 if(ID == 'X'){
   935  000118  0E58               	movlw	88
   936  00011A  1817               	xorwf	Interrups@ID^0,w,c
   937  00011C  A4D8               	btfss	status,2,c
   938  00011E  EF93  F000         	goto	i2u58_41
   939  000122  EF96  F000         	goto	i2u58_40
   940  000126                     i2u58_41:
   941  000126  FFFF               	dw	65535	; assembler added errata NOP
   942  000128  EF9A  F000         	goto	i2l1603
   943  00012C                     i2u58_40:
   944  00012C  FFFF               	dw	65535	; assembler added errata NOP
   945  00012E                     
   946                           ;Eval_AD7177.c: 113:                     RCSTAbits.CREN = 1;
   947  00012E  88AB               	bsf	171,4,c	;volatile
   948                           
   949                           ;Eval_AD7177.c: 114:                 }else if(ID == '3'){
   950  000130  EFA9  F000         	goto	i2l1607
   951  000134                     i2l1603:
   952  000134  FFFF               	dw	65535	; assembler added errata NOP
   953  000136  0E33               	movlw	51
   954  000138  1817               	xorwf	Interrups@ID^0,w,c
   955  00013A  A4D8               	btfss	status,2,c
   956  00013C  EFA2  F000         	goto	i2u59_41
   957  000140  EFA5  F000         	goto	i2u59_40
   958  000144                     i2u59_41:
   959  000144  FFFF               	dw	65535	; assembler added errata NOP
   960  000146  EFA9  F000         	goto	i2l1607
   961  00014A                     i2u59_40:
   962  00014A  FFFF               	dw	65535	; assembler added errata NOP
   963  00014C                     
   964                           ;Eval_AD7177.c: 115:                     ReadRegister_3bytesAD7177(BufferDAT[0]);
   965  00014C  5018               	movf	_BufferDAT^0,w,c
   966  00014E  EC2C  F005         	call	_ReadRegister_3bytesAD7177
   967  000152                     i2l1607:
   968  000152  FFFF               	dw	65535	; assembler added errata NOP
   969                           
   970                           ;Eval_AD7177.c: 117:                 TransmitDAT_USART(ID);
   971  000154  5017               	movf	Interrups@ID^0,w,c
   972  000156  EC66  F004         	call	_TransmitDAT_USART
   973                           
   974                           ;Eval_AD7177.c: 118:                 break;
   975  00015A  EF14  F003         	goto	i2l148
   976  00015E                     i2l1609:
   977  00015E  FFFF               	dw	65535	; assembler added errata NOP
   978                           
   979                           ;Eval_AD7177.c: 120:                 TransmitCMD_USART('4');
   980  000160  0E34               	movlw	52
   981  000162  EC41  F005         	call	_TransmitCMD_USART
   982  000166                     
   983                           ;Eval_AD7177.c: 121:                 ID = ReceiveDAT_USART();
   984  000166  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
   985  00016A  6E17               	movwf	Interrups@ID^0,c
   986  00016C                     
   987                           ;Eval_AD7177.c: 122:                 if(ID == 'X'){
   988  00016C  0E58               	movlw	88
   989  00016E  1817               	xorwf	Interrups@ID^0,w,c
   990  000170  A4D8               	btfss	status,2,c
   991  000172  EFBD  F000         	goto	i2u60_41
   992  000176  EFC0  F000         	goto	i2u60_40
   993  00017A                     i2u60_41:
   994  00017A  FFFF               	dw	65535	; assembler added errata NOP
   995  00017C  EFC4  F000         	goto	i2l1617
   996  000180                     i2u60_40:
   997  000180  FFFF               	dw	65535	; assembler added errata NOP
   998  000182                     
   999                           ;Eval_AD7177.c: 123:                     RCSTAbits.CREN = 1;
  1000  000182  88AB               	bsf	171,4,c	;volatile
  1001                           
  1002                           ;Eval_AD7177.c: 124:                 }else if(ID == '4'){
  1003  000184  EFD7  F000         	goto	i2l1621
  1004  000188                     i2l1617:
  1005  000188  FFFF               	dw	65535	; assembler added errata NOP
  1006  00018A  0E34               	movlw	52
  1007  00018C  1817               	xorwf	Interrups@ID^0,w,c
  1008  00018E  A4D8               	btfss	status,2,c
  1009  000190  EFCC  F000         	goto	i2u61_41
  1010  000194  EFCF  F000         	goto	i2u61_40
  1011  000198                     i2u61_41:
  1012  000198  FFFF               	dw	65535	; assembler added errata NOP
  1013  00019A  EFD7  F000         	goto	i2l1621
  1014  00019E                     i2u61_40:
  1015  00019E  FFFF               	dw	65535	; assembler added errata NOP
  1016  0001A0                     
  1017                           ;Eval_AD7177.c: 125:                     WriteRegister_2bytesAD7177(BufferDAT[0], Buffer
      +                          DAT[1], BufferDAT[2]);
  1018  0001A0  C019  F002         	movff	_BufferDAT+1,WriteRegister_2bytesAD7177@BYTE_HIGH
  1019  0001A4  C01A  F003         	movff	_BufferDAT+2,WriteRegister_2bytesAD7177@BYTE_LOW
  1020  0001A8  5018               	movf	_BufferDAT^0,w,c
  1021  0001AA  ECA9  F005         	call	_WriteRegister_2bytesAD7177
  1022  0001AE                     i2l1621:
  1023  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  1024                           
  1025                           ;Eval_AD7177.c: 127:                 TransmitDAT_USART(ID);
  1026  0001B0  5017               	movf	Interrups@ID^0,w,c
  1027  0001B2  EC66  F004         	call	_TransmitDAT_USART
  1028                           
  1029                           ;Eval_AD7177.c: 128:                 break;
  1030  0001B6  EF14  F003         	goto	i2l148
  1031  0001BA                     i2l1623:
  1032  0001BA  FFFF               	dw	65535	; assembler added errata NOP
  1033                           
  1034                           ;Eval_AD7177.c: 130:                 TransmitCMD_USART('5');
  1035  0001BC  0E35               	movlw	53
  1036  0001BE  EC41  F005         	call	_TransmitCMD_USART
  1037  0001C2                     
  1038                           ;Eval_AD7177.c: 131:                 ID = ReceiveDAT_USART();
  1039  0001C2  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
  1040  0001C6  6E17               	movwf	Interrups@ID^0,c
  1041  0001C8                     
  1042                           ;Eval_AD7177.c: 132:                 if(ID == 'X'){
  1043  0001C8  0E58               	movlw	88
  1044  0001CA  1817               	xorwf	Interrups@ID^0,w,c
  1045  0001CC  A4D8               	btfss	status,2,c
  1046  0001CE  EFEB  F000         	goto	i2u62_41
  1047  0001D2  EFEE  F000         	goto	i2u62_40
  1048  0001D6                     i2u62_41:
  1049  0001D6  FFFF               	dw	65535	; assembler added errata NOP
  1050  0001D8  EFF2  F000         	goto	i2l1631
  1051  0001DC                     i2u62_40:
  1052  0001DC  FFFF               	dw	65535	; assembler added errata NOP
  1053  0001DE                     
  1054                           ;Eval_AD7177.c: 133:                     RCSTAbits.CREN = 1;
  1055  0001DE  88AB               	bsf	171,4,c	;volatile
  1056                           
  1057                           ;Eval_AD7177.c: 134:                 }else if(ID == '5'){
  1058  0001E0  EF07  F001         	goto	i2l1635
  1059  0001E4                     i2l1631:
  1060  0001E4  FFFF               	dw	65535	; assembler added errata NOP
  1061  0001E6  0E35               	movlw	53
  1062  0001E8  1817               	xorwf	Interrups@ID^0,w,c
  1063  0001EA  A4D8               	btfss	status,2,c
  1064  0001EC  EFFA  F000         	goto	i2u63_41
  1065  0001F0  EFFD  F000         	goto	i2u63_40
  1066  0001F4                     i2u63_41:
  1067  0001F4  FFFF               	dw	65535	; assembler added errata NOP
  1068  0001F6  EF07  F001         	goto	i2l1635
  1069  0001FA                     i2u63_40:
  1070  0001FA  FFFF               	dw	65535	; assembler added errata NOP
  1071  0001FC                     
  1072                           ;Eval_AD7177.c: 135:                     WriteRegister_3bytesAD7177(BufferDAT[0], Buffer
      +                          DAT[1], BufferDAT[2], BufferDAT[3]);
  1073  0001FC  C019  F002         	movff	_BufferDAT+1,WriteRegister_3bytesAD7177@BYTE_HIGH
  1074  000200  C01A  F003         	movff	_BufferDAT+2,WriteRegister_3bytesAD7177@BYTE_MEDIUM
  1075  000204  C01B  F004         	movff	_BufferDAT+3,WriteRegister_3bytesAD7177@BYTE_LOW
  1076  000208  5018               	movf	_BufferDAT^0,w,c
  1077  00020A  EC54  F005         	call	_WriteRegister_3bytesAD7177
  1078  00020E                     i2l1635:
  1079  00020E  FFFF               	dw	65535	; assembler added errata NOP
  1080                           
  1081                           ;Eval_AD7177.c: 137:                 TransmitDAT_USART(ID);
  1082  000210  5017               	movf	Interrups@ID^0,w,c
  1083  000212  EC66  F004         	call	_TransmitDAT_USART
  1084                           
  1085                           ;Eval_AD7177.c: 138:                 break;
  1086  000216  EF14  F003         	goto	i2l148
  1087  00021A                     i2l1637:
  1088  00021A  FFFF               	dw	65535	; assembler added errata NOP
  1089                           
  1090                           ;Eval_AD7177.c: 140:                 TransmitCMD_USART('6');
  1091  00021C  0E36               	movlw	54
  1092  00021E  EC41  F005         	call	_TransmitCMD_USART
  1093  000222                     
  1094                           ;Eval_AD7177.c: 141:                 ID = ReceiveDAT_USART();
  1095  000222  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
  1096  000226  6E17               	movwf	Interrups@ID^0,c
  1097  000228                     
  1098                           ;Eval_AD7177.c: 142:                 if(ID == 'X'){
  1099  000228  0E58               	movlw	88
  1100  00022A  1817               	xorwf	Interrups@ID^0,w,c
  1101  00022C  A4D8               	btfss	status,2,c
  1102  00022E  EF1B  F001         	goto	i2u64_41
  1103  000232  EF1E  F001         	goto	i2u64_40
  1104  000236                     i2u64_41:
  1105  000236  FFFF               	dw	65535	; assembler added errata NOP
  1106  000238  EF25  F001         	goto	i2l1647
  1107  00023C                     i2u64_40:
  1108  00023C  FFFF               	dw	65535	; assembler added errata NOP
  1109  00023E                     
  1110                           ;Eval_AD7177.c: 143:                     TransmitDAT_USART(ID);
  1111  00023E  5017               	movf	Interrups@ID^0,w,c
  1112  000240  EC66  F004         	call	_TransmitDAT_USART
  1113  000244                     
  1114                           ;Eval_AD7177.c: 144:                     RCSTAbits.CREN = 1;
  1115  000244  88AB               	bsf	171,4,c	;volatile
  1116                           
  1117                           ;Eval_AD7177.c: 145:                 }else if(ID == '6'){
  1118  000246  EF14  F003         	goto	i2l148
  1119  00024A                     i2l1647:
  1120  00024A  FFFF               	dw	65535	; assembler added errata NOP
  1121  00024C  0E36               	movlw	54
  1122  00024E  1817               	xorwf	Interrups@ID^0,w,c
  1123  000250  A4D8               	btfss	status,2,c
  1124  000252  EF2D  F001         	goto	i2u65_41
  1125  000256  EF30  F001         	goto	i2u65_40
  1126  00025A                     i2u65_41:
  1127  00025A  FFFF               	dw	65535	; assembler added errata NOP
  1128  00025C  EF14  F003         	goto	i2l82
  1129  000260                     i2u65_40:
  1130  000260  FFFF               	dw	65535	; assembler added errata NOP
  1131  000262                     
  1132                           ;Eval_AD7177.c: 146:                     LATCbits.LATC2 = 0;
  1133  000262  948B               	bcf	139,2,c	;volatile
  1134                           
  1135                           ;Eval_AD7177.c: 147:                     samples = BufferDAT[0];
  1136  000264  C018  F013         	movff	_BufferDAT,Interrups@samples
  1137                           
  1138                           ;Eval_AD7177.c: 148:                     interval = BufferDAT[1];
  1139  000268  C019  F014         	movff	_BufferDAT+1,Interrups@interval
  1140  00026C                     
  1141                           ;Eval_AD7177.c: 149:                     for(conta=0; conta<(samples - 1); conta++){
  1142  00026C  0E00               	movlw	0
  1143  00026E  6E15               	movwf	Interrups@conta^0,c
  1144  000270  EF6C  F001         	goto	i2l1671
  1145  000274                     i2l1653:
  1146  000274  FFFF               	dw	65535	; assembler added errata NOP
  1147                           
  1148                           ;Eval_AD7177.c: 150:                         for(conta_10=0; conta_10 < 10; conta_10++){
  1149  000276  0E00               	movlw	0
  1150  000278  6E16               	movwf	Interrups@conta_10^0,c
  1151  00027A                     i2l111:
  1152  00027A  FFFF               	dw	65535	; assembler added errata NOP
  1153  00027C  B882               	btfsc	130,4,c	;volatile
  1154  00027E  EF43  F001         	goto	i2u66_41
  1155  000282  EF46  F001         	goto	i2u66_40
  1156  000286                     i2u66_41:
  1157  000286  FFFF               	dw	65535	; assembler added errata NOP
  1158  000288  EF3D  F001         	goto	i2l111
  1159  00028C                     i2u66_40:
  1160  00028C  FFFF               	dw	65535	; assembler added errata NOP
  1161  00028E                     
  1162                           ;Eval_AD7177.c: 152:                             TransferByte_SPI(0x44);
  1163  00028E  0E44               	movlw	68
  1164  000290  EC66  F005         	call	_TransferByte_SPI
  1165                           
  1166                           ;Eval_AD7177.c: 153:                             BufferDAT[0] = TransferByte_SPI(0x00);
  1167  000294  0E00               	movlw	0
  1168  000296  EC66  F005         	call	_TransferByte_SPI
  1169  00029A  6E18               	movwf	_BufferDAT^0,c
  1170                           
  1171                           ;Eval_AD7177.c: 154:                             BufferDAT[1] = TransferByte_SPI(0x00);
  1172  00029C  0E00               	movlw	0
  1173  00029E  EC66  F005         	call	_TransferByte_SPI
  1174  0002A2  6E19               	movwf	(_BufferDAT+1)^0,c
  1175                           
  1176                           ;Eval_AD7177.c: 155:                             BufferDAT[2] = TransferByte_SPI(0x00);
  1177  0002A4  0E00               	movlw	0
  1178  0002A6  EC66  F005         	call	_TransferByte_SPI
  1179  0002AA  6E1A               	movwf	(_BufferDAT+2)^0,c
  1180                           
  1181                           ;Eval_AD7177.c: 156:                             BufferDAT[3] = TransferByte_SPI(0x00);
  1182  0002AC  0E00               	movlw	0
  1183  0002AE  EC66  F005         	call	_TransferByte_SPI
  1184  0002B2  6E1B               	movwf	(_BufferDAT+3)^0,c
  1185  0002B4                     
  1186                           ;Eval_AD7177.c: 157:                             TransmitDAT_USART('6');
  1187  0002B4  0E36               	movlw	54
  1188  0002B6  EC66  F004         	call	_TransmitDAT_USART
  1189  0002BA                     
  1190                           ;Eval_AD7177.c: 158:                         }
  1191  0002BA  2A16               	incf	Interrups@conta_10^0,f,c
  1192  0002BC  0E09               	movlw	9
  1193  0002BE  6416               	cpfsgt	Interrups@conta_10^0,c
  1194  0002C0  EF64  F001         	goto	i2u67_41
  1195  0002C4  EF67  F001         	goto	i2u67_40
  1196  0002C8                     i2u67_41:
  1197  0002C8  FFFF               	dw	65535	; assembler added errata NOP
  1198  0002CA  EF3D  F001         	goto	i2l111
  1199  0002CE                     i2u67_40:
  1200  0002CE  FFFF               	dw	65535	; assembler added errata NOP
  1201  0002D0                     
  1202                           ;Eval_AD7177.c: 159:                         Interval_sleep(interval);
  1203  0002D0  5014               	movf	Interrups@interval^0,w,c
  1204  0002D2  ECF7  F004         	call	_Interval_sleep
  1205  0002D6                     
  1206                           ;Eval_AD7177.c: 160:                     }
  1207  0002D6  2A15               	incf	Interrups@conta^0,f,c
  1208  0002D8                     i2l1671:
  1209  0002D8  FFFF               	dw	65535	; assembler added errata NOP
  1210  0002DA  0EFF               	movlw	255
  1211  0002DC  6E06               	movwf	??_Interrups^0,c
  1212  0002DE  0EFF               	movlw	255
  1213  0002E0  6E07               	movwf	(??_Interrups+1)^0,c
  1214  0002E2  5013               	movf	Interrups@samples^0,w,c
  1215  0002E4  6E08               	movwf	(??_Interrups+2)^0,c
  1216  0002E6  6A09               	clrf	(??_Interrups+3)^0,c
  1217  0002E8  5006               	movf	??_Interrups^0,w,c
  1218  0002EA  2608               	addwf	(??_Interrups+2)^0,f,c
  1219  0002EC  5007               	movf	(??_Interrups+1)^0,w,c
  1220  0002EE  2209               	addwfc	(??_Interrups+3)^0,f,c
  1221  0002F0  5015               	movf	Interrups@conta^0,w,c
  1222  0002F2  6E0A               	movwf	(??_Interrups+4)^0,c
  1223  0002F4  6A0B               	clrf	(??_Interrups+5)^0,c
  1224  0002F6  5008               	movf	(??_Interrups+2)^0,w,c
  1225  0002F8  5C0A               	subwf	(??_Interrups+4)^0,w,c
  1226  0002FA  500B               	movf	(??_Interrups+5)^0,w,c
  1227  0002FC  0A80               	xorlw	128
  1228  0002FE  6E0C               	movwf	(??_Interrups+6)^0,c
  1229  000300  5009               	movf	(??_Interrups+3)^0,w,c
  1230  000302  0A80               	xorlw	128
  1231  000304  580C               	subwfb	(??_Interrups+6)^0,w,c
  1232  000306  A0D8               	btfss	status,0,c
  1233  000308  EF88  F001         	goto	i2u68_41
  1234  00030C  EF8B  F001         	goto	i2u68_40
  1235  000310                     i2u68_41:
  1236  000310  FFFF               	dw	65535	; assembler added errata NOP
  1237  000312  EF3A  F001         	goto	i2l1653
  1238  000316                     i2u68_40:
  1239  000316  FFFF               	dw	65535	; assembler added errata NOP
  1240  000318                     
  1241                           ;Eval_AD7177.c: 161:                     for(conta_10=0; conta_10 < 10; conta_10++){
  1242  000318  0E00               	movlw	0
  1243  00031A  6E16               	movwf	Interrups@conta_10^0,c
  1244  00031C                     i2l117:
  1245  00031C  FFFF               	dw	65535	; assembler added errata NOP
  1246  00031E  B882               	btfsc	130,4,c	;volatile
  1247  000320  EF94  F001         	goto	i2u69_41
  1248  000324  EF97  F001         	goto	i2u69_40
  1249  000328                     i2u69_41:
  1250  000328  FFFF               	dw	65535	; assembler added errata NOP
  1251  00032A  EF8E  F001         	goto	i2l117
  1252  00032E                     i2u69_40:
  1253  00032E  FFFF               	dw	65535	; assembler added errata NOP
  1254  000330                     
  1255                           ;Eval_AD7177.c: 163:                         TransferByte_SPI(0x44);
  1256  000330  0E44               	movlw	68
  1257  000332  EC66  F005         	call	_TransferByte_SPI
  1258                           
  1259                           ;Eval_AD7177.c: 164:                         BufferDAT[0] = TransferByte_SPI(0x00);
  1260  000336  0E00               	movlw	0
  1261  000338  EC66  F005         	call	_TransferByte_SPI
  1262  00033C  6E18               	movwf	_BufferDAT^0,c
  1263                           
  1264                           ;Eval_AD7177.c: 165:                         BufferDAT[1] = TransferByte_SPI(0x00);
  1265  00033E  0E00               	movlw	0
  1266  000340  EC66  F005         	call	_TransferByte_SPI
  1267  000344  6E19               	movwf	(_BufferDAT+1)^0,c
  1268                           
  1269                           ;Eval_AD7177.c: 166:                         BufferDAT[2] = TransferByte_SPI(0x00);
  1270  000346  0E00               	movlw	0
  1271  000348  EC66  F005         	call	_TransferByte_SPI
  1272  00034C  6E1A               	movwf	(_BufferDAT+2)^0,c
  1273                           
  1274                           ;Eval_AD7177.c: 167:                         BufferDAT[3] = TransferByte_SPI(0x00);
  1275  00034E  0E00               	movlw	0
  1276  000350  EC66  F005         	call	_TransferByte_SPI
  1277  000354  6E1B               	movwf	(_BufferDAT+3)^0,c
  1278  000356                     
  1279                           ;Eval_AD7177.c: 168:                         TransmitDAT_USART('6');
  1280  000356  0E36               	movlw	54
  1281  000358  EC66  F004         	call	_TransmitDAT_USART
  1282  00035C                     
  1283                           ;Eval_AD7177.c: 169:                     }
  1284  00035C  2A16               	incf	Interrups@conta_10^0,f,c
  1285  00035E  0E09               	movlw	9
  1286  000360  6416               	cpfsgt	Interrups@conta_10^0,c
  1287  000362  EFB5  F001         	goto	i2u70_41
  1288  000366  EFB8  F001         	goto	i2u70_40
  1289  00036A                     i2u70_41:
  1290  00036A  FFFF               	dw	65535	; assembler added errata NOP
  1291  00036C  EF8E  F001         	goto	i2l117
  1292  000370                     i2u70_40:
  1293  000370  FFFF               	dw	65535	; assembler added errata NOP
  1294  000372                     
  1295                           ;Eval_AD7177.c: 170:                     LATCbits.LATC2 = 1;
  1296  000372  848B               	bsf	139,2,c	;volatile
  1297  000374  EF14  F003         	goto	i2l148
  1298  000378                     i2l1687:
  1299  000378  FFFF               	dw	65535	; assembler added errata NOP
  1300                           
  1301                           ;Eval_AD7177.c: 174:                 TransmitCMD_USART('7');
  1302  00037A  0E37               	movlw	55
  1303  00037C  EC41  F005         	call	_TransmitCMD_USART
  1304  000380                     
  1305                           ;Eval_AD7177.c: 175:                 ID = ReceiveDAT_USART();
  1306  000380  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
  1307  000384  6E17               	movwf	Interrups@ID^0,c
  1308  000386                     
  1309                           ;Eval_AD7177.c: 176:                 if(ID == 'X'){
  1310  000386  0E58               	movlw	88
  1311  000388  1817               	xorwf	Interrups@ID^0,w,c
  1312  00038A  A4D8               	btfss	status,2,c
  1313  00038C  EFCA  F001         	goto	i2u71_41
  1314  000390  EFCD  F001         	goto	i2u71_40
  1315  000394                     i2u71_41:
  1316  000394  FFFF               	dw	65535	; assembler added errata NOP
  1317  000396  EFD1  F001         	goto	i2l1695
  1318  00039A                     i2u71_40:
  1319  00039A  FFFF               	dw	65535	; assembler added errata NOP
  1320  00039C                     
  1321                           ;Eval_AD7177.c: 177:                      RCSTAbits.CREN = 1;
  1322  00039C  88AB               	bsf	171,4,c	;volatile
  1323                           
  1324                           ;Eval_AD7177.c: 178:                 }else if(ID == '7'){
  1325  00039E  EF50  F002         	goto	i2l1721
  1326  0003A2                     i2l1695:
  1327  0003A2  FFFF               	dw	65535	; assembler added errata NOP
  1328  0003A4  0E37               	movlw	55
  1329  0003A6  1817               	xorwf	Interrups@ID^0,w,c
  1330  0003A8  A4D8               	btfss	status,2,c
  1331  0003AA  EFD9  F001         	goto	i2u72_41
  1332  0003AE  EFDC  F001         	goto	i2u72_40
  1333  0003B2                     i2u72_41:
  1334  0003B2  FFFF               	dw	65535	; assembler added errata NOP
  1335  0003B4  EF50  F002         	goto	i2l1721
  1336  0003B8                     i2u72_40:
  1337  0003B8  FFFF               	dw	65535	; assembler added errata NOP
  1338  0003BA  EF10  F002         	goto	i2l1717
  1339  0003BE                     i2l1699:
  1340  0003BE  FFFF               	dw	65535	; assembler added errata NOP
  1341                           
  1342                           ;Eval_AD7177.c: 181:                             PORTB = 0x40;
  1343  0003C0  0E40               	movlw	64
  1344  0003C2  6E81               	movwf	129,c	;volatile
  1345                           
  1346                           ;Eval_AD7177.c: 182:                             break;
  1347  0003C4  EF43  F002         	goto	i2l1719
  1348  0003C8                     i2l1701:
  1349  0003C8  FFFF               	dw	65535	; assembler added errata NOP
  1350                           
  1351                           ;Eval_AD7177.c: 184:                             PORTB = 0x60;
  1352  0003CA  0E60               	movlw	96
  1353  0003CC  6E81               	movwf	129,c	;volatile
  1354                           
  1355                           ;Eval_AD7177.c: 185:                             break;
  1356  0003CE  EF43  F002         	goto	i2l1719
  1357  0003D2                     i2l1703:
  1358  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  1359                           
  1360                           ;Eval_AD7177.c: 187:                             PORTB = 0x80;
  1361  0003D4  0E80               	movlw	128
  1362  0003D6  6E81               	movwf	129,c	;volatile
  1363                           
  1364                           ;Eval_AD7177.c: 188:                             break;
  1365  0003D8  EF43  F002         	goto	i2l1719
  1366  0003DC                     i2l1705:
  1367  0003DC  FFFF               	dw	65535	; assembler added errata NOP
  1368                           
  1369                           ;Eval_AD7177.c: 190:                             PORTB = 0xA0;
  1370  0003DE  0EA0               	movlw	160
  1371  0003E0  6E81               	movwf	129,c	;volatile
  1372                           
  1373                           ;Eval_AD7177.c: 191:                             break;
  1374  0003E2  EF43  F002         	goto	i2l1719
  1375  0003E6                     i2l1707:
  1376  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  1377                           
  1378                           ;Eval_AD7177.c: 193:                             PORTB = 0xB0;
  1379  0003E8  0EB0               	movlw	176
  1380  0003EA  6E81               	movwf	129,c	;volatile
  1381                           
  1382                           ;Eval_AD7177.c: 194:                             break;
  1383  0003EC  EF43  F002         	goto	i2l1719
  1384  0003F0                     i2l1709:
  1385  0003F0  FFFF               	dw	65535	; assembler added errata NOP
  1386                           
  1387                           ;Eval_AD7177.c: 196:                             PORTB = 0x50;
  1388  0003F2  0E50               	movlw	80
  1389  0003F4  6E81               	movwf	129,c	;volatile
  1390                           
  1391                           ;Eval_AD7177.c: 197:                             break;
  1392  0003F6  EF43  F002         	goto	i2l1719
  1393  0003FA                     i2l1711:
  1394  0003FA  FFFF               	dw	65535	; assembler added errata NOP
  1395                           
  1396                           ;Eval_AD7177.c: 199:                             PORTB = 0x70;
  1397  0003FC  0E70               	movlw	112
  1398  0003FE  6E81               	movwf	129,c	;volatile
  1399                           
  1400                           ;Eval_AD7177.c: 200:                             break;
  1401  000400  EF43  F002         	goto	i2l1719
  1402  000404                     i2l1713:
  1403  000404  FFFF               	dw	65535	; assembler added errata NOP
  1404                           
  1405                           ;Eval_AD7177.c: 202:                             PORTB = 0x90;
  1406  000406  0E90               	movlw	144
  1407  000408  6E81               	movwf	129,c	;volatile
  1408                           
  1409                           ;Eval_AD7177.c: 203:                             break;
  1410  00040A  EF43  F002         	goto	i2l1719
  1411  00040E                     i2l1715:
  1412  00040E  FFFF               	dw	65535	; assembler added errata NOP
  1413                           
  1414                           ;Eval_AD7177.c: 205:                             PORTB = 0xC0;
  1415  000410  0EC0               	movlw	192
  1416  000412  6E81               	movwf	129,c	;volatile
  1417                           
  1418                           ;Eval_AD7177.c: 206:                             break;
  1419  000414  EF43  F002         	goto	i2l1719
  1420  000418                     i2l135:
  1421  000418  FFFF               	dw	65535	; assembler added errata NOP
  1422                           
  1423                           ;Eval_AD7177.c: 208:                             __nop();
  1424  00041A  F000               	nop	
  1425                           
  1426                           ;Eval_AD7177.c: 209:                     }
  1427  00041C  EF43  F002         	goto	i2l1719
  1428  000420                     i2l1717:
  1429  000420  FFFF               	dw	65535	; assembler added errata NOP
  1430  000422  5018               	movf	_BufferDAT^0,w,c
  1431  000424  6E06               	movwf	??_Interrups^0,c
  1432  000426  6A07               	clrf	(??_Interrups+1)^0,c
  1433                           
  1434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1435                           ; Switch size 1, requested type "simple"
  1436                           ; Number of cases is 1, Range of values is 0 to 0
  1437                           ; switch strategies available:
  1438                           ; Name         Instructions Cycles
  1439                           ; simple_byte            4     3 (average)
  1440                           ;	Chosen strategy is simple_byte
  1441  000428  5007               	movf	(??_Interrups+1)^0,w,c
  1442  00042A  0A00               	xorlw	0	; case 0
  1443  00042C  B4D8               	btfsc	status,2,c
  1444  00042E  EF1B  F002         	goto	i2l1789
  1445  000432  EF0C  F002         	goto	i2l135
  1446  000436                     i2l1789:
  1447  000436  FFFF               	dw	65535	; assembler added errata NOP
  1448                           
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 9, Range of values is 49 to 57
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte           28    15 (average)
  1454                           ;	Chosen strategy is simple_byte
  1455  000438  5006               	movf	??_Interrups^0,w,c
  1456  00043A  0A31               	xorlw	49	; case 49
  1457  00043C  B4D8               	btfsc	status,2,c
  1458  00043E  EFDF  F001         	goto	i2l1699
  1459  000442  0A03               	xorlw	3	; case 50
  1460  000444  B4D8               	btfsc	status,2,c
  1461  000446  EFE4  F001         	goto	i2l1701
  1462  00044A  0A01               	xorlw	1	; case 51
  1463  00044C  B4D8               	btfsc	status,2,c
  1464  00044E  EFE9  F001         	goto	i2l1703
  1465  000452  0A07               	xorlw	7	; case 52
  1466  000454  B4D8               	btfsc	status,2,c
  1467  000456  EFEE  F001         	goto	i2l1705
  1468  00045A  0A01               	xorlw	1	; case 53
  1469  00045C  B4D8               	btfsc	status,2,c
  1470  00045E  EFF3  F001         	goto	i2l1707
  1471  000462  0A03               	xorlw	3	; case 54
  1472  000464  B4D8               	btfsc	status,2,c
  1473  000466  EFF8  F001         	goto	i2l1709
  1474  00046A  0A01               	xorlw	1	; case 55
  1475  00046C  B4D8               	btfsc	status,2,c
  1476  00046E  EFFD  F001         	goto	i2l1711
  1477  000472  0A0F               	xorlw	15	; case 56
  1478  000474  B4D8               	btfsc	status,2,c
  1479  000476  EF02  F002         	goto	i2l1713
  1480  00047A  0A01               	xorlw	1	; case 57
  1481  00047C  B4D8               	btfsc	status,2,c
  1482  00047E  EF07  F002         	goto	i2l1715
  1483  000482  EF0C  F002         	goto	i2l135
  1484  000486                     i2l1719:
  1485  000486  FFFF               	dw	65535	; assembler added errata NOP
  1486                           
  1487                           ;Eval_AD7177.c: 210:                     _delay((unsigned long)((50)*(39321600UL/4000.0)
      +                          ));
  1488  000488  0E02               	movlw	2
  1489  00048A  6E07               	movwf	(??_Interrups+1)^0,c
  1490  00048C  0EE0               	movlw	224
  1491  00048E  6E06               	movwf	??_Interrups^0,c
  1492  000490  0E0E               	movlw	14
  1493  000492                     i2u77_47:
  1494  000492  FFFF               	dw	65535	; errata NOP
  1495  000494  2EE8               	decfsz	wreg,f,c
  1496  000496  D7FD               	bra	i2u77_47
  1497  000498  2E06               	decfsz	??_Interrups^0,f,c
  1498  00049A  D7FB               	bra	i2u77_47
  1499  00049C  2E07               	decfsz	(??_Interrups+1)^0,f,c
  1500  00049E  D7F9               	bra	i2u77_47
  1501  0004A0                     i2l1721:
  1502  0004A0  FFFF               	dw	65535	; assembler added errata NOP
  1503                           
  1504                           ;Eval_AD7177.c: 212:                 TransmitDAT_USART(ID);
  1505  0004A2  5017               	movf	Interrups@ID^0,w,c
  1506  0004A4  EC66  F004         	call	_TransmitDAT_USART
  1507                           
  1508                           ;Eval_AD7177.c: 213:                 break;
  1509  0004A8  EF14  F003         	goto	i2l148
  1510  0004AC                     i2l1723:
  1511  0004AC  FFFF               	dw	65535	; assembler added errata NOP
  1512                           
  1513                           ;Eval_AD7177.c: 215:                 TransmitCMD_USART('8');
  1514  0004AE  0E38               	movlw	56
  1515  0004B0  EC41  F005         	call	_TransmitCMD_USART
  1516  0004B4                     
  1517                           ;Eval_AD7177.c: 216:                 LATCbits.LATC2 = 0;
  1518  0004B4  948B               	bcf	139,2,c	;volatile
  1519  0004B6                     
  1520                           ;Eval_AD7177.c: 217:                 TransferByte_SPI(0x01);
  1521  0004B6  0E01               	movlw	1
  1522  0004B8  EC66  F005         	call	_TransferByte_SPI
  1523  0004BC                     
  1524                           ;Eval_AD7177.c: 218:                 TransferByte_SPI(0x00);
  1525  0004BC  0E00               	movlw	0
  1526  0004BE  EC66  F005         	call	_TransferByte_SPI
  1527  0004C2                     
  1528                           ;Eval_AD7177.c: 219:                 TransferByte_SPI(0x1C);
  1529  0004C2  0E1C               	movlw	28
  1530  0004C4  EC66  F005         	call	_TransferByte_SPI
  1531  0004C8                     
  1532                           ;Eval_AD7177.c: 220:                 __nop();
  1533  0004C8  F000               	nop	
  1534  0004CA                     
  1535                           ;Eval_AD7177.c: 221:                 __nop();
  1536  0004CA  F000               	nop	
  1537  0004CC                     i2l137:
  1538  0004CC  FFFF               	dw	65535	; assembler added errata NOP
  1539  0004CE  B882               	btfsc	130,4,c	;volatile
  1540  0004D0  EF6C  F002         	goto	i2u73_41
  1541  0004D4  EF6F  F002         	goto	i2u73_40
  1542  0004D8                     i2u73_41:
  1543  0004D8  FFFF               	dw	65535	; assembler added errata NOP
  1544  0004DA  EF66  F002         	goto	i2l137
  1545  0004DE                     i2u73_40:
  1546  0004DE  FFFF               	dw	65535	; assembler added errata NOP
  1547  0004E0                     
  1548                           ;Eval_AD7177.c: 223:                 TransferByte_SPI(0x44);
  1549  0004E0  0E44               	movlw	68
  1550  0004E2  EC66  F005         	call	_TransferByte_SPI
  1551                           
  1552                           ;Eval_AD7177.c: 224:                 BufferDAT[0] = TransferByte_SPI(0x00);
  1553  0004E6  0E00               	movlw	0
  1554  0004E8  EC66  F005         	call	_TransferByte_SPI
  1555  0004EC  6E18               	movwf	_BufferDAT^0,c
  1556                           
  1557                           ;Eval_AD7177.c: 225:                 BufferDAT[1] = TransferByte_SPI(0x00);
  1558  0004EE  0E00               	movlw	0
  1559  0004F0  EC66  F005         	call	_TransferByte_SPI
  1560  0004F4  6E19               	movwf	(_BufferDAT+1)^0,c
  1561                           
  1562                           ;Eval_AD7177.c: 226:                 BufferDAT[2] = TransferByte_SPI(0x00);
  1563  0004F6  0E00               	movlw	0
  1564  0004F8  EC66  F005         	call	_TransferByte_SPI
  1565  0004FC  6E1A               	movwf	(_BufferDAT+2)^0,c
  1566                           
  1567                           ;Eval_AD7177.c: 227:                 BufferDAT[3] = TransferByte_SPI(0x00);
  1568  0004FE  0E00               	movlw	0
  1569  000500  EC66  F005         	call	_TransferByte_SPI
  1570  000504  6E1B               	movwf	(_BufferDAT+3)^0,c
  1571  000506                     
  1572                           ;Eval_AD7177.c: 228:                 LATCbits.LATC2 = 1;
  1573  000506  848B               	bsf	139,2,c	;volatile
  1574  000508                     
  1575                           ;Eval_AD7177.c: 229:                 TransmitDAT_USART('8');
  1576  000508  0E38               	movlw	56
  1577  00050A  EC66  F004         	call	_TransmitDAT_USART
  1578                           
  1579                           ;Eval_AD7177.c: 230:                 break;
  1580  00050E  EF14  F003         	goto	i2l148
  1581  000512                     i2l1743:
  1582  000512  FFFF               	dw	65535	; assembler added errata NOP
  1583                           
  1584                           ;Eval_AD7177.c: 232:                 TransmitCMD_USART('9');
  1585  000514  0E39               	movlw	57
  1586  000516  EC41  F005         	call	_TransmitCMD_USART
  1587  00051A                     
  1588                           ;Eval_AD7177.c: 233:                 ID = ReceiveDAT_USART();
  1589  00051A  EC34  F003         	call	_ReceiveDAT_USART	;wreg free
  1590  00051E  6E17               	movwf	Interrups@ID^0,c
  1591  000520                     
  1592                           ;Eval_AD7177.c: 234:                 if(ID == 'X'){
  1593  000520  0E58               	movlw	88
  1594  000522  1817               	xorwf	Interrups@ID^0,w,c
  1595  000524  A4D8               	btfss	status,2,c
  1596  000526  EF97  F002         	goto	i2u74_41
  1597  00052A  EF9A  F002         	goto	i2u74_40
  1598  00052E                     i2u74_41:
  1599  00052E  FFFF               	dw	65535	; assembler added errata NOP
  1600  000530  EF9E  F002         	goto	i2l1751
  1601  000534                     i2u74_40:
  1602  000534  FFFF               	dw	65535	; assembler added errata NOP
  1603  000536                     
  1604                           ;Eval_AD7177.c: 235:                     RCSTAbits.CREN = 1;
  1605  000536  88AB               	bsf	171,4,c	;volatile
  1606                           
  1607                           ;Eval_AD7177.c: 236:                 }else if(ID == '9'){
  1608  000538  EFD0  F002         	goto	i2l1765
  1609  00053C                     i2l1751:
  1610  00053C  FFFF               	dw	65535	; assembler added errata NOP
  1611  00053E  0E39               	movlw	57
  1612  000540  1817               	xorwf	Interrups@ID^0,w,c
  1613  000542  A4D8               	btfss	status,2,c
  1614  000544  EFA6  F002         	goto	i2u75_41
  1615  000548  EFA9  F002         	goto	i2u75_40
  1616  00054C                     i2u75_41:
  1617  00054C  FFFF               	dw	65535	; assembler added errata NOP
  1618  00054E  EFD0  F002         	goto	i2l1765
  1619  000552                     i2u75_40:
  1620  000552  FFFF               	dw	65535	; assembler added errata NOP
  1621  000554                     
  1622                           ;Eval_AD7177.c: 237:                     LATCbits.LATC2 = 0;
  1623  000554  948B               	bcf	139,2,c	;volatile
  1624  000556                     
  1625                           ;Eval_AD7177.c: 238:                     TransferByte_SPI(0x01);
  1626  000556  0E01               	movlw	1
  1627  000558  EC66  F005         	call	_TransferByte_SPI
  1628                           
  1629                           ;Eval_AD7177.c: 239:                     TransferByte_SPI(BufferDAT[0]);
  1630  00055C  5018               	movf	_BufferDAT^0,w,c
  1631  00055E  EC66  F005         	call	_TransferByte_SPI
  1632                           
  1633                           ;Eval_AD7177.c: 240:                     TransferByte_SPI(BufferDAT[1]);
  1634  000562  5019               	movf	(_BufferDAT+1)^0,w,c
  1635  000564  EC66  F005         	call	_TransferByte_SPI
  1636  000568                     
  1637                           ;Eval_AD7177.c: 241:                     __nop();
  1638  000568  F000               	nop	
  1639  00056A                     
  1640                           ;Eval_AD7177.c: 242:                     __nop();
  1641  00056A  F000               	nop	
  1642  00056C                     i2l144:
  1643  00056C  FFFF               	dw	65535	; assembler added errata NOP
  1644  00056E  B882               	btfsc	130,4,c	;volatile
  1645  000570  EFBC  F002         	goto	i2u76_41
  1646  000574  EFBF  F002         	goto	i2u76_40
  1647  000578                     i2u76_41:
  1648  000578  FFFF               	dw	65535	; assembler added errata NOP
  1649  00057A  EFB6  F002         	goto	i2l144
  1650  00057E                     i2u76_40:
  1651  00057E  FFFF               	dw	65535	; assembler added errata NOP
  1652  000580                     
  1653                           ;Eval_AD7177.c: 244:                     TransferByte_SPI(0x44);
  1654  000580  0E44               	movlw	68
  1655  000582  EC66  F005         	call	_TransferByte_SPI
  1656                           
  1657                           ;Eval_AD7177.c: 245:                     BufferDAT[0] = TransferByte_SPI(0x00);
  1658  000586  0E00               	movlw	0
  1659  000588  EC66  F005         	call	_TransferByte_SPI
  1660  00058C  6E18               	movwf	_BufferDAT^0,c
  1661                           
  1662                           ;Eval_AD7177.c: 246:                     BufferDAT[1] = TransferByte_SPI(0x00);
  1663  00058E  0E00               	movlw	0
  1664  000590  EC66  F005         	call	_TransferByte_SPI
  1665  000594  6E19               	movwf	(_BufferDAT+1)^0,c
  1666                           
  1667                           ;Eval_AD7177.c: 247:                     BufferDAT[2] = TransferByte_SPI(0x00);
  1668  000596  0E00               	movlw	0
  1669  000598  EC66  F005         	call	_TransferByte_SPI
  1670  00059C  6E1A               	movwf	(_BufferDAT+2)^0,c
  1671  00059E                     
  1672                           ;Eval_AD7177.c: 248:                     LATCbits.LATC2 = 1;
  1673  00059E  848B               	bsf	139,2,c	;volatile
  1674  0005A0                     i2l1765:
  1675  0005A0  FFFF               	dw	65535	; assembler added errata NOP
  1676                           
  1677                           ;Eval_AD7177.c: 250:                 TransmitDAT_USART(ID);
  1678  0005A2  5017               	movf	Interrups@ID^0,w,c
  1679  0005A4  EC66  F004         	call	_TransmitDAT_USART
  1680                           
  1681                           ;Eval_AD7177.c: 251:                 break;
  1682  0005A8  EF14  F003         	goto	i2l148
  1683  0005AC                     i2l1767:
  1684  0005AC  FFFF               	dw	65535	; assembler added errata NOP
  1685                           
  1686                           ;Eval_AD7177.c: 253:                 TransmitCMD_USART('X');
  1687  0005AE  0E58               	movlw	88
  1688  0005B0  EC41  F005         	call	_TransmitCMD_USART
  1689  0005B4                     
  1690                           ;Eval_AD7177.c: 254:                 RCSTAbits.CREN = 1;
  1691  0005B4  88AB               	bsf	171,4,c	;volatile
  1692                           
  1693                           ;Eval_AD7177.c: 255:         }
  1694  0005B6  EF14  F003         	goto	i2l148
  1695  0005BA                     i2l1771:
  1696  0005BA  FFFF               	dw	65535	; assembler added errata NOP
  1697  0005BC  5017               	movf	Interrups@ID^0,w,c
  1698  0005BE  6E06               	movwf	??_Interrups^0,c
  1699  0005C0  6A07               	clrf	(??_Interrups+1)^0,c
  1700                           
  1701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1702                           ; Switch size 1, requested type "simple"
  1703                           ; Number of cases is 1, Range of values is 0 to 0
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte            4     3 (average)
  1707                           ;	Chosen strategy is simple_byte
  1708  0005C2  5007               	movf	(??_Interrups+1)^0,w,c
  1709  0005C4  0A00               	xorlw	0	; case 0
  1710  0005C6  B4D8               	btfsc	status,2,c
  1711  0005C8  EFE8  F002         	goto	i2l1791
  1712  0005CC  EFD6  F002         	goto	i2l1767
  1713  0005D0                     i2l1791:
  1714  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  1715                           
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 10, Range of values is 48 to 57
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte           31    16 (average)
  1721                           ;	Chosen strategy is simple_byte
  1722  0005D2  5006               	movf	??_Interrups^0,w,c
  1723  0005D4  0A30               	xorlw	48	; case 48
  1724  0005D6  B4D8               	btfsc	status,2,c
  1725  0005D8  EF29  F000         	goto	i2l1563
  1726  0005DC  0A01               	xorlw	1	; case 49
  1727  0005DE  B4D8               	btfsc	status,2,c
  1728  0005E0  EF31  F000         	goto	i2l1567
  1729  0005E4  0A03               	xorlw	3	; case 50
  1730  0005E6  B4D8               	btfsc	status,2,c
  1731  0005E8  EF5B  F000         	goto	i2l1581
  1732  0005EC  0A01               	xorlw	1	; case 51
  1733  0005EE  B4D8               	btfsc	status,2,c
  1734  0005F0  EF85  F000         	goto	i2l1595
  1735  0005F4  0A07               	xorlw	7	; case 52
  1736  0005F6  B4D8               	btfsc	status,2,c
  1737  0005F8  EFAF  F000         	goto	i2l1609
  1738  0005FC  0A01               	xorlw	1	; case 53
  1739  0005FE  B4D8               	btfsc	status,2,c
  1740  000600  EFDD  F000         	goto	i2l1623
  1741  000604  0A03               	xorlw	3	; case 54
  1742  000606  B4D8               	btfsc	status,2,c
  1743  000608  EF0D  F001         	goto	i2l1637
  1744  00060C  0A01               	xorlw	1	; case 55
  1745  00060E  B4D8               	btfsc	status,2,c
  1746  000610  EFBC  F001         	goto	i2l1687
  1747  000614  0A0F               	xorlw	15	; case 56
  1748  000616  B4D8               	btfsc	status,2,c
  1749  000618  EF56  F002         	goto	i2l1723
  1750  00061C  0A01               	xorlw	1	; case 57
  1751  00061E  B4D8               	btfsc	status,2,c
  1752  000620  EF89  F002         	goto	i2l1743
  1753  000624  EFD6  F002         	goto	i2l1767
  1754  000628                     i2l82:
  1755  000628                     i2l148:
  1756  000628  FFFF               	dw	65535	; assembler added errata NOP
  1757  00062A  C012  FFF5         	movff	??_Interrups+12,tablat
  1758  00062E  C011  FFF8         	movff	??_Interrups+11,tblptru
  1759  000632  C010  FFF7         	movff	??_Interrups+10,tblptrh
  1760  000636  C00F  FFF6         	movff	??_Interrups+9,tblptrl
  1761  00063A  C00E  FFDA         	movff	??_Interrups+8,fsr2h
  1762  00063E  C00D  FFD9         	movff	??_Interrups+7,fsr2l
  1763  000642  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1764  000644  0011               	retfie		f
  1765  000646  FFFF               	dw	65535	; errata NOP
  1766  000648                     __end_of_Interrups:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _WriteRegister_3bytesAD7177 *****************
  1770 ;; Defined at:
  1771 ;;		line 100 in file "LIB18F_SPI.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  command         1    wreg     unsigned char 
  1774 ;;  BYTE_HIGH       1    1[COMRAM] unsigned char 
  1775 ;;  BYTE_MEDIUM     1    2[COMRAM] unsigned char 
  1776 ;;  BYTE_LOW        1    3[COMRAM] unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  command         1    4[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1788 ;;      Params:         3       0       0       0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0
  1791 ;;      Totals:         4       0       0       0       0       0       0
  1792 ;;Total ram usage:        4 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 1
  1795 ;; This function calls:
  1796 ;;		_TransferByte_SPI
  1797 ;; This function is called by:
  1798 ;;		_Interrups
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text8
  1803  000AA8                     __ptext8:
  1804                           	callstack 0
  1805  000AA8                     _WriteRegister_3bytesAD7177:
  1806                           	callstack 0
  1807  000AA8  FFFF               	dw	65535	; assembler added errata NOP
  1808                           
  1809                           ;incstack = 0
  1810                           ;WriteRegister_3bytesAD7177@command stored from wreg
  1811  000AAA  6E05               	movwf	WriteRegister_3bytesAD7177@command^0,c
  1812  000AAC                     
  1813                           ;LIB18F_SPI.c: 102:     LATCbits.LATC2 = 0;
  1814  000AAC  948B               	bcf	139,2,c	;volatile
  1815  000AAE                     
  1816                           ;LIB18F_SPI.c: 103:     TransferByte_SPI(command);
  1817  000AAE  5005               	movf	WriteRegister_3bytesAD7177@command^0,w,c
  1818  000AB0  EC66  F005         	call	_TransferByte_SPI
  1819                           
  1820                           ;LIB18F_SPI.c: 104:     TransferByte_SPI(BYTE_HIGH);
  1821  000AB4  5002               	movf	WriteRegister_3bytesAD7177@BYTE_HIGH^0,w,c
  1822  000AB6  EC66  F005         	call	_TransferByte_SPI
  1823                           
  1824                           ;LIB18F_SPI.c: 105:     TransferByte_SPI(BYTE_MEDIUM);
  1825  000ABA  5003               	movf	WriteRegister_3bytesAD7177@BYTE_MEDIUM^0,w,c
  1826  000ABC  EC66  F005         	call	_TransferByte_SPI
  1827                           
  1828                           ;LIB18F_SPI.c: 106:     TransferByte_SPI(BYTE_LOW);
  1829  000AC0  5004               	movf	WriteRegister_3bytesAD7177@BYTE_LOW^0,w,c
  1830  000AC2  EC66  F005         	call	_TransferByte_SPI
  1831  000AC6                     
  1832                           ;LIB18F_SPI.c: 107:     LATCbits.LATC2 = 1;
  1833  000AC6  848B               	bsf	139,2,c	;volatile
  1834  000AC8  0012               	return		;funcret
  1835  000ACA  FFFF               	dw	65535	; errata NOP
  1836  000ACC                     __end_of_WriteRegister_3bytesAD7177:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _WriteRegister_2bytesAD7177 *****************
  1840 ;; Defined at:
  1841 ;;		line 89 in file "LIB18F_SPI.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  command         1    wreg     unsigned char 
  1844 ;;  BYTE_HIGH       1    1[COMRAM] unsigned char 
  1845 ;;  BYTE_LOW        1    2[COMRAM] unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  command         1    3[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1857 ;;      Params:         2       0       0       0       0       0       0
  1858 ;;      Locals:         1       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0
  1860 ;;      Totals:         3       0       0       0       0       0       0
  1861 ;;Total ram usage:        3 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 1
  1864 ;; This function calls:
  1865 ;;		_TransferByte_SPI
  1866 ;; This function is called by:
  1867 ;;		_Interrups
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text9
  1872  000B52                     __ptext9:
  1873                           	callstack 0
  1874  000B52                     _WriteRegister_2bytesAD7177:
  1875                           	callstack 0
  1876  000B52  FFFF               	dw	65535	; assembler added errata NOP
  1877                           
  1878                           ;incstack = 0
  1879                           ;WriteRegister_2bytesAD7177@command stored from wreg
  1880  000B54  6E04               	movwf	WriteRegister_2bytesAD7177@command^0,c
  1881  000B56                     
  1882                           ;LIB18F_SPI.c: 91:     LATCbits.LATC2 = 0;
  1883  000B56  948B               	bcf	139,2,c	;volatile
  1884  000B58                     
  1885                           ;LIB18F_SPI.c: 92:     TransferByte_SPI(command);
  1886  000B58  5004               	movf	WriteRegister_2bytesAD7177@command^0,w,c
  1887  000B5A  EC66  F005         	call	_TransferByte_SPI
  1888                           
  1889                           ;LIB18F_SPI.c: 93:     TransferByte_SPI(BYTE_HIGH);
  1890  000B5E  5002               	movf	WriteRegister_2bytesAD7177@BYTE_HIGH^0,w,c
  1891  000B60  EC66  F005         	call	_TransferByte_SPI
  1892                           
  1893                           ;LIB18F_SPI.c: 94:     TransferByte_SPI(BYTE_LOW);
  1894  000B64  5003               	movf	WriteRegister_2bytesAD7177@BYTE_LOW^0,w,c
  1895  000B66  EC66  F005         	call	_TransferByte_SPI
  1896  000B6A                     
  1897                           ;LIB18F_SPI.c: 95:     LATCbits.LATC2 = 1;
  1898  000B6A  848B               	bsf	139,2,c	;volatile
  1899  000B6C  0012               	return		;funcret
  1900  000B6E  FFFF               	dw	65535	; errata NOP
  1901  000B70                     __end_of_WriteRegister_2bytesAD7177:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _TransmitDAT_USART *****************
  1905 ;; Defined at:
  1906 ;;		line 147 in file "LIB18F_USART.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  DAT_ID          1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  DAT_ID          1    3[COMRAM] unsigned char 
  1911 ;;  conta           1    4[COMRAM] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1921 ;;      Params:         0       0       0       0       0       0       0
  1922 ;;      Locals:         2       0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0
  1924 ;;      Totals:         2       0       0       0       0       0       0
  1925 ;;Total ram usage:        2 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 2
  1928 ;; This function calls:
  1929 ;;		_WriteByte_USART
  1930 ;;		_print_string
  1931 ;; This function is called by:
  1932 ;;		_Interrups
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text10
  1937  0008CC                     __ptext10:
  1938                           	callstack 0
  1939  0008CC                     _TransmitDAT_USART:
  1940                           	callstack 0
  1941  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  1942                           
  1943                           ;incstack = 0
  1944                           ;TransmitDAT_USART@DAT_ID stored from wreg
  1945  0008CE  6E04               	movwf	TransmitDAT_USART@DAT_ID^0,c
  1946  0008D0                     
  1947                           ;LIB18F_USART.c: 148:     unsigned char conta;;LIB18F_USART.c: 150:     print_string("NN
      +                          NNJRODAT");
  1948  0008D0  0E58               	movlw	low STR_3
  1949  0008D2  6E02               	movwf	print_string@str^0,c
  1950  0008D4  0E06               	movlw	high STR_3
  1951  0008D6  6E03               	movwf	(print_string@str+1)^0,c
  1952  0008D8  ECB4  F004         	call	_print_string	;wreg free
  1953  0008DC                     
  1954                           ;LIB18F_USART.c: 151:     WriteByte_USART(DAT_ID);
  1955  0008DC  5004               	movf	TransmitDAT_USART@DAT_ID^0,w,c
  1956  0008DE  EC78  F005         	call	_WriteByte_USART
  1957  0008E2                     
  1958                           ;LIB18F_USART.c: 152:     for(conta=0; conta<12; conta++){
  1959  0008E2  0E00               	movlw	0
  1960  0008E4  6E05               	movwf	TransmitDAT_USART@conta^0,c
  1961  0008E6                     i2l1531:
  1962  0008E6  FFFF               	dw	65535	; assembler added errata NOP
  1963                           
  1964                           ;LIB18F_USART.c: 153:         WriteByte_USART(BufferDAT[conta]);
  1965  0008E8  0E18               	movlw	low _BufferDAT
  1966  0008EA  2405               	addwf	TransmitDAT_USART@conta^0,w,c
  1967  0008EC  6ED9               	movwf	fsr2l,c
  1968  0008EE  6ADA               	clrf	fsr2h,c
  1969  0008F0  0E00               	movlw	high _BufferDAT
  1970  0008F2  22DA               	addwfc	fsr2h,f,c
  1971  0008F4  50DF               	movf	indf2,w,c
  1972  0008F6  EC78  F005         	call	_WriteByte_USART
  1973  0008FA                     
  1974                           ;LIB18F_USART.c: 154:     }
  1975  0008FA  2A05               	incf	TransmitDAT_USART@conta^0,f,c
  1976  0008FC  0E0B               	movlw	11
  1977  0008FE  6405               	cpfsgt	TransmitDAT_USART@conta^0,c
  1978  000900  EF84  F004         	goto	i2u51_41
  1979  000904  EF87  F004         	goto	i2u51_40
  1980  000908                     i2u51_41:
  1981  000908  FFFF               	dw	65535	; assembler added errata NOP
  1982  00090A  EF73  F004         	goto	i2l1531
  1983  00090E                     i2u51_40:
  1984  00090E  FFFF               	dw	65535	; assembler added errata NOP
  1985  000910                     
  1986                           ;LIB18F_USART.c: 155:     print_string("\n\r");
  1987  000910  0E63               	movlw	low STR_2
  1988  000912  6E02               	movwf	print_string@str^0,c
  1989  000914  0E06               	movlw	high STR_2
  1990  000916  6E03               	movwf	(print_string@str+1)^0,c
  1991  000918  ECB4  F004         	call	_print_string	;wreg free
  1992  00091C  0012               	return		;funcret
  1993  00091E  FFFF               	dw	65535	; errata NOP
  1994  000920                     __end_of_TransmitDAT_USART:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _TransmitCMD_USART *****************
  1998 ;; Defined at:
  1999 ;;		line 139 in file "LIB18F_USART.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  CMD_ID          1    wreg     unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  CMD_ID          1    3[COMRAM] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2013 ;;      Params:         0       0       0       0       0       0       0
  2014 ;;      Locals:         1       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0
  2016 ;;      Totals:         1       0       0       0       0       0       0
  2017 ;;Total ram usage:        1 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 2
  2020 ;; This function calls:
  2021 ;;		_WriteByte_USART
  2022 ;;		_print_string
  2023 ;; This function is called by:
  2024 ;;		_Interrups
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text11
  2029  000A82                     __ptext11:
  2030                           	callstack 0
  2031  000A82                     _TransmitCMD_USART:
  2032                           	callstack 0
  2033  000A82  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ;incstack = 0
  2036                           ;TransmitCMD_USART@CMD_ID stored from wreg
  2037  000A84  6E04               	movwf	TransmitCMD_USART@CMD_ID^0,c
  2038  000A86                     
  2039                           ;LIB18F_USART.c: 141:     print_string("NNNNJROCMD");
  2040  000A86  0E4D               	movlw	low STR_1
  2041  000A88  6E02               	movwf	print_string@str^0,c
  2042  000A8A  0E06               	movlw	high STR_1
  2043  000A8C  6E03               	movwf	(print_string@str+1)^0,c
  2044  000A8E  ECB4  F004         	call	_print_string	;wreg free
  2045  000A92                     
  2046                           ;LIB18F_USART.c: 142:     WriteByte_USART(CMD_ID);
  2047  000A92  5004               	movf	TransmitCMD_USART@CMD_ID^0,w,c
  2048  000A94  EC78  F005         	call	_WriteByte_USART
  2049  000A98                     
  2050                           ;LIB18F_USART.c: 143:     print_string("\n\r");
  2051  000A98  0E63               	movlw	low STR_2
  2052  000A9A  6E02               	movwf	print_string@str^0,c
  2053  000A9C  0E06               	movlw	high STR_2
  2054  000A9E  6E03               	movwf	(print_string@str+1)^0,c
  2055  000AA0  ECB4  F004         	call	_print_string	;wreg free
  2056  000AA4  0012               	return		;funcret
  2057  000AA6  FFFF               	dw	65535	; errata NOP
  2058  000AA8                     __end_of_TransmitCMD_USART:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _print_string *****************
  2062 ;; Defined at:
  2063 ;;		line 65 in file "LIB18F_USART.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  str             2    1[COMRAM] PTR unsigned char 
  2066 ;;		 -> STR_4(3), STR_3(11), STR_2(3), STR_1(11), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2078 ;;      Params:         2       0       0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0
  2081 ;;      Totals:         2       0       0       0       0       0       0
  2082 ;;Total ram usage:        2 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 1
  2085 ;; This function calls:
  2086 ;;		_WriteByte_USART
  2087 ;; This function is called by:
  2088 ;;		_TransmitCMD_USART
  2089 ;;		_TransmitDAT_USART
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text12
  2094  000968                     __ptext12:
  2095                           	callstack 0
  2096  000968                     _print_string:
  2097                           	callstack 0
  2098  000968  FFFF               	dw	65535	; assembler added errata NOP
  2099  00096A                     
  2100                           ;LIB18F_USART.c: 66:     while(*str != '\0'){
  2101  00096A  EFC3  F004         	goto	i2l1511
  2102  00096E                     i2l1507:
  2103  00096E  FFFF               	dw	65535	; assembler added errata NOP
  2104                           
  2105                           ;LIB18F_USART.c: 67:         WriteByte_USART(*str);
  2106  000970  C002  FFF6         	movff	print_string@str,tblptrl
  2107  000974  C003  FFF7         	movff	print_string@str+1,tblptrh
  2108  000978                     	if	0	;tblptru may be non-zero
  2109  000978                     	endif
  2110  000978                     	if	0	;tblptru may be non-zero
  2111  000978                     	endif
  2112  000978  0008               	tblrd		*
  2113  00097A  FFFF               	dw	65535	; errata NOP
  2114  00097C  50F5               	movf	tablat,w,c
  2115  00097E  EC78  F005         	call	_WriteByte_USART
  2116  000982                     
  2117                           ;LIB18F_USART.c: 68:         str++;
  2118  000982  4A02               	infsnz	print_string@str^0,f,c
  2119  000984  2A03               	incf	(print_string@str+1)^0,f,c
  2120  000986                     i2l1511:
  2121  000986  FFFF               	dw	65535	; assembler added errata NOP
  2122                           
  2123                           ;LIB18F_USART.c: 66:     while(*str != '\0'){
  2124  000988  C002  FFF6         	movff	print_string@str,tblptrl
  2125  00098C  C003  FFF7         	movff	print_string@str+1,tblptrh
  2126  000990                     	if	0	;tblptru may be non-zero
  2127  000990                     	endif
  2128  000990                     	if	0	;tblptru may be non-zero
  2129  000990                     	endif
  2130  000990  0008               	tblrd		*
  2131  000992  FFFF               	dw	65535	; errata NOP
  2132  000994  50F5               	movf	tablat,w,c
  2133  000996  0900               	iorlw	0
  2134  000998  A4D8               	btfss	status,2,c
  2135  00099A  EFD1  F004         	goto	i2u50_41
  2136  00099E  EFD4  F004         	goto	i2u50_40
  2137  0009A2                     i2u50_41:
  2138  0009A2  FFFF               	dw	65535	; assembler added errata NOP
  2139  0009A4  EFB7  F004         	goto	i2l1507
  2140  0009A8                     i2u50_40:
  2141  0009A8  FFFF               	dw	65535	; assembler added errata NOP
  2142  0009AA  0012               	return		;funcret
  2143  0009AC  FFFF               	dw	65535	; errata NOP
  2144  0009AE                     __end_of_print_string:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _WriteByte_USART *****************
  2148 ;; Defined at:
  2149 ;;		line 56 in file "LIB18F_USART.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  byte            1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  byte            1    0[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         0       0       0       0       0       0       0
  2164 ;;      Locals:         1       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0
  2166 ;;      Totals:         1       0       0       0       0       0       0
  2167 ;;Total ram usage:        1 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_print_string
  2173 ;;		_TransmitCMD_USART
  2174 ;;		_TransmitDAT_USART
  2175 ;;		_print_value
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text13
  2180  000AF0                     __ptext13:
  2181                           	callstack 0
  2182  000AF0                     _WriteByte_USART:
  2183                           	callstack 0
  2184  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  2185                           
  2186                           ;incstack = 0
  2187                           ;WriteByte_USART@byte stored from wreg
  2188  000AF2  6E01               	movwf	WriteByte_USART@byte^0,c
  2189  000AF4                     
  2190                           ;LIB18F_USART.c: 58:     TXREG = byte;
  2191  000AF4  C001  FFAD         	movff	WriteByte_USART@byte,4013	;volatile
  2192  000AF8                     
  2193                           ;LIB18F_USART.c: 59:     __nop();
  2194  000AF8  F000               	nop	
  2195  000AFA                     i2l271:
  2196  000AFA  FFFF               	dw	65535	; assembler added errata NOP
  2197  000AFC  A2AC               	btfss	172,1,c	;volatile
  2198  000AFE  EF83  F005         	goto	i2u1_41
  2199  000B02  EF86  F005         	goto	i2u1_40
  2200  000B06                     i2u1_41:
  2201  000B06  FFFF               	dw	65535	; assembler added errata NOP
  2202  000B08  EF7D  F005         	goto	i2l271
  2203  000B0C                     i2u1_40:
  2204  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2205  000B0E  0012               	return		;funcret
  2206  000B10  FFFF               	dw	65535	; errata NOP
  2207  000B12                     __end_of_WriteByte_USART:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _ResetAD7177 *****************
  2211 ;; Defined at:
  2212 ;;		line 45 in file "LIB18F_SPI.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  conta           1    2[COMRAM] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2226 ;;      Params:         0       0       0       0       0       0       0
  2227 ;;      Locals:         1       0       0       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0       0       0
  2229 ;;      Totals:         2       0       0       0       0       0       0
  2230 ;;Total ram usage:        2 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 1
  2233 ;; This function calls:
  2234 ;;		_TransferByte_SPI
  2235 ;; This function is called by:
  2236 ;;		_Interrups
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text14
  2241  0009AE                     __ptext14:
  2242                           	callstack 0
  2243  0009AE                     _ResetAD7177:
  2244                           	callstack 0
  2245  0009AE  FFFF               	dw	65535	; assembler added errata NOP
  2246  0009B0                     
  2247                           ;LIB18F_SPI.c: 46:     unsigned char conta;;LIB18F_SPI.c: 48:     LATCbits.LATC2 = 0;
  2248  0009B0  948B               	bcf	139,2,c	;volatile
  2249  0009B2                     
  2250                           ;LIB18F_SPI.c: 49:     for(conta=0;conta<9;conta++){
  2251  0009B2  0E00               	movlw	0
  2252  0009B4  6E03               	movwf	ResetAD7177@conta^0,c
  2253  0009B6                     i2l1073:
  2254  0009B6  FFFF               	dw	65535	; assembler added errata NOP
  2255                           
  2256                           ;LIB18F_SPI.c: 50:         TransferByte_SPI(0xFF);
  2257  0009B8  0EFF               	movlw	255
  2258  0009BA  EC66  F005         	call	_TransferByte_SPI
  2259  0009BE                     
  2260                           ;LIB18F_SPI.c: 51:     }
  2261  0009BE  2A03               	incf	ResetAD7177@conta^0,f,c
  2262  0009C0  0E08               	movlw	8
  2263  0009C2  6403               	cpfsgt	ResetAD7177@conta^0,c
  2264  0009C4  EFE6  F004         	goto	i2u15_41
  2265  0009C8  EFE9  F004         	goto	i2u15_40
  2266  0009CC                     i2u15_41:
  2267  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  2268  0009CE  EFDB  F004         	goto	i2l1073
  2269  0009D2                     i2u15_40:
  2270  0009D2  FFFF               	dw	65535	; assembler added errata NOP
  2271  0009D4                     
  2272                           ;LIB18F_SPI.c: 52:     LATCbits.LATC2 = 1;
  2273  0009D4  848B               	bsf	139,2,c	;volatile
  2274  0009D6                     
  2275                           ;LIB18F_SPI.c: 53:     _delay((unsigned long)((3)*(39321600UL/4000.0)));
  2276  0009D6  0E1D               	movlw	29
  2277  0009D8  6E02               	movwf	??_ResetAD7177^0,c
  2278  0009DA  0EBD               	movlw	189
  2279  0009DC                     i2u78_47:
  2280  0009DC  FFFF               	dw	65535	; errata NOP
  2281  0009DE  2EE8               	decfsz	wreg,f,c
  2282  0009E0  D7FD               	bra	i2u78_47
  2283  0009E2  2E02               	decfsz	??_ResetAD7177^0,f,c
  2284  0009E4  D7FB               	bra	i2u78_47
  2285  0009E6  D000               	nop2	
  2286  0009E8  F000               	nop	
  2287  0009EA  0012               	return		;funcret
  2288  0009EC  FFFF               	dw	65535	; errata NOP
  2289  0009EE                     __end_of_ResetAD7177:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _ReceiveDAT_USART *****************
  2293 ;; Defined at:
  2294 ;;		line 105 in file "LIB18F_USART.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  conta_byte      1    3[COMRAM] unsigned char 
  2299 ;;  data_byte       1    2[COMRAM] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      unsigned char 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2309 ;;      Params:         0       0       0       0       0       0       0
  2310 ;;      Locals:         2       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0
  2312 ;;      Totals:         2       0       0       0       0       0       0
  2313 ;;Total ram usage:        2 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 1
  2316 ;; This function calls:
  2317 ;;		_ReadByte_USART
  2318 ;; This function is called by:
  2319 ;;		_Interrups
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text15
  2324  000668                     __ptext15:
  2325                           	callstack 0
  2326  000668                     _ReceiveDAT_USART:
  2327                           	callstack 0
  2328  000668  FFFF               	dw	65535	; assembler added errata NOP
  2329  00066A                     
  2330                           ;LIB18F_USART.c: 106:     unsigned char conta_byte;;LIB18F_USART.c: 107:     unsigned ch
      +                          ar data_byte;;LIB18F_USART.c: 109:     for(conta_byte=0; conta_byte<10;conta_byte++){
  2331  00066A  0E00               	movlw	0
  2332  00066C  6E04               	movwf	ReceiveDAT_USART@conta_byte^0,c
  2333  00066E                     i2l1097:
  2334  00066E  FFFF               	dw	65535	; assembler added errata NOP
  2335                           
  2336                           ;LIB18F_USART.c: 110:         data_byte = ReadByte_USART();
  2337  000670  EC23  F004         	call	_ReadByte_USART	;wreg free
  2338  000674  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2339  000676                     
  2340                           ;LIB18F_USART.c: 111:         if(data_byte == 'J'){
  2341  000676  0E4A               	movlw	74
  2342  000678  1803               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  2343  00067A  A4D8               	btfss	status,2,c
  2344  00067C  EF42  F003         	goto	i2u16_41
  2345  000680  EF45  F003         	goto	i2u16_40
  2346  000684                     i2u16_41:
  2347  000684  FFFF               	dw	65535	; assembler added errata NOP
  2348  000686  EF48  F003         	goto	i2l1103
  2349  00068A                     i2u16_40:
  2350  00068A  FFFF               	dw	65535	; assembler added errata NOP
  2351  00068C  EF53  F003         	goto	i2l1107
  2352  000690                     i2l1103:
  2353  000690  FFFF               	dw	65535	; assembler added errata NOP
  2354                           
  2355                           ;LIB18F_USART.c: 114:     }
  2356  000692  2A04               	incf	ReceiveDAT_USART@conta_byte^0,f,c
  2357  000694  0E09               	movlw	9
  2358  000696  6404               	cpfsgt	ReceiveDAT_USART@conta_byte^0,c
  2359  000698  EF50  F003         	goto	i2u17_41
  2360  00069C  EF53  F003         	goto	i2u17_40
  2361  0006A0                     i2u17_41:
  2362  0006A0  FFFF               	dw	65535	; assembler added errata NOP
  2363  0006A2  EF37  F003         	goto	i2l1097
  2364  0006A6                     i2u17_40:
  2365  0006A6                     i2l1107:
  2366  0006A6  FFFF               	dw	65535	; assembler added errata NOP
  2367                           
  2368                           ;LIB18F_USART.c: 115:     if(conta_byte < 10){
  2369  0006A8  0E0A               	movlw	10
  2370  0006AA  6004               	cpfslt	ReceiveDAT_USART@conta_byte^0,c
  2371  0006AC  EF5A  F003         	goto	i2u18_41
  2372  0006B0  EF5D  F003         	goto	i2u18_40
  2373  0006B4                     i2u18_41:
  2374  0006B4  FFFF               	dw	65535	; assembler added errata NOP
  2375  0006B6  EFB1  F003         	goto	i2l296
  2376  0006BA                     i2u18_40:
  2377  0006BA  FFFF               	dw	65535	; assembler added errata NOP
  2378  0006BC                     
  2379                           ;LIB18F_USART.c: 116:         data_byte = ReadByte_USART();
  2380  0006BC  EC23  F004         	call	_ReadByte_USART	;wreg free
  2381  0006C0  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2382  0006C2                     
  2383                           ;LIB18F_USART.c: 117:         if(data_byte == 'R'){
  2384  0006C2  0E52               	movlw	82
  2385  0006C4  1803               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  2386  0006C6  A4D8               	btfss	status,2,c
  2387  0006C8  EF68  F003         	goto	i2u19_41
  2388  0006CC  EF6B  F003         	goto	i2u19_40
  2389  0006D0                     i2u19_41:
  2390  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  2391  0006D2  EFB1  F003         	goto	i2l296
  2392  0006D6                     i2u19_40:
  2393  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  2394  0006D8                     
  2395                           ;LIB18F_USART.c: 118:             data_byte = ReadByte_USART();
  2396  0006D8  EC23  F004         	call	_ReadByte_USART	;wreg free
  2397  0006DC  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2398  0006DE                     
  2399                           ;LIB18F_USART.c: 119:             if(data_byte == 'O'){
  2400  0006DE  0E4F               	movlw	79
  2401  0006E0  1803               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  2402  0006E2  A4D8               	btfss	status,2,c
  2403  0006E4  EF76  F003         	goto	i2u20_41
  2404  0006E8  EF79  F003         	goto	i2u20_40
  2405  0006EC                     i2u20_41:
  2406  0006EC  FFFF               	dw	65535	; assembler added errata NOP
  2407  0006EE  EFB1  F003         	goto	i2l296
  2408  0006F2                     i2u20_40:
  2409  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  2410  0006F4                     
  2411                           ;LIB18F_USART.c: 120:                 data_byte = ReadByte_USART();
  2412  0006F4  EC23  F004         	call	_ReadByte_USART	;wreg free
  2413  0006F8  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2414  0006FA                     
  2415                           ;LIB18F_USART.c: 121:                 if(data_byte == 'D'){
  2416  0006FA  0E44               	movlw	68
  2417  0006FC  1803               	xorwf	ReceiveDAT_USART@data_byte^0,w,c
  2418  0006FE  A4D8               	btfss	status,2,c
  2419  000700  EF84  F003         	goto	i2u21_41
  2420  000704  EF87  F003         	goto	i2u21_40
  2421  000708                     i2u21_41:
  2422  000708  FFFF               	dw	65535	; assembler added errata NOP
  2423  00070A  EFB1  F003         	goto	i2l296
  2424  00070E                     i2u21_40:
  2425  00070E  FFFF               	dw	65535	; assembler added errata NOP
  2426  000710                     
  2427                           ;LIB18F_USART.c: 122:                     data_byte = ReadByte_USART();
  2428  000710  EC23  F004         	call	_ReadByte_USART	;wreg free
  2429  000714  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2430                           
  2431                           ;LIB18F_USART.c: 123:                     data_byte = ReadByte_USART();
  2432  000716  EC23  F004         	call	_ReadByte_USART	;wreg free
  2433  00071A  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2434                           
  2435                           ;LIB18F_USART.c: 124:                     BufferDAT[12] = ReadByte_USART();
  2436  00071C  EC23  F004         	call	_ReadByte_USART	;wreg free
  2437  000720  6E24               	movwf	(_BufferDAT+12)^0,c
  2438  000722                     
  2439                           ;LIB18F_USART.c: 125:                     for(conta_byte=0; conta_byte<12;conta_byte++){
  2440  000722  0E00               	movlw	0
  2441  000724  6E04               	movwf	ReceiveDAT_USART@conta_byte^0,c
  2442  000726                     i2l1129:
  2443  000726  FFFF               	dw	65535	; assembler added errata NOP
  2444                           
  2445                           ;LIB18F_USART.c: 126:                         BufferDAT[conta_byte] = ReadByte_USART();
  2446  000728  0E18               	movlw	low _BufferDAT
  2447  00072A  2404               	addwf	ReceiveDAT_USART@conta_byte^0,w,c
  2448  00072C  6ED9               	movwf	fsr2l,c
  2449  00072E  6ADA               	clrf	fsr2h,c
  2450  000730  0E00               	movlw	high _BufferDAT
  2451  000732  22DA               	addwfc	fsr2h,f,c
  2452  000734  EC23  F004         	call	_ReadByte_USART	;wreg free
  2453  000738  6EDF               	movwf	indf2,c
  2454  00073A                     
  2455                           ;LIB18F_USART.c: 127:                     }
  2456  00073A  2A04               	incf	ReceiveDAT_USART@conta_byte^0,f,c
  2457  00073C  0E0B               	movlw	11
  2458  00073E  6404               	cpfsgt	ReceiveDAT_USART@conta_byte^0,c
  2459  000740  EFA4  F003         	goto	i2u22_41
  2460  000744  EFA7  F003         	goto	i2u22_40
  2461  000748                     i2u22_41:
  2462  000748  FFFF               	dw	65535	; assembler added errata NOP
  2463  00074A  EF93  F003         	goto	i2l1129
  2464  00074E                     i2u22_40:
  2465  00074E  FFFF               	dw	65535	; assembler added errata NOP
  2466  000750                     
  2467                           ;LIB18F_USART.c: 128:                     data_byte = ReadByte_USART();
  2468  000750  EC23  F004         	call	_ReadByte_USART	;wreg free
  2469  000754  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2470                           
  2471                           ;LIB18F_USART.c: 129:                     data_byte = ReadByte_USART();
  2472  000756  EC23  F004         	call	_ReadByte_USART	;wreg free
  2473  00075A  6E03               	movwf	ReceiveDAT_USART@data_byte^0,c
  2474  00075C                     
  2475                           ;LIB18F_USART.c: 130:                     return BufferDAT[12];
  2476  00075C  5024               	movf	(_BufferDAT+12)^0,w,c
  2477  00075E  EFB4  F003         	goto	i2l302
  2478  000762                     i2l296:
  2479  000762  FFFF               	dw	65535	; assembler added errata NOP
  2480                           
  2481                           ;LIB18F_USART.c: 135:     RCSTAbits.CREN = 0;
  2482  000764  98AB               	bcf	171,4,c	;volatile
  2483  000766                     
  2484                           ;LIB18F_USART.c: 136:     return 'X';
  2485  000766  0E58               	movlw	88
  2486  000768                     i2l302:
  2487  000768  FFFF               	dw	65535	; assembler added errata NOP
  2488  00076A  0012               	return		;funcret
  2489  00076C  FFFF               	dw	65535	; errata NOP
  2490  00076E                     __end_of_ReceiveDAT_USART:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _ReceiveCMD_USART *****************
  2494 ;; Defined at:
  2495 ;;		line 74 in file "LIB18F_USART.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  data_byte       1    3[COMRAM] unsigned char 
  2500 ;;  conta_byte      1    2[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      unsigned char 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         0       0       0       0       0       0       0
  2511 ;;      Locals:         2       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0
  2513 ;;      Totals:         2       0       0       0       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 1
  2517 ;; This function calls:
  2518 ;;		_ReadByte_USART
  2519 ;; This function is called by:
  2520 ;;		_Interrups
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text16
  2525  00076E                     __ptext16:
  2526                           	callstack 0
  2527  00076E                     _ReceiveCMD_USART:
  2528                           	callstack 0
  2529  00076E  FFFF               	dw	65535	; assembler added errata NOP
  2530  000770                     
  2531                           ;LIB18F_USART.c: 75:     unsigned char conta_byte;;LIB18F_USART.c: 76:     unsigned char
      +                           data_byte;;LIB18F_USART.c: 78:     for(conta_byte=0; conta_byte<10;conta_byte++){
  2532  000770  0E00               	movlw	0
  2533  000772  6E03               	movwf	ReceiveCMD_USART@conta_byte^0,c
  2534  000774                     i2l1031:
  2535  000774  FFFF               	dw	65535	; assembler added errata NOP
  2536                           
  2537                           ;LIB18F_USART.c: 79:         data_byte = ReadByte_USART();
  2538  000776  EC23  F004         	call	_ReadByte_USART	;wreg free
  2539  00077A  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2540  00077C                     
  2541                           ;LIB18F_USART.c: 80:         if(data_byte == 'J'){
  2542  00077C  0E4A               	movlw	74
  2543  00077E  1804               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  2544  000780  A4D8               	btfss	status,2,c
  2545  000782  EFC5  F003         	goto	i2u9_41
  2546  000786  EFC8  F003         	goto	i2u9_40
  2547  00078A                     i2u9_41:
  2548  00078A  FFFF               	dw	65535	; assembler added errata NOP
  2549  00078C  EFCB  F003         	goto	i2l1037
  2550  000790                     i2u9_40:
  2551  000790  FFFF               	dw	65535	; assembler added errata NOP
  2552  000792  EFD6  F003         	goto	i2l1041
  2553  000796                     i2l1037:
  2554  000796  FFFF               	dw	65535	; assembler added errata NOP
  2555                           
  2556                           ;LIB18F_USART.c: 83:     }
  2557  000798  2A03               	incf	ReceiveCMD_USART@conta_byte^0,f,c
  2558  00079A  0E09               	movlw	9
  2559  00079C  6403               	cpfsgt	ReceiveCMD_USART@conta_byte^0,c
  2560  00079E  EFD3  F003         	goto	i2u10_41
  2561  0007A2  EFD6  F003         	goto	i2u10_40
  2562  0007A6                     i2u10_41:
  2563  0007A6  FFFF               	dw	65535	; assembler added errata NOP
  2564  0007A8  EFBA  F003         	goto	i2l1031
  2565  0007AC                     i2u10_40:
  2566  0007AC                     i2l1041:
  2567  0007AC  FFFF               	dw	65535	; assembler added errata NOP
  2568                           
  2569                           ;LIB18F_USART.c: 84:     if(conta_byte < 10){
  2570  0007AE  0E0A               	movlw	10
  2571  0007B0  6003               	cpfslt	ReceiveCMD_USART@conta_byte^0,c
  2572  0007B2  EFDD  F003         	goto	i2u11_41
  2573  0007B6  EFE0  F003         	goto	i2u11_40
  2574  0007BA                     i2u11_41:
  2575  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  2576  0007BC  EF1D  F004         	goto	i2l286
  2577  0007C0                     i2u11_40:
  2578  0007C0  FFFF               	dw	65535	; assembler added errata NOP
  2579  0007C2                     
  2580                           ;LIB18F_USART.c: 85:         data_byte = ReadByte_USART();
  2581  0007C2  EC23  F004         	call	_ReadByte_USART	;wreg free
  2582  0007C6  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2583  0007C8                     
  2584                           ;LIB18F_USART.c: 86:         if(data_byte == 'R'){
  2585  0007C8  0E52               	movlw	82
  2586  0007CA  1804               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  2587  0007CC  A4D8               	btfss	status,2,c
  2588  0007CE  EFEB  F003         	goto	i2u12_41
  2589  0007D2  EFEE  F003         	goto	i2u12_40
  2590  0007D6                     i2u12_41:
  2591  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  2592  0007D8  EF1D  F004         	goto	i2l286
  2593  0007DC                     i2u12_40:
  2594  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  2595  0007DE                     
  2596                           ;LIB18F_USART.c: 87:             data_byte = ReadByte_USART();
  2597  0007DE  EC23  F004         	call	_ReadByte_USART	;wreg free
  2598  0007E2  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2599  0007E4                     
  2600                           ;LIB18F_USART.c: 88:             if(data_byte == 'O'){
  2601  0007E4  0E4F               	movlw	79
  2602  0007E6  1804               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  2603  0007E8  A4D8               	btfss	status,2,c
  2604  0007EA  EFF9  F003         	goto	i2u13_41
  2605  0007EE  EFFC  F003         	goto	i2u13_40
  2606  0007F2                     i2u13_41:
  2607  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  2608  0007F4  EF1D  F004         	goto	i2l286
  2609  0007F8                     i2u13_40:
  2610  0007F8  FFFF               	dw	65535	; assembler added errata NOP
  2611  0007FA                     
  2612                           ;LIB18F_USART.c: 89:                 data_byte = ReadByte_USART();
  2613  0007FA  EC23  F004         	call	_ReadByte_USART	;wreg free
  2614  0007FE  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2615  000800                     
  2616                           ;LIB18F_USART.c: 90:                 if(data_byte == 'C'){
  2617  000800  0E43               	movlw	67
  2618  000802  1804               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  2619  000804  A4D8               	btfss	status,2,c
  2620  000806  EF07  F004         	goto	i2u14_41
  2621  00080A  EF0A  F004         	goto	i2u14_40
  2622  00080E                     i2u14_41:
  2623  00080E  FFFF               	dw	65535	; assembler added errata NOP
  2624  000810  EF1D  F004         	goto	i2l286
  2625  000814                     i2u14_40:
  2626  000814  FFFF               	dw	65535	; assembler added errata NOP
  2627  000816                     
  2628                           ;LIB18F_USART.c: 91:                     data_byte = ReadByte_USART();
  2629  000816  EC23  F004         	call	_ReadByte_USART	;wreg free
  2630  00081A  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2631                           
  2632                           ;LIB18F_USART.c: 92:                     data_byte = ReadByte_USART();
  2633  00081C  EC23  F004         	call	_ReadByte_USART	;wreg free
  2634  000820  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2635                           
  2636                           ;LIB18F_USART.c: 93:                     BufferDAT[12] = ReadByte_USART();
  2637  000822  EC23  F004         	call	_ReadByte_USART	;wreg free
  2638  000826  6E24               	movwf	(_BufferDAT+12)^0,c
  2639                           
  2640                           ;LIB18F_USART.c: 94:                     data_byte = ReadByte_USART();
  2641  000828  EC23  F004         	call	_ReadByte_USART	;wreg free
  2642  00082C  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2643                           
  2644                           ;LIB18F_USART.c: 95:                     data_byte = ReadByte_USART();
  2645  00082E  EC23  F004         	call	_ReadByte_USART	;wreg free
  2646  000832  6E04               	movwf	ReceiveCMD_USART@data_byte^0,c
  2647  000834                     
  2648                           ;LIB18F_USART.c: 96:                     return BufferDAT[12];
  2649  000834  5024               	movf	(_BufferDAT+12)^0,w,c
  2650  000836  EF20  F004         	goto	i2l290
  2651  00083A                     i2l286:
  2652  00083A  FFFF               	dw	65535	; assembler added errata NOP
  2653                           
  2654                           ;LIB18F_USART.c: 101:     RCSTAbits.CREN = 0;
  2655  00083C  98AB               	bcf	171,4,c	;volatile
  2656  00083E                     
  2657                           ;LIB18F_USART.c: 102:     return 'X';
  2658  00083E  0E58               	movlw	88
  2659  000840                     i2l290:
  2660  000840  FFFF               	dw	65535	; assembler added errata NOP
  2661  000842  0012               	return		;funcret
  2662  000844  FFFF               	dw	65535	; errata NOP
  2663  000846                     __end_of_ReceiveCMD_USART:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _ReadByte_USART *****************
  2667 ;; Defined at:
  2668 ;;		line 34 in file "LIB18F_USART.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  Ready           1    1[COMRAM] unsigned char 
  2673 ;;  conta           1    0[COMRAM] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      unsigned char 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2683 ;;      Params:         0       0       0       0       0       0       0
  2684 ;;      Locals:         2       0       0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0
  2686 ;;      Totals:         2       0       0       0       0       0       0
  2687 ;;Total ram usage:        2 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_ReceiveCMD_USART
  2693 ;;		_ReceiveDAT_USART
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text17
  2698  000846                     __ptext17:
  2699                           	callstack 0
  2700  000846                     _ReadByte_USART:
  2701                           	callstack 0
  2702  000846  FFFF               	dw	65535	; assembler added errata NOP
  2703  000848                     
  2704                           ;LIB18F_USART.c: 35:     unsigned char conta;;LIB18F_USART.c: 36:     unsigned char Read
      +                          y;;LIB18F_USART.c: 38:     conta = 0;
  2705  000848  0E00               	movlw	0
  2706  00084A  6E01               	movwf	ReadByte_USART@conta^0,c
  2707  00084C                     
  2708                           ;LIB18F_USART.c: 39:     Ready = 255;
  2709  00084C  6802               	setf	ReadByte_USART@Ready^0,c
  2710                           
  2711                           ;LIB18F_USART.c: 40:     TMR2 = 0x00;
  2712  00084E  0E00               	movlw	0
  2713  000850  6ECC               	movwf	204,c	;volatile
  2714  000852                     
  2715                           ;LIB18F_USART.c: 41:     T2CONbits.TMR2ON = 1;
  2716  000852  84CA               	bsf	202,2,c	;volatile
  2717                           
  2718                           ;LIB18F_USART.c: 43:     while(Ready){
  2719  000854  EF56  F004         	goto	i2l257
  2720  000858                     i2l259:
  2721  000858  FFFF               	dw	65535	; assembler added errata NOP
  2722  00085A  BA9E               	btfsc	158,5,c	;volatile
  2723  00085C  EF32  F004         	goto	i2u3_41
  2724  000860  EF35  F004         	goto	i2u3_40
  2725  000864                     i2u3_41:
  2726  000864  FFFF               	dw	65535	; assembler added errata NOP
  2727  000866  EF3E  F004         	goto	i2l263
  2728  00086A                     i2u3_40:
  2729  00086A  FFFF               	dw	65535	; assembler added errata NOP
  2730  00086C  A29E               	btfss	158,1,c	;volatile
  2731  00086E  EF3B  F004         	goto	i2u4_41
  2732  000872  EF3E  F004         	goto	i2u4_40
  2733  000876                     i2u4_41:
  2734  000876  FFFF               	dw	65535	; assembler added errata NOP
  2735  000878  EF2C  F004         	goto	i2l259
  2736  00087C                     i2u4_40:
  2737  00087C                     i2l263:
  2738  00087C  FFFF               	dw	65535	; assembler added errata NOP
  2739                           
  2740                           ;LIB18F_USART.c: 45:         PIR1bits.TMR2IF = 0;
  2741  00087E  929E               	bcf	158,1,c	;volatile
  2742  000880                     
  2743                           ;LIB18F_USART.c: 46:         conta++;
  2744  000880  2A01               	incf	ReadByte_USART@conta^0,f,c
  2745  000882                     
  2746                           ;LIB18F_USART.c: 47:         if((PIR1bits.RCIF == 1) || (conta>3)){
  2747  000882  BA9E               	btfsc	158,5,c	;volatile
  2748  000884  EF46  F004         	goto	i2u5_41
  2749  000888  EF49  F004         	goto	i2u5_40
  2750  00088C                     i2u5_41:
  2751  00088C  FFFF               	dw	65535	; assembler added errata NOP
  2752  00088E  EF53  F004         	goto	i2l1011
  2753  000892                     i2u5_40:
  2754  000892  FFFF               	dw	65535	; assembler added errata NOP
  2755  000894  0E03               	movlw	3
  2756  000896  6401               	cpfsgt	ReadByte_USART@conta^0,c
  2757  000898  EF50  F004         	goto	i2u6_41
  2758  00089C  EF53  F004         	goto	i2u6_40
  2759  0008A0                     i2u6_41:
  2760  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  2761  0008A2  EF56  F004         	goto	i2l257
  2762  0008A6                     i2u6_40:
  2763  0008A6                     i2l1011:
  2764  0008A6  FFFF               	dw	65535	; assembler added errata NOP
  2765                           
  2766                           ;LIB18F_USART.c: 48:             Ready = 0;
  2767  0008A8  0E00               	movlw	0
  2768  0008AA  6E02               	movwf	ReadByte_USART@Ready^0,c
  2769  0008AC                     i2l257:
  2770  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  2771                           
  2772                           ;LIB18F_USART.c: 43:     while(Ready){
  2773  0008AE  5002               	movf	ReadByte_USART@Ready^0,w,c
  2774  0008B0  A4D8               	btfss	status,2,c
  2775  0008B2  EF5D  F004         	goto	i2u7_41
  2776  0008B6  EF60  F004         	goto	i2u7_40
  2777  0008BA                     i2u7_41:
  2778  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  2779  0008BC  EF2C  F004         	goto	i2l259
  2780  0008C0                     i2u7_40:
  2781  0008C0  FFFF               	dw	65535	; assembler added errata NOP
  2782  0008C2                     
  2783                           ;LIB18F_USART.c: 51:     PIR1bits.TMR2IF = 0;
  2784  0008C2  929E               	bcf	158,1,c	;volatile
  2785                           
  2786                           ;LIB18F_USART.c: 52:     T2CONbits.TMR2ON = 0;
  2787  0008C4  94CA               	bcf	202,2,c	;volatile
  2788  0008C6                     
  2789                           ;LIB18F_USART.c: 53:     return RCREG;
  2790  0008C6  50AE               	movf	174,w,c	;volatile
  2791  0008C8  0012               	return		;funcret
  2792  0008CA  FFFF               	dw	65535	; errata NOP
  2793  0008CC                     __end_of_ReadByte_USART:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _ReadRegister_3bytesAD7177 *****************
  2797 ;; Defined at:
  2798 ;;		line 78 in file "LIB18F_SPI.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  command         1    wreg     unsigned char 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  command         1    1[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2812 ;;      Params:         0       0       0       0       0       0       0
  2813 ;;      Locals:         1       0       0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0
  2815 ;;      Totals:         1       0       0       0       0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		_TransferByte_SPI
  2821 ;; This function is called by:
  2822 ;;		_Interrups
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text18
  2827  000A58                     __ptext18:
  2828                           	callstack 0
  2829  000A58                     _ReadRegister_3bytesAD7177:
  2830                           	callstack 0
  2831  000A58  FFFF               	dw	65535	; assembler added errata NOP
  2832                           
  2833                           ;incstack = 0
  2834                           ;ReadRegister_3bytesAD7177@command stored from wreg
  2835  000A5A  6E02               	movwf	ReadRegister_3bytesAD7177@command^0,c
  2836  000A5C                     
  2837                           ;LIB18F_SPI.c: 80:     LATCbits.LATC2 = 0;
  2838  000A5C  948B               	bcf	139,2,c	;volatile
  2839  000A5E                     
  2840                           ;LIB18F_SPI.c: 81:     TransferByte_SPI(command);
  2841  000A5E  5002               	movf	ReadRegister_3bytesAD7177@command^0,w,c
  2842  000A60  EC66  F005         	call	_TransferByte_SPI
  2843                           
  2844                           ;LIB18F_SPI.c: 82:     BufferDAT[0] = TransferByte_SPI(0x00);
  2845  000A64  0E00               	movlw	0
  2846  000A66  EC66  F005         	call	_TransferByte_SPI
  2847  000A6A  6E18               	movwf	_BufferDAT^0,c
  2848                           
  2849                           ;LIB18F_SPI.c: 83:     BufferDAT[1] = TransferByte_SPI(0x00);
  2850  000A6C  0E00               	movlw	0
  2851  000A6E  EC66  F005         	call	_TransferByte_SPI
  2852  000A72  6E19               	movwf	(_BufferDAT+1)^0,c
  2853                           
  2854                           ;LIB18F_SPI.c: 84:     BufferDAT[2] = TransferByte_SPI(0x00);
  2855  000A74  0E00               	movlw	0
  2856  000A76  EC66  F005         	call	_TransferByte_SPI
  2857  000A7A  6E1A               	movwf	(_BufferDAT+2)^0,c
  2858  000A7C                     
  2859                           ;LIB18F_SPI.c: 85:     LATCbits.LATC2 = 1;
  2860  000A7C  848B               	bsf	139,2,c	;volatile
  2861  000A7E  0012               	return		;funcret
  2862  000A80  FFFF               	dw	65535	; errata NOP
  2863  000A82                     __end_of_ReadRegister_3bytesAD7177:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _ReadRegister_2bytesAD7177 *****************
  2867 ;; Defined at:
  2868 ;;		line 68 in file "LIB18F_SPI.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  command         1    wreg     unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  command         1    1[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2882 ;;      Params:         0       0       0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0
  2885 ;;      Totals:         1       0       0       0       0       0       0
  2886 ;;Total ram usage:        1 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 1
  2889 ;; This function calls:
  2890 ;;		_TransferByte_SPI
  2891 ;; This function is called by:
  2892 ;;		_Interrups
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text19
  2897  000B12                     __ptext19:
  2898                           	callstack 0
  2899  000B12                     _ReadRegister_2bytesAD7177:
  2900                           	callstack 0
  2901  000B12  FFFF               	dw	65535	; assembler added errata NOP
  2902                           
  2903                           ;incstack = 0
  2904                           ;ReadRegister_2bytesAD7177@command stored from wreg
  2905  000B14  6E02               	movwf	ReadRegister_2bytesAD7177@command^0,c
  2906  000B16                     
  2907                           ;LIB18F_SPI.c: 70:     LATCbits.LATC2 = 0;
  2908  000B16  948B               	bcf	139,2,c	;volatile
  2909  000B18                     
  2910                           ;LIB18F_SPI.c: 71:     TransferByte_SPI(command);
  2911  000B18  5002               	movf	ReadRegister_2bytesAD7177@command^0,w,c
  2912  000B1A  EC66  F005         	call	_TransferByte_SPI
  2913                           
  2914                           ;LIB18F_SPI.c: 72:     BufferDAT[0] = TransferByte_SPI(0x00);
  2915  000B1E  0E00               	movlw	0
  2916  000B20  EC66  F005         	call	_TransferByte_SPI
  2917  000B24  6E18               	movwf	_BufferDAT^0,c
  2918                           
  2919                           ;LIB18F_SPI.c: 73:     BufferDAT[1] = TransferByte_SPI(0x00);
  2920  000B26  0E00               	movlw	0
  2921  000B28  EC66  F005         	call	_TransferByte_SPI
  2922  000B2C  6E19               	movwf	(_BufferDAT+1)^0,c
  2923  000B2E                     
  2924                           ;LIB18F_SPI.c: 74:     LATCbits.LATC2 = 1;
  2925  000B2E  848B               	bsf	139,2,c	;volatile
  2926  000B30  0012               	return		;funcret
  2927  000B32  FFFF               	dw	65535	; errata NOP
  2928  000B34                     __end_of_ReadRegister_2bytesAD7177:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _ReadRegister_1bytesAD7177 *****************
  2932 ;; Defined at:
  2933 ;;		line 58 in file "LIB18F_SPI.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  command         1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  command         1    1[COMRAM] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2947 ;;      Params:         0       0       0       0       0       0       0
  2948 ;;      Locals:         1       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0
  2950 ;;      Totals:         1       0       0       0       0       0       0
  2951 ;;Total ram usage:        1 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 1
  2954 ;; This function calls:
  2955 ;;		_TransferByte_SPI
  2956 ;; This function is called by:
  2957 ;;		_Interrups
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text20
  2962  000B8A                     __ptext20:
  2963                           	callstack 0
  2964  000B8A                     _ReadRegister_1bytesAD7177:
  2965                           	callstack 0
  2966  000B8A  FFFF               	dw	65535	; assembler added errata NOP
  2967                           
  2968                           ;incstack = 0
  2969                           ;ReadRegister_1bytesAD7177@command stored from wreg
  2970  000B8C  6E02               	movwf	ReadRegister_1bytesAD7177@command^0,c
  2971  000B8E                     
  2972                           ;LIB18F_SPI.c: 60:     LATCbits.LATC2 = 0;
  2973  000B8E  948B               	bcf	139,2,c	;volatile
  2974  000B90                     
  2975                           ;LIB18F_SPI.c: 61:     TransferByte_SPI(command);
  2976  000B90  5002               	movf	ReadRegister_1bytesAD7177@command^0,w,c
  2977  000B92  EC66  F005         	call	_TransferByte_SPI
  2978                           
  2979                           ;LIB18F_SPI.c: 62:     BufferDAT[0] = TransferByte_SPI(0x00);
  2980  000B96  0E00               	movlw	0
  2981  000B98  EC66  F005         	call	_TransferByte_SPI
  2982  000B9C  6E18               	movwf	_BufferDAT^0,c
  2983  000B9E                     
  2984                           ;LIB18F_SPI.c: 63:     LATCbits.LATC2 = 1;
  2985  000B9E  848B               	bsf	139,2,c	;volatile
  2986  000BA0  0012               	return		;funcret
  2987  000BA2  FFFF               	dw	65535	; errata NOP
  2988  000BA4                     __end_of_ReadRegister_1bytesAD7177:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _TransferByte_SPI *****************
  2992 ;; Defined at:
  2993 ;;		line 35 in file "LIB18F_SPI.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  data            1    wreg     unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  data            1    0[COMRAM] unsigned char 
  2998 ;;  valor           1    0        unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      unsigned char 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3008 ;;      Params:         0       0       0       0       0       0       0
  3009 ;;      Locals:         1       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0
  3011 ;;      Totals:         1       0       0       0       0       0       0
  3012 ;;Total ram usage:        1 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_Interrups
  3018 ;;		_ResetAD7177
  3019 ;;		_ReadRegister_1bytesAD7177
  3020 ;;		_ReadRegister_2bytesAD7177
  3021 ;;		_ReadRegister_3bytesAD7177
  3022 ;;		_WriteRegister_2bytesAD7177
  3023 ;;		_WriteRegister_3bytesAD7177
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text21
  3028  000ACC                     __ptext21:
  3029                           	callstack 0
  3030  000ACC                     _TransferByte_SPI:
  3031                           	callstack 0
  3032  000ACC  FFFF               	dw	65535	; assembler added errata NOP
  3033                           
  3034                           ;incstack = 0
  3035                           ;TransferByte_SPI@data stored from wreg
  3036  000ACE  6E01               	movwf	TransferByte_SPI@data^0,c
  3037  000AD0  50C9               	movf	201,w,c	;volatile
  3038  000AD2                     
  3039                           ;LIB18F_SPI.c: 39:     SSPBUF = data;
  3040  000AD2  C001  FFC9         	movff	TransferByte_SPI@data,4041	;volatile
  3041  000AD6                     i2l184:
  3042  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  3043  000AD8  A0C7               	btfss	199,0,c	;volatile
  3044  000ADA  EF71  F005         	goto	i2u2_41
  3045  000ADE  EF74  F005         	goto	i2u2_40
  3046  000AE2                     i2u2_41:
  3047  000AE2  FFFF               	dw	65535	; assembler added errata NOP
  3048  000AE4  EF6B  F005         	goto	i2l184
  3049  000AE8                     i2u2_40:
  3050  000AE8  FFFF               	dw	65535	; assembler added errata NOP
  3051  000AEA                     
  3052                           ;LIB18F_SPI.c: 41:     return SSPBUF;
  3053  000AEA  50C9               	movf	201,w,c	;volatile
  3054  000AEC  0012               	return		;funcret
  3055  000AEE  FFFF               	dw	65535	; errata NOP
  3056  000AF0                     __end_of_TransferByte_SPI:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _Interval_sleep *****************
  3060 ;; Defined at:
  3061 ;;		line 111 in file "LIB18F_SPI.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  times           1    wreg     unsigned char 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  times           1    1[COMRAM] unsigned char 
  3066 ;;  i               1    2[COMRAM] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3076 ;;      Params:         0       0       0       0       0       0       0
  3077 ;;      Locals:         2       0       0       0       0       0       0
  3078 ;;      Temps:          1       0       0       0       0       0       0
  3079 ;;      Totals:         3       0       0       0       0       0       0
  3080 ;;Total ram usage:        3 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_Interrups
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text22
  3090  0009EE                     __ptext22:
  3091                           	callstack 0
  3092  0009EE                     _Interval_sleep:
  3093                           	callstack 0
  3094  0009EE  FFFF               	dw	65535	; assembler added errata NOP
  3095                           
  3096                           ;incstack = 0
  3097                           ;Interval_sleep@times stored from wreg
  3098  0009F0  6E02               	movwf	Interval_sleep@times^0,c
  3099  0009F2                     
  3100                           ;LIB18F_SPI.c: 112:     unsigned char i;;LIB18F_SPI.c: 114:     for(i=0; i<times; i++){
  3101  0009F2  0E00               	movlw	0
  3102  0009F4  6E03               	movwf	Interval_sleep@i^0,c
  3103  0009F6  EF07  F005         	goto	i2l1211
  3104  0009FA                     i2l1207:
  3105  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  3106                           
  3107                           ;LIB18F_SPI.c: 115:         _delay((unsigned long)((1)*(39321600UL/4000.0)));
  3108  0009FC  0E0A               	movlw	10
  3109  0009FE  6E01               	movwf	??_Interval_sleep^0,c
  3110  000A00  0E94               	movlw	148
  3111  000A02                     i2u79_47:
  3112  000A02  FFFF               	dw	65535	; errata NOP
  3113  000A04  2EE8               	decfsz	wreg,f,c
  3114  000A06  D7FD               	bra	i2u79_47
  3115  000A08  2E01               	decfsz	??_Interval_sleep^0,f,c
  3116  000A0A  D7FB               	bra	i2u79_47
  3117  000A0C                     
  3118                           ;LIB18F_SPI.c: 116:     }
  3119  000A0C  2A03               	incf	Interval_sleep@i^0,f,c
  3120  000A0E                     i2l1211:
  3121  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  3122  000A10  5002               	movf	Interval_sleep@times^0,w,c
  3123  000A12  5C03               	subwf	Interval_sleep@i^0,w,c
  3124  000A14  A0D8               	btfss	status,0,c
  3125  000A16  EF0F  F005         	goto	i2u24_41
  3126  000A1A  EF12  F005         	goto	i2u24_40
  3127  000A1E                     i2u24_41:
  3128  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3129  000A20  EFFD  F004         	goto	i2l1207
  3130  000A24                     i2u24_40:
  3131  000A24  FFFF               	dw	65535	; assembler added errata NOP
  3132  000A26  0012               	return		;funcret
  3133  000A28  FFFF               	dw	65535	; errata NOP
  3134  000A2A                     __end_of_Interval_sleep:
  3135                           	callstack 0
  3136                           
  3137                           	psect	rparam
  3138  0000                     
  3139                           	psect	temp
  3140  000025                     btemp:
  3141                           	callstack 0
  3142  000025                     	ds	1
  3143  0000                     int$flags	set	btemp
  3144  0000                     wtemp8	set	btemp+1
  3145  0000                     ttemp5	set	btemp+1
  3146  0000                     ttemp6	set	btemp+4
  3147  0000                     ttemp7	set	btemp+8
  3148                           
  3149                           	psect	idloc
  3150                           
  3151                           ;Config register IDLOC0 @ 0x200000
  3152                           ;	unspecified, using default values
  3153  200000                     	org	2097152
  3154  200000  FF                 	db	255
  3155                           
  3156                           ;Config register IDLOC1 @ 0x200001
  3157                           ;	unspecified, using default values
  3158  200001                     	org	2097153
  3159  200001  FF                 	db	255
  3160                           
  3161                           ;Config register IDLOC2 @ 0x200002
  3162                           ;	unspecified, using default values
  3163  200002                     	org	2097154
  3164  200002  FF                 	db	255
  3165                           
  3166                           ;Config register IDLOC3 @ 0x200003
  3167                           ;	unspecified, using default values
  3168  200003                     	org	2097155
  3169  200003  FF                 	db	255
  3170                           
  3171                           ;Config register IDLOC4 @ 0x200004
  3172                           ;	unspecified, using default values
  3173  200004                     	org	2097156
  3174  200004  FF                 	db	255
  3175                           
  3176                           ;Config register IDLOC5 @ 0x200005
  3177                           ;	unspecified, using default values
  3178  200005                     	org	2097157
  3179  200005  FF                 	db	255
  3180                           
  3181                           ;Config register IDLOC6 @ 0x200006
  3182                           ;	unspecified, using default values
  3183  200006                     	org	2097158
  3184  200006  FF                 	db	255
  3185                           
  3186                           ;Config register IDLOC7 @ 0x200007
  3187                           ;	unspecified, using default values
  3188  200007                     	org	2097159
  3189  200007  FF                 	db	255
  3190                           
  3191                           	psect	config
  3192                           
  3193                           ; Padding undefined space
  3194  300000                     	org	3145728
  3195  300000  FF                 	db	255
  3196                           
  3197                           ;Config register CONFIG1H @ 0x300001
  3198                           ;	Oscillator Selection bits
  3199                           ;	OSC = HSPLL, HS oscillator with PLL enabled/Clock frequency = (4 x FOSC)
  3200                           ;	Oscillator System Clock Switch Enable bit
  3201                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  3202  300001                     	org	3145729
  3203  300001  26                 	db	38
  3204                           
  3205                           ;Config register CONFIG2L @ 0x300002
  3206                           ;	Power-up Timer Enable bit
  3207                           ;	PWRT = ON, PWRT enabled
  3208                           ;	Brown-out Reset Enable bit
  3209                           ;	BOR = ON, Brown-out Reset enabled
  3210                           ;	Brown-out Reset Voltage bits
  3211                           ;	BORV = 25, VBOR set to 2.5V
  3212  300002                     	org	3145730
  3213  300002  0E                 	db	14
  3214                           
  3215                           ;Config register CONFIG2H @ 0x300003
  3216                           ;	Watchdog Timer Enable bit
  3217                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3218                           ;	Watchdog Timer Postscale Select bits
  3219                           ;	WDTPS = 128, 1:128
  3220  300003                     	org	3145731
  3221  300003  0E                 	db	14
  3222                           
  3223                           ;Config register CONFIG4L @ 0x300006
  3224                           ;	Stack Full/Underflow Reset Enable bit
  3225                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  3226                           ;	Low-Voltage ICSP Enable bit
  3227                           ;	LVP = OFF, Low-Voltage ICSP disabled
  3228                           ;	Background Debugger Enable bit
  3229                           ;	DEBUG = 0x1, unprogrammed default
  3230  300006                     	org	3145734
  3231  300006  80                 	db	128
  3232                           
  3233                           ; Padding undefined space
  3234  300007                     	org	3145735
  3235  300007  FF                 	db	255
  3236                           
  3237                           ;Config register CONFIG5L @ 0x300008
  3238                           ;	Code Protection bit
  3239                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  3240                           ;	Code Protection bit
  3241                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  3242                           ;	Code Protection bit
  3243                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  3244                           ;	Code Protection bit
  3245                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  3246  300008                     	org	3145736
  3247  300008  0F                 	db	15
  3248                           
  3249                           ;Config register CONFIG5H @ 0x300009
  3250                           ;	Boot Block Code Protection bit
  3251                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  3252                           ;	Data EEPROM Code Protection bit
  3253                           ;	CPD = OFF, Data EEPROM not code protected
  3254  300009                     	org	3145737
  3255  300009  C0                 	db	192
  3256                           
  3257                           ;Config register CONFIG6L @ 0x30000A
  3258                           ;	Write Protection bit
  3259                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  3260                           ;	Write Protection bit
  3261                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  3262                           ;	Write Protection bit
  3263                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  3264                           ;	Write Protection bit
  3265                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  3266  30000A                     	org	3145738
  3267  30000A  0F                 	db	15
  3268                           
  3269                           ;Config register CONFIG6H @ 0x30000B
  3270                           ;	Configuration Register Write Protection bit
  3271                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  3272                           ;	Boot Block Write Protection bit
  3273                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  3274                           ;	Data EEPROM Write Protection bit
  3275                           ;	WRTD = OFF, Data EEPROM not write protected
  3276  30000B                     	org	3145739
  3277  30000B  E0                 	db	224
  3278                           
  3279                           ;Config register CONFIG7L @ 0x30000C
  3280                           ;	Table Read Protection bit
  3281                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  3282                           ;	Table Read Protection bit
  3283                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  3284                           ;	Table Read Protection bit
  3285                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  3286                           ;	Table Read Protection bit
  3287                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  3288  30000C                     	org	3145740
  3289  30000C  0F                 	db	15
  3290                           
  3291                           ;Config register CONFIG7H @ 0x30000D
  3292                           ;	Boot Block Table Read Protection bit
  3293                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  3294  30000D                     	org	3145741
  3295  30000D  40                 	db	64
  3296                           tosu	equ	0xFFF
  3297                           tosh	equ	0xFFE
  3298                           tosl	equ	0xFFD
  3299                           stkptr	equ	0xFFC
  3300                           pclatu	equ	0xFFB
  3301                           pclath	equ	0xFFA
  3302                           pcl	equ	0xFF9
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           indf0	equ	0xFEF
  3310                           postinc0	equ	0xFEE
  3311                           postdec0	equ	0xFED
  3312                           preinc0	equ	0xFEC
  3313                           plusw0	equ	0xFEB
  3314                           fsr0h	equ	0xFEA
  3315                           fsr0l	equ	0xFE9
  3316                           wreg	equ	0xFE8
  3317                           indf1	equ	0xFE7
  3318                           postinc1	equ	0xFE6
  3319                           postdec1	equ	0xFE5
  3320                           preinc1	equ	0xFE4
  3321                           plusw1	equ	0xFE3
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           bsr	equ	0xFE0
  3325                           indf2	equ	0xFDF
  3326                           postinc2	equ	0xFDE
  3327                           postdec2	equ	0xFDD
  3328                           preinc2	equ	0xFDC
  3329                           plusw2	equ	0xFDB
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8

Data Sizes:
    Strings     25
    Constant    0
    Data        13
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    print_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[3]), STR_3(CODE[11]), STR_2(CODE[3]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrups in COMRAM

    _Interrups->_TransmitDAT_USART
    _Interrups->_WriteRegister_3bytesAD7177
    _WriteRegister_3bytesAD7177->_TransferByte_SPI
    _WriteRegister_2bytesAD7177->_TransferByte_SPI
    _TransmitDAT_USART->_print_string
    _TransmitCMD_USART->_print_string
    _print_string->_WriteByte_USART
    _ResetAD7177->_TransferByte_SPI
    _ReceiveDAT_USART->_ReadByte_USART
    _ReceiveCMD_USART->_ReadByte_USART
    _ReadRegister_3bytesAD7177->_TransferByte_SPI
    _ReadRegister_2bytesAD7177->_TransferByte_SPI
    _ReadRegister_1bytesAD7177->_TransferByte_SPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrups in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrups in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrups in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrups in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrups in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrups in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _ClosePort_SPI
                    _CloseSerialPort
                     _ConfigPort_SPI
                   _ConfigSerialPort
                       _OpenPort_SPI
                     _OpenSerialPort
 ---------------------------------------------------------------------------------
 (1) _OpenSerialPort                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenPort_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigSerialPort                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPort_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseSerialPort                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClosePort_SPI                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrups                                           18    18      0    2650
                                              5 COMRAM    18    18      0
                     _Interval_sleep
          _ReadRegister_1bytesAD7177
          _ReadRegister_2bytesAD7177
          _ReadRegister_3bytesAD7177
                   _ReceiveCMD_USART
                   _ReceiveDAT_USART
                        _ResetAD7177
                   _TransferByte_SPI
                  _TransmitCMD_USART
                  _TransmitDAT_USART
         _WriteRegister_2bytesAD7177
         _WriteRegister_3bytesAD7177
 ---------------------------------------------------------------------------------
 (3) _WriteRegister_3bytesAD7177                           4     1      3     331
                                              1 COMRAM     4     1      3
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _WriteRegister_2bytesAD7177                           3     1      2     233
                                              1 COMRAM     3     1      2
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _TransmitDAT_USART                                    2     2      0     469
                                              3 COMRAM     2     2      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _TransmitCMD_USART                                    1     1      0     401
                                              3 COMRAM     1     1      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (4) _print_string                                         2     0      2     364
                                              1 COMRAM     2     0      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (5) _WriteByte_USART                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ResetAD7177                                          2     2      0      45
                                              1 COMRAM     2     2      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _ReceiveDAT_USART                                     2     2      0     180
                                              2 COMRAM     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (3) _ReceiveCMD_USART                                     2     2      0     135
                                              2 COMRAM     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByte_USART                                       2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadRegister_3bytesAD7177                            1     1      0      30
                                              1 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _ReadRegister_2bytesAD7177                            1     1      0      30
                                              1 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _ReadRegister_1bytesAD7177                            1     1      0      30
                                              1 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (4) _TransferByte_SPI                                     2     2      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Interval_sleep                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClosePort_SPI
   _CloseSerialPort
   _ConfigPort_SPI
   _ConfigSerialPort
   _OpenPort_SPI
   _OpenSerialPort

 _Interrups (ROOT)
   _Interval_sleep
   _ReadRegister_1bytesAD7177
     _TransferByte_SPI
   _ReadRegister_2bytesAD7177
     _TransferByte_SPI
   _ReadRegister_3bytesAD7177
     _TransferByte_SPI
   _ReceiveCMD_USART
     _ReadByte_USART
   _ReceiveDAT_USART
     _ReadByte_USART
   _ResetAD7177
     _TransferByte_SPI
   _TransferByte_SPI
   _TransmitCMD_USART
     _WriteByte_USART
     _print_string
       _WriteByte_USART
   _TransmitDAT_USART
     _WriteByte_USART
     _print_string
   _WriteRegister_2bytesAD7177
     _TransferByte_SPI
   _WriteRegister_3bytesAD7177
     _TransferByte_SPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlll        81      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      24       1       38.3%
BITBIGSFRhhhhl      21      0       0      17        0.0%
BITBIGSFRhhlh       11      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRhl          C      0       0      22        0.0%
BITBIGSFRlhh         8      0       0      23        0.0%
BITBIGSFRllhl        6      0       0      25        0.0%
BITBIGSFRlhl         6      0       0      24        0.0%
BITBIGSFRhhhll       4      0       0      20        0.0%
BITBIGSFRhhhlhh      3      0       0      18        0.0%
BITBIGSFRhhhlhl      1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      27        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Sep 27 11:26:31 2022

                                                 ?_OpenSerialPort 0001  
                                       _ReadRegister_2bytesAD7177 0B12  
                                                     _SSPSTATbits 000FC7  
                                                             l153 095E  
                                                             l154 0960  
                                                             l251 0BB6  
                                                             l181 0BCE  
                                                             l254 0BC6  
                                                             l175 0B86  
                                                             l248 0B4E  
                                                             l178 0BBE  
                                                             _PR2 000FCB  
                                         TransmitDAT_USART@DAT_ID 0004  
                                                             wreg 000FE8  
                                          TransmitDAT_USART@conta 0005  
                                       _ReadRegister_3bytesAD7177 0A58  
                                                            l1213 0B72  
                                                            l1221 0BBC  
                                                            l1215 0B78  
                                                            l1223 0B36  
                                                            l1217 0B7C  
                                                            l1225 0B3A  
                                                            l1233 0BB4  
                                                            l1235 0BC2  
                                                            l1227 0B46  
                                                            l1237 0BCA  
                                                            l1229 0B4C  
                                                            l1471 0950  
                                                            l1463 0920  
                                                            l1473 0954  
                                                            l1465 0942  
                                                            l1475 0956  
                                                            l1467 0944  
                                                            l1477 095A  
                                                            l1469 094C  
                                                            l1479 095C  
                                                            STR_1 064D  
                                                            STR_2 0663  
                                                            STR_3 0658  
                                                            STR_4 0663  
                                                            _LATA 000F89  
                                                            _LATB 000F8A  
                                                            _LATC 000F8B  
                                                            i2l82 0628  
                                                            _TMR2 000FCC  
                                                            _main 0920  
                                                            fsr2h 000FDA  
                                                            indf2 000FDF  
                                                            fsr1l 000FE1  
                                                            fsr2l 000FD9  
                                         __end_of_CloseSerialPort 0BCA  
                                                            btemp 0025  
                                                            start 0648  
                                                    ___param_bank 000000  
                                                           ?_main 0001  
                              WriteRegister_2bytesAD7177@BYTE_LOW 0003  
                                                           _T2CON 000FCA  
                                                           i2l111 027A  
                                                           i2l201 0A7E  
                                                           i2l204 0B6C  
                                                           i2l116 0372  
                                                           i2l213 0A26  
                                                           i2l117 031C  
                                                           i2l302 0768  
                                                           i2l310 091C  
                                                           i2l207 0AC8  
                                                           i2l135 0418  
                                                           i2l144 056C  
                                                           i2l305 0AA4  
                                                           i2l137 04CC  
                                                           i2l148 0628  
                                                           i2l263 087C  
                                                           i2l191 09D4  
                                                           i2l271 0AFA  
                                                           i2l184 0AD6  
                                                           i2l192 09EA  
                                                           i2l280 09AA  
                                                           i2l257 08AC  
                                                           i2l186 0AEA  
                                                           i2l290 0840  
                                                           i2l274 0B0E  
                                                           i2l187 0AEC  
                                                           i2l195 0BA0  
                                                           i2l267 08C2  
                                                           i2l259 0858  
                                                           i2l268 08C8  
                                                           i2l198 0B30  
                                                           i2l286 083A  
                                                           i2l296 0762  
                                                           i2l991 0AF8  
                                                           i2l993 0AD0  
                                                           i2l995 0AD2  
                                                           i2l997 0848  
                                                           i2l989 0AF4  
                                                           i2l999 084C  
                                                           _RCREG 000FAE  
                                                           _RCSTA 000FAB  
                                                           _SPBRG 000FAF  
                                                           _PORTB 000F81  
                                                           _TRISA 000F92  
                                                           _TRISB 000F93  
                                                           _TRISC 000F94  
                                                           _TXREG 000FAD  
                                                           _TXSTA 000FAC  
                                                           tablat 000FF5  
                                                           ttemp5 0026  
                                                           ttemp6 0029  
                                                           ttemp7 002D  
                                                           status 000FD8  
                                                           wtemp8 0026  
                              __end_of_WriteRegister_2bytesAD7177 0B70  
                                      _WriteRegister_2bytesAD7177 0B52  
                                                Interrups@samples 0013  
                                                 __initialization 0A2A  
                                                    __end_of_main 0968  
                           WriteRegister_3bytesAD7177@BYTE_MEDIUM 0003  
                                                   ??_ResetAD7177 0002  
                                                          ??_main 0018  
                                                   __activetblptr 000002  
                              __end_of_WriteRegister_3bytesAD7177 0ACC  
                                      _WriteRegister_3bytesAD7177 0AA8  
                                                  _ReadByte_USART 0846  
                             WriteRegister_2bytesAD7177@BYTE_HIGH 0002  
                                                          i2l1001 0852  
                                                          i2l1011 08A6  
                                                          i2l1003 086C  
                                                          i2l1013 08C6  
                                                          i2l1005 0880  
                                                          i2l1007 0882  
                                                          i2l1031 0774  
                                                          i2l1111 06C2  
                                                          i2l1103 0690  
                                                          i2l1009 0894  
                                                          i2l1041 07AC  
                                                          i2l1033 077C  
                                                          i2l1025 0770  
                                                          i2l1121 0710  
                                                          i2l1113 06D8  
                                                          i2l1105 0694  
                                                          i2l1211 0A0E  
                                                          i2l1051 07FA  
                                                          i2l1043 07C2  
                                                          i2l1131 073A  
                                                          i2l1123 0722  
                                                          i2l1115 06DE  
                                                          i2l1107 06A6  
                                                          i2l1205 09F2  
                                                          i2l1061 083E  
                                                          i2l1053 0800  
                                                          i2l1045 07C8  
                                                          i2l1037 0796  
                                                          i2l1141 0766  
                                                          i2l1133 073C  
                                                          i2l1117 06F4  
                                                          i2l1109 06BC  
                                                          i2l1207 09FA  
                                                          i2l1055 0816  
                                                          i2l1047 07DE  
                                                          i2l1039 079A  
                                                          i2l1135 0750  
                                                          i2l1119 06FA  
                                                          i2l1209 0A0C  
                                                          i2l1145 0B8E  
                                                          i2l1057 0834  
                                                          i2l1049 07E4  
                                                          i2l1137 075C  
                                                          i2l1129 0726  
                                                          i2l1073 09B6  
                                                          i2l1065 09B0  
                                                          i2l1147 0B90  
                                                          i2l1091 066A  
                                                          i2l1075 09BE  
                                                          i2l1067 09B2  
                                                          i2l1149 0B9E  
                                                          i2l1173 0B16  
                                                          i2l1181 0A5C  
                                                          i2l1077 09C0  
                                                          i2l1175 0B18  
                                                          i2l1183 0A5E  
                                                          i2l1079 09D6  
                                                          i2l1511 0986  
                                                          i2l1177 0B2E  
                                                          i2l1185 0A7C  
                                                          i2l1097 066E  
                                                          i2l1505 096A  
                                                          i2l1513 0A86  
                                                          i2l1521 08D0  
                                                          i2l1601 012E  
                                                          i2l1099 0676  
                                                          i2l1507 096E  
                                                          i2l1515 0A92  
                                                          i2l1531 08E6  
                                                          i2l1523 08DC  
                                                          i2l1611 0166  
                                                          i2l1603 0134  
                                                          i2l1509 0982  
                                                          i2l1517 0A98  
                                                          i2l1533 08FA  
                                                          i2l1525 08E2  
                                                          i2l1541 0B56  
                                                          i2l1701 03C8  
                                                          i2l1621 01AE  
                                                          i2l1613 016C  
                                                          i2l1605 014C  
                                                          i2l1535 08FC  
                                                          i2l1543 0B58  
                                                          i2l1551 0AAE  
                                                          i2l1711 03FA  
                                                          i2l1703 03D2  
                                                          i2l1631 01E4  
                                                          i2l1623 01BA  
                                                          i2l1615 0182  
                                                          i2l1607 0152  
                                                          i2l1537 0910  
                                                          i2l1545 0B6A  
                                                          i2l1553 0AC6  
                                                          i2l1713 0404  
                                                          i2l1705 03DC  
                                                          i2l1721 04A0  
                                                          i2l1641 0228  
                                                          i2l1633 01FC  
                                                          i2l1625 01C2  
                                                          i2l1617 0188  
                                                          i2l1609 015E  
                                                          i2l1561 0048  
                                                          i2l1731 04C2  
                                                          i2l1723 04AC  
                                                          i2l1715 040E  
                                                          i2l1707 03E6  
                                                          i2l1651 026C  
                                                          i2l1643 023E  
                                                          i2l1635 020E  
                                                          i2l1627 01C8  
                                                          i2l1619 01A0  
                                                          i2l1571 0070  
                                                          i2l1563 0052  
                                                          i2l1549 0AAC  
                                                          i2l1741 0508  
                                                          i2l1733 04C8  
                                                          i2l1725 04B4  
                                                          i2l1709 03F0  
                                                          i2l1717 0420  
                                                          i2l1661 02B4  
                                                          i2l1653 0274  
                                                          i2l1645 0244  
                                                          i2l1637 021A  
                                                          i2l1629 01DE  
                                                          i2l1581 00B6  
                                                          i2l1573 0086  
                                                          i2l1565 0058  
                                                          i2l1557 0024  
                                                          i2l1751 053C  
                                                          i2l1743 0512  
                                                          i2l1735 04CA  
                                                          i2l1727 04B6  
                                                          i2l1719 0486  
                                                          i2l1663 02BA  
                                                          i2l1671 02D8  
                                                          i2l1647 024A  
                                                          i2l1639 0222  
                                                          i2l1591 00F8  
                                                          i2l1583 00BE  
                                                          i2l1575 008C  
                                                          i2l1567 0062  
                                                          i2l1559 0036  
                                                          i2l1761 0580  
                                                          i2l1753 0554  
                                                          i2l1745 051A  
                                                          i2l1737 04E0  
                                                          i2l1729 04BC  
                                                          i2l1681 0356  
                                                          i2l1673 0318  
                                                          i2l1665 02BC  
                                                          i2l1649 0262  
                                                          i2l1593 00FE  
                                                          i2l1585 00C4  
                                                          i2l1577 00A4  
                                                          i2l1569 006A  
                                                          i2l1763 059E  
                                                          i2l1755 0556  
                                                          i2l1747 0520  
                                                          i2l1739 0506  
                                                          i2l1691 0386  
                                                          i2l1683 035C  
                                                          i2l1667 02D0  
                                                          i2l1659 028E  
                                                          i2l1595 010A  
                                                          i2l1587 00DA  
                                                          i2l1579 00AA  
                                                          i2l1771 05BA  
                                                          i2l1757 0568  
                                                          i2l1765 05A0  
                                                          i2l1749 0536  
                                                          i2l1693 039C  
                                                          i2l1685 035E  
                                                          i2l1669 02D6  
                                                          i2l1597 0112  
                                                          i2l1589 00E0  
                                                          i2l1791 05D0  
                                                          i2l1767 05AC  
                                                          i2l1759 056A  
                                                          i2l1695 03A2  
                                                          i2l1687 0378  
                                                          i2l1679 0330  
                                                          i2l1599 0118  
                                                          i2l1769 05B4  
                                                          i2l1689 0380  
                                                          i2l1699 03BE  
                                                          i2l1789 0436  
                                                          _INTCON 000FF2  
                                                          i2u1_40 0B0C  
                                                          i2u1_41 0B06  
                                                          i2u2_40 0AE8  
                                                          i2u2_41 0AE2  
                                                          i2u3_40 086A  
                                                          i2u3_41 0864  
                                                          i2u4_40 087C  
                                                          i2u4_41 0876  
                                                          i2u5_40 0892  
                                                          i2u5_41 088C  
                                                          i2u6_40 08A6  
                                                          i2u6_41 08A0  
                                                          i2u7_40 08C0  
                                                          i2u7_41 08BA  
                                                          i2u9_40 0790  
                                                          i2u9_41 078A  
                                                          _SSPBUF 000FC9  
                                        __end_of_ReceiveDAT_USART 076E  
                                                ?_CloseSerialPort 0001  
                                        __end_of_ReceiveCMD_USART 0846  
                                        __end_of_ConfigSerialPort 0B52  
                                             Interval_sleep@times 0002  
                                                          isa$std 000001  
                                                _TransferByte_SPI 0ACC  
                                                     Interrups@ID 0017  
                                          __end_of_ReadByte_USART 08CC  
                                                    __pdataCOMRAM 0018  
                                               Interrups@conta_10 0016  
                                                    __mediumconst 0000  
                                             __end_of_ResetAD7177 09EE  
                                                          tblptrh 000FF7  
                                                          tblptrl 000FF6  
                                                          tblptru 000FF8  
                                ReadRegister_2bytesAD7177@command 0002  
                                               Interrups@interval 0014  
                                                      __accesstop 0060  
                                         __end_of__initialization 0A4A  
                                                   ?_OpenPort_SPI 0001  
                                                   ___rparam_used 000001  
                                                ??_OpenSerialPort 0018  
                                           __end_of_ClosePort_SPI 0BD2  
                                                  __pcstackCOMRAM 0001  
                                                 ?_ReadByte_USART 0001  
                                               __end_of_Interrups 0648  
                               WriteRegister_2bytesAD7177@command 0004  
                                                  ??_OpenPort_SPI 0018  
                                    ??_WriteRegister_2bytesAD7177 0004  
                                                     _ResetAD7177 09AE  
                                                         i2u10_40 07AC  
                                                         i2u10_41 07A6  
                                                         i2u11_40 07C0  
                                                         i2u11_41 07BA  
                                                         i2u12_40 07DC  
                                                         i2u20_40 06F2  
                                                         i2u12_41 07D6  
                                                         i2u20_41 06EC  
                                                         i2u13_40 07F8  
                                                         i2u21_40 070E  
                                                         i2u13_41 07F2  
                                                         i2u21_41 0708  
                                                         i2u14_40 0814  
                                                         i2u22_40 074E  
                                                         i2u14_41 080E  
                                                         i2u22_41 0748  
                                                         i2u15_40 09D2  
                                                         i2u15_41 09CC  
                                                         i2u24_40 0A24  
                                                         i2u16_40 068A  
                                                         i2u24_41 0A1E  
                                                         i2u16_41 0684  
                                                         i2u17_40 06A6  
                                                         i2u17_41 06A0  
                                                         i2u18_40 06BA  
                                                         i2u50_40 09A8  
                                                         i2u18_41 06B4  
                                                         i2u50_41 09A2  
                                                         i2u19_40 06D6  
                                                         i2u51_40 090E  
                                                         i2u19_41 06D0  
                                                         i2u51_41 0908  
                                                         i2u60_40 0180  
                                                         i2u52_40 0034  
                                                         i2u60_41 017A  
                                                         i2u52_41 002E  
                                                         i2u61_40 019E  
                                                         i2u53_40 0046  
                                                         i2u61_41 0198  
                                                         i2u53_41 0040  
                                                         i2u70_40 0370  
                                                         i2u62_40 01DC  
                                                         i2u54_40 0084  
                                                         i2u70_41 036A  
                                                         i2u62_41 01D6  
                                                         i2u54_41 007E  
                                                         i2u71_40 039A  
                                                         i2u63_40 01FA  
                                                         i2u55_40 00A2  
                                                         i2u71_41 0394  
                                                         i2u63_41 01F4  
                                                         i2u55_41 009C  
                                                         i2u72_40 03B8  
                                                         i2u64_40 023C  
                                                         i2u56_40 00D8  
                                                         i2u72_41 03B2  
                                                         i2u64_41 0236  
                                                         i2u56_41 00D2  
                                                         i2u73_40 04DE  
                                                         i2u65_40 0260  
                                                         i2u57_40 00F6  
                                                         i2u73_41 04D8  
                                                         i2u65_41 025A  
                                                         i2u57_41 00F0  
                                                         i2u74_40 0534  
                                                         i2u66_40 028C  
                                                         i2u58_40 012C  
                                                         i2u74_41 052E  
                                                         i2u66_41 0286  
                                                         i2u58_41 0126  
                                                         i2u75_40 0552  
                                                         i2u67_40 02CE  
                                                         i2u59_40 014A  
                                                         i2u75_41 054C  
                                                         i2u67_41 02C8  
                                                         i2u59_41 0144  
                                                         i2u76_40 057E  
                                                         i2u68_40 0316  
                                                         i2u76_41 0578  
                                                         i2u68_41 0310  
                                                         i2u69_40 032E  
                                                         i2u69_41 0328  
                                                         i2u77_47 0492  
                                                         i2u78_47 09DC  
                                                         i2u79_47 0A02  
                                    ??_WriteRegister_3bytesAD7177 0005  
                                                         _SSPSTAT 000FC7  
                                                         __Hparam 0000  
                                                         __Lparam 0000  
                                                    __psmallconst 064C  
                                                         __pcinit 0A2A  
                                                         __ramtop 0600  
                                                         __ptext0 0920  
                                                         __ptext1 0BB2  
                                                         __ptext2 0BBA  
                                                         __ptext3 0B34  
                                                         __ptext4 0B70  
                                                         __ptext5 0BC2  
                                                         __ptext6 0BCA  
                                                         __ptext8 0AA8  
                                                         __ptext9 0B52  
                              WriteRegister_3bytesAD7177@BYTE_LOW 0004  
                                                       _T2CONbits 000FCA  
                                       ReceiveDAT_USART@data_byte 0003  
                                            end_of_initialization 0A4A  
                                                 Interval_sleep@i 0003  
                                             WriteByte_USART@byte 0001  
                                        __end_of_TransferByte_SPI 0AF0  
                                                   __Lmediumconst 0000  
                                               ?_ReceiveDAT_USART 0001  
                                               ?_ReceiveCMD_USART 0001  
                                              ??_ReceiveDAT_USART 0003  
                                               ?_ConfigSerialPort 0001  
                                              ??_ReceiveCMD_USART 0003  
                                                       _RCSTAbits 000FAB  
                                                         postdec1 000FE5  
                                                         postinc0 000FEE  
                                              ??_ConfigSerialPort 0018  
                                               ??_WriteByte_USART 0001  
                                                       _PORTCbits 000F82  
                                            __end_of_OpenPort_SPI 0BC2  
                                                  _ConfigPort_SPI 0B70  
                                                       _TRISCbits 000F94  
                                                   ?_print_string 0002  
                                                ResetAD7177@conta 0003  
                                            TransferByte_SPI@data 0001  
                                                       _TXSTAbits 000FAC  
                                                       _BufferDAT 0018  
                                                ??_ReadByte_USART 0001  
                                                   __pidataCOMRAM 0BA4  
                                          __end_of_ConfigPort_SPI 0B8A  
                                             start_initialization 0A2A  
                                ReadRegister_1bytesAD7177@command 0002  
                                                  ??_print_string 0004  
                                         TransmitCMD_USART@CMD_ID 0004  
                                                       _Interrups 0008  
                                                  _Interval_sleep 09EE  
                                      ReceiveCMD_USART@conta_byte 0003  
                                               _TransmitDAT_USART 08CC  
                                      ?_ReadRegister_1bytesAD7177 0001  
                                               _TransmitCMD_USART 0A82  
                                              ?_TransmitDAT_USART 0001  
                                                    ?_ResetAD7177 0001  
                                              ?_TransmitCMD_USART 0001  
                                                 ?_ConfigPort_SPI 0001  
                                             ??_TransmitDAT_USART 0004  
                                             ??_TransmitCMD_USART 0004  
                                      ?_ReadRegister_2bytesAD7177 0001  
                                                      ?_Interrups 0001  
                                          __end_of_Interval_sleep 0A2A  
                                       __end_of_TransmitDAT_USART 0920  
                                       __end_of_TransmitCMD_USART 0AA8  
                                                       __pintcode 0008  
                                                 print_string@str 0002  
                                      ?_ReadRegister_3bytesAD7177 0001  
                               __end_of_ReadRegister_1bytesAD7177 0BA4  
                                                     __smallconst 064C  
                                               ??_CloseSerialPort 0018  
                               __end_of_ReadRegister_2bytesAD7177 0B34  
                                                 ?_Interval_sleep 0001  
                                                        _LATCbits 000F8B  
                                               ?_TransferByte_SPI 0001  
                                                 _WriteByte_USART 0AF0  
                                                    _OpenPort_SPI 0BBA  
                                                        _PIE1bits 000F9D  
                                              ??_TransferByte_SPI 0001  
                                                        _PIR1bits 000F9E  
                                                        _RCONbits 000FD0  
                                                   _ClosePort_SPI 0BCA  
                                            __end_of_print_string 09AE  
                               __end_of_ReadRegister_3bytesAD7177 0A82  
                                                      _ADCON1bits 000FC1  
                                       ReceiveCMD_USART@data_byte 0004  
                                                       copy_data0 0A3E  
                                                  Interrups@conta 0015  
                                                     ??_Interrups 0006  
                                                        __Hrparam 0000  
                                                        __Lrparam 0000  
                                     ?_WriteRegister_2bytesAD7177 0002  
                                                  ?_ClosePort_SPI 0001  
                                     ?_WriteRegister_3bytesAD7177 0002  
                                                        __ptext10 08CC  
                                                        __ptext11 0A82  
                                                        __ptext20 0B8A  
                                                        __ptext12 0968  
                                                        __ptext21 0ACC  
                                                        __ptext13 0AF0  
                                                        __ptext22 09EE  
                                                        __ptext14 09AE  
                                                        __ptext15 0668  
                                                        __ptext16 076E  
                                                        __ptext17 0846  
                                                        __ptext18 0A58  
                                                        __ptext19 0B12  
                                         __end_of_WriteByte_USART 0B12  
                             WriteRegister_3bytesAD7177@BYTE_HIGH 0002  
                                                        isa$xinst 000000  
                                                ??_ConfigPort_SPI 0018  
                                                        int$flags 0025  
                                     ??_ReadRegister_1bytesAD7177 0002  
                                                  _OpenSerialPort 0BB2  
                                                      _INTCONbits 000FF2  
                                ReadRegister_3bytesAD7177@command 0002  
                                     ??_ReadRegister_2bytesAD7177 0002  
                                                        intlevel2 0BD2  
                                             ReadByte_USART@Ready 0002  
                                                 ??_ClosePort_SPI 0018  
                                             ReadByte_USART@conta 0001  
                                      ReceiveDAT_USART@conta_byte 0004  
                                                 _CloseSerialPort 0BC2  
                                          __end_of_OpenSerialPort 0BBA  
                                     ??_ReadRegister_3bytesAD7177 0002  
                                                _ReceiveDAT_USART 0668  
                                                _ReceiveCMD_USART 076E  
                                                _ConfigSerialPort 0B34  
                                                     _SSPCON1bits 000FC6  
                                                ??_Interval_sleep 0001  
                                       _ReadRegister_1bytesAD7177 0B8A  
                                                    _print_string 0968  
                                                ?_WriteByte_USART 0001  
                               WriteRegister_3bytesAD7177@command 0005  
