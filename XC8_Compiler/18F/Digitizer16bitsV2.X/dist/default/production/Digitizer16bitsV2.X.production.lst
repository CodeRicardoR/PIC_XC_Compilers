

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 10 11:59:07 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F258
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F258 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     _TXREG	set	4013
    67   000000                     _RCREG	set	4014
    68   000000                     _SPBRG	set	4015
    69   000000                     _TXSTA	set	4012
    70   000000                     _ADCON1bits	set	4033
    71   000000                     _TXSTAbits	set	4012
    72   000000                     _T2CONbits	set	4042
    73   000000                     _RCSTA	set	4011
    74   000000                     _INTCON	set	4082
    75   000000                     _TRISCbits	set	3988
    76   000000                     _TRISBbits	set	3987
    77   000000                     _LATCbits	set	3979
    78   000000                     _LATA	set	3977
    79   000000                     _LATBbits	set	3978
    80   000000                     _PORTBbits	set	3969
    81   000000                     _LATAbits	set	3977
    82   000000                     _INTCONbits	set	4082
    83   000000                     _TRISA	set	3986
    84   000000                     _LATC	set	3979
    85   000000                     _PIE1bits	set	3997
    86   000000                     _LATB	set	3978
    87   000000                     _T0CON	set	4053
    88   000000                     _TMR0L	set	4054
    89   000000                     _TMR0H	set	4055
    90   000000                     _INTCON2bits	set	4081
    91   000000                     _RCSTAbits	set	4011
    92   000000                     _PIR1bits	set	3998
    93   000000                     _T2CON	set	4042
    94   000000                     _RCONbits	set	4048
    95   000000                     _TRISC	set	3988
    96   000000                     _TRISB	set	3987
    97   000000                     _TMR2	set	4044
    98   000000                     _PR2	set	4043
    99   000000                     _PORTCbits	set	3970
   100                           
   101                           	psect	smallconst
   102   001576                     __psmallconst:
   103                           	callstack 0
   104   001576  00                 	db	0
   105   001577                     STR_5:
   106   001577  47                 	db	71	;'G'
   107   001578  2D                 	db	45
   108   001579  4A                 	db	74	;'J'
   109   00157A  52                 	db	82	;'R'
   110   00157B  4F                 	db	79	;'O'
   111   00157C  44                 	db	68	;'D'
   112   00157D  41                 	db	65	;'A'
   113   00157E  54                 	db	84	;'T'
   114   00157F  45                 	db	69	;'E'
   115   001580  58                 	db	88	;'X'
   116   001581  58                 	db	88	;'X'
   117   001582  58                 	db	88	;'X'
   118   001583  58                 	db	88	;'X'
   119   001584  58                 	db	88	;'X'
   120   001585  58                 	db	88	;'X'
   121   001586  58                 	db	88	;'X'
   122   001587  58                 	db	88	;'X'
   123   001588  58                 	db	88	;'X'
   124   001589  58                 	db	88	;'X'
   125   00158A  58                 	db	88	;'X'
   126   00158B  58                 	db	88	;'X'
   127   00158C  0A                 	db	10
   128   00158D  0D                 	db	13
   129   00158E  00                 	db	0
   130   00158F                     STR_10:
   131   00158F  4E                 	db	78	;'N'
   132   001590  4E                 	db	78	;'N'
   133   001591  4E                 	db	78	;'N'
   134   001592  4E                 	db	78	;'N'
   135   001593  4A                 	db	74	;'J'
   136   001594  52                 	db	82	;'R'
   137   001595  4F                 	db	79	;'O'
   138   001596  43                 	db	67	;'C'
   139   001597  4D                 	db	77	;'M'
   140   001598  44                 	db	68	;'D'
   141   001599  00                 	db	0
   142   00159A                     STR_12:
   143   00159A  4E                 	db	78	;'N'
   144   00159B  4E                 	db	78	;'N'
   145   00159C  4E                 	db	78	;'N'
   146   00159D  4E                 	db	78	;'N'
   147   00159E  4A                 	db	74	;'J'
   148   00159F  52                 	db	82	;'R'
   149   0015A0  4F                 	db	79	;'O'
   150   0015A1  44                 	db	68	;'D'
   151   0015A2  41                 	db	65	;'A'
   152   0015A3  54                 	db	84	;'T'
   153   0015A4  00                 	db	0
   154   0015A5                     STR_1:
   155   0015A5  47                 	db	71	;'G'
   156   0015A6  2D                 	db	45
   157   0015A7  4A                 	db	74	;'J'
   158   0015A8  52                 	db	82	;'R'
   159   0015A9  4F                 	db	79	;'O'
   160   0015AA  44                 	db	68	;'D'
   161   0015AB  41                 	db	65	;'A'
   162   0015AC  54                 	db	84	;'T'
   163   0015AD  45                 	db	69	;'E'
   164   0015AE  00                 	db	0
   165   0015AF                     STR_3:
   166   0015AF  4A                 	db	74	;'J'
   167   0015B0  52                 	db	82	;'R'
   168   0015B1  4F                 	db	79	;'O'
   169   0015B2  41                 	db	65	;'A'
   170   0015B3  44                 	db	68	;'D'
   171   0015B4  51                 	db	81	;'Q'
   172   0015B5  00                 	db	0
   173   0015B6  00                 	db	0	; dummy byte at the end
   174   000000                     
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178   001A7A                     __pcinit:
   179                           	callstack 0
   180   001A7A                     start_initialization:
   181                           	callstack 0
   182   001A7A                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Clear objects allocated to BANK0 (25 bytes)
   186   001A7A  EE00  F060         	lfsr	0,__pbssBANK0
   187   001A7E  0E19               	movlw	25
   188   001A80                     clear_0:
   189   001A80  6AEE               	clrf	postinc0,c
   190   001A82  06E8               	decf	wreg,f,c
   191   001A84  E1FD               	bnz	clear_0
   192                           
   193                           ; Clear objects allocated to COMRAM (56 bytes)
   194   001A86  EE00  F001         	lfsr	0,__pbssCOMRAM
   195   001A8A  0E38               	movlw	56
   196   001A8C                     clear_1:
   197   001A8C  6AEE               	clrf	postinc0,c
   198   001A8E  06E8               	decf	wreg,f,c
   199   001A90  E1FD               	bnz	clear_1
   200   001A92                     end_of_initialization:
   201                           	callstack 0
   202   001A92                     __end_of__initialization:
   203                           	callstack 0
   204   001A92  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   205   001A94  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   206   001A96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207   001A98  6EF8               	movwf	tblptru,c
   208   001A9A  0100               	movlb	0
   209   001A9C  EFA3  F00C         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212   000001                     __pbssCOMRAM:
   213                           	callstack 0
   214   000001                     _SumData_AUX2:
   215                           	callstack 0
   216   000001                     	ds	4
   217   000005                     _SumData_AUX1:
   218                           	callstack 0
   219   000005                     	ds	4
   220   000009                     _SumData_AUX0:
   221                           	callstack 0
   222   000009                     	ds	4
   223   00000D                     _SumData_TS:
   224                           	callstack 0
   225   00000D                     	ds	4
   226   000011                     _SumData_TC:
   227                           	callstack 0
   228   000011                     	ds	4
   229   000015                     _SumData_Z:
   230                           	callstack 0
   231   000015                     	ds	4
   232   000019                     _SumData_Y:
   233                           	callstack 0
   234   000019                     	ds	4
   235   00001D                     _SumData_X:
   236                           	callstack 0
   237   00001D                     	ds	4
   238   000021                     _Data_AUX2:
   239                           	callstack 0
   240   000021                     	ds	2
   241   000023                     _Data_AUX1:
   242                           	callstack 0
   243   000023                     	ds	2
   244   000025                     _Data_AUX0:
   245                           	callstack 0
   246   000025                     	ds	2
   247   000027                     _Data_G:
   248                           	callstack 0
   249   000027                     	ds	2
   250   000029                     _Data_TS:
   251                           	callstack 0
   252   000029                     	ds	2
   253   00002B                     _Data_TC:
   254                           	callstack 0
   255   00002B                     	ds	2
   256   00002D                     _Data_Z:
   257                           	callstack 0
   258   00002D                     	ds	2
   259   00002F                     _Data_Y:
   260                           	callstack 0
   261   00002F                     	ds	2
   262   000031                     _Data_X:
   263                           	callstack 0
   264   000031                     	ds	2
   265   000033                     _ContaSample:
   266                           	callstack 0
   267   000033                     	ds	1
   268   000034                     _ControlSample:
   269                           	callstack 0
   270   000034                     	ds	1
   271   000035                     _CmdGPS:
   272                           	callstack 0
   273   000035                     	ds	1
   274   000036                     _RegBuffer:
   275                           	callstack 0
   276   000036                     	ds	1
   277   000037                     _FlagGPS:
   278                           	callstack 0
   279   000037                     	ds	1
   280   000038                     _FlagRX:
   281                           	callstack 0
   282   000038                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285   000060                     __pbssBANK0:
   286                           	callstack 0
   287   000060                     _DataBytes:
   288                           	callstack 0
   289   000060                     	ds	12
   290   00006C                     _BufferDAT:
   291                           	callstack 0
   292   00006C                     	ds	13
   293                           
   294                           	psect	cstackBANK0
   295   000079                     __pcstackBANK0:
   296                           	callstack 0
   297   000079                     ??_main:
   298                           
   299                           ; 1 bytes @ 0x0
   300   000079                     	ds	2
   301                           
   302                           	psect	cstackCOMRAM
   303   000039                     __pcstackCOMRAM:
   304                           	callstack 0
   305   000039                     ?_ReadDataADC:
   306                           	callstack 0
   307   000039                     ?___aldiv:
   308                           	callstack 0
   309   000039                     ReadByte_USART@data:
   310                           	callstack 0
   311   000039                     WriteByte_USART@byte:
   312                           	callstack 0
   313   000039                     ___aldiv@dividend:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x0
   317   000039                     	ds	1
   318   00003A                     ReadByte_USART@conta:
   319                           	callstack 0
   320   00003A                     print_string@str:
   321                           	callstack 0
   322   00003A                     print_value@value:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x1
   326   00003A                     	ds	1
   327   00003B                     ReadByte_USART@Ready:
   328                           	callstack 0
   329   00003B                     ReadDataADC@i:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x2
   333   00003B                     	ds	1
   334   00003C                     ReceiveCMD_USART@conta_byte:
   335                           	callstack 0
   336   00003C                     TransmitCMD_USART@CMD_ID:
   337                           	callstack 0
   338   00003C                     TransmitDAT_USART@DAT_ID:
   339                           	callstack 0
   340   00003C                     print_value@Bytes:
   341                           	callstack 0
   342   00003C                     ReadDataADC@DataADC:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x3
   346   00003C                     	ds	1
   347   00003D                     ReceiveCMD_USART@data_byte:
   348                           	callstack 0
   349   00003D                     TransmitDAT_USART@conta:
   350                           	callstack 0
   351   00003D                     ___aldiv@divisor:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x4
   355   00003D                     	ds	4
   356   000041                     ___aldiv@counter:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x8
   360   000041                     	ds	1
   361   000042                     ___aldiv@sign:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x9
   365   000042                     	ds	1
   366   000043                     ___aldiv@quotient:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0xA
   370   000043                     	ds	4
   371   000047                     ??_Interrups:
   372                           
   373                           ; 1 bytes @ 0xE
   374   000047                     	ds	12
   375   000053                     Interrups@ID:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x1A
   379   000053                     	ds	1
   380   000054                     Interrups@conta:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1B
   384   000054                     	ds	1
   385                           
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 513 in file "Digitizer16bitsV2.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   405 ;;      Params:         0       0       0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0
   407 ;;      Temps:          0       2       0       0       0       0       0
   408 ;;      Totals:         0       2       0       0       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels required when called: 5
   411 ;; This function calls:
   412 ;;		_CloseSerialPort
   413 ;;		_ConfigSerialPort
   414 ;;		_OpenSerialPort
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text0
   421   001946                     __ptext0:
   422                           	callstack 0
   423   001946                     _main:
   424                           	callstack 26
   425   001946  FFFF               	dw	65535	; assembler added errata NOP
   426                           
   427                           ;Digitizer16bitsV2.c: 517:     ADCON1bits.PCFG = 0x07;
   428   001948  50C1               	movf	193,w,c	;volatile
   429   00194A  0BF0               	andlw	-16
   430   00194C  0907               	iorlw	7
   431   00194E  6EC1               	movwf	193,c	;volatile
   432                           
   433                           ;Digitizer16bitsV2.c: 518:     LATA = 0x00;
   434   001950  0E00               	movlw	0
   435   001952  6E89               	movwf	137,c	;volatile
   436                           
   437                           ;Digitizer16bitsV2.c: 519:     LATB = 0x00;
   438   001954  0E00               	movlw	0
   439   001956  6E8A               	movwf	138,c	;volatile
   440                           
   441                           ;Digitizer16bitsV2.c: 520:     LATC = 0x00;
   442   001958  0E00               	movlw	0
   443   00195A  6E8B               	movwf	139,c	;volatile
   444   00195C                     
   445                           ;Digitizer16bitsV2.c: 521:     LATCbits.LC6 = 1;
   446   00195C  8C8B               	bsf	139,6,c	;volatile
   447                           
   448                           ;Digitizer16bitsV2.c: 522:     TRISA = 0x00;
   449   00195E  0E00               	movlw	0
   450   001960  6E92               	movwf	146,c	;volatile
   451                           
   452                           ;Digitizer16bitsV2.c: 523:     TRISB = 0x00;
   453   001962  0E00               	movlw	0
   454   001964  6E93               	movwf	147,c	;volatile
   455                           
   456                           ;Digitizer16bitsV2.c: 524:     TRISC = 0x00;
   457   001966  0E00               	movlw	0
   458   001968  6E94               	movwf	148,c	;volatile
   459   00196A                     
   460                           ;Digitizer16bitsV2.c: 526:     TRISBbits.TRISB0 = 1;
   461   00196A  8093               	bsf	147,0,c	;volatile
   462   00196C                     
   463                           ;Digitizer16bitsV2.c: 527:     INTCON2bits.NOT_RBPU = 0;
   464   00196C  9EF1               	bcf	241,7,c	;volatile
   465   00196E                     
   466                           ;Digitizer16bitsV2.c: 528:     TRISBbits.TRISB4 = 1;
   467   00196E  8893               	bsf	147,4,c	;volatile
   468   001970                     
   469                           ;Digitizer16bitsV2.c: 529:     TRISCbits.TRISC5 = 1;
   470   001970  8A94               	bsf	148,5,c	;volatile
   471   001972                     
   472                           ;Digitizer16bitsV2.c: 530:     TRISCbits.TRISC3 = 1;
   473   001972  8694               	bsf	148,3,c	;volatile
   474   001974                     
   475                           ;Digitizer16bitsV2.c: 534:     LATBbits.LB5 = 1;
   476   001974  8A8A               	bsf	138,5,c	;volatile
   477   001976                     
   478                           ;Digitizer16bitsV2.c: 535:     LATAbits.LA1 = 1;
   479   001976  8289               	bsf	137,1,c	;volatile
   480   001978                     
   481                           ;Digitizer16bitsV2.c: 536:     LATAbits.LA2 = 0;
   482   001978  9489               	bcf	137,2,c	;volatile
   483   00197A                     
   484                           ;Digitizer16bitsV2.c: 537:     _delay((unsigned long)((100)*(39321600UL/4000.0)));
   485   00197A  0E04               	movlw	4
   486   00197C  0100               	movlb	0	; () banked
   487   00197E  6F7A               	movwf	(??_main+1)& (0+255),b
   488   001980  0EBF               	movlw	191
   489   001982  6F79               	movwf	??_main& (0+255),b
   490   001984  0E1D               	movlw	29
   491   001986                     u2007:
   492   001986  FFFF               	dw	65535	; errata NOP
   493   001988  2EE8               	decfsz	wreg,f,c
   494   00198A  D7FD               	bra	u2007
   495   00198C  2F79               	decfsz	??_main& (0+255),f,b
   496   00198E  D7FB               	bra	u2007
   497   001990  2F7A               	decfsz	(??_main+1)& (0+255),f,b
   498   001992  D7F9               	bra	u2007
   499   001994  F000               	nop	
   500   001996                     
   501                           ;Digitizer16bitsV2.c: 541:     ConfigSerialPort();
   502   001996  EC74  F00D         	call	_ConfigSerialPort	;wreg free
   503   00199A                     
   504                           ;Digitizer16bitsV2.c: 542:     OpenSerialPort();
   505   00199A  EC90  F00D         	call	_OpenSerialPort	;wreg free
   506   00199E                     
   507                           ;Digitizer16bitsV2.c: 546:     RCONbits.IPEN = 0;
   508   00199E  9ED0               	bcf	208,7,c	;volatile
   509   0019A0                     
   510                           ;Digitizer16bitsV2.c: 547:     INTCON = 0x00;
   511   0019A0  0E00               	movlw	0
   512   0019A2  6EF2               	movwf	242,c	;volatile
   513   0019A4                     
   514                           ;Digitizer16bitsV2.c: 550:     INTCONbits.PEIE = 1;
   515   0019A4  8CF2               	bsf	242,6,c	;volatile
   516   0019A6                     
   517                           ;Digitizer16bitsV2.c: 551:     INTCONbits.GIE = 1;
   518   0019A6  8EF2               	bsf	242,7,c	;volatile
   519   0019A8                     
   520                           ;Digitizer16bitsV2.c: 554:     LATAbits.LA0 = 0;
   521   0019A8  9089               	bcf	137,0,c	;volatile
   522   0019AA                     
   523                           ;Digitizer16bitsV2.c: 555:     LATBbits.LB7 = 0;
   524   0019AA  9E8A               	bcf	138,7,c	;volatile
   525   0019AC                     
   526                           ;Digitizer16bitsV2.c: 556:     LATBbits.LB6 = 0;
   527   0019AC  9C8A               	bcf	138,6,c	;volatile
   528   0019AE                     l204:
   529   0019AE  FFFF               	dw	65535	; assembler added errata NOP
   530   0019B0  EFD7  F00C         	goto	l204
   531   0019B4  EFB9  F00A         	goto	start
   532   0019B8                     __end_of_main:
   533                           	callstack 0
   534                           
   535 ;; *************** function _OpenSerialPort *****************
   536 ;; Defined at:
   537 ;;		line 24 in file "LIB258_USART.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		None
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   551 ;;      Params:         0       0       0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0
   554 ;;      Totals:         0       0       0       0       0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 4
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text1
   566   001B20                     __ptext1:
   567                           	callstack 0
   568   001B20                     _OpenSerialPort:
   569                           	callstack 0
   570   001B20  FFFF               	dw	65535	; assembler added errata NOP
   571   001B22                     
   572                           ;LIB258_USART.c: 26:     RCSTAbits.SPEN = 1;
   573   001B22  8EAB               	bsf	171,7,c	;volatile
   574   001B24  0012               	return		;funcret
   575   001B26  FFFF               	dw	65535	; errata NOP
   576   001B28                     __end_of_OpenSerialPort:
   577                           	callstack 0
   578                           
   579 ;; *************** function _ConfigSerialPort *****************
   580 ;; Defined at:
   581 ;;		line 6 in file "LIB258_USART.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   595 ;;      Params:         0       0       0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 4
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text2
   610   001AE8                     __ptext2:
   611                           	callstack 0
   612   001AE8                     _ConfigSerialPort:
   613                           	callstack 0
   614   001AE8  FFFF               	dw	65535	; assembler added errata NOP
   615   001AEA                     
   616                           ;LIB258_USART.c: 8:     TRISCbits.TRISC6 = 0;
   617   001AEA  9C94               	bcf	148,6,c	;volatile
   618                           
   619                           ;LIB258_USART.c: 9:     TRISCbits.TRISC7 = 1;
   620   001AEC  8E94               	bsf	148,7,c	;volatile
   621   001AEE                     
   622                           ;LIB258_USART.c: 11:     TXSTA = 0b00100100;
   623   001AEE  0E24               	movlw	36
   624   001AF0  6EAC               	movwf	172,c	;volatile
   625                           
   626                           ;LIB258_USART.c: 12:     RCSTA = 0b00010000;
   627   001AF2  0E10               	movlw	16
   628   001AF4  6EAB               	movwf	171,c	;volatile
   629                           
   630                           ;LIB258_USART.c: 14:     SPBRG = 63;
   631   001AF6  0E3F               	movlw	63
   632   001AF8  6EAF               	movwf	175,c	;volatile
   633   001AFA                     
   634                           ;LIB258_USART.c: 16:     PIE1bits.RCIE = 1;
   635   001AFA  8A9D               	bsf	157,5,c	;volatile
   636                           
   637                           ;LIB258_USART.c: 18:     T2CON = 0b01111011;
   638   001AFC  0E7B               	movlw	123
   639   001AFE  6ECA               	movwf	202,c	;volatile
   640   001B00                     
   641                           ;LIB258_USART.c: 19:     PR2 = 0xFF;
   642   001B00  68CB               	setf	203,c	;volatile
   643   001B02  0012               	return		;funcret
   644   001B04  FFFF               	dw	65535	; errata NOP
   645   001B06                     __end_of_ConfigSerialPort:
   646                           	callstack 0
   647                           
   648 ;; *************** function _CloseSerialPort *****************
   649 ;; Defined at:
   650 ;;		line 31 in file "LIB258_USART.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		None
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   664 ;;      Params:         0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 4
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text3
   679   001B28                     __ptext3:
   680                           	callstack 0
   681   001B28                     _CloseSerialPort:
   682                           	callstack 26
   683   001B28  FFFF               	dw	65535	; assembler added errata NOP
   684                           
   685                           ;LIB258_USART.c: 33:     RCSTAbits.SPEN = 0;
   686   001B2A  9EAB               	bcf	171,7,c	;volatile
   687   001B2C  0012               	return		;funcret
   688   001B2E  FFFF               	dw	65535	; errata NOP
   689   001B30                     __end_of_CloseSerialPort:
   690                           	callstack 0
   691                           
   692 ;; *************** function _Interrups *****************
   693 ;; Defined at:
   694 ;;		line 15 in file "Digitizer16bitsV2.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  conta           1   27[COMRAM] unsigned char 
   699 ;;  ID              1   26[COMRAM] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   709 ;;      Params:         0       0       0       0       0       0       0
   710 ;;      Locals:         2       0       0       0       0       0       0
   711 ;;      Temps:         12       0       0       0       0       0       0
   712 ;;      Totals:        14       0       0       0       0       0       0
   713 ;;Total ram usage:       14 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 3
   716 ;; This function calls:
   717 ;;		_ReadDataADC
   718 ;;		_ReceiveCMD_USART
   719 ;;		_TransmitCMD_USART
   720 ;;		_TransmitDAT_USART
   721 ;;		_WriteByte_USART
   722 ;;		___aldiv
   723 ;;		_print_string
   724 ;;		_print_value
   725 ;; This function is called by:
   726 ;;		Interrupt level 2
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	intcode
   731   000008                     __pintcode:
   732                           	callstack 0
   733   000008                     _Interrups:
   734                           	callstack 0
   735   000008  FFFF               	dw	65535	; assembler added errata NOP
   736                           
   737                           ;incstack = 0
   738   00000A  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   739   00000C  CFE9 F04B          	movff	fsr0l,??_Interrups+4
   740   000010  CFEA F04C          	movff	fsr0h,??_Interrups+5
   741   000014  CFD9 F04D          	movff	fsr2l,??_Interrups+6
   742   000018  CFDA F04E          	movff	fsr2h,??_Interrups+7
   743   00001C  CFF6 F04F          	movff	tblptrl,??_Interrups+8
   744   000020  CFF7 F050          	movff	tblptrh,??_Interrups+9
   745   000024  CFF8 F051          	movff	tblptru,??_Interrups+10
   746   000028  CFF5 F052          	movff	tablat,??_Interrups+11
   747   00002C                     
   748                           ;Digitizer16bitsV2.c: 16:     unsigned char ID, conta;;Digitizer16bitsV2.c: 18:     if (
      +                          (INTCONbits.INT0IF == 1) && (INTCONbits.INT0IE == 1)){
   749   00002C  A2F2               	btfss	242,1,c	;volatile
   750   00002E  EF1B  F000         	goto	i2u135_41
   751   000032  EF1E  F000         	goto	i2u135_40
   752   000036                     i2u135_41:
   753   000036  FFFF               	dw	65535	; assembler added errata NOP
   754   000038  EF91  F003         	goto	i2l123
   755   00003C                     i2u135_40:
   756   00003C  FFFF               	dw	65535	; assembler added errata NOP
   757   00003E  A8F2               	btfss	242,4,c	;volatile
   758   000040  EF24  F000         	goto	i2u136_41
   759   000044  EF27  F000         	goto	i2u136_40
   760   000048                     i2u136_41:
   761   000048  FFFF               	dw	65535	; assembler added errata NOP
   762   00004A  EF91  F003         	goto	i2l123
   763   00004E                     i2u136_40:
   764   00004E  FFFF               	dw	65535	; assembler added errata NOP
   765   000050                     
   766                           ;Digitizer16bitsV2.c: 19:         INTCONbits.INT0IF = 0;
   767   000050  92F2               	bcf	242,1,c	;volatile
   768                           
   769                           ;Digitizer16bitsV2.c: 20:         INTCONbits.INT0IE = 0;
   770   000052  98F2               	bcf	242,4,c	;volatile
   771                           
   772                           ;Digitizer16bitsV2.c: 22:         switch(CmdGPS){
   773   000054  EF72  F003         	goto	i2l2921
   774   000058                     i2l2695:
   775   000058  FFFF               	dw	65535	; assembler added errata NOP
   776                           
   777                           ;Digitizer16bitsV2.c: 24:                 if(ControlSample == 1){
   778   00005A  0434               	decf	_ControlSample^0,w,c
   779   00005C  A4D8               	btfss	status,2,c
   780   00005E  EF33  F000         	goto	i2u137_41
   781   000062  EF36  F000         	goto	i2u137_40
   782   000066                     i2u137_41:
   783   000066  FFFF               	dw	65535	; assembler added errata NOP
   784   000068  EFA5  F00A         	goto	i2l199
   785   00006C                     i2u137_40:
   786   00006C  FFFF               	dw	65535	; assembler added errata NOP
   787   00006E                     
   788                           ;Digitizer16bitsV2.c: 26:                     LATAbits.LA0 = 1;
   789   00006E  8089               	bsf	137,0,c	;volatile
   790   000070                     
   791                           ;Digitizer16bitsV2.c: 29:                     TMR0H = 0x10;
   792   000070  0E10               	movlw	16
   793   000072  6ED7               	movwf	215,c	;volatile
   794                           
   795                           ;Digitizer16bitsV2.c: 30:                     TMR0L = 0x00;
   796   000074  0E00               	movlw	0
   797   000076  6ED6               	movwf	214,c	;volatile
   798                           
   799                           ;Digitizer16bitsV2.c: 31:                     T0CON = 0b10000100;
   800   000078  0E84               	movlw	132
   801   00007A  6ED5               	movwf	213,c	;volatile
   802   00007C                     
   803                           ;Digitizer16bitsV2.c: 32:                     INTCONbits.TMR0IF = 0;
   804   00007C  94F2               	bcf	242,2,c	;volatile
   805   00007E                     
   806                           ;Digitizer16bitsV2.c: 33:                     INTCONbits.TMR0IE = 1;
   807   00007E  8AF2               	bsf	242,5,c	;volatile
   808                           
   809                           ;Digitizer16bitsV2.c: 36:                     ContaSample = 0;
   810   000080  0E00               	movlw	0
   811   000082  6E33               	movwf	_ContaSample^0,c
   812   000084                     
   813                           ;Digitizer16bitsV2.c: 41:                     print_string("G-JRODATE");
   814   000084  0EA5               	movlw	low STR_1
   815   000086  6E3A               	movwf	print_string@str^0,c
   816   000088  0E15               	movlw	high STR_1
   817   00008A  6E3B               	movwf	(print_string@str+1)^0,c
   818   00008C  ECDC  F00C         	call	_print_string	;wreg free
   819   000090                     
   820                           ;Digitizer16bitsV2.c: 42:                     print_string(BufferDAT);
   821   000090  0E6C               	movlw	low _BufferDAT
   822   000092  6E3A               	movwf	print_string@str^0,c
   823   000094  0E00               	movlw	high _BufferDAT
   824   000096  6E3B               	movwf	(print_string@str+1)^0,c
   825   000098  ECDC  F00C         	call	_print_string	;wreg free
   826   00009C                     
   827                           ;Digitizer16bitsV2.c: 43:                     print_string("\n\r");
   828   00009C  0E8C               	movlw	low (STR_5+21)
   829   00009E  6E3A               	movwf	print_string@str^0,c
   830   0000A0  0E15               	movlw	high (STR_5+21)
   831   0000A2  6E3B               	movwf	(print_string@str+1)^0,c
   832   0000A4  ECDC  F00C         	call	_print_string	;wreg free
   833   0000A8                     
   834                           ;Digitizer16bitsV2.c: 46:                     LATB = 0x2E;
   835   0000A8  0E2E               	movlw	46
   836   0000AA  6E8A               	movwf	138,c	;volatile
   837   0000AC                     
   838                           ;Digitizer16bitsV2.c: 47:                     LATBbits.LB7 = 1;
   839   0000AC  8E8A               	bsf	138,7,c	;volatile
   840   0000AE                     
   841                           ;Digitizer16bitsV2.c: 48:                     _delay((unsigned long)((8)*(39321600UL/400
      +                          0.0)));
   842   0000AE  0E4D               	movlw	77
   843   0000B0  6E47               	movwf	??_Interrups^0,c
   844   0000B2  0EA5               	movlw	165
   845   0000B4                     i2u201_47:
   846   0000B4  FFFF               	dw	65535	; errata NOP
   847   0000B6  2EE8               	decfsz	wreg,f,c
   848   0000B8  D7FD               	bra	i2u201_47
   849   0000BA  2E47               	decfsz	??_Interrups^0,f,c
   850   0000BC  D7FB               	bra	i2u201_47
   851   0000BE  D000               	nop2	
   852   0000C0  F000               	nop	
   853   0000C2                     
   854                           ;Digitizer16bitsV2.c: 50:                     SumData_X = 0;
   855   0000C2  0E00               	movlw	0
   856   0000C4  6E1D               	movwf	_SumData_X^0,c
   857   0000C6  0E00               	movlw	0
   858   0000C8  6E1E               	movwf	(_SumData_X+1)^0,c
   859   0000CA  0E00               	movlw	0
   860   0000CC  6E1F               	movwf	(_SumData_X+2)^0,c
   861   0000CE  0E00               	movlw	0
   862   0000D0  6E20               	movwf	(_SumData_X+3)^0,c
   863   0000D2                     
   864                           ;Digitizer16bitsV2.c: 51:                     Data_X = ReadDataADC();
   865   0000D2  EC78  F00B         	call	_ReadDataADC	;wreg free
   866   0000D6  C039  F031         	movff	?_ReadDataADC,_Data_X
   867   0000DA  C03A  F032         	movff	?_ReadDataADC+1,_Data_X+1
   868   0000DE                     
   869                           ;Digitizer16bitsV2.c: 52:                     for(conta = 0; conta<50; conta++){
   870   0000DE  0E00               	movlw	0
   871   0000E0  6E54               	movwf	Interrups@conta^0,c
   872   0000E2                     i2l2727:
   873   0000E2  FFFF               	dw	65535	; assembler added errata NOP
   874                           
   875                           ;Digitizer16bitsV2.c: 53:                         Data_X = ReadDataADC();
   876   0000E4  EC78  F00B         	call	_ReadDataADC	;wreg free
   877   0000E8  C039  F031         	movff	?_ReadDataADC,_Data_X
   878   0000EC  C03A  F032         	movff	?_ReadDataADC+1,_Data_X+1
   879   0000F0                     
   880                           ;Digitizer16bitsV2.c: 54:                         SumData_X = SumData_X + Data_X;
   881   0000F0  C031  F047         	movff	_Data_X,??_Interrups
   882   0000F4  C032  F048         	movff	_Data_X+1,??_Interrups+1
   883   0000F8  0E00               	movlw	0
   884   0000FA  BE48               	btfsc	(??_Interrups+1)^0,7,c
   885   0000FC  0EFF               	movlw	255
   886   0000FE  6E49               	movwf	(??_Interrups+2)^0,c
   887   000100  6E4A               	movwf	(??_Interrups+3)^0,c
   888   000102  501D               	movf	_SumData_X^0,w,c
   889   000104  2447               	addwf	??_Interrups^0,w,c
   890   000106  6E1D               	movwf	_SumData_X^0,c
   891   000108  501E               	movf	(_SumData_X+1)^0,w,c
   892   00010A  2048               	addwfc	(??_Interrups+1)^0,w,c
   893   00010C  6E1E               	movwf	(_SumData_X+1)^0,c
   894   00010E  501F               	movf	(_SumData_X+2)^0,w,c
   895   000110  2049               	addwfc	(??_Interrups+2)^0,w,c
   896   000112  6E1F               	movwf	(_SumData_X+2)^0,c
   897   000114  5020               	movf	(_SumData_X+3)^0,w,c
   898   000116  204A               	addwfc	(??_Interrups+3)^0,w,c
   899   000118  6E20               	movwf	(_SumData_X+3)^0,c
   900   00011A                     
   901                           ;Digitizer16bitsV2.c: 55:                     }
   902   00011A  2A54               	incf	Interrups@conta^0,f,c
   903   00011C  0E31               	movlw	49
   904   00011E  6454               	cpfsgt	Interrups@conta^0,c
   905   000120  EF94  F000         	goto	i2u138_41
   906   000124  EF97  F000         	goto	i2u138_40
   907   000128                     i2u138_41:
   908   000128  FFFF               	dw	65535	; assembler added errata NOP
   909   00012A  EF71  F000         	goto	i2l2727
   910   00012E                     i2u138_40:
   911   00012E  FFFF               	dw	65535	; assembler added errata NOP
   912   000130                     
   913                           ;Digitizer16bitsV2.c: 56:                     LATBbits.LB7 = 0;
   914   000130  9E8A               	bcf	138,7,c	;volatile
   915   000132                     
   916                           ;Digitizer16bitsV2.c: 58:                     LATB = 0x2A;
   917   000132  0E2A               	movlw	42
   918   000134  6E8A               	movwf	138,c	;volatile
   919   000136                     
   920                           ;Digitizer16bitsV2.c: 59:                     _delay((unsigned long)((8)*(39321600UL/400
      +                          0.0)));
   921   000136  0E4D               	movlw	77
   922   000138  6E47               	movwf	??_Interrups^0,c
   923   00013A  0EA5               	movlw	165
   924   00013C                     i2u202_47:
   925   00013C  FFFF               	dw	65535	; errata NOP
   926   00013E  2EE8               	decfsz	wreg,f,c
   927   000140  D7FD               	bra	i2u202_47
   928   000142  2E47               	decfsz	??_Interrups^0,f,c
   929   000144  D7FB               	bra	i2u202_47
   930   000146  D000               	nop2	
   931   000148  F000               	nop	
   932   00014A                     
   933                           ;Digitizer16bitsV2.c: 61:                     SumData_Y = 0;
   934   00014A  0E00               	movlw	0
   935   00014C  6E19               	movwf	_SumData_Y^0,c
   936   00014E  0E00               	movlw	0
   937   000150  6E1A               	movwf	(_SumData_Y+1)^0,c
   938   000152  0E00               	movlw	0
   939   000154  6E1B               	movwf	(_SumData_Y+2)^0,c
   940   000156  0E00               	movlw	0
   941   000158  6E1C               	movwf	(_SumData_Y+3)^0,c
   942   00015A                     
   943                           ;Digitizer16bitsV2.c: 62:                     Data_Y = ReadDataADC();
   944   00015A  EC78  F00B         	call	_ReadDataADC	;wreg free
   945   00015E  C039  F02F         	movff	?_ReadDataADC,_Data_Y
   946   000162  C03A  F030         	movff	?_ReadDataADC+1,_Data_Y+1
   947   000166                     
   948                           ;Digitizer16bitsV2.c: 63:                     for(conta = 0; conta<50; conta++){
   949   000166  0E00               	movlw	0
   950   000168  6E54               	movwf	Interrups@conta^0,c
   951   00016A                     i2l2749:
   952   00016A  FFFF               	dw	65535	; assembler added errata NOP
   953                           
   954                           ;Digitizer16bitsV2.c: 64:                         Data_Y = ReadDataADC();
   955   00016C  EC78  F00B         	call	_ReadDataADC	;wreg free
   956   000170  C039  F02F         	movff	?_ReadDataADC,_Data_Y
   957   000174  C03A  F030         	movff	?_ReadDataADC+1,_Data_Y+1
   958   000178                     
   959                           ;Digitizer16bitsV2.c: 65:                         SumData_Y = SumData_Y + Data_Y;
   960   000178  C02F  F047         	movff	_Data_Y,??_Interrups
   961   00017C  C030  F048         	movff	_Data_Y+1,??_Interrups+1
   962   000180  0E00               	movlw	0
   963   000182  BE48               	btfsc	(??_Interrups+1)^0,7,c
   964   000184  0EFF               	movlw	255
   965   000186  6E49               	movwf	(??_Interrups+2)^0,c
   966   000188  6E4A               	movwf	(??_Interrups+3)^0,c
   967   00018A  5019               	movf	_SumData_Y^0,w,c
   968   00018C  2447               	addwf	??_Interrups^0,w,c
   969   00018E  6E19               	movwf	_SumData_Y^0,c
   970   000190  501A               	movf	(_SumData_Y+1)^0,w,c
   971   000192  2048               	addwfc	(??_Interrups+1)^0,w,c
   972   000194  6E1A               	movwf	(_SumData_Y+1)^0,c
   973   000196  501B               	movf	(_SumData_Y+2)^0,w,c
   974   000198  2049               	addwfc	(??_Interrups+2)^0,w,c
   975   00019A  6E1B               	movwf	(_SumData_Y+2)^0,c
   976   00019C  501C               	movf	(_SumData_Y+3)^0,w,c
   977   00019E  204A               	addwfc	(??_Interrups+3)^0,w,c
   978   0001A0  6E1C               	movwf	(_SumData_Y+3)^0,c
   979   0001A2                     
   980                           ;Digitizer16bitsV2.c: 66:                     }
   981   0001A2  2A54               	incf	Interrups@conta^0,f,c
   982   0001A4  0E31               	movlw	49
   983   0001A6  6454               	cpfsgt	Interrups@conta^0,c
   984   0001A8  EFD8  F000         	goto	i2u139_41
   985   0001AC  EFDB  F000         	goto	i2u139_40
   986   0001B0                     i2u139_41:
   987   0001B0  FFFF               	dw	65535	; assembler added errata NOP
   988   0001B2  EFB5  F000         	goto	i2l2749
   989   0001B6                     i2u139_40:
   990   0001B6  FFFF               	dw	65535	; assembler added errata NOP
   991   0001B8                     
   992                           ;Digitizer16bitsV2.c: 68:                     LATB = 0x2C;
   993   0001B8  0E2C               	movlw	44
   994   0001BA  6E8A               	movwf	138,c	;volatile
   995   0001BC                     
   996                           ;Digitizer16bitsV2.c: 69:                     _delay((unsigned long)((8)*(39321600UL/400
      +                          0.0)));
   997   0001BC  0E4D               	movlw	77
   998   0001BE  6E47               	movwf	??_Interrups^0,c
   999   0001C0  0EA5               	movlw	165
  1000   0001C2                     i2u203_47:
  1001   0001C2  FFFF               	dw	65535	; errata NOP
  1002   0001C4  2EE8               	decfsz	wreg,f,c
  1003   0001C6  D7FD               	bra	i2u203_47
  1004   0001C8  2E47               	decfsz	??_Interrups^0,f,c
  1005   0001CA  D7FB               	bra	i2u203_47
  1006   0001CC  D000               	nop2	
  1007   0001CE  F000               	nop	
  1008   0001D0                     
  1009                           ;Digitizer16bitsV2.c: 71:                     SumData_Z = 0;
  1010   0001D0  0E00               	movlw	0
  1011   0001D2  6E15               	movwf	_SumData_Z^0,c
  1012   0001D4  0E00               	movlw	0
  1013   0001D6  6E16               	movwf	(_SumData_Z+1)^0,c
  1014   0001D8  0E00               	movlw	0
  1015   0001DA  6E17               	movwf	(_SumData_Z+2)^0,c
  1016   0001DC  0E00               	movlw	0
  1017   0001DE  6E18               	movwf	(_SumData_Z+3)^0,c
  1018   0001E0                     
  1019                           ;Digitizer16bitsV2.c: 72:                     Data_Z = ReadDataADC();
  1020   0001E0  EC78  F00B         	call	_ReadDataADC	;wreg free
  1021   0001E4  C039  F02D         	movff	?_ReadDataADC,_Data_Z
  1022   0001E8  C03A  F02E         	movff	?_ReadDataADC+1,_Data_Z+1
  1023   0001EC                     
  1024                           ;Digitizer16bitsV2.c: 73:                     for(conta = 0; conta<50; conta++){
  1025   0001EC  0E00               	movlw	0
  1026   0001EE  6E54               	movwf	Interrups@conta^0,c
  1027   0001F0                     i2l2771:
  1028   0001F0  FFFF               	dw	65535	; assembler added errata NOP
  1029                           
  1030                           ;Digitizer16bitsV2.c: 74:                         Data_Z = ReadDataADC();
  1031   0001F2  EC78  F00B         	call	_ReadDataADC	;wreg free
  1032   0001F6  C039  F02D         	movff	?_ReadDataADC,_Data_Z
  1033   0001FA  C03A  F02E         	movff	?_ReadDataADC+1,_Data_Z+1
  1034   0001FE                     
  1035                           ;Digitizer16bitsV2.c: 75:                         SumData_Z = SumData_Z + Data_Z;
  1036   0001FE  C02D  F047         	movff	_Data_Z,??_Interrups
  1037   000202  C02E  F048         	movff	_Data_Z+1,??_Interrups+1
  1038   000206  0E00               	movlw	0
  1039   000208  BE48               	btfsc	(??_Interrups+1)^0,7,c
  1040   00020A  0EFF               	movlw	255
  1041   00020C  6E49               	movwf	(??_Interrups+2)^0,c
  1042   00020E  6E4A               	movwf	(??_Interrups+3)^0,c
  1043   000210  5015               	movf	_SumData_Z^0,w,c
  1044   000212  2447               	addwf	??_Interrups^0,w,c
  1045   000214  6E15               	movwf	_SumData_Z^0,c
  1046   000216  5016               	movf	(_SumData_Z+1)^0,w,c
  1047   000218  2048               	addwfc	(??_Interrups+1)^0,w,c
  1048   00021A  6E16               	movwf	(_SumData_Z+1)^0,c
  1049   00021C  5017               	movf	(_SumData_Z+2)^0,w,c
  1050   00021E  2049               	addwfc	(??_Interrups+2)^0,w,c
  1051   000220  6E17               	movwf	(_SumData_Z+2)^0,c
  1052   000222  5018               	movf	(_SumData_Z+3)^0,w,c
  1053   000224  204A               	addwfc	(??_Interrups+3)^0,w,c
  1054   000226  6E18               	movwf	(_SumData_Z+3)^0,c
  1055   000228                     
  1056                           ;Digitizer16bitsV2.c: 76:                     }
  1057   000228  2A54               	incf	Interrups@conta^0,f,c
  1058   00022A  0E31               	movlw	49
  1059   00022C  6454               	cpfsgt	Interrups@conta^0,c
  1060   00022E  EF1B  F001         	goto	i2u140_41
  1061   000232  EF1E  F001         	goto	i2u140_40
  1062   000236                     i2u140_41:
  1063   000236  FFFF               	dw	65535	; assembler added errata NOP
  1064   000238  EFF8  F000         	goto	i2l2771
  1065   00023C                     i2u140_40:
  1066   00023C  FFFF               	dw	65535	; assembler added errata NOP
  1067   00023E                     
  1068                           ;Digitizer16bitsV2.c: 78:                     LATB = 0x28;
  1069   00023E  0E28               	movlw	40
  1070   000240  6E8A               	movwf	138,c	;volatile
  1071   000242                     
  1072                           ;Digitizer16bitsV2.c: 79:                     _delay((unsigned long)((8)*(39321600UL/400
      +                          0.0)));
  1073   000242  0E4D               	movlw	77
  1074   000244  6E47               	movwf	??_Interrups^0,c
  1075   000246  0EA5               	movlw	165
  1076   000248                     i2u204_47:
  1077   000248  FFFF               	dw	65535	; errata NOP
  1078   00024A  2EE8               	decfsz	wreg,f,c
  1079   00024C  D7FD               	bra	i2u204_47
  1080   00024E  2E47               	decfsz	??_Interrups^0,f,c
  1081   000250  D7FB               	bra	i2u204_47
  1082   000252  D000               	nop2	
  1083   000254  F000               	nop	
  1084   000256                     
  1085                           ;Digitizer16bitsV2.c: 81:                     SumData_TC = 0;
  1086   000256  0E00               	movlw	0
  1087   000258  6E11               	movwf	_SumData_TC^0,c
  1088   00025A  0E00               	movlw	0
  1089   00025C  6E12               	movwf	(_SumData_TC+1)^0,c
  1090   00025E  0E00               	movlw	0
  1091   000260  6E13               	movwf	(_SumData_TC+2)^0,c
  1092   000262  0E00               	movlw	0
  1093   000264  6E14               	movwf	(_SumData_TC+3)^0,c
  1094   000266                     
  1095                           ;Digitizer16bitsV2.c: 82:                     Data_TC = ReadDataADC();
  1096   000266  EC78  F00B         	call	_ReadDataADC	;wreg free
  1097   00026A  C039  F02B         	movff	?_ReadDataADC,_Data_TC
  1098   00026E  C03A  F02C         	movff	?_ReadDataADC+1,_Data_TC+1
  1099   000272                     
  1100                           ;Digitizer16bitsV2.c: 83:                     for(conta = 0; conta<50; conta++){
  1101   000272  0E00               	movlw	0
  1102   000274  6E54               	movwf	Interrups@conta^0,c
  1103   000276                     i2l2793:
  1104   000276  FFFF               	dw	65535	; assembler added errata NOP
  1105                           
  1106                           ;Digitizer16bitsV2.c: 84:                         Data_TC = ReadDataADC();
  1107   000278  EC78  F00B         	call	_ReadDataADC	;wreg free
  1108   00027C  C039  F02B         	movff	?_ReadDataADC,_Data_TC
  1109   000280  C03A  F02C         	movff	?_ReadDataADC+1,_Data_TC+1
  1110   000284                     
  1111                           ;Digitizer16bitsV2.c: 85:                         SumData_TC = SumData_TC + Data_TC;
  1112   000284  C02B  F047         	movff	_Data_TC,??_Interrups
  1113   000288  C02C  F048         	movff	_Data_TC+1,??_Interrups+1
  1114   00028C  0E00               	movlw	0
  1115   00028E  BE48               	btfsc	(??_Interrups+1)^0,7,c
  1116   000290  0EFF               	movlw	255
  1117   000292  6E49               	movwf	(??_Interrups+2)^0,c
  1118   000294  6E4A               	movwf	(??_Interrups+3)^0,c
  1119   000296  5011               	movf	_SumData_TC^0,w,c
  1120   000298  2447               	addwf	??_Interrups^0,w,c
  1121   00029A  6E11               	movwf	_SumData_TC^0,c
  1122   00029C  5012               	movf	(_SumData_TC+1)^0,w,c
  1123   00029E  2048               	addwfc	(??_Interrups+1)^0,w,c
  1124   0002A0  6E12               	movwf	(_SumData_TC+1)^0,c
  1125   0002A2  5013               	movf	(_SumData_TC+2)^0,w,c
  1126   0002A4  2049               	addwfc	(??_Interrups+2)^0,w,c
  1127   0002A6  6E13               	movwf	(_SumData_TC+2)^0,c
  1128   0002A8  5014               	movf	(_SumData_TC+3)^0,w,c
  1129   0002AA  204A               	addwfc	(??_Interrups+3)^0,w,c
  1130   0002AC  6E14               	movwf	(_SumData_TC+3)^0,c
  1131   0002AE                     
  1132                           ;Digitizer16bitsV2.c: 86:                     }
  1133   0002AE  2A54               	incf	Interrups@conta^0,f,c
  1134   0002B0  0E31               	movlw	49
  1135   0002B2  6454               	cpfsgt	Interrups@conta^0,c
  1136   0002B4  EF5E  F001         	goto	i2u141_41
  1137   0002B8  EF61  F001         	goto	i2u141_40
  1138   0002BC                     i2u141_41:
  1139   0002BC  FFFF               	dw	65535	; assembler added errata NOP
  1140   0002BE  EF3B  F001         	goto	i2l2793
  1141   0002C2                     i2u141_40:
  1142   0002C2  FFFF               	dw	65535	; assembler added errata NOP
  1143   0002C4                     
  1144                           ;Digitizer16bitsV2.c: 88:                     LATB = 0x20;
  1145   0002C4  0E20               	movlw	32
  1146   0002C6  6E8A               	movwf	138,c	;volatile
  1147   0002C8                     
  1148                           ;Digitizer16bitsV2.c: 89:                     _delay((unsigned long)((8)*(39321600UL/400
      +                          0.0)));
  1149   0002C8  0E4D               	movlw	77
  1150   0002CA  6E47               	movwf	??_Interrups^0,c
  1151   0002CC  0EA5               	movlw	165
  1152   0002CE                     i2u205_47:
  1153   0002CE  FFFF               	dw	65535	; errata NOP
  1154   0002D0  2EE8               	decfsz	wreg,f,c
  1155   0002D2  D7FD               	bra	i2u205_47
  1156   0002D4  2E47               	decfsz	??_Interrups^0,f,c
  1157   0002D6  D7FB               	bra	i2u205_47
  1158   0002D8  D000               	nop2	
  1159   0002DA  F000               	nop	
  1160   0002DC                     
  1161                           ;Digitizer16bitsV2.c: 91:                     SumData_TS = 0;
  1162   0002DC  0E00               	movlw	0
  1163   0002DE  6E0D               	movwf	_SumData_TS^0,c
  1164   0002E0  0E00               	movlw	0
  1165   0002E2  6E0E               	movwf	(_SumData_TS+1)^0,c
  1166   0002E4  0E00               	movlw	0
  1167   0002E6  6E0F               	movwf	(_SumData_TS+2)^0,c
  1168   0002E8  0E00               	movlw	0
  1169   0002EA  6E10               	movwf	(_SumData_TS+3)^0,c
  1170   0002EC                     
  1171                           ;Digitizer16bitsV2.c: 92:                     Data_TS = ReadDataADC();
  1172   0002EC  EC78  F00B         	call	_ReadDataADC	;wreg free
  1173   0002F0  C039  F029         	movff	?_ReadDataADC,_Data_TS
  1174   0002F4  C03A  F02A         	movff	?_ReadDataADC+1,_Data_TS+1
  1175   0002F8                     
  1176                           ;Digitizer16bitsV2.c: 93:                     for(conta = 0; conta<50; conta++){
  1177   0002F8  0E00               	movlw	0
  1178   0002FA  6E54               	movwf	Interrups@conta^0,c
  1179   0002FC                     i2l2815:
  1180   0002FC  FFFF               	dw	65535	; assembler added errata NOP
  1181                           
  1182                           ;Digitizer16bitsV2.c: 94:                         Data_TS = ReadDataADC();
  1183   0002FE  EC78  F00B         	call	_ReadDataADC	;wreg free
  1184   000302  C039  F029         	movff	?_ReadDataADC,_Data_TS
  1185   000306  C03A  F02A         	movff	?_ReadDataADC+1,_Data_TS+1
  1186   00030A                     
  1187                           ;Digitizer16bitsV2.c: 95:                         SumData_TS = SumData_TS + Data_TS;
  1188   00030A  C029  F047         	movff	_Data_TS,??_Interrups
  1189   00030E  C02A  F048         	movff	_Data_TS+1,??_Interrups+1
  1190   000312  0E00               	movlw	0
  1191   000314  BE48               	btfsc	(??_Interrups+1)^0,7,c
  1192   000316  0EFF               	movlw	255
  1193   000318  6E49               	movwf	(??_Interrups+2)^0,c
  1194   00031A  6E4A               	movwf	(??_Interrups+3)^0,c
  1195   00031C  500D               	movf	_SumData_TS^0,w,c
  1196   00031E  2447               	addwf	??_Interrups^0,w,c
  1197   000320  6E0D               	movwf	_SumData_TS^0,c
  1198   000322  500E               	movf	(_SumData_TS+1)^0,w,c
  1199   000324  2048               	addwfc	(??_Interrups+1)^0,w,c
  1200   000326  6E0E               	movwf	(_SumData_TS+1)^0,c
  1201   000328  500F               	movf	(_SumData_TS+2)^0,w,c
  1202   00032A  2049               	addwfc	(??_Interrups+2)^0,w,c
  1203   00032C  6E0F               	movwf	(_SumData_TS+2)^0,c
  1204   00032E  5010               	movf	(_SumData_TS+3)^0,w,c
  1205   000330  204A               	addwfc	(??_Interrups+3)^0,w,c
  1206   000332  6E10               	movwf	(_SumData_TS+3)^0,c
  1207   000334                     
  1208                           ;Digitizer16bitsV2.c: 96:                     }
  1209   000334  2A54               	incf	Interrups@conta^0,f,c
  1210   000336  0E31               	movlw	49
  1211   000338  6454               	cpfsgt	Interrups@conta^0,c
  1212   00033A  EFA1  F001         	goto	i2u142_41
  1213   00033E  EFA4  F001         	goto	i2u142_40
  1214   000342                     i2u142_41:
  1215   000342  FFFF               	dw	65535	; assembler added errata NOP
  1216   000344  EF7E  F001         	goto	i2l2815
  1217   000348                     i2u142_40:
  1218   000348  FFFF               	dw	65535	; assembler added errata NOP
  1219   00034A                     
  1220                           ;Digitizer16bitsV2.c: 98:                     LATB = 0x24;
  1221   00034A  0E24               	movlw	36
  1222   00034C  6E8A               	movwf	138,c	;volatile
  1223   00034E                     
  1224                           ;Digitizer16bitsV2.c: 99:                     _delay((unsigned long)((8)*(39321600UL/400
      +                          0.0)));
  1225   00034E  0E4D               	movlw	77
  1226   000350  6E47               	movwf	??_Interrups^0,c
  1227   000352  0EA5               	movlw	165
  1228   000354                     i2u206_47:
  1229   000354  FFFF               	dw	65535	; errata NOP
  1230   000356  2EE8               	decfsz	wreg,f,c
  1231   000358  D7FD               	bra	i2u206_47
  1232   00035A  2E47               	decfsz	??_Interrups^0,f,c
  1233   00035C  D7FB               	bra	i2u206_47
  1234   00035E  D000               	nop2	
  1235   000360  F000               	nop	
  1236   000362                     
  1237                           ;Digitizer16bitsV2.c: 101:                     SumData_AUX0 = 0;
  1238   000362  0E00               	movlw	0
  1239   000364  6E09               	movwf	_SumData_AUX0^0,c
  1240   000366  0E00               	movlw	0
  1241   000368  6E0A               	movwf	(_SumData_AUX0+1)^0,c
  1242   00036A  0E00               	movlw	0
  1243   00036C  6E0B               	movwf	(_SumData_AUX0+2)^0,c
  1244   00036E  0E00               	movlw	0
  1245   000370  6E0C               	movwf	(_SumData_AUX0+3)^0,c
  1246   000372                     
  1247                           ;Digitizer16bitsV2.c: 102:                     Data_AUX0 = ReadDataADC();
  1248   000372  EC78  F00B         	call	_ReadDataADC	;wreg free
  1249   000376  C039  F025         	movff	?_ReadDataADC,_Data_AUX0
  1250   00037A  C03A  F026         	movff	?_ReadDataADC+1,_Data_AUX0+1
  1251   00037E                     
  1252                           ;Digitizer16bitsV2.c: 103:                     for(conta = 0; conta<50; conta++){
  1253   00037E  0E00               	movlw	0
  1254   000380  6E54               	movwf	Interrups@conta^0,c
  1255   000382                     i2l2837:
  1256   000382  FFFF               	dw	65535	; assembler added errata NOP
  1257                           
  1258                           ;Digitizer16bitsV2.c: 104:                         Data_AUX0 = ReadDataADC();
  1259   000384  EC78  F00B         	call	_ReadDataADC	;wreg free
  1260   000388  C039  F025         	movff	?_ReadDataADC,_Data_AUX0
  1261   00038C  C03A  F026         	movff	?_ReadDataADC+1,_Data_AUX0+1
  1262   000390                     
  1263                           ;Digitizer16bitsV2.c: 105:                         SumData_AUX0 = SumData_AUX0 + Data_AU
      +                          X0;
  1264   000390  C025  F047         	movff	_Data_AUX0,??_Interrups
  1265   000394  C026  F048         	movff	_Data_AUX0+1,??_Interrups+1
  1266   000398  0E00               	movlw	0
  1267   00039A  BE48               	btfsc	(??_Interrups+1)^0,7,c
  1268   00039C  0EFF               	movlw	255
  1269   00039E  6E49               	movwf	(??_Interrups+2)^0,c
  1270   0003A0  6E4A               	movwf	(??_Interrups+3)^0,c
  1271   0003A2  5009               	movf	_SumData_AUX0^0,w,c
  1272   0003A4  2447               	addwf	??_Interrups^0,w,c
  1273   0003A6  6E09               	movwf	_SumData_AUX0^0,c
  1274   0003A8  500A               	movf	(_SumData_AUX0+1)^0,w,c
  1275   0003AA  2048               	addwfc	(??_Interrups+1)^0,w,c
  1276   0003AC  6E0A               	movwf	(_SumData_AUX0+1)^0,c
  1277   0003AE  500B               	movf	(_SumData_AUX0+2)^0,w,c
  1278   0003B0  2049               	addwfc	(??_Interrups+2)^0,w,c
  1279   0003B2  6E0B               	movwf	(_SumData_AUX0+2)^0,c
  1280   0003B4  500C               	movf	(_SumData_AUX0+3)^0,w,c
  1281   0003B6  204A               	addwfc	(??_Interrups+3)^0,w,c
  1282   0003B8  6E0C               	movwf	(_SumData_AUX0+3)^0,c
  1283   0003BA                     
  1284                           ;Digitizer16bitsV2.c: 106:                     }
  1285   0003BA  2A54               	incf	Interrups@conta^0,f,c
  1286   0003BC  0E31               	movlw	49
  1287   0003BE  6454               	cpfsgt	Interrups@conta^0,c
  1288   0003C0  EFE4  F001         	goto	i2u143_41
  1289   0003C4  EFE7  F001         	goto	i2u143_40
  1290   0003C8                     i2u143_41:
  1291   0003C8  FFFF               	dw	65535	; assembler added errata NOP
  1292   0003CA  EFC1  F001         	goto	i2l2837
  1293   0003CE                     i2u143_40:
  1294   0003CE  FFFF               	dw	65535	; assembler added errata NOP
  1295   0003D0                     
  1296                           ;Digitizer16bitsV2.c: 108:                     LATB = 0x22;
  1297   0003D0  0E22               	movlw	34
  1298   0003D2  6E8A               	movwf	138,c	;volatile
  1299   0003D4                     
  1300                           ;Digitizer16bitsV2.c: 109:                     _delay((unsigned long)((8)*(39321600UL/40
      +                          00.0)));
  1301   0003D4  0E4D               	movlw	77
  1302   0003D6  6E47               	movwf	??_Interrups^0,c
  1303   0003D8  0EA5               	movlw	165
  1304   0003DA                     i2u207_47:
  1305   0003DA  FFFF               	dw	65535	; errata NOP
  1306   0003DC  2EE8               	decfsz	wreg,f,c
  1307   0003DE  D7FD               	bra	i2u207_47
  1308   0003E0  2E47               	decfsz	??_Interrups^0,f,c
  1309   0003E2  D7FB               	bra	i2u207_47
  1310   0003E4  D000               	nop2	
  1311   0003E6  F000               	nop	
  1312   0003E8                     
  1313                           ;Digitizer16bitsV2.c: 111:                     SumData_AUX1 = 0;
  1314   0003E8  0E00               	movlw	0
  1315   0003EA  6E05               	movwf	_SumData_AUX1^0,c
  1316   0003EC  0E00               	movlw	0
  1317   0003EE  6E06               	movwf	(_SumData_AUX1+1)^0,c
  1318   0003F0  0E00               	movlw	0
  1319   0003F2  6E07               	movwf	(_SumData_AUX1+2)^0,c
  1320   0003F4  0E00               	movlw	0
  1321   0003F6  6E08               	movwf	(_SumData_AUX1+3)^0,c
  1322   0003F8                     
  1323                           ;Digitizer16bitsV2.c: 112:                     Data_AUX1 = ReadDataADC();
  1324   0003F8  EC78  F00B         	call	_ReadDataADC	;wreg free
  1325   0003FC  C039  F023         	movff	?_ReadDataADC,_Data_AUX1
  1326   000400  C03A  F024         	movff	?_ReadDataADC+1,_Data_AUX1+1
  1327   000404                     
  1328                           ;Digitizer16bitsV2.c: 113:                     for(conta = 0; conta<50; conta++){
  1329   000404  0E00               	movlw	0
  1330   000406  6E54               	movwf	Interrups@conta^0,c
  1331   000408                     i2l2859:
  1332   000408  FFFF               	dw	65535	; assembler added errata NOP
  1333                           
  1334                           ;Digitizer16bitsV2.c: 114:                         Data_AUX1 = ReadDataADC();
  1335   00040A  EC78  F00B         	call	_ReadDataADC	;wreg free
  1336   00040E  C039  F023         	movff	?_ReadDataADC,_Data_AUX1
  1337   000412  C03A  F024         	movff	?_ReadDataADC+1,_Data_AUX1+1
  1338   000416                     
  1339                           ;Digitizer16bitsV2.c: 115:                         SumData_AUX1 = SumData_AUX1 + Data_AU
      +                          X1;
  1340   000416  C023  F047         	movff	_Data_AUX1,??_Interrups
  1341   00041A  C024  F048         	movff	_Data_AUX1+1,??_Interrups+1
  1342   00041E  0E00               	movlw	0
  1343   000420  BE48               	btfsc	(??_Interrups+1)^0,7,c
  1344   000422  0EFF               	movlw	255
  1345   000424  6E49               	movwf	(??_Interrups+2)^0,c
  1346   000426  6E4A               	movwf	(??_Interrups+3)^0,c
  1347   000428  5005               	movf	_SumData_AUX1^0,w,c
  1348   00042A  2447               	addwf	??_Interrups^0,w,c
  1349   00042C  6E05               	movwf	_SumData_AUX1^0,c
  1350   00042E  5006               	movf	(_SumData_AUX1+1)^0,w,c
  1351   000430  2048               	addwfc	(??_Interrups+1)^0,w,c
  1352   000432  6E06               	movwf	(_SumData_AUX1+1)^0,c
  1353   000434  5007               	movf	(_SumData_AUX1+2)^0,w,c
  1354   000436  2049               	addwfc	(??_Interrups+2)^0,w,c
  1355   000438  6E07               	movwf	(_SumData_AUX1+2)^0,c
  1356   00043A  5008               	movf	(_SumData_AUX1+3)^0,w,c
  1357   00043C  204A               	addwfc	(??_Interrups+3)^0,w,c
  1358   00043E  6E08               	movwf	(_SumData_AUX1+3)^0,c
  1359   000440                     
  1360                           ;Digitizer16bitsV2.c: 116:                     }
  1361   000440  2A54               	incf	Interrups@conta^0,f,c
  1362   000442  0E31               	movlw	49
  1363   000444  6454               	cpfsgt	Interrups@conta^0,c
  1364   000446  EF27  F002         	goto	i2u144_41
  1365   00044A  EF2A  F002         	goto	i2u144_40
  1366   00044E                     i2u144_41:
  1367   00044E  FFFF               	dw	65535	; assembler added errata NOP
  1368   000450  EF04  F002         	goto	i2l2859
  1369   000454                     i2u144_40:
  1370   000454  FFFF               	dw	65535	; assembler added errata NOP
  1371   000456                     
  1372                           ;Digitizer16bitsV2.c: 118:                     LATB = 0x26;
  1373   000456  0E26               	movlw	38
  1374   000458  6E8A               	movwf	138,c	;volatile
  1375   00045A                     
  1376                           ;Digitizer16bitsV2.c: 119:                     LATBbits.LB7 = 1;
  1377   00045A  8E8A               	bsf	138,7,c	;volatile
  1378   00045C                     
  1379                           ;Digitizer16bitsV2.c: 120:                     _delay((unsigned long)((8)*(39321600UL/40
      +                          00.0)));
  1380   00045C  0E4D               	movlw	77
  1381   00045E  6E47               	movwf	??_Interrups^0,c
  1382   000460  0EA5               	movlw	165
  1383   000462                     i2u208_47:
  1384   000462  FFFF               	dw	65535	; errata NOP
  1385   000464  2EE8               	decfsz	wreg,f,c
  1386   000466  D7FD               	bra	i2u208_47
  1387   000468  2E47               	decfsz	??_Interrups^0,f,c
  1388   00046A  D7FB               	bra	i2u208_47
  1389   00046C  D000               	nop2	
  1390   00046E  F000               	nop	
  1391   000470                     
  1392                           ;Digitizer16bitsV2.c: 122:                     SumData_AUX2 = 0;
  1393   000470  0E00               	movlw	0
  1394   000472  6E01               	movwf	_SumData_AUX2^0,c
  1395   000474  0E00               	movlw	0
  1396   000476  6E02               	movwf	(_SumData_AUX2+1)^0,c
  1397   000478  0E00               	movlw	0
  1398   00047A  6E03               	movwf	(_SumData_AUX2+2)^0,c
  1399   00047C  0E00               	movlw	0
  1400   00047E  6E04               	movwf	(_SumData_AUX2+3)^0,c
  1401   000480                     
  1402                           ;Digitizer16bitsV2.c: 123:                     Data_AUX2 = ReadDataADC();
  1403   000480  EC78  F00B         	call	_ReadDataADC	;wreg free
  1404   000484  C039  F021         	movff	?_ReadDataADC,_Data_AUX2
  1405   000488  C03A  F022         	movff	?_ReadDataADC+1,_Data_AUX2+1
  1406   00048C                     
  1407                           ;Digitizer16bitsV2.c: 124:                     for(conta = 0; conta<50; conta++){
  1408   00048C  0E00               	movlw	0
  1409   00048E  6E54               	movwf	Interrups@conta^0,c
  1410   000490                     i2l2883:
  1411   000490  FFFF               	dw	65535	; assembler added errata NOP
  1412                           
  1413                           ;Digitizer16bitsV2.c: 125:                         Data_AUX2 = ReadDataADC();
  1414   000492  EC78  F00B         	call	_ReadDataADC	;wreg free
  1415   000496  C039  F021         	movff	?_ReadDataADC,_Data_AUX2
  1416   00049A  C03A  F022         	movff	?_ReadDataADC+1,_Data_AUX2+1
  1417   00049E                     
  1418                           ;Digitizer16bitsV2.c: 126:                         SumData_AUX2 = SumData_AUX2 + Data_AU
      +                          X2;
  1419   00049E  C021  F047         	movff	_Data_AUX2,??_Interrups
  1420   0004A2  C022  F048         	movff	_Data_AUX2+1,??_Interrups+1
  1421   0004A6  0E00               	movlw	0
  1422   0004A8  BE48               	btfsc	(??_Interrups+1)^0,7,c
  1423   0004AA  0EFF               	movlw	255
  1424   0004AC  6E49               	movwf	(??_Interrups+2)^0,c
  1425   0004AE  6E4A               	movwf	(??_Interrups+3)^0,c
  1426   0004B0  5001               	movf	_SumData_AUX2^0,w,c
  1427   0004B2  2447               	addwf	??_Interrups^0,w,c
  1428   0004B4  6E01               	movwf	_SumData_AUX2^0,c
  1429   0004B6  5002               	movf	(_SumData_AUX2+1)^0,w,c
  1430   0004B8  2048               	addwfc	(??_Interrups+1)^0,w,c
  1431   0004BA  6E02               	movwf	(_SumData_AUX2+1)^0,c
  1432   0004BC  5003               	movf	(_SumData_AUX2+2)^0,w,c
  1433   0004BE  2049               	addwfc	(??_Interrups+2)^0,w,c
  1434   0004C0  6E03               	movwf	(_SumData_AUX2+2)^0,c
  1435   0004C2  5004               	movf	(_SumData_AUX2+3)^0,w,c
  1436   0004C4  204A               	addwfc	(??_Interrups+3)^0,w,c
  1437   0004C6  6E04               	movwf	(_SumData_AUX2+3)^0,c
  1438   0004C8                     
  1439                           ;Digitizer16bitsV2.c: 127:                     }
  1440   0004C8  2A54               	incf	Interrups@conta^0,f,c
  1441   0004CA  0E31               	movlw	49
  1442   0004CC  6454               	cpfsgt	Interrups@conta^0,c
  1443   0004CE  EF6B  F002         	goto	i2u145_41
  1444   0004D2  EF6E  F002         	goto	i2u145_40
  1445   0004D6                     i2u145_41:
  1446   0004D6  FFFF               	dw	65535	; assembler added errata NOP
  1447   0004D8  EF48  F002         	goto	i2l2883
  1448   0004DC                     i2u145_40:
  1449   0004DC  FFFF               	dw	65535	; assembler added errata NOP
  1450   0004DE                     
  1451                           ;Digitizer16bitsV2.c: 128:                     LATBbits.LB7 = 0;
  1452   0004DE  9E8A               	bcf	138,7,c	;volatile
  1453   0004E0                     
  1454                           ;Digitizer16bitsV2.c: 131:                     Data_X = (signed short) (SumData_X/50);
  1455   0004E0  C01D  F039         	movff	_SumData_X,___aldiv@dividend
  1456   0004E4  C01E  F03A         	movff	_SumData_X+1,___aldiv@dividend+1
  1457   0004E8  C01F  F03B         	movff	_SumData_X+2,___aldiv@dividend+2
  1458   0004EC  C020  F03C         	movff	_SumData_X+3,___aldiv@dividend+3
  1459   0004F0  0E32               	movlw	50
  1460   0004F2  6E3D               	movwf	___aldiv@divisor^0,c
  1461   0004F4  0E00               	movlw	0
  1462   0004F6  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1463   0004F8  0E00               	movlw	0
  1464   0004FA  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1465   0004FC  0E00               	movlw	0
  1466   0004FE  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1467   000500  ECDC  F00A         	call	___aldiv	;wreg free
  1468   000504  C039  F031         	movff	?___aldiv,_Data_X
  1469   000508  C03A  F032         	movff	?___aldiv+1,_Data_X+1
  1470                           
  1471                           ;Digitizer16bitsV2.c: 132:                     Data_Y = (signed short) (SumData_Y/50);
  1472   00050C  C019  F039         	movff	_SumData_Y,___aldiv@dividend
  1473   000510  C01A  F03A         	movff	_SumData_Y+1,___aldiv@dividend+1
  1474   000514  C01B  F03B         	movff	_SumData_Y+2,___aldiv@dividend+2
  1475   000518  C01C  F03C         	movff	_SumData_Y+3,___aldiv@dividend+3
  1476   00051C  0E32               	movlw	50
  1477   00051E  6E3D               	movwf	___aldiv@divisor^0,c
  1478   000520  0E00               	movlw	0
  1479   000522  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1480   000524  0E00               	movlw	0
  1481   000526  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1482   000528  0E00               	movlw	0
  1483   00052A  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1484   00052C  ECDC  F00A         	call	___aldiv	;wreg free
  1485   000530  C039  F02F         	movff	?___aldiv,_Data_Y
  1486   000534  C03A  F030         	movff	?___aldiv+1,_Data_Y+1
  1487                           
  1488                           ;Digitizer16bitsV2.c: 133:                     Data_Z = (signed short) (SumData_Z/50);
  1489   000538  C015  F039         	movff	_SumData_Z,___aldiv@dividend
  1490   00053C  C016  F03A         	movff	_SumData_Z+1,___aldiv@dividend+1
  1491   000540  C017  F03B         	movff	_SumData_Z+2,___aldiv@dividend+2
  1492   000544  C018  F03C         	movff	_SumData_Z+3,___aldiv@dividend+3
  1493   000548  0E32               	movlw	50
  1494   00054A  6E3D               	movwf	___aldiv@divisor^0,c
  1495   00054C  0E00               	movlw	0
  1496   00054E  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1497   000550  0E00               	movlw	0
  1498   000552  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1499   000554  0E00               	movlw	0
  1500   000556  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1501   000558  ECDC  F00A         	call	___aldiv	;wreg free
  1502   00055C  C039  F02D         	movff	?___aldiv,_Data_Z
  1503   000560  C03A  F02E         	movff	?___aldiv+1,_Data_Z+1
  1504                           
  1505                           ;Digitizer16bitsV2.c: 134:                     Data_TC = (signed short) (SumData_TC/50);
  1506   000564  C011  F039         	movff	_SumData_TC,___aldiv@dividend
  1507   000568  C012  F03A         	movff	_SumData_TC+1,___aldiv@dividend+1
  1508   00056C  C013  F03B         	movff	_SumData_TC+2,___aldiv@dividend+2
  1509   000570  C014  F03C         	movff	_SumData_TC+3,___aldiv@dividend+3
  1510   000574  0E32               	movlw	50
  1511   000576  6E3D               	movwf	___aldiv@divisor^0,c
  1512   000578  0E00               	movlw	0
  1513   00057A  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1514   00057C  0E00               	movlw	0
  1515   00057E  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1516   000580  0E00               	movlw	0
  1517   000582  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1518   000584  ECDC  F00A         	call	___aldiv	;wreg free
  1519   000588  C039  F02B         	movff	?___aldiv,_Data_TC
  1520   00058C  C03A  F02C         	movff	?___aldiv+1,_Data_TC+1
  1521                           
  1522                           ;Digitizer16bitsV2.c: 135:                     Data_TS = (signed short) (SumData_TS/50);
  1523   000590  C00D  F039         	movff	_SumData_TS,___aldiv@dividend
  1524   000594  C00E  F03A         	movff	_SumData_TS+1,___aldiv@dividend+1
  1525   000598  C00F  F03B         	movff	_SumData_TS+2,___aldiv@dividend+2
  1526   00059C  C010  F03C         	movff	_SumData_TS+3,___aldiv@dividend+3
  1527   0005A0  0E32               	movlw	50
  1528   0005A2  6E3D               	movwf	___aldiv@divisor^0,c
  1529   0005A4  0E00               	movlw	0
  1530   0005A6  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1531   0005A8  0E00               	movlw	0
  1532   0005AA  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1533   0005AC  0E00               	movlw	0
  1534   0005AE  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1535   0005B0  ECDC  F00A         	call	___aldiv	;wreg free
  1536   0005B4  C039  F029         	movff	?___aldiv,_Data_TS
  1537   0005B8  C03A  F02A         	movff	?___aldiv+1,_Data_TS+1
  1538                           
  1539                           ;Digitizer16bitsV2.c: 136:                     Data_AUX0 = (signed short) (SumData_AUX0/
      +                          50);
  1540   0005BC  C009  F039         	movff	_SumData_AUX0,___aldiv@dividend
  1541   0005C0  C00A  F03A         	movff	_SumData_AUX0+1,___aldiv@dividend+1
  1542   0005C4  C00B  F03B         	movff	_SumData_AUX0+2,___aldiv@dividend+2
  1543   0005C8  C00C  F03C         	movff	_SumData_AUX0+3,___aldiv@dividend+3
  1544   0005CC  0E32               	movlw	50
  1545   0005CE  6E3D               	movwf	___aldiv@divisor^0,c
  1546   0005D0  0E00               	movlw	0
  1547   0005D2  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1548   0005D4  0E00               	movlw	0
  1549   0005D6  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1550   0005D8  0E00               	movlw	0
  1551   0005DA  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1552   0005DC  ECDC  F00A         	call	___aldiv	;wreg free
  1553   0005E0  C039  F025         	movff	?___aldiv,_Data_AUX0
  1554   0005E4  C03A  F026         	movff	?___aldiv+1,_Data_AUX0+1
  1555                           
  1556                           ;Digitizer16bitsV2.c: 137:                     Data_AUX1 = (signed short) (SumData_AUX1/
      +                          50);
  1557   0005E8  C005  F039         	movff	_SumData_AUX1,___aldiv@dividend
  1558   0005EC  C006  F03A         	movff	_SumData_AUX1+1,___aldiv@dividend+1
  1559   0005F0  C007  F03B         	movff	_SumData_AUX1+2,___aldiv@dividend+2
  1560   0005F4  C008  F03C         	movff	_SumData_AUX1+3,___aldiv@dividend+3
  1561   0005F8  0E32               	movlw	50
  1562   0005FA  6E3D               	movwf	___aldiv@divisor^0,c
  1563   0005FC  0E00               	movlw	0
  1564   0005FE  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1565   000600  0E00               	movlw	0
  1566   000602  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1567   000604  0E00               	movlw	0
  1568   000606  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1569   000608  ECDC  F00A         	call	___aldiv	;wreg free
  1570   00060C  C039  F023         	movff	?___aldiv,_Data_AUX1
  1571   000610  C03A  F024         	movff	?___aldiv+1,_Data_AUX1+1
  1572                           
  1573                           ;Digitizer16bitsV2.c: 138:                     Data_AUX2 = (signed short) (SumData_AUX2/
      +                          50);
  1574   000614  C001  F039         	movff	_SumData_AUX2,___aldiv@dividend
  1575   000618  C002  F03A         	movff	_SumData_AUX2+1,___aldiv@dividend+1
  1576   00061C  C003  F03B         	movff	_SumData_AUX2+2,___aldiv@dividend+2
  1577   000620  C004  F03C         	movff	_SumData_AUX2+3,___aldiv@dividend+3
  1578   000624  0E32               	movlw	50
  1579   000626  6E3D               	movwf	___aldiv@divisor^0,c
  1580   000628  0E00               	movlw	0
  1581   00062A  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  1582   00062C  0E00               	movlw	0
  1583   00062E  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  1584   000630  0E00               	movlw	0
  1585   000632  6E40               	movwf	(___aldiv@divisor+3)^0,c
  1586   000634  ECDC  F00A         	call	___aldiv	;wreg free
  1587   000638  C039  F021         	movff	?___aldiv,_Data_AUX2
  1588   00063C  C03A  F022         	movff	?___aldiv+1,_Data_AUX2+1
  1589   000640                     
  1590                           ;Digitizer16bitsV2.c: 141:                     print_string("JROADQ");
  1591   000640  0EAF               	movlw	low STR_3
  1592   000642  6E3A               	movwf	print_string@str^0,c
  1593   000644  0E15               	movlw	high STR_3
  1594   000646  6E3B               	movwf	(print_string@str+1)^0,c
  1595   000648  ECDC  F00C         	call	_print_string	;wreg free
  1596   00064C                     
  1597                           ;Digitizer16bitsV2.c: 142:                     WriteByte_USART(ContaSample);
  1598   00064C  5033               	movf	_ContaSample^0,w,c
  1599   00064E  EC63  F00D         	call	_WriteByte_USART
  1600   000652                     
  1601                           ;Digitizer16bitsV2.c: 143:                     print_value(Data_X);
  1602   000652  C031  F03A         	movff	_Data_X,print_value@value
  1603   000656  C032  F03B         	movff	_Data_X+1,print_value@value+1
  1604   00065A  EC83  F00D         	call	_print_value	;wreg free
  1605   00065E                     
  1606                           ;Digitizer16bitsV2.c: 144:                     print_value(Data_Y);
  1607   00065E  C02F  F03A         	movff	_Data_Y,print_value@value
  1608   000662  C030  F03B         	movff	_Data_Y+1,print_value@value+1
  1609   000666  EC83  F00D         	call	_print_value	;wreg free
  1610   00066A                     
  1611                           ;Digitizer16bitsV2.c: 145:                     print_value(Data_Z);
  1612   00066A  C02D  F03A         	movff	_Data_Z,print_value@value
  1613   00066E  C02E  F03B         	movff	_Data_Z+1,print_value@value+1
  1614   000672  EC83  F00D         	call	_print_value	;wreg free
  1615   000676                     
  1616                           ;Digitizer16bitsV2.c: 146:                     print_value(Data_TC);
  1617   000676  C02B  F03A         	movff	_Data_TC,print_value@value
  1618   00067A  C02C  F03B         	movff	_Data_TC+1,print_value@value+1
  1619   00067E  EC83  F00D         	call	_print_value	;wreg free
  1620   000682                     
  1621                           ;Digitizer16bitsV2.c: 147:                     print_value(Data_TS);
  1622   000682  C029  F03A         	movff	_Data_TS,print_value@value
  1623   000686  C02A  F03B         	movff	_Data_TS+1,print_value@value+1
  1624   00068A  EC83  F00D         	call	_print_value	;wreg free
  1625   00068E                     
  1626                           ;Digitizer16bitsV2.c: 148:                     print_value(Data_AUX0);
  1627   00068E  C025  F03A         	movff	_Data_AUX0,print_value@value
  1628   000692  C026  F03B         	movff	_Data_AUX0+1,print_value@value+1
  1629   000696  EC83  F00D         	call	_print_value	;wreg free
  1630   00069A                     
  1631                           ;Digitizer16bitsV2.c: 149:                     print_value(Data_AUX1);
  1632   00069A  C023  F03A         	movff	_Data_AUX1,print_value@value
  1633   00069E  C024  F03B         	movff	_Data_AUX1+1,print_value@value+1
  1634   0006A2  EC83  F00D         	call	_print_value	;wreg free
  1635   0006A6                     
  1636                           ;Digitizer16bitsV2.c: 150:                     print_value(Data_AUX2);
  1637   0006A6  C021  F03A         	movff	_Data_AUX2,print_value@value
  1638   0006AA  C022  F03B         	movff	_Data_AUX2+1,print_value@value+1
  1639   0006AE  EC83  F00D         	call	_print_value	;wreg free
  1640   0006B2                     
  1641                           ;Digitizer16bitsV2.c: 151:                     print_string("\n\r");
  1642   0006B2  0E8C               	movlw	low (STR_5+21)
  1643   0006B4  6E3A               	movwf	print_string@str^0,c
  1644   0006B6  0E15               	movlw	high (STR_5+21)
  1645   0006B8  6E3B               	movwf	(print_string@str+1)^0,c
  1646   0006BA  ECDC  F00C         	call	_print_string	;wreg free
  1647   0006BE                     
  1648                           ;Digitizer16bitsV2.c: 153:                     LATAbits.LA0 = 0;
  1649   0006BE  9089               	bcf	137,0,c	;volatile
  1650   0006C0  EFA5  F00A         	goto	i2l199
  1651   0006C4                     i2l2917:
  1652   0006C4  FFFF               	dw	65535	; assembler added errata NOP
  1653                           
  1654                           ;Digitizer16bitsV2.c: 159:                 TransmitDAT_USART('1');
  1655   0006C6  0E31               	movlw	49
  1656   0006C8  EC13  F00D         	call	_TransmitDAT_USART
  1657                           
  1658                           ;Digitizer16bitsV2.c: 160:                 break;
  1659   0006CC  EFA5  F00A         	goto	i2l199
  1660   0006D0                     i2l2919:
  1661   0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1662                           
  1663                           ;Digitizer16bitsV2.c: 163:                 TransmitDAT_USART('2');
  1664   0006D2  0E32               	movlw	50
  1665   0006D4  EC13  F00D         	call	_TransmitDAT_USART
  1666                           
  1667                           ;Digitizer16bitsV2.c: 164:                 break;
  1668   0006D8  EFA5  F00A         	goto	i2l199
  1669   0006DC                     i2l146:
  1670   0006DC  FFFF               	dw	65535	; assembler added errata NOP
  1671                           
  1672                           ;Digitizer16bitsV2.c: 172:                 __nop();
  1673   0006DE  F000               	nop	
  1674                           
  1675                           ;Digitizer16bitsV2.c: 173:                 break;
  1676   0006E0  EFA5  F00A         	goto	i2l199
  1677   0006E4                     i2l2921:
  1678   0006E4  FFFF               	dw	65535	; assembler added errata NOP
  1679   0006E6  5035               	movf	_CmdGPS^0,w,c
  1680   0006E8  6E47               	movwf	??_Interrups^0,c
  1681   0006EA  6A48               	clrf	(??_Interrups+1)^0,c
  1682                           
  1683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1684                           ; Switch size 1, requested type "simple"
  1685                           ; Number of cases is 1, Range of values is 0 to 0
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte            4     3 (average)
  1689                           ;	Chosen strategy is simple_byte
  1690   0006EC  5048               	movf	(??_Interrups+1)^0,w,c
  1691   0006EE  0A00               	xorlw	0	; case 0
  1692   0006F0  B4D8               	btfsc	status,2,c
  1693   0006F2  EF7D  F003         	goto	i2l3771
  1694   0006F6  EF6E  F003         	goto	i2l146
  1695   0006FA                     i2l3771:
  1696   0006FA  FFFF               	dw	65535	; assembler added errata NOP
  1697                           
  1698                           ; Switch size 1, requested type "simple"
  1699                           ; Number of cases is 4, Range of values is 0 to 3
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte           13     7 (average)
  1703                           ;	Chosen strategy is simple_byte
  1704   0006FC  5047               	movf	??_Interrups^0,w,c
  1705   0006FE  0A00               	xorlw	0	; case 0
  1706   000700  B4D8               	btfsc	status,2,c
  1707   000702  EF2C  F000         	goto	i2l2695
  1708   000706  0A01               	xorlw	1	; case 1
  1709   000708  B4D8               	btfsc	status,2,c
  1710   00070A  EF62  F003         	goto	i2l2917
  1711   00070E  0A03               	xorlw	3	; case 2
  1712   000710  B4D8               	btfsc	status,2,c
  1713   000712  EF68  F003         	goto	i2l2919
  1714   000716  0A01               	xorlw	1	; case 3
  1715   000718  B4D8               	btfsc	status,2,c
  1716   00071A  EF6E  F003         	goto	i2l146
  1717   00071E  EF6E  F003         	goto	i2l146
  1718   000722                     i2l123:
  1719   000722  FFFF               	dw	65535	; assembler added errata NOP
  1720   000724  AA9D               	btfss	157,5,c	;volatile
  1721   000726  EF97  F003         	goto	i2u146_41
  1722   00072A  EF9A  F003         	goto	i2u146_40
  1723   00072E                     i2u146_41:
  1724   00072E  FFFF               	dw	65535	; assembler added errata NOP
  1725   000730  EF66  F007         	goto	i2l149
  1726   000734                     i2u146_40:
  1727   000734  FFFF               	dw	65535	; assembler added errata NOP
  1728   000736  AA9E               	btfss	158,5,c	;volatile
  1729   000738  EFA0  F003         	goto	i2u147_41
  1730   00073C  EFA3  F003         	goto	i2u147_40
  1731   000740                     i2u147_41:
  1732   000740  FFFF               	dw	65535	; assembler added errata NOP
  1733   000742  EF66  F007         	goto	i2l149
  1734   000746                     i2u147_40:
  1735   000746  FFFF               	dw	65535	; assembler added errata NOP
  1736   000748                     
  1737                           ;Digitizer16bitsV2.c: 179:         ID = ReceiveCMD_USART();
  1738   000748  ECF0  F00B         	call	_ReceiveCMD_USART	;wreg free
  1739   00074C  6E53               	movwf	Interrups@ID^0,c
  1740                           
  1741                           ;Digitizer16bitsV2.c: 180:         switch(ID){
  1742   00074E  EF2F  F007         	goto	i2l3213
  1743   000752                     i2l2927:
  1744   000752  FFFF               	dw	65535	; assembler added errata NOP
  1745                           
  1746                           ;Digitizer16bitsV2.c: 182:                 TransmitCMD_USART('5');
  1747   000754  0E35               	movlw	53
  1748   000756  EC50  F00D         	call	_TransmitCMD_USART
  1749   00075A                     
  1750                           ;Digitizer16bitsV2.c: 183:                 ControlSample = 0;
  1751   00075A  0E00               	movlw	0
  1752   00075C  6E34               	movwf	_ControlSample^0,c
  1753                           
  1754                           ;Digitizer16bitsV2.c: 184:                 break;
  1755   00075E  EFA5  F00A         	goto	i2l199
  1756   000762                     i2l2931:
  1757   000762  FFFF               	dw	65535	; assembler added errata NOP
  1758                           
  1759                           ;Digitizer16bitsV2.c: 186:                 TransmitCMD_USART('0');
  1760   000764  0E30               	movlw	48
  1761   000766  EC50  F00D         	call	_TransmitCMD_USART
  1762   00076A                     
  1763                           ;Digitizer16bitsV2.c: 187:                 BufferDAT[0] = 'V';
  1764   00076A  0E56               	movlw	86
  1765   00076C  0100               	movlb	0	; () banked
  1766   00076E  6F6C               	movwf	_BufferDAT& (0+255),b
  1767   000770                     
  1768                           ; BSR set to: 0
  1769                           ;Digitizer16bitsV2.c: 188:                 BufferDAT[1] = '2';
  1770   000770  0E32               	movlw	50
  1771   000772  6F6D               	movwf	(_BufferDAT+1)& (0+255),b
  1772   000774                     
  1773                           ; BSR set to: 0
  1774                           ;Digitizer16bitsV2.c: 189:                 BufferDAT[2] = '0';
  1775   000774  0E30               	movlw	48
  1776   000776  6F6E               	movwf	(_BufferDAT+2)& (0+255),b
  1777   000778                     
  1778                           ; BSR set to: 0
  1779                           ;Digitizer16bitsV2.c: 190:                 BufferDAT[12] = '\0';
  1780   000778  0E00               	movlw	0
  1781   00077A  6F78               	movwf	(_BufferDAT+12)& (0+255),b
  1782   00077C                     
  1783                           ; BSR set to: 0
  1784                           ;Digitizer16bitsV2.c: 191:                 TransmitDAT_USART('0');
  1785   00077C  0E30               	movlw	48
  1786   00077E  EC13  F00D         	call	_TransmitDAT_USART
  1787                           
  1788                           ;Digitizer16bitsV2.c: 192:                 break;
  1789   000782  EFA5  F00A         	goto	i2l199
  1790   000786                     i2l2943:
  1791   000786  FFFF               	dw	65535	; assembler added errata NOP
  1792                           
  1793                           ;Digitizer16bitsV2.c: 194:                 TransmitCMD_USART('1');
  1794   000788  0E31               	movlw	49
  1795   00078A  EC50  F00D         	call	_TransmitCMD_USART
  1796   00078E                     
  1797                           ;Digitizer16bitsV2.c: 197:                 CmdGPS = 1;
  1798   00078E  0E01               	movlw	1
  1799   000790  6E35               	movwf	_CmdGPS^0,c
  1800   000792                     
  1801                           ;Digitizer16bitsV2.c: 198:                 INTCON2bits.INTEDG0 = 0;
  1802   000792  9CF1               	bcf	241,6,c	;volatile
  1803   000794                     
  1804                           ;Digitizer16bitsV2.c: 199:                 INTCONbits.INT0IF = 0;
  1805   000794  92F2               	bcf	242,1,c	;volatile
  1806   000796                     
  1807                           ;Digitizer16bitsV2.c: 200:                 INTCONbits.INT0IE = 1;
  1808   000796  88F2               	bsf	242,4,c	;volatile
  1809                           
  1810                           ;Digitizer16bitsV2.c: 202:                 break;
  1811   000798  EFA5  F00A         	goto	i2l199
  1812   00079C                     i2l2953:
  1813   00079C  FFFF               	dw	65535	; assembler added errata NOP
  1814                           
  1815                           ;Digitizer16bitsV2.c: 204:                 TransmitCMD_USART('2');
  1816   00079E  0E32               	movlw	50
  1817   0007A0  EC50  F00D         	call	_TransmitCMD_USART
  1818   0007A4                     
  1819                           ;Digitizer16bitsV2.c: 207:                 CmdGPS = 2;
  1820   0007A4  0E02               	movlw	2
  1821   0007A6  6E35               	movwf	_CmdGPS^0,c
  1822   0007A8                     
  1823                           ;Digitizer16bitsV2.c: 208:                 INTCON2bits.INTEDG0 = 0;
  1824   0007A8  9CF1               	bcf	241,6,c	;volatile
  1825   0007AA                     
  1826                           ;Digitizer16bitsV2.c: 209:                 INTCONbits.INT0IF = 0;
  1827   0007AA  92F2               	bcf	242,1,c	;volatile
  1828   0007AC                     
  1829                           ;Digitizer16bitsV2.c: 210:                 INTCONbits.INT0IE = 1;
  1830   0007AC  88F2               	bsf	242,4,c	;volatile
  1831                           
  1832                           ;Digitizer16bitsV2.c: 212:                 break;
  1833   0007AE  EFA5  F00A         	goto	i2l199
  1834   0007B2                     i2l2963:
  1835   0007B2  FFFF               	dw	65535	; assembler added errata NOP
  1836                           
  1837                           ;Digitizer16bitsV2.c: 214:                 TransmitCMD_USART('3');
  1838   0007B4  0E33               	movlw	51
  1839   0007B6  EC50  F00D         	call	_TransmitCMD_USART
  1840                           
  1841                           ;Digitizer16bitsV2.c: 217:                 break;
  1842   0007BA  EFA5  F00A         	goto	i2l199
  1843   0007BE                     i2l2965:
  1844   0007BE  FFFF               	dw	65535	; assembler added errata NOP
  1845                           
  1846                           ;Digitizer16bitsV2.c: 219:                 TransmitCMD_USART('4');
  1847   0007C0  0E34               	movlw	52
  1848   0007C2  EC50  F00D         	call	_TransmitCMD_USART
  1849   0007C6                     
  1850                           ;Digitizer16bitsV2.c: 221:                 CmdGPS = 0;
  1851   0007C6  0E00               	movlw	0
  1852   0007C8  6E35               	movwf	_CmdGPS^0,c
  1853   0007CA                     
  1854                           ;Digitizer16bitsV2.c: 222:                 ControlSample = 1;
  1855   0007CA  0E01               	movlw	1
  1856   0007CC  6E34               	movwf	_ControlSample^0,c
  1857   0007CE                     
  1858                           ;Digitizer16bitsV2.c: 226:                 INTCON2bits.INTEDG0 = 0;
  1859   0007CE  9CF1               	bcf	241,6,c	;volatile
  1860   0007D0                     
  1861                           ;Digitizer16bitsV2.c: 227:                 INTCONbits.INT0IF = 0;
  1862   0007D0  92F2               	bcf	242,1,c	;volatile
  1863   0007D2                     
  1864                           ;Digitizer16bitsV2.c: 228:                 INTCONbits.INT0IE = 1;
  1865   0007D2  88F2               	bsf	242,4,c	;volatile
  1866                           
  1867                           ;Digitizer16bitsV2.c: 230:                 break;
  1868   0007D4  EFA5  F00A         	goto	i2l199
  1869   0007D8                     i2l2977:
  1870   0007D8  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ;Digitizer16bitsV2.c: 232:                 TransmitCMD_USART('6');
  1873   0007DA  0E36               	movlw	54
  1874   0007DC  EC50  F00D         	call	_TransmitCMD_USART
  1875                           
  1876                           ;Digitizer16bitsV2.c: 233:                 break;
  1877   0007E0  EFA5  F00A         	goto	i2l199
  1878   0007E4                     i2l2979:
  1879   0007E4  FFFF               	dw	65535	; assembler added errata NOP
  1880                           
  1881                           ;Digitizer16bitsV2.c: 235:                 TransmitCMD_USART('7');
  1882   0007E6  0E37               	movlw	55
  1883   0007E8  EC50  F00D         	call	_TransmitCMD_USART
  1884                           
  1885                           ;Digitizer16bitsV2.c: 236:                 break;
  1886   0007EC  EFA5  F00A         	goto	i2l199
  1887   0007F0                     i2l2981:
  1888   0007F0  FFFF               	dw	65535	; assembler added errata NOP
  1889                           
  1890                           ;Digitizer16bitsV2.c: 238:                 TransmitCMD_USART('8');
  1891   0007F2  0E38               	movlw	56
  1892   0007F4  EC50  F00D         	call	_TransmitCMD_USART
  1893   0007F8                     
  1894                           ;Digitizer16bitsV2.c: 241:                 CmdGPS = 3;
  1895   0007F8  0E03               	movlw	3
  1896   0007FA  6E35               	movwf	_CmdGPS^0,c
  1897   0007FC                     
  1898                           ;Digitizer16bitsV2.c: 242:                 INTCON2bits.INTEDG0 = 0;
  1899   0007FC  9CF1               	bcf	241,6,c	;volatile
  1900   0007FE                     
  1901                           ;Digitizer16bitsV2.c: 243:                 INTCONbits.INT0IF = 0;
  1902   0007FE  92F2               	bcf	242,1,c	;volatile
  1903   000800                     
  1904                           ;Digitizer16bitsV2.c: 244:                 INTCONbits.INT0IE = 1;
  1905   000800  88F2               	bsf	242,4,c	;volatile
  1906                           
  1907                           ;Digitizer16bitsV2.c: 246:                 break;
  1908   000802  EFA5  F00A         	goto	i2l199
  1909   000806                     i2l161:
  1910   000806  FFFF               	dw	65535	; assembler added errata NOP
  1911                           
  1912                           ;Digitizer16bitsV2.c: 249:                 LATAbits.LA0 = 1;
  1913   000808  8089               	bsf	137,0,c	;volatile
  1914   00080A                     
  1915                           ;Digitizer16bitsV2.c: 252:                 TMR0H = 0x10;
  1916   00080A  0E10               	movlw	16
  1917   00080C  6ED7               	movwf	215,c	;volatile
  1918                           
  1919                           ;Digitizer16bitsV2.c: 253:                 TMR0L = 0x00;
  1920   00080E  0E00               	movlw	0
  1921   000810  6ED6               	movwf	214,c	;volatile
  1922                           
  1923                           ;Digitizer16bitsV2.c: 254:                 T0CON = 0b10000100;
  1924   000812  0E84               	movlw	132
  1925   000814  6ED5               	movwf	213,c	;volatile
  1926   000816                     
  1927                           ;Digitizer16bitsV2.c: 255:                 INTCONbits.TMR0IF = 0;
  1928   000816  94F2               	bcf	242,2,c	;volatile
  1929   000818                     
  1930                           ;Digitizer16bitsV2.c: 256:                 INTCONbits.TMR0IE = 1;
  1931   000818  8AF2               	bsf	242,5,c	;volatile
  1932   00081A                     
  1933                           ;Digitizer16bitsV2.c: 258:                 TransmitCMD_USART('9');
  1934   00081A  0E39               	movlw	57
  1935   00081C  EC50  F00D         	call	_TransmitCMD_USART
  1936   000820                     
  1937                           ;Digitizer16bitsV2.c: 261:                 ContaSample = 0;
  1938   000820  0E00               	movlw	0
  1939   000822  6E33               	movwf	_ContaSample^0,c
  1940   000824                     
  1941                           ;Digitizer16bitsV2.c: 262:                 ControlSample = 0;
  1942   000824  0E00               	movlw	0
  1943   000826  6E34               	movwf	_ControlSample^0,c
  1944   000828                     
  1945                           ;Digitizer16bitsV2.c: 265:                 print_string("G-JRODATEXXXXXXXXXXXX\n\r");
  1946   000828  0E77               	movlw	low STR_5
  1947   00082A  6E3A               	movwf	print_string@str^0,c
  1948   00082C  0E15               	movlw	high STR_5
  1949   00082E  6E3B               	movwf	(print_string@str+1)^0,c
  1950   000830  ECDC  F00C         	call	_print_string	;wreg free
  1951                           
  1952                           ;Digitizer16bitsV2.c: 269:                 LATB = 0x2E;
  1953   000834  0E2E               	movlw	46
  1954   000836  6E8A               	movwf	138,c	;volatile
  1955   000838                     
  1956                           ;Digitizer16bitsV2.c: 270:                 LATBbits.LB7 = 1;
  1957   000838  8E8A               	bsf	138,7,c	;volatile
  1958   00083A                     
  1959                           ;Digitizer16bitsV2.c: 271:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  1960   00083A  0E4D               	movlw	77
  1961   00083C  6E47               	movwf	??_Interrups^0,c
  1962   00083E  0EA5               	movlw	165
  1963   000840                     i2u209_47:
  1964   000840  FFFF               	dw	65535	; errata NOP
  1965   000842  2EE8               	decfsz	wreg,f,c
  1966   000844  D7FD               	bra	i2u209_47
  1967   000846  2E47               	decfsz	??_Interrups^0,f,c
  1968   000848  D7FB               	bra	i2u209_47
  1969   00084A  D000               	nop2	
  1970   00084C  F000               	nop	
  1971   00084E                     
  1972                           ;Digitizer16bitsV2.c: 272:                 SumData_X = 0;
  1973   00084E  0E00               	movlw	0
  1974   000850  6E1D               	movwf	_SumData_X^0,c
  1975   000852  0E00               	movlw	0
  1976   000854  6E1E               	movwf	(_SumData_X+1)^0,c
  1977   000856  0E00               	movlw	0
  1978   000858  6E1F               	movwf	(_SumData_X+2)^0,c
  1979   00085A  0E00               	movlw	0
  1980   00085C  6E20               	movwf	(_SumData_X+3)^0,c
  1981   00085E                     
  1982                           ;Digitizer16bitsV2.c: 273:                 Data_X = ReadDataADC();
  1983   00085E  EC78  F00B         	call	_ReadDataADC	;wreg free
  1984   000862  C039  F031         	movff	?_ReadDataADC,_Data_X
  1985   000866  C03A  F032         	movff	?_ReadDataADC+1,_Data_X+1
  1986   00086A                     
  1987                           ;Digitizer16bitsV2.c: 274:                 for(conta = 0; conta<50; conta++){
  1988   00086A  0E00               	movlw	0
  1989   00086C  6E54               	movwf	Interrups@conta^0,c
  1990   00086E                     i2l3019:
  1991   00086E  FFFF               	dw	65535	; assembler added errata NOP
  1992                           
  1993                           ;Digitizer16bitsV2.c: 275:                    Data_X = ReadDataADC();
  1994   000870  EC78  F00B         	call	_ReadDataADC	;wreg free
  1995   000874  C039  F031         	movff	?_ReadDataADC,_Data_X
  1996   000878  C03A  F032         	movff	?_ReadDataADC+1,_Data_X+1
  1997   00087C                     
  1998                           ;Digitizer16bitsV2.c: 276:                    SumData_X = SumData_X + Data_X;
  1999   00087C  C031  F047         	movff	_Data_X,??_Interrups
  2000   000880  C032  F048         	movff	_Data_X+1,??_Interrups+1
  2001   000884  0E00               	movlw	0
  2002   000886  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2003   000888  0EFF               	movlw	255
  2004   00088A  6E49               	movwf	(??_Interrups+2)^0,c
  2005   00088C  6E4A               	movwf	(??_Interrups+3)^0,c
  2006   00088E  501D               	movf	_SumData_X^0,w,c
  2007   000890  2447               	addwf	??_Interrups^0,w,c
  2008   000892  6E1D               	movwf	_SumData_X^0,c
  2009   000894  501E               	movf	(_SumData_X+1)^0,w,c
  2010   000896  2048               	addwfc	(??_Interrups+1)^0,w,c
  2011   000898  6E1E               	movwf	(_SumData_X+1)^0,c
  2012   00089A  501F               	movf	(_SumData_X+2)^0,w,c
  2013   00089C  2049               	addwfc	(??_Interrups+2)^0,w,c
  2014   00089E  6E1F               	movwf	(_SumData_X+2)^0,c
  2015   0008A0  5020               	movf	(_SumData_X+3)^0,w,c
  2016   0008A2  204A               	addwfc	(??_Interrups+3)^0,w,c
  2017   0008A4  6E20               	movwf	(_SumData_X+3)^0,c
  2018   0008A6                     
  2019                           ;Digitizer16bitsV2.c: 277:                 }
  2020   0008A6  2A54               	incf	Interrups@conta^0,f,c
  2021   0008A8  0E31               	movlw	49
  2022   0008AA  6454               	cpfsgt	Interrups@conta^0,c
  2023   0008AC  EF5A  F004         	goto	i2u148_41
  2024   0008B0  EF5D  F004         	goto	i2u148_40
  2025   0008B4                     i2u148_41:
  2026   0008B4  FFFF               	dw	65535	; assembler added errata NOP
  2027   0008B6  EF37  F004         	goto	i2l3019
  2028   0008BA                     i2u148_40:
  2029   0008BA  FFFF               	dw	65535	; assembler added errata NOP
  2030   0008BC                     
  2031                           ;Digitizer16bitsV2.c: 278:                 LATBbits.LB7 = 0;
  2032   0008BC  9E8A               	bcf	138,7,c	;volatile
  2033   0008BE                     
  2034                           ;Digitizer16bitsV2.c: 280:                 LATB = 0x2A;
  2035   0008BE  0E2A               	movlw	42
  2036   0008C0  6E8A               	movwf	138,c	;volatile
  2037   0008C2                     
  2038                           ;Digitizer16bitsV2.c: 281:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2039   0008C2  0E4D               	movlw	77
  2040   0008C4  6E47               	movwf	??_Interrups^0,c
  2041   0008C6  0EA5               	movlw	165
  2042   0008C8                     i2u210_47:
  2043   0008C8  FFFF               	dw	65535	; errata NOP
  2044   0008CA  2EE8               	decfsz	wreg,f,c
  2045   0008CC  D7FD               	bra	i2u210_47
  2046   0008CE  2E47               	decfsz	??_Interrups^0,f,c
  2047   0008D0  D7FB               	bra	i2u210_47
  2048   0008D2  D000               	nop2	
  2049   0008D4  F000               	nop	
  2050   0008D6                     
  2051                           ;Digitizer16bitsV2.c: 283:                 SumData_Y = 0;
  2052   0008D6  0E00               	movlw	0
  2053   0008D8  6E19               	movwf	_SumData_Y^0,c
  2054   0008DA  0E00               	movlw	0
  2055   0008DC  6E1A               	movwf	(_SumData_Y+1)^0,c
  2056   0008DE  0E00               	movlw	0
  2057   0008E0  6E1B               	movwf	(_SumData_Y+2)^0,c
  2058   0008E2  0E00               	movlw	0
  2059   0008E4  6E1C               	movwf	(_SumData_Y+3)^0,c
  2060   0008E6                     
  2061                           ;Digitizer16bitsV2.c: 284:                 Data_Y = ReadDataADC();
  2062   0008E6  EC78  F00B         	call	_ReadDataADC	;wreg free
  2063   0008EA  C039  F02F         	movff	?_ReadDataADC,_Data_Y
  2064   0008EE  C03A  F030         	movff	?_ReadDataADC+1,_Data_Y+1
  2065   0008F2                     
  2066                           ;Digitizer16bitsV2.c: 285:                 for(conta = 0; conta<50; conta++){
  2067   0008F2  0E00               	movlw	0
  2068   0008F4  6E54               	movwf	Interrups@conta^0,c
  2069   0008F6                     i2l3041:
  2070   0008F6  FFFF               	dw	65535	; assembler added errata NOP
  2071                           
  2072                           ;Digitizer16bitsV2.c: 286:                     Data_Y = ReadDataADC();
  2073   0008F8  EC78  F00B         	call	_ReadDataADC	;wreg free
  2074   0008FC  C039  F02F         	movff	?_ReadDataADC,_Data_Y
  2075   000900  C03A  F030         	movff	?_ReadDataADC+1,_Data_Y+1
  2076   000904                     
  2077                           ;Digitizer16bitsV2.c: 287:                     SumData_Y = SumData_Y + Data_Y;
  2078   000904  C02F  F047         	movff	_Data_Y,??_Interrups
  2079   000908  C030  F048         	movff	_Data_Y+1,??_Interrups+1
  2080   00090C  0E00               	movlw	0
  2081   00090E  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2082   000910  0EFF               	movlw	255
  2083   000912  6E49               	movwf	(??_Interrups+2)^0,c
  2084   000914  6E4A               	movwf	(??_Interrups+3)^0,c
  2085   000916  5019               	movf	_SumData_Y^0,w,c
  2086   000918  2447               	addwf	??_Interrups^0,w,c
  2087   00091A  6E19               	movwf	_SumData_Y^0,c
  2088   00091C  501A               	movf	(_SumData_Y+1)^0,w,c
  2089   00091E  2048               	addwfc	(??_Interrups+1)^0,w,c
  2090   000920  6E1A               	movwf	(_SumData_Y+1)^0,c
  2091   000922  501B               	movf	(_SumData_Y+2)^0,w,c
  2092   000924  2049               	addwfc	(??_Interrups+2)^0,w,c
  2093   000926  6E1B               	movwf	(_SumData_Y+2)^0,c
  2094   000928  501C               	movf	(_SumData_Y+3)^0,w,c
  2095   00092A  204A               	addwfc	(??_Interrups+3)^0,w,c
  2096   00092C  6E1C               	movwf	(_SumData_Y+3)^0,c
  2097   00092E                     
  2098                           ;Digitizer16bitsV2.c: 288:                 }
  2099   00092E  2A54               	incf	Interrups@conta^0,f,c
  2100   000930  0E31               	movlw	49
  2101   000932  6454               	cpfsgt	Interrups@conta^0,c
  2102   000934  EF9E  F004         	goto	i2u149_41
  2103   000938  EFA1  F004         	goto	i2u149_40
  2104   00093C                     i2u149_41:
  2105   00093C  FFFF               	dw	65535	; assembler added errata NOP
  2106   00093E  EF7B  F004         	goto	i2l3041
  2107   000942                     i2u149_40:
  2108   000942  FFFF               	dw	65535	; assembler added errata NOP
  2109   000944                     
  2110                           ;Digitizer16bitsV2.c: 290:                 LATB = 0x2C;
  2111   000944  0E2C               	movlw	44
  2112   000946  6E8A               	movwf	138,c	;volatile
  2113   000948                     
  2114                           ;Digitizer16bitsV2.c: 291:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2115   000948  0E4D               	movlw	77
  2116   00094A  6E47               	movwf	??_Interrups^0,c
  2117   00094C  0EA5               	movlw	165
  2118   00094E                     i2u211_47:
  2119   00094E  FFFF               	dw	65535	; errata NOP
  2120   000950  2EE8               	decfsz	wreg,f,c
  2121   000952  D7FD               	bra	i2u211_47
  2122   000954  2E47               	decfsz	??_Interrups^0,f,c
  2123   000956  D7FB               	bra	i2u211_47
  2124   000958  D000               	nop2	
  2125   00095A  F000               	nop	
  2126   00095C                     
  2127                           ;Digitizer16bitsV2.c: 293:                 SumData_Z = 0;
  2128   00095C  0E00               	movlw	0
  2129   00095E  6E15               	movwf	_SumData_Z^0,c
  2130   000960  0E00               	movlw	0
  2131   000962  6E16               	movwf	(_SumData_Z+1)^0,c
  2132   000964  0E00               	movlw	0
  2133   000966  6E17               	movwf	(_SumData_Z+2)^0,c
  2134   000968  0E00               	movlw	0
  2135   00096A  6E18               	movwf	(_SumData_Z+3)^0,c
  2136   00096C                     
  2137                           ;Digitizer16bitsV2.c: 294:                 Data_Z = ReadDataADC();
  2138   00096C  EC78  F00B         	call	_ReadDataADC	;wreg free
  2139   000970  C039  F02D         	movff	?_ReadDataADC,_Data_Z
  2140   000974  C03A  F02E         	movff	?_ReadDataADC+1,_Data_Z+1
  2141   000978                     
  2142                           ;Digitizer16bitsV2.c: 295:                 for(conta = 0; conta<50; conta++){
  2143   000978  0E00               	movlw	0
  2144   00097A  6E54               	movwf	Interrups@conta^0,c
  2145   00097C                     i2l3063:
  2146   00097C  FFFF               	dw	65535	; assembler added errata NOP
  2147                           
  2148                           ;Digitizer16bitsV2.c: 296:                     Data_Z = ReadDataADC();
  2149   00097E  EC78  F00B         	call	_ReadDataADC	;wreg free
  2150   000982  C039  F02D         	movff	?_ReadDataADC,_Data_Z
  2151   000986  C03A  F02E         	movff	?_ReadDataADC+1,_Data_Z+1
  2152   00098A                     
  2153                           ;Digitizer16bitsV2.c: 297:                     SumData_Z = SumData_Z + Data_Z;
  2154   00098A  C02D  F047         	movff	_Data_Z,??_Interrups
  2155   00098E  C02E  F048         	movff	_Data_Z+1,??_Interrups+1
  2156   000992  0E00               	movlw	0
  2157   000994  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2158   000996  0EFF               	movlw	255
  2159   000998  6E49               	movwf	(??_Interrups+2)^0,c
  2160   00099A  6E4A               	movwf	(??_Interrups+3)^0,c
  2161   00099C  5015               	movf	_SumData_Z^0,w,c
  2162   00099E  2447               	addwf	??_Interrups^0,w,c
  2163   0009A0  6E15               	movwf	_SumData_Z^0,c
  2164   0009A2  5016               	movf	(_SumData_Z+1)^0,w,c
  2165   0009A4  2048               	addwfc	(??_Interrups+1)^0,w,c
  2166   0009A6  6E16               	movwf	(_SumData_Z+1)^0,c
  2167   0009A8  5017               	movf	(_SumData_Z+2)^0,w,c
  2168   0009AA  2049               	addwfc	(??_Interrups+2)^0,w,c
  2169   0009AC  6E17               	movwf	(_SumData_Z+2)^0,c
  2170   0009AE  5018               	movf	(_SumData_Z+3)^0,w,c
  2171   0009B0  204A               	addwfc	(??_Interrups+3)^0,w,c
  2172   0009B2  6E18               	movwf	(_SumData_Z+3)^0,c
  2173   0009B4                     
  2174                           ;Digitizer16bitsV2.c: 298:                 }
  2175   0009B4  2A54               	incf	Interrups@conta^0,f,c
  2176   0009B6  0E31               	movlw	49
  2177   0009B8  6454               	cpfsgt	Interrups@conta^0,c
  2178   0009BA  EFE1  F004         	goto	i2u150_41
  2179   0009BE  EFE4  F004         	goto	i2u150_40
  2180   0009C2                     i2u150_41:
  2181   0009C2  FFFF               	dw	65535	; assembler added errata NOP
  2182   0009C4  EFBE  F004         	goto	i2l3063
  2183   0009C8                     i2u150_40:
  2184   0009C8  FFFF               	dw	65535	; assembler added errata NOP
  2185   0009CA                     
  2186                           ;Digitizer16bitsV2.c: 300:                 LATB = 0x28;
  2187   0009CA  0E28               	movlw	40
  2188   0009CC  6E8A               	movwf	138,c	;volatile
  2189   0009CE                     
  2190                           ;Digitizer16bitsV2.c: 301:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2191   0009CE  0E4D               	movlw	77
  2192   0009D0  6E47               	movwf	??_Interrups^0,c
  2193   0009D2  0EA5               	movlw	165
  2194   0009D4                     i2u212_47:
  2195   0009D4  FFFF               	dw	65535	; errata NOP
  2196   0009D6  2EE8               	decfsz	wreg,f,c
  2197   0009D8  D7FD               	bra	i2u212_47
  2198   0009DA  2E47               	decfsz	??_Interrups^0,f,c
  2199   0009DC  D7FB               	bra	i2u212_47
  2200   0009DE  D000               	nop2	
  2201   0009E0  F000               	nop	
  2202   0009E2                     
  2203                           ;Digitizer16bitsV2.c: 303:                 SumData_TC = 0;
  2204   0009E2  0E00               	movlw	0
  2205   0009E4  6E11               	movwf	_SumData_TC^0,c
  2206   0009E6  0E00               	movlw	0
  2207   0009E8  6E12               	movwf	(_SumData_TC+1)^0,c
  2208   0009EA  0E00               	movlw	0
  2209   0009EC  6E13               	movwf	(_SumData_TC+2)^0,c
  2210   0009EE  0E00               	movlw	0
  2211   0009F0  6E14               	movwf	(_SumData_TC+3)^0,c
  2212   0009F2                     
  2213                           ;Digitizer16bitsV2.c: 304:                 Data_TC = ReadDataADC();
  2214   0009F2  EC78  F00B         	call	_ReadDataADC	;wreg free
  2215   0009F6  C039  F02B         	movff	?_ReadDataADC,_Data_TC
  2216   0009FA  C03A  F02C         	movff	?_ReadDataADC+1,_Data_TC+1
  2217   0009FE                     
  2218                           ;Digitizer16bitsV2.c: 305:                 for(conta = 0; conta<50; conta++){
  2219   0009FE  0E00               	movlw	0
  2220   000A00  6E54               	movwf	Interrups@conta^0,c
  2221   000A02                     i2l3085:
  2222   000A02  FFFF               	dw	65535	; assembler added errata NOP
  2223                           
  2224                           ;Digitizer16bitsV2.c: 306:                     Data_TC = ReadDataADC();
  2225   000A04  EC78  F00B         	call	_ReadDataADC	;wreg free
  2226   000A08  C039  F02B         	movff	?_ReadDataADC,_Data_TC
  2227   000A0C  C03A  F02C         	movff	?_ReadDataADC+1,_Data_TC+1
  2228   000A10                     
  2229                           ;Digitizer16bitsV2.c: 307:                     SumData_TC = SumData_TC + Data_TC;
  2230   000A10  C02B  F047         	movff	_Data_TC,??_Interrups
  2231   000A14  C02C  F048         	movff	_Data_TC+1,??_Interrups+1
  2232   000A18  0E00               	movlw	0
  2233   000A1A  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2234   000A1C  0EFF               	movlw	255
  2235   000A1E  6E49               	movwf	(??_Interrups+2)^0,c
  2236   000A20  6E4A               	movwf	(??_Interrups+3)^0,c
  2237   000A22  5011               	movf	_SumData_TC^0,w,c
  2238   000A24  2447               	addwf	??_Interrups^0,w,c
  2239   000A26  6E11               	movwf	_SumData_TC^0,c
  2240   000A28  5012               	movf	(_SumData_TC+1)^0,w,c
  2241   000A2A  2048               	addwfc	(??_Interrups+1)^0,w,c
  2242   000A2C  6E12               	movwf	(_SumData_TC+1)^0,c
  2243   000A2E  5013               	movf	(_SumData_TC+2)^0,w,c
  2244   000A30  2049               	addwfc	(??_Interrups+2)^0,w,c
  2245   000A32  6E13               	movwf	(_SumData_TC+2)^0,c
  2246   000A34  5014               	movf	(_SumData_TC+3)^0,w,c
  2247   000A36  204A               	addwfc	(??_Interrups+3)^0,w,c
  2248   000A38  6E14               	movwf	(_SumData_TC+3)^0,c
  2249   000A3A                     
  2250                           ;Digitizer16bitsV2.c: 308:                 }
  2251   000A3A  2A54               	incf	Interrups@conta^0,f,c
  2252   000A3C  0E31               	movlw	49
  2253   000A3E  6454               	cpfsgt	Interrups@conta^0,c
  2254   000A40  EF24  F005         	goto	i2u151_41
  2255   000A44  EF27  F005         	goto	i2u151_40
  2256   000A48                     i2u151_41:
  2257   000A48  FFFF               	dw	65535	; assembler added errata NOP
  2258   000A4A  EF01  F005         	goto	i2l3085
  2259   000A4E                     i2u151_40:
  2260   000A4E  FFFF               	dw	65535	; assembler added errata NOP
  2261   000A50                     
  2262                           ;Digitizer16bitsV2.c: 310:                 LATB = 0x20;
  2263   000A50  0E20               	movlw	32
  2264   000A52  6E8A               	movwf	138,c	;volatile
  2265   000A54                     
  2266                           ;Digitizer16bitsV2.c: 311:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2267   000A54  0E4D               	movlw	77
  2268   000A56  6E47               	movwf	??_Interrups^0,c
  2269   000A58  0EA5               	movlw	165
  2270   000A5A                     i2u213_47:
  2271   000A5A  FFFF               	dw	65535	; errata NOP
  2272   000A5C  2EE8               	decfsz	wreg,f,c
  2273   000A5E  D7FD               	bra	i2u213_47
  2274   000A60  2E47               	decfsz	??_Interrups^0,f,c
  2275   000A62  D7FB               	bra	i2u213_47
  2276   000A64  D000               	nop2	
  2277   000A66  F000               	nop	
  2278   000A68                     
  2279                           ;Digitizer16bitsV2.c: 313:                 SumData_TS = 0;
  2280   000A68  0E00               	movlw	0
  2281   000A6A  6E0D               	movwf	_SumData_TS^0,c
  2282   000A6C  0E00               	movlw	0
  2283   000A6E  6E0E               	movwf	(_SumData_TS+1)^0,c
  2284   000A70  0E00               	movlw	0
  2285   000A72  6E0F               	movwf	(_SumData_TS+2)^0,c
  2286   000A74  0E00               	movlw	0
  2287   000A76  6E10               	movwf	(_SumData_TS+3)^0,c
  2288   000A78                     
  2289                           ;Digitizer16bitsV2.c: 314:                 Data_TS = ReadDataADC();
  2290   000A78  EC78  F00B         	call	_ReadDataADC	;wreg free
  2291   000A7C  C039  F029         	movff	?_ReadDataADC,_Data_TS
  2292   000A80  C03A  F02A         	movff	?_ReadDataADC+1,_Data_TS+1
  2293   000A84                     
  2294                           ;Digitizer16bitsV2.c: 315:                 for(conta = 0; conta<50; conta++){
  2295   000A84  0E00               	movlw	0
  2296   000A86  6E54               	movwf	Interrups@conta^0,c
  2297   000A88                     i2l3107:
  2298   000A88  FFFF               	dw	65535	; assembler added errata NOP
  2299                           
  2300                           ;Digitizer16bitsV2.c: 316:                     Data_TS = ReadDataADC();
  2301   000A8A  EC78  F00B         	call	_ReadDataADC	;wreg free
  2302   000A8E  C039  F029         	movff	?_ReadDataADC,_Data_TS
  2303   000A92  C03A  F02A         	movff	?_ReadDataADC+1,_Data_TS+1
  2304   000A96                     
  2305                           ;Digitizer16bitsV2.c: 317:                     SumData_TS = SumData_TS + Data_TS;
  2306   000A96  C029  F047         	movff	_Data_TS,??_Interrups
  2307   000A9A  C02A  F048         	movff	_Data_TS+1,??_Interrups+1
  2308   000A9E  0E00               	movlw	0
  2309   000AA0  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2310   000AA2  0EFF               	movlw	255
  2311   000AA4  6E49               	movwf	(??_Interrups+2)^0,c
  2312   000AA6  6E4A               	movwf	(??_Interrups+3)^0,c
  2313   000AA8  500D               	movf	_SumData_TS^0,w,c
  2314   000AAA  2447               	addwf	??_Interrups^0,w,c
  2315   000AAC  6E0D               	movwf	_SumData_TS^0,c
  2316   000AAE  500E               	movf	(_SumData_TS+1)^0,w,c
  2317   000AB0  2048               	addwfc	(??_Interrups+1)^0,w,c
  2318   000AB2  6E0E               	movwf	(_SumData_TS+1)^0,c
  2319   000AB4  500F               	movf	(_SumData_TS+2)^0,w,c
  2320   000AB6  2049               	addwfc	(??_Interrups+2)^0,w,c
  2321   000AB8  6E0F               	movwf	(_SumData_TS+2)^0,c
  2322   000ABA  5010               	movf	(_SumData_TS+3)^0,w,c
  2323   000ABC  204A               	addwfc	(??_Interrups+3)^0,w,c
  2324   000ABE  6E10               	movwf	(_SumData_TS+3)^0,c
  2325   000AC0                     
  2326                           ;Digitizer16bitsV2.c: 318:                 }
  2327   000AC0  2A54               	incf	Interrups@conta^0,f,c
  2328   000AC2  0E31               	movlw	49
  2329   000AC4  6454               	cpfsgt	Interrups@conta^0,c
  2330   000AC6  EF67  F005         	goto	i2u152_41
  2331   000ACA  EF6A  F005         	goto	i2u152_40
  2332   000ACE                     i2u152_41:
  2333   000ACE  FFFF               	dw	65535	; assembler added errata NOP
  2334   000AD0  EF44  F005         	goto	i2l3107
  2335   000AD4                     i2u152_40:
  2336   000AD4  FFFF               	dw	65535	; assembler added errata NOP
  2337   000AD6                     
  2338                           ;Digitizer16bitsV2.c: 320:                 LATB = 0x24;
  2339   000AD6  0E24               	movlw	36
  2340   000AD8  6E8A               	movwf	138,c	;volatile
  2341   000ADA                     
  2342                           ;Digitizer16bitsV2.c: 321:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2343   000ADA  0E4D               	movlw	77
  2344   000ADC  6E47               	movwf	??_Interrups^0,c
  2345   000ADE  0EA5               	movlw	165
  2346   000AE0                     i2u214_47:
  2347   000AE0  FFFF               	dw	65535	; errata NOP
  2348   000AE2  2EE8               	decfsz	wreg,f,c
  2349   000AE4  D7FD               	bra	i2u214_47
  2350   000AE6  2E47               	decfsz	??_Interrups^0,f,c
  2351   000AE8  D7FB               	bra	i2u214_47
  2352   000AEA  D000               	nop2	
  2353   000AEC  F000               	nop	
  2354   000AEE                     
  2355                           ;Digitizer16bitsV2.c: 323:                 SumData_AUX0 = 0;
  2356   000AEE  0E00               	movlw	0
  2357   000AF0  6E09               	movwf	_SumData_AUX0^0,c
  2358   000AF2  0E00               	movlw	0
  2359   000AF4  6E0A               	movwf	(_SumData_AUX0+1)^0,c
  2360   000AF6  0E00               	movlw	0
  2361   000AF8  6E0B               	movwf	(_SumData_AUX0+2)^0,c
  2362   000AFA  0E00               	movlw	0
  2363   000AFC  6E0C               	movwf	(_SumData_AUX0+3)^0,c
  2364   000AFE                     
  2365                           ;Digitizer16bitsV2.c: 324:                 Data_AUX0 = ReadDataADC();
  2366   000AFE  EC78  F00B         	call	_ReadDataADC	;wreg free
  2367   000B02  C039  F025         	movff	?_ReadDataADC,_Data_AUX0
  2368   000B06  C03A  F026         	movff	?_ReadDataADC+1,_Data_AUX0+1
  2369   000B0A                     
  2370                           ;Digitizer16bitsV2.c: 325:                 for(conta = 0; conta<50; conta++){
  2371   000B0A  0E00               	movlw	0
  2372   000B0C  6E54               	movwf	Interrups@conta^0,c
  2373   000B0E                     i2l3129:
  2374   000B0E  FFFF               	dw	65535	; assembler added errata NOP
  2375                           
  2376                           ;Digitizer16bitsV2.c: 326:                     Data_AUX0 = ReadDataADC();
  2377   000B10  EC78  F00B         	call	_ReadDataADC	;wreg free
  2378   000B14  C039  F025         	movff	?_ReadDataADC,_Data_AUX0
  2379   000B18  C03A  F026         	movff	?_ReadDataADC+1,_Data_AUX0+1
  2380   000B1C                     
  2381                           ;Digitizer16bitsV2.c: 327:                     SumData_AUX0 = SumData_AUX0 + Data_AUX0;
  2382   000B1C  C025  F047         	movff	_Data_AUX0,??_Interrups
  2383   000B20  C026  F048         	movff	_Data_AUX0+1,??_Interrups+1
  2384   000B24  0E00               	movlw	0
  2385   000B26  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2386   000B28  0EFF               	movlw	255
  2387   000B2A  6E49               	movwf	(??_Interrups+2)^0,c
  2388   000B2C  6E4A               	movwf	(??_Interrups+3)^0,c
  2389   000B2E  5009               	movf	_SumData_AUX0^0,w,c
  2390   000B30  2447               	addwf	??_Interrups^0,w,c
  2391   000B32  6E09               	movwf	_SumData_AUX0^0,c
  2392   000B34  500A               	movf	(_SumData_AUX0+1)^0,w,c
  2393   000B36  2048               	addwfc	(??_Interrups+1)^0,w,c
  2394   000B38  6E0A               	movwf	(_SumData_AUX0+1)^0,c
  2395   000B3A  500B               	movf	(_SumData_AUX0+2)^0,w,c
  2396   000B3C  2049               	addwfc	(??_Interrups+2)^0,w,c
  2397   000B3E  6E0B               	movwf	(_SumData_AUX0+2)^0,c
  2398   000B40  500C               	movf	(_SumData_AUX0+3)^0,w,c
  2399   000B42  204A               	addwfc	(??_Interrups+3)^0,w,c
  2400   000B44  6E0C               	movwf	(_SumData_AUX0+3)^0,c
  2401   000B46                     
  2402                           ;Digitizer16bitsV2.c: 328:                 }
  2403   000B46  2A54               	incf	Interrups@conta^0,f,c
  2404   000B48  0E31               	movlw	49
  2405   000B4A  6454               	cpfsgt	Interrups@conta^0,c
  2406   000B4C  EFAA  F005         	goto	i2u153_41
  2407   000B50  EFAD  F005         	goto	i2u153_40
  2408   000B54                     i2u153_41:
  2409   000B54  FFFF               	dw	65535	; assembler added errata NOP
  2410   000B56  EF87  F005         	goto	i2l3129
  2411   000B5A                     i2u153_40:
  2412   000B5A  FFFF               	dw	65535	; assembler added errata NOP
  2413   000B5C                     
  2414                           ;Digitizer16bitsV2.c: 330:                 LATB = 0x22;
  2415   000B5C  0E22               	movlw	34
  2416   000B5E  6E8A               	movwf	138,c	;volatile
  2417   000B60                     
  2418                           ;Digitizer16bitsV2.c: 331:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2419   000B60  0E4D               	movlw	77
  2420   000B62  6E47               	movwf	??_Interrups^0,c
  2421   000B64  0EA5               	movlw	165
  2422   000B66                     i2u215_47:
  2423   000B66  FFFF               	dw	65535	; errata NOP
  2424   000B68  2EE8               	decfsz	wreg,f,c
  2425   000B6A  D7FD               	bra	i2u215_47
  2426   000B6C  2E47               	decfsz	??_Interrups^0,f,c
  2427   000B6E  D7FB               	bra	i2u215_47
  2428   000B70  D000               	nop2	
  2429   000B72  F000               	nop	
  2430   000B74                     
  2431                           ;Digitizer16bitsV2.c: 333:                 SumData_AUX1 = 0;
  2432   000B74  0E00               	movlw	0
  2433   000B76  6E05               	movwf	_SumData_AUX1^0,c
  2434   000B78  0E00               	movlw	0
  2435   000B7A  6E06               	movwf	(_SumData_AUX1+1)^0,c
  2436   000B7C  0E00               	movlw	0
  2437   000B7E  6E07               	movwf	(_SumData_AUX1+2)^0,c
  2438   000B80  0E00               	movlw	0
  2439   000B82  6E08               	movwf	(_SumData_AUX1+3)^0,c
  2440   000B84                     
  2441                           ;Digitizer16bitsV2.c: 334:                 Data_AUX1 = ReadDataADC();
  2442   000B84  EC78  F00B         	call	_ReadDataADC	;wreg free
  2443   000B88  C039  F023         	movff	?_ReadDataADC,_Data_AUX1
  2444   000B8C  C03A  F024         	movff	?_ReadDataADC+1,_Data_AUX1+1
  2445   000B90                     
  2446                           ;Digitizer16bitsV2.c: 335:                 for(conta = 0; conta<50; conta++){
  2447   000B90  0E00               	movlw	0
  2448   000B92  6E54               	movwf	Interrups@conta^0,c
  2449   000B94                     i2l3151:
  2450   000B94  FFFF               	dw	65535	; assembler added errata NOP
  2451                           
  2452                           ;Digitizer16bitsV2.c: 336:                     Data_AUX1 = ReadDataADC();
  2453   000B96  EC78  F00B         	call	_ReadDataADC	;wreg free
  2454   000B9A  C039  F023         	movff	?_ReadDataADC,_Data_AUX1
  2455   000B9E  C03A  F024         	movff	?_ReadDataADC+1,_Data_AUX1+1
  2456   000BA2                     
  2457                           ;Digitizer16bitsV2.c: 337:                     SumData_AUX1 = SumData_AUX1 + Data_AUX1;
  2458   000BA2  C023  F047         	movff	_Data_AUX1,??_Interrups
  2459   000BA6  C024  F048         	movff	_Data_AUX1+1,??_Interrups+1
  2460   000BAA  0E00               	movlw	0
  2461   000BAC  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2462   000BAE  0EFF               	movlw	255
  2463   000BB0  6E49               	movwf	(??_Interrups+2)^0,c
  2464   000BB2  6E4A               	movwf	(??_Interrups+3)^0,c
  2465   000BB4  5005               	movf	_SumData_AUX1^0,w,c
  2466   000BB6  2447               	addwf	??_Interrups^0,w,c
  2467   000BB8  6E05               	movwf	_SumData_AUX1^0,c
  2468   000BBA  5006               	movf	(_SumData_AUX1+1)^0,w,c
  2469   000BBC  2048               	addwfc	(??_Interrups+1)^0,w,c
  2470   000BBE  6E06               	movwf	(_SumData_AUX1+1)^0,c
  2471   000BC0  5007               	movf	(_SumData_AUX1+2)^0,w,c
  2472   000BC2  2049               	addwfc	(??_Interrups+2)^0,w,c
  2473   000BC4  6E07               	movwf	(_SumData_AUX1+2)^0,c
  2474   000BC6  5008               	movf	(_SumData_AUX1+3)^0,w,c
  2475   000BC8  204A               	addwfc	(??_Interrups+3)^0,w,c
  2476   000BCA  6E08               	movwf	(_SumData_AUX1+3)^0,c
  2477   000BCC                     
  2478                           ;Digitizer16bitsV2.c: 338:                 }
  2479   000BCC  2A54               	incf	Interrups@conta^0,f,c
  2480   000BCE  0E31               	movlw	49
  2481   000BD0  6454               	cpfsgt	Interrups@conta^0,c
  2482   000BD2  EFED  F005         	goto	i2u154_41
  2483   000BD6  EFF0  F005         	goto	i2u154_40
  2484   000BDA                     i2u154_41:
  2485   000BDA  FFFF               	dw	65535	; assembler added errata NOP
  2486   000BDC  EFCA  F005         	goto	i2l3151
  2487   000BE0                     i2u154_40:
  2488   000BE0  FFFF               	dw	65535	; assembler added errata NOP
  2489   000BE2                     
  2490                           ;Digitizer16bitsV2.c: 340:                 LATB = 0x26;
  2491   000BE2  0E26               	movlw	38
  2492   000BE4  6E8A               	movwf	138,c	;volatile
  2493   000BE6                     
  2494                           ;Digitizer16bitsV2.c: 341:                 LATBbits.LB7 = 1;
  2495   000BE6  8E8A               	bsf	138,7,c	;volatile
  2496   000BE8                     
  2497                           ;Digitizer16bitsV2.c: 342:                 _delay((unsigned long)((8)*(39321600UL/4000.0
      +                          )));
  2498   000BE8  0E4D               	movlw	77
  2499   000BEA  6E47               	movwf	??_Interrups^0,c
  2500   000BEC  0EA5               	movlw	165
  2501   000BEE                     i2u216_47:
  2502   000BEE  FFFF               	dw	65535	; errata NOP
  2503   000BF0  2EE8               	decfsz	wreg,f,c
  2504   000BF2  D7FD               	bra	i2u216_47
  2505   000BF4  2E47               	decfsz	??_Interrups^0,f,c
  2506   000BF6  D7FB               	bra	i2u216_47
  2507   000BF8  D000               	nop2	
  2508   000BFA  F000               	nop	
  2509   000BFC                     
  2510                           ;Digitizer16bitsV2.c: 344:                 SumData_AUX2 = 0;
  2511   000BFC  0E00               	movlw	0
  2512   000BFE  6E01               	movwf	_SumData_AUX2^0,c
  2513   000C00  0E00               	movlw	0
  2514   000C02  6E02               	movwf	(_SumData_AUX2+1)^0,c
  2515   000C04  0E00               	movlw	0
  2516   000C06  6E03               	movwf	(_SumData_AUX2+2)^0,c
  2517   000C08  0E00               	movlw	0
  2518   000C0A  6E04               	movwf	(_SumData_AUX2+3)^0,c
  2519   000C0C                     
  2520                           ;Digitizer16bitsV2.c: 345:                 Data_AUX2 = ReadDataADC();
  2521   000C0C  EC78  F00B         	call	_ReadDataADC	;wreg free
  2522   000C10  C039  F021         	movff	?_ReadDataADC,_Data_AUX2
  2523   000C14  C03A  F022         	movff	?_ReadDataADC+1,_Data_AUX2+1
  2524   000C18                     
  2525                           ;Digitizer16bitsV2.c: 346:                 for(conta = 0; conta<50; conta++){
  2526   000C18  0E00               	movlw	0
  2527   000C1A  6E54               	movwf	Interrups@conta^0,c
  2528   000C1C                     i2l3175:
  2529   000C1C  FFFF               	dw	65535	; assembler added errata NOP
  2530                           
  2531                           ;Digitizer16bitsV2.c: 347:                     Data_AUX2 = ReadDataADC();
  2532   000C1E  EC78  F00B         	call	_ReadDataADC	;wreg free
  2533   000C22  C039  F021         	movff	?_ReadDataADC,_Data_AUX2
  2534   000C26  C03A  F022         	movff	?_ReadDataADC+1,_Data_AUX2+1
  2535   000C2A                     
  2536                           ;Digitizer16bitsV2.c: 348:                     SumData_AUX2 = SumData_AUX2 + Data_AUX2;
  2537   000C2A  C021  F047         	movff	_Data_AUX2,??_Interrups
  2538   000C2E  C022  F048         	movff	_Data_AUX2+1,??_Interrups+1
  2539   000C32  0E00               	movlw	0
  2540   000C34  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2541   000C36  0EFF               	movlw	255
  2542   000C38  6E49               	movwf	(??_Interrups+2)^0,c
  2543   000C3A  6E4A               	movwf	(??_Interrups+3)^0,c
  2544   000C3C  5001               	movf	_SumData_AUX2^0,w,c
  2545   000C3E  2447               	addwf	??_Interrups^0,w,c
  2546   000C40  6E01               	movwf	_SumData_AUX2^0,c
  2547   000C42  5002               	movf	(_SumData_AUX2+1)^0,w,c
  2548   000C44  2048               	addwfc	(??_Interrups+1)^0,w,c
  2549   000C46  6E02               	movwf	(_SumData_AUX2+1)^0,c
  2550   000C48  5003               	movf	(_SumData_AUX2+2)^0,w,c
  2551   000C4A  2049               	addwfc	(??_Interrups+2)^0,w,c
  2552   000C4C  6E03               	movwf	(_SumData_AUX2+2)^0,c
  2553   000C4E  5004               	movf	(_SumData_AUX2+3)^0,w,c
  2554   000C50  204A               	addwfc	(??_Interrups+3)^0,w,c
  2555   000C52  6E04               	movwf	(_SumData_AUX2+3)^0,c
  2556   000C54                     
  2557                           ;Digitizer16bitsV2.c: 349:                 }
  2558   000C54  2A54               	incf	Interrups@conta^0,f,c
  2559   000C56  0E31               	movlw	49
  2560   000C58  6454               	cpfsgt	Interrups@conta^0,c
  2561   000C5A  EF31  F006         	goto	i2u155_41
  2562   000C5E  EF34  F006         	goto	i2u155_40
  2563   000C62                     i2u155_41:
  2564   000C62  FFFF               	dw	65535	; assembler added errata NOP
  2565   000C64  EF0E  F006         	goto	i2l3175
  2566   000C68                     i2u155_40:
  2567   000C68  FFFF               	dw	65535	; assembler added errata NOP
  2568   000C6A                     
  2569                           ;Digitizer16bitsV2.c: 350:                 LATBbits.LB7 = 0;
  2570   000C6A  9E8A               	bcf	138,7,c	;volatile
  2571   000C6C                     
  2572                           ;Digitizer16bitsV2.c: 353:                 Data_X = (signed short) (SumData_X/50);
  2573   000C6C  C01D  F039         	movff	_SumData_X,___aldiv@dividend
  2574   000C70  C01E  F03A         	movff	_SumData_X+1,___aldiv@dividend+1
  2575   000C74  C01F  F03B         	movff	_SumData_X+2,___aldiv@dividend+2
  2576   000C78  C020  F03C         	movff	_SumData_X+3,___aldiv@dividend+3
  2577   000C7C  0E32               	movlw	50
  2578   000C7E  6E3D               	movwf	___aldiv@divisor^0,c
  2579   000C80  0E00               	movlw	0
  2580   000C82  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2581   000C84  0E00               	movlw	0
  2582   000C86  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2583   000C88  0E00               	movlw	0
  2584   000C8A  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2585   000C8C  ECDC  F00A         	call	___aldiv	;wreg free
  2586   000C90  C039  F031         	movff	?___aldiv,_Data_X
  2587   000C94  C03A  F032         	movff	?___aldiv+1,_Data_X+1
  2588                           
  2589                           ;Digitizer16bitsV2.c: 354:                 Data_Y = (signed short) (SumData_Y/50);
  2590   000C98  C019  F039         	movff	_SumData_Y,___aldiv@dividend
  2591   000C9C  C01A  F03A         	movff	_SumData_Y+1,___aldiv@dividend+1
  2592   000CA0  C01B  F03B         	movff	_SumData_Y+2,___aldiv@dividend+2
  2593   000CA4  C01C  F03C         	movff	_SumData_Y+3,___aldiv@dividend+3
  2594   000CA8  0E32               	movlw	50
  2595   000CAA  6E3D               	movwf	___aldiv@divisor^0,c
  2596   000CAC  0E00               	movlw	0
  2597   000CAE  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2598   000CB0  0E00               	movlw	0
  2599   000CB2  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2600   000CB4  0E00               	movlw	0
  2601   000CB6  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2602   000CB8  ECDC  F00A         	call	___aldiv	;wreg free
  2603   000CBC  C039  F02F         	movff	?___aldiv,_Data_Y
  2604   000CC0  C03A  F030         	movff	?___aldiv+1,_Data_Y+1
  2605                           
  2606                           ;Digitizer16bitsV2.c: 355:                 Data_Z = (signed short) (SumData_Z/50);
  2607   000CC4  C015  F039         	movff	_SumData_Z,___aldiv@dividend
  2608   000CC8  C016  F03A         	movff	_SumData_Z+1,___aldiv@dividend+1
  2609   000CCC  C017  F03B         	movff	_SumData_Z+2,___aldiv@dividend+2
  2610   000CD0  C018  F03C         	movff	_SumData_Z+3,___aldiv@dividend+3
  2611   000CD4  0E32               	movlw	50
  2612   000CD6  6E3D               	movwf	___aldiv@divisor^0,c
  2613   000CD8  0E00               	movlw	0
  2614   000CDA  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2615   000CDC  0E00               	movlw	0
  2616   000CDE  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2617   000CE0  0E00               	movlw	0
  2618   000CE2  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2619   000CE4  ECDC  F00A         	call	___aldiv	;wreg free
  2620   000CE8  C039  F02D         	movff	?___aldiv,_Data_Z
  2621   000CEC  C03A  F02E         	movff	?___aldiv+1,_Data_Z+1
  2622                           
  2623                           ;Digitizer16bitsV2.c: 356:                 Data_TC = (signed short) (SumData_TC/50);
  2624   000CF0  C011  F039         	movff	_SumData_TC,___aldiv@dividend
  2625   000CF4  C012  F03A         	movff	_SumData_TC+1,___aldiv@dividend+1
  2626   000CF8  C013  F03B         	movff	_SumData_TC+2,___aldiv@dividend+2
  2627   000CFC  C014  F03C         	movff	_SumData_TC+3,___aldiv@dividend+3
  2628   000D00  0E32               	movlw	50
  2629   000D02  6E3D               	movwf	___aldiv@divisor^0,c
  2630   000D04  0E00               	movlw	0
  2631   000D06  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2632   000D08  0E00               	movlw	0
  2633   000D0A  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2634   000D0C  0E00               	movlw	0
  2635   000D0E  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2636   000D10  ECDC  F00A         	call	___aldiv	;wreg free
  2637   000D14  C039  F02B         	movff	?___aldiv,_Data_TC
  2638   000D18  C03A  F02C         	movff	?___aldiv+1,_Data_TC+1
  2639                           
  2640                           ;Digitizer16bitsV2.c: 357:                 Data_TS = (signed short) (SumData_TS/50);
  2641   000D1C  C00D  F039         	movff	_SumData_TS,___aldiv@dividend
  2642   000D20  C00E  F03A         	movff	_SumData_TS+1,___aldiv@dividend+1
  2643   000D24  C00F  F03B         	movff	_SumData_TS+2,___aldiv@dividend+2
  2644   000D28  C010  F03C         	movff	_SumData_TS+3,___aldiv@dividend+3
  2645   000D2C  0E32               	movlw	50
  2646   000D2E  6E3D               	movwf	___aldiv@divisor^0,c
  2647   000D30  0E00               	movlw	0
  2648   000D32  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2649   000D34  0E00               	movlw	0
  2650   000D36  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2651   000D38  0E00               	movlw	0
  2652   000D3A  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2653   000D3C  ECDC  F00A         	call	___aldiv	;wreg free
  2654   000D40  C039  F029         	movff	?___aldiv,_Data_TS
  2655   000D44  C03A  F02A         	movff	?___aldiv+1,_Data_TS+1
  2656                           
  2657                           ;Digitizer16bitsV2.c: 358:                 Data_AUX0 = (signed short) (SumData_AUX0/50);
  2658   000D48  C009  F039         	movff	_SumData_AUX0,___aldiv@dividend
  2659   000D4C  C00A  F03A         	movff	_SumData_AUX0+1,___aldiv@dividend+1
  2660   000D50  C00B  F03B         	movff	_SumData_AUX0+2,___aldiv@dividend+2
  2661   000D54  C00C  F03C         	movff	_SumData_AUX0+3,___aldiv@dividend+3
  2662   000D58  0E32               	movlw	50
  2663   000D5A  6E3D               	movwf	___aldiv@divisor^0,c
  2664   000D5C  0E00               	movlw	0
  2665   000D5E  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2666   000D60  0E00               	movlw	0
  2667   000D62  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2668   000D64  0E00               	movlw	0
  2669   000D66  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2670   000D68  ECDC  F00A         	call	___aldiv	;wreg free
  2671   000D6C  C039  F025         	movff	?___aldiv,_Data_AUX0
  2672   000D70  C03A  F026         	movff	?___aldiv+1,_Data_AUX0+1
  2673                           
  2674                           ;Digitizer16bitsV2.c: 359:                 Data_AUX1 = (signed short) (SumData_AUX1/50);
  2675   000D74  C005  F039         	movff	_SumData_AUX1,___aldiv@dividend
  2676   000D78  C006  F03A         	movff	_SumData_AUX1+1,___aldiv@dividend+1
  2677   000D7C  C007  F03B         	movff	_SumData_AUX1+2,___aldiv@dividend+2
  2678   000D80  C008  F03C         	movff	_SumData_AUX1+3,___aldiv@dividend+3
  2679   000D84  0E32               	movlw	50
  2680   000D86  6E3D               	movwf	___aldiv@divisor^0,c
  2681   000D88  0E00               	movlw	0
  2682   000D8A  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2683   000D8C  0E00               	movlw	0
  2684   000D8E  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2685   000D90  0E00               	movlw	0
  2686   000D92  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2687   000D94  ECDC  F00A         	call	___aldiv	;wreg free
  2688   000D98  C039  F023         	movff	?___aldiv,_Data_AUX1
  2689   000D9C  C03A  F024         	movff	?___aldiv+1,_Data_AUX1+1
  2690                           
  2691                           ;Digitizer16bitsV2.c: 360:                 Data_AUX2 = (signed short) (SumData_AUX2/50);
  2692   000DA0  C001  F039         	movff	_SumData_AUX2,___aldiv@dividend
  2693   000DA4  C002  F03A         	movff	_SumData_AUX2+1,___aldiv@dividend+1
  2694   000DA8  C003  F03B         	movff	_SumData_AUX2+2,___aldiv@dividend+2
  2695   000DAC  C004  F03C         	movff	_SumData_AUX2+3,___aldiv@dividend+3
  2696   000DB0  0E32               	movlw	50
  2697   000DB2  6E3D               	movwf	___aldiv@divisor^0,c
  2698   000DB4  0E00               	movlw	0
  2699   000DB6  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  2700   000DB8  0E00               	movlw	0
  2701   000DBA  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  2702   000DBC  0E00               	movlw	0
  2703   000DBE  6E40               	movwf	(___aldiv@divisor+3)^0,c
  2704   000DC0  ECDC  F00A         	call	___aldiv	;wreg free
  2705   000DC4  C039  F021         	movff	?___aldiv,_Data_AUX2
  2706   000DC8  C03A  F022         	movff	?___aldiv+1,_Data_AUX2+1
  2707   000DCC                     
  2708                           ;Digitizer16bitsV2.c: 363:                 print_string("JROADQ");
  2709   000DCC  0EAF               	movlw	low STR_3
  2710   000DCE  6E3A               	movwf	print_string@str^0,c
  2711   000DD0  0E15               	movlw	high STR_3
  2712   000DD2  6E3B               	movwf	(print_string@str+1)^0,c
  2713   000DD4  ECDC  F00C         	call	_print_string	;wreg free
  2714   000DD8                     
  2715                           ;Digitizer16bitsV2.c: 364:                 WriteByte_USART(ContaSample);
  2716   000DD8  5033               	movf	_ContaSample^0,w,c
  2717   000DDA  EC63  F00D         	call	_WriteByte_USART
  2718   000DDE                     
  2719                           ;Digitizer16bitsV2.c: 365:                 print_value(Data_X);
  2720   000DDE  C031  F03A         	movff	_Data_X,print_value@value
  2721   000DE2  C032  F03B         	movff	_Data_X+1,print_value@value+1
  2722   000DE6  EC83  F00D         	call	_print_value	;wreg free
  2723   000DEA                     
  2724                           ;Digitizer16bitsV2.c: 366:                 print_value(Data_Y);
  2725   000DEA  C02F  F03A         	movff	_Data_Y,print_value@value
  2726   000DEE  C030  F03B         	movff	_Data_Y+1,print_value@value+1
  2727   000DF2  EC83  F00D         	call	_print_value	;wreg free
  2728   000DF6                     
  2729                           ;Digitizer16bitsV2.c: 367:                 print_value(Data_Z);
  2730   000DF6  C02D  F03A         	movff	_Data_Z,print_value@value
  2731   000DFA  C02E  F03B         	movff	_Data_Z+1,print_value@value+1
  2732   000DFE  EC83  F00D         	call	_print_value	;wreg free
  2733   000E02                     
  2734                           ;Digitizer16bitsV2.c: 368:                 print_value(Data_TC);
  2735   000E02  C02B  F03A         	movff	_Data_TC,print_value@value
  2736   000E06  C02C  F03B         	movff	_Data_TC+1,print_value@value+1
  2737   000E0A  EC83  F00D         	call	_print_value	;wreg free
  2738   000E0E                     
  2739                           ;Digitizer16bitsV2.c: 369:                 print_value(Data_TS);
  2740   000E0E  C029  F03A         	movff	_Data_TS,print_value@value
  2741   000E12  C02A  F03B         	movff	_Data_TS+1,print_value@value+1
  2742   000E16  EC83  F00D         	call	_print_value	;wreg free
  2743   000E1A                     
  2744                           ;Digitizer16bitsV2.c: 370:                 print_value(Data_AUX0);
  2745   000E1A  C025  F03A         	movff	_Data_AUX0,print_value@value
  2746   000E1E  C026  F03B         	movff	_Data_AUX0+1,print_value@value+1
  2747   000E22  EC83  F00D         	call	_print_value	;wreg free
  2748   000E26                     
  2749                           ;Digitizer16bitsV2.c: 371:                 print_value(Data_AUX1);
  2750   000E26  C023  F03A         	movff	_Data_AUX1,print_value@value
  2751   000E2A  C024  F03B         	movff	_Data_AUX1+1,print_value@value+1
  2752   000E2E  EC83  F00D         	call	_print_value	;wreg free
  2753   000E32                     
  2754                           ;Digitizer16bitsV2.c: 372:                 print_value(Data_AUX2);
  2755   000E32  C021  F03A         	movff	_Data_AUX2,print_value@value
  2756   000E36  C022  F03B         	movff	_Data_AUX2+1,print_value@value+1
  2757   000E3A  EC83  F00D         	call	_print_value	;wreg free
  2758   000E3E                     
  2759                           ;Digitizer16bitsV2.c: 373:                 print_string("\n\r");
  2760   000E3E  0E8C               	movlw	low (STR_5+21)
  2761   000E40  6E3A               	movwf	print_string@str^0,c
  2762   000E42  0E15               	movlw	high (STR_5+21)
  2763   000E44  6E3B               	movwf	(print_string@str+1)^0,c
  2764   000E46  ECDC  F00C         	call	_print_string	;wreg free
  2765   000E4A                     
  2766                           ;Digitizer16bitsV2.c: 375:                 LATAbits.LA0 = 0;
  2767   000E4A  9089               	bcf	137,0,c	;volatile
  2768                           
  2769                           ;Digitizer16bitsV2.c: 377:                 break;
  2770   000E4C  EFA5  F00A         	goto	i2l199
  2771   000E50                     i2l3209:
  2772   000E50  FFFF               	dw	65535	; assembler added errata NOP
  2773                           
  2774                           ;Digitizer16bitsV2.c: 379:                 TransmitCMD_USART('X');
  2775   000E52  0E58               	movlw	88
  2776   000E54  EC50  F00D         	call	_TransmitCMD_USART
  2777   000E58                     
  2778                           ;Digitizer16bitsV2.c: 380:                 RCSTAbits.CREN = 1;
  2779   000E58  88AB               	bsf	171,4,c	;volatile
  2780                           
  2781                           ;Digitizer16bitsV2.c: 381:         }
  2782   000E5A  EFA5  F00A         	goto	i2l199
  2783   000E5E                     i2l3213:
  2784   000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2785   000E60  5053               	movf	Interrups@ID^0,w,c
  2786   000E62  6E47               	movwf	??_Interrups^0,c
  2787   000E64  6A48               	clrf	(??_Interrups+1)^0,c
  2788                           
  2789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2790                           ; Switch size 1, requested type "simple"
  2791                           ; Number of cases is 1, Range of values is 0 to 0
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte            4     3 (average)
  2795                           ;	Chosen strategy is simple_byte
  2796   000E66  5048               	movf	(??_Interrups+1)^0,w,c
  2797   000E68  0A00               	xorlw	0	; case 0
  2798   000E6A  B4D8               	btfsc	status,2,c
  2799   000E6C  EF3A  F007         	goto	i2l3773
  2800   000E70  EF28  F007         	goto	i2l3209
  2801   000E74                     i2l3773:
  2802   000E74  FFFF               	dw	65535	; assembler added errata NOP
  2803                           
  2804                           ; Switch size 1, requested type "simple"
  2805                           ; Number of cases is 10, Range of values is 48 to 57
  2806                           ; switch strategies available:
  2807                           ; Name         Instructions Cycles
  2808                           ; simple_byte           31    16 (average)
  2809                           ;	Chosen strategy is simple_byte
  2810   000E76  5047               	movf	??_Interrups^0,w,c
  2811   000E78  0A30               	xorlw	48	; case 48
  2812   000E7A  B4D8               	btfsc	status,2,c
  2813   000E7C  EFB1  F003         	goto	i2l2931
  2814   000E80  0A01               	xorlw	1	; case 49
  2815   000E82  B4D8               	btfsc	status,2,c
  2816   000E84  EFC3  F003         	goto	i2l2943
  2817   000E88  0A03               	xorlw	3	; case 50
  2818   000E8A  B4D8               	btfsc	status,2,c
  2819   000E8C  EFCE  F003         	goto	i2l2953
  2820   000E90  0A01               	xorlw	1	; case 51
  2821   000E92  B4D8               	btfsc	status,2,c
  2822   000E94  EFD9  F003         	goto	i2l2963
  2823   000E98  0A07               	xorlw	7	; case 52
  2824   000E9A  B4D8               	btfsc	status,2,c
  2825   000E9C  EFDF  F003         	goto	i2l2965
  2826   000EA0  0A01               	xorlw	1	; case 53
  2827   000EA2  B4D8               	btfsc	status,2,c
  2828   000EA4  EFA9  F003         	goto	i2l2927
  2829   000EA8  0A03               	xorlw	3	; case 54
  2830   000EAA  B4D8               	btfsc	status,2,c
  2831   000EAC  EFEC  F003         	goto	i2l2977
  2832   000EB0  0A01               	xorlw	1	; case 55
  2833   000EB2  B4D8               	btfsc	status,2,c
  2834   000EB4  EFF2  F003         	goto	i2l2979
  2835   000EB8  0A0F               	xorlw	15	; case 56
  2836   000EBA  B4D8               	btfsc	status,2,c
  2837   000EBC  EFF8  F003         	goto	i2l2981
  2838   000EC0  0A01               	xorlw	1	; case 57
  2839   000EC2  B4D8               	btfsc	status,2,c
  2840   000EC4  EF03  F004         	goto	i2l161
  2841   000EC8  EF28  F007         	goto	i2l3209
  2842   000ECC                     i2l149:
  2843   000ECC  FFFF               	dw	65535	; assembler added errata NOP
  2844   000ECE  AAF2               	btfss	242,5,c	;volatile
  2845   000ED0  EF6C  F007         	goto	i2u156_41
  2846   000ED4  EF6F  F007         	goto	i2u156_40
  2847   000ED8                     i2u156_41:
  2848   000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2849   000EDA  EFA5  F00A         	goto	i2l199
  2850   000EDE                     i2u156_40:
  2851   000EDE  FFFF               	dw	65535	; assembler added errata NOP
  2852   000EE0  A4F2               	btfss	242,2,c	;volatile
  2853   000EE2  EF75  F007         	goto	i2u157_41
  2854   000EE6  EF78  F007         	goto	i2u157_40
  2855   000EEA                     i2u157_41:
  2856   000EEA  FFFF               	dw	65535	; assembler added errata NOP
  2857   000EEC  EFA5  F00A         	goto	i2l199
  2858   000EF0                     i2u157_40:
  2859   000EF0  FFFF               	dw	65535	; assembler added errata NOP
  2860   000EF2                     
  2861                           ;Digitizer16bitsV2.c: 383:         LATAbits.LA0 = 1;
  2862   000EF2  8089               	bsf	137,0,c	;volatile
  2863                           
  2864                           ;Digitizer16bitsV2.c: 385:         INTCONbits.TMR0IF = 0;
  2865   000EF4  94F2               	bcf	242,2,c	;volatile
  2866   000EF6                     
  2867                           ;Digitizer16bitsV2.c: 386:         TMR0H = 0x10;
  2868   000EF6  0E10               	movlw	16
  2869   000EF8  6ED7               	movwf	215,c	;volatile
  2870                           
  2871                           ;Digitizer16bitsV2.c: 387:         TMR0L = 0x00;
  2872   000EFA  0E00               	movlw	0
  2873   000EFC  6ED6               	movwf	214,c	;volatile
  2874   000EFE                     
  2875                           ;Digitizer16bitsV2.c: 388:         ContaSample++;
  2876   000EFE  2A33               	incf	_ContaSample^0,f,c
  2877   000F00                     
  2878                           ;Digitizer16bitsV2.c: 392:         LATB = 0x2E;
  2879   000F00  0E2E               	movlw	46
  2880   000F02  6E8A               	movwf	138,c	;volatile
  2881   000F04                     
  2882                           ;Digitizer16bitsV2.c: 393:         LATBbits.LB7 = 1;
  2883   000F04  8E8A               	bsf	138,7,c	;volatile
  2884   000F06                     
  2885                           ;Digitizer16bitsV2.c: 394:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  2886   000F06  0E4D               	movlw	77
  2887   000F08  6E47               	movwf	??_Interrups^0,c
  2888   000F0A  0EA5               	movlw	165
  2889   000F0C                     i2u217_47:
  2890   000F0C  FFFF               	dw	65535	; errata NOP
  2891   000F0E  2EE8               	decfsz	wreg,f,c
  2892   000F10  D7FD               	bra	i2u217_47
  2893   000F12  2E47               	decfsz	??_Interrups^0,f,c
  2894   000F14  D7FB               	bra	i2u217_47
  2895   000F16  D000               	nop2	
  2896   000F18  F000               	nop	
  2897   000F1A                     
  2898                           ;Digitizer16bitsV2.c: 396:         SumData_X = 0;
  2899   000F1A  0E00               	movlw	0
  2900   000F1C  6E1D               	movwf	_SumData_X^0,c
  2901   000F1E  0E00               	movlw	0
  2902   000F20  6E1E               	movwf	(_SumData_X+1)^0,c
  2903   000F22  0E00               	movlw	0
  2904   000F24  6E1F               	movwf	(_SumData_X+2)^0,c
  2905   000F26  0E00               	movlw	0
  2906   000F28  6E20               	movwf	(_SumData_X+3)^0,c
  2907   000F2A                     
  2908                           ;Digitizer16bitsV2.c: 397:         Data_X = ReadDataADC();
  2909   000F2A  EC78  F00B         	call	_ReadDataADC	;wreg free
  2910   000F2E  C039  F031         	movff	?_ReadDataADC,_Data_X
  2911   000F32  C03A  F032         	movff	?_ReadDataADC+1,_Data_X+1
  2912   000F36                     
  2913                           ;Digitizer16bitsV2.c: 398:         for(conta = 0; conta<50; conta++){
  2914   000F36  0E00               	movlw	0
  2915   000F38  6E54               	movwf	Interrups@conta^0,c
  2916   000F3A                     i2l3239:
  2917   000F3A  FFFF               	dw	65535	; assembler added errata NOP
  2918                           
  2919                           ;Digitizer16bitsV2.c: 399:             Data_X = ReadDataADC();
  2920   000F3C  EC78  F00B         	call	_ReadDataADC	;wreg free
  2921   000F40  C039  F031         	movff	?_ReadDataADC,_Data_X
  2922   000F44  C03A  F032         	movff	?_ReadDataADC+1,_Data_X+1
  2923   000F48                     
  2924                           ;Digitizer16bitsV2.c: 400:             SumData_X = SumData_X + Data_X;
  2925   000F48  C031  F047         	movff	_Data_X,??_Interrups
  2926   000F4C  C032  F048         	movff	_Data_X+1,??_Interrups+1
  2927   000F50  0E00               	movlw	0
  2928   000F52  BE48               	btfsc	(??_Interrups+1)^0,7,c
  2929   000F54  0EFF               	movlw	255
  2930   000F56  6E49               	movwf	(??_Interrups+2)^0,c
  2931   000F58  6E4A               	movwf	(??_Interrups+3)^0,c
  2932   000F5A  501D               	movf	_SumData_X^0,w,c
  2933   000F5C  2447               	addwf	??_Interrups^0,w,c
  2934   000F5E  6E1D               	movwf	_SumData_X^0,c
  2935   000F60  501E               	movf	(_SumData_X+1)^0,w,c
  2936   000F62  2048               	addwfc	(??_Interrups+1)^0,w,c
  2937   000F64  6E1E               	movwf	(_SumData_X+1)^0,c
  2938   000F66  501F               	movf	(_SumData_X+2)^0,w,c
  2939   000F68  2049               	addwfc	(??_Interrups+2)^0,w,c
  2940   000F6A  6E1F               	movwf	(_SumData_X+2)^0,c
  2941   000F6C  5020               	movf	(_SumData_X+3)^0,w,c
  2942   000F6E  204A               	addwfc	(??_Interrups+3)^0,w,c
  2943   000F70  6E20               	movwf	(_SumData_X+3)^0,c
  2944   000F72                     
  2945                           ;Digitizer16bitsV2.c: 401:         }
  2946   000F72  2A54               	incf	Interrups@conta^0,f,c
  2947   000F74  0E31               	movlw	49
  2948   000F76  6454               	cpfsgt	Interrups@conta^0,c
  2949   000F78  EFC0  F007         	goto	i2u158_41
  2950   000F7C  EFC3  F007         	goto	i2u158_40
  2951   000F80                     i2u158_41:
  2952   000F80  FFFF               	dw	65535	; assembler added errata NOP
  2953   000F82  EF9D  F007         	goto	i2l3239
  2954   000F86                     i2u158_40:
  2955   000F86  FFFF               	dw	65535	; assembler added errata NOP
  2956   000F88                     
  2957                           ;Digitizer16bitsV2.c: 402:         LATBbits.LB7 = 0;
  2958   000F88  9E8A               	bcf	138,7,c	;volatile
  2959   000F8A                     
  2960                           ;Digitizer16bitsV2.c: 404:         LATB = 0x2A;
  2961   000F8A  0E2A               	movlw	42
  2962   000F8C  6E8A               	movwf	138,c	;volatile
  2963   000F8E                     
  2964                           ;Digitizer16bitsV2.c: 405:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  2965   000F8E  0E4D               	movlw	77
  2966   000F90  6E47               	movwf	??_Interrups^0,c
  2967   000F92  0EA5               	movlw	165
  2968   000F94                     i2u218_47:
  2969   000F94  FFFF               	dw	65535	; errata NOP
  2970   000F96  2EE8               	decfsz	wreg,f,c
  2971   000F98  D7FD               	bra	i2u218_47
  2972   000F9A  2E47               	decfsz	??_Interrups^0,f,c
  2973   000F9C  D7FB               	bra	i2u218_47
  2974   000F9E  D000               	nop2	
  2975   000FA0  F000               	nop	
  2976   000FA2                     
  2977                           ;Digitizer16bitsV2.c: 407:         SumData_Y = 0;
  2978   000FA2  0E00               	movlw	0
  2979   000FA4  6E19               	movwf	_SumData_Y^0,c
  2980   000FA6  0E00               	movlw	0
  2981   000FA8  6E1A               	movwf	(_SumData_Y+1)^0,c
  2982   000FAA  0E00               	movlw	0
  2983   000FAC  6E1B               	movwf	(_SumData_Y+2)^0,c
  2984   000FAE  0E00               	movlw	0
  2985   000FB0  6E1C               	movwf	(_SumData_Y+3)^0,c
  2986   000FB2                     
  2987                           ;Digitizer16bitsV2.c: 408:         Data_Y = ReadDataADC();
  2988   000FB2  EC78  F00B         	call	_ReadDataADC	;wreg free
  2989   000FB6  C039  F02F         	movff	?_ReadDataADC,_Data_Y
  2990   000FBA  C03A  F030         	movff	?_ReadDataADC+1,_Data_Y+1
  2991   000FBE                     
  2992                           ;Digitizer16bitsV2.c: 409:         for(conta = 0; conta<50; conta++){
  2993   000FBE  0E00               	movlw	0
  2994   000FC0  6E54               	movwf	Interrups@conta^0,c
  2995   000FC2                     i2l3261:
  2996   000FC2  FFFF               	dw	65535	; assembler added errata NOP
  2997                           
  2998                           ;Digitizer16bitsV2.c: 410:             Data_Y = ReadDataADC();
  2999   000FC4  EC78  F00B         	call	_ReadDataADC	;wreg free
  3000   000FC8  C039  F02F         	movff	?_ReadDataADC,_Data_Y
  3001   000FCC  C03A  F030         	movff	?_ReadDataADC+1,_Data_Y+1
  3002   000FD0                     
  3003                           ;Digitizer16bitsV2.c: 411:             SumData_Y = SumData_Y + Data_Y;
  3004   000FD0  C02F  F047         	movff	_Data_Y,??_Interrups
  3005   000FD4  C030  F048         	movff	_Data_Y+1,??_Interrups+1
  3006   000FD8  0E00               	movlw	0
  3007   000FDA  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3008   000FDC  0EFF               	movlw	255
  3009   000FDE  6E49               	movwf	(??_Interrups+2)^0,c
  3010   000FE0  6E4A               	movwf	(??_Interrups+3)^0,c
  3011   000FE2  5019               	movf	_SumData_Y^0,w,c
  3012   000FE4  2447               	addwf	??_Interrups^0,w,c
  3013   000FE6  6E19               	movwf	_SumData_Y^0,c
  3014   000FE8  501A               	movf	(_SumData_Y+1)^0,w,c
  3015   000FEA  2048               	addwfc	(??_Interrups+1)^0,w,c
  3016   000FEC  6E1A               	movwf	(_SumData_Y+1)^0,c
  3017   000FEE  501B               	movf	(_SumData_Y+2)^0,w,c
  3018   000FF0  2049               	addwfc	(??_Interrups+2)^0,w,c
  3019   000FF2  6E1B               	movwf	(_SumData_Y+2)^0,c
  3020   000FF4  501C               	movf	(_SumData_Y+3)^0,w,c
  3021   000FF6  204A               	addwfc	(??_Interrups+3)^0,w,c
  3022   000FF8  6E1C               	movwf	(_SumData_Y+3)^0,c
  3023   000FFA                     
  3024                           ;Digitizer16bitsV2.c: 412:         }
  3025   000FFA  2A54               	incf	Interrups@conta^0,f,c
  3026   000FFC  0E31               	movlw	49
  3027   000FFE  6454               	cpfsgt	Interrups@conta^0,c
  3028   001000  EF04  F008         	goto	i2u159_41
  3029   001004  EF07  F008         	goto	i2u159_40
  3030   001008                     i2u159_41:
  3031   001008  FFFF               	dw	65535	; assembler added errata NOP
  3032   00100A  EFE1  F007         	goto	i2l3261
  3033   00100E                     i2u159_40:
  3034   00100E  FFFF               	dw	65535	; assembler added errata NOP
  3035   001010                     
  3036                           ;Digitizer16bitsV2.c: 414:         LATB = 0x2C;
  3037   001010  0E2C               	movlw	44
  3038   001012  6E8A               	movwf	138,c	;volatile
  3039   001014                     
  3040                           ;Digitizer16bitsV2.c: 415:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  3041   001014  0E4D               	movlw	77
  3042   001016  6E47               	movwf	??_Interrups^0,c
  3043   001018  0EA5               	movlw	165
  3044   00101A                     i2u219_47:
  3045   00101A  FFFF               	dw	65535	; errata NOP
  3046   00101C  2EE8               	decfsz	wreg,f,c
  3047   00101E  D7FD               	bra	i2u219_47
  3048   001020  2E47               	decfsz	??_Interrups^0,f,c
  3049   001022  D7FB               	bra	i2u219_47
  3050   001024  D000               	nop2	
  3051   001026  F000               	nop	
  3052   001028                     
  3053                           ;Digitizer16bitsV2.c: 417:         SumData_Z = 0;
  3054   001028  0E00               	movlw	0
  3055   00102A  6E15               	movwf	_SumData_Z^0,c
  3056   00102C  0E00               	movlw	0
  3057   00102E  6E16               	movwf	(_SumData_Z+1)^0,c
  3058   001030  0E00               	movlw	0
  3059   001032  6E17               	movwf	(_SumData_Z+2)^0,c
  3060   001034  0E00               	movlw	0
  3061   001036  6E18               	movwf	(_SumData_Z+3)^0,c
  3062   001038                     
  3063                           ;Digitizer16bitsV2.c: 418:         Data_Z = ReadDataADC();
  3064   001038  EC78  F00B         	call	_ReadDataADC	;wreg free
  3065   00103C  C039  F02D         	movff	?_ReadDataADC,_Data_Z
  3066   001040  C03A  F02E         	movff	?_ReadDataADC+1,_Data_Z+1
  3067   001044                     
  3068                           ;Digitizer16bitsV2.c: 419:         for(conta = 0; conta<50; conta++){
  3069   001044  0E00               	movlw	0
  3070   001046  6E54               	movwf	Interrups@conta^0,c
  3071   001048                     i2l3283:
  3072   001048  FFFF               	dw	65535	; assembler added errata NOP
  3073                           
  3074                           ;Digitizer16bitsV2.c: 420:             Data_Z = ReadDataADC();
  3075   00104A  EC78  F00B         	call	_ReadDataADC	;wreg free
  3076   00104E  C039  F02D         	movff	?_ReadDataADC,_Data_Z
  3077   001052  C03A  F02E         	movff	?_ReadDataADC+1,_Data_Z+1
  3078   001056                     
  3079                           ;Digitizer16bitsV2.c: 421:             SumData_Z = SumData_Z + Data_Z;
  3080   001056  C02D  F047         	movff	_Data_Z,??_Interrups
  3081   00105A  C02E  F048         	movff	_Data_Z+1,??_Interrups+1
  3082   00105E  0E00               	movlw	0
  3083   001060  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3084   001062  0EFF               	movlw	255
  3085   001064  6E49               	movwf	(??_Interrups+2)^0,c
  3086   001066  6E4A               	movwf	(??_Interrups+3)^0,c
  3087   001068  5015               	movf	_SumData_Z^0,w,c
  3088   00106A  2447               	addwf	??_Interrups^0,w,c
  3089   00106C  6E15               	movwf	_SumData_Z^0,c
  3090   00106E  5016               	movf	(_SumData_Z+1)^0,w,c
  3091   001070  2048               	addwfc	(??_Interrups+1)^0,w,c
  3092   001072  6E16               	movwf	(_SumData_Z+1)^0,c
  3093   001074  5017               	movf	(_SumData_Z+2)^0,w,c
  3094   001076  2049               	addwfc	(??_Interrups+2)^0,w,c
  3095   001078  6E17               	movwf	(_SumData_Z+2)^0,c
  3096   00107A  5018               	movf	(_SumData_Z+3)^0,w,c
  3097   00107C  204A               	addwfc	(??_Interrups+3)^0,w,c
  3098   00107E  6E18               	movwf	(_SumData_Z+3)^0,c
  3099   001080                     
  3100                           ;Digitizer16bitsV2.c: 422:         }
  3101   001080  2A54               	incf	Interrups@conta^0,f,c
  3102   001082  0E31               	movlw	49
  3103   001084  6454               	cpfsgt	Interrups@conta^0,c
  3104   001086  EF47  F008         	goto	i2u160_41
  3105   00108A  EF4A  F008         	goto	i2u160_40
  3106   00108E                     i2u160_41:
  3107   00108E  FFFF               	dw	65535	; assembler added errata NOP
  3108   001090  EF24  F008         	goto	i2l3283
  3109   001094                     i2u160_40:
  3110   001094  FFFF               	dw	65535	; assembler added errata NOP
  3111   001096                     
  3112                           ;Digitizer16bitsV2.c: 424:         LATB = 0x28;
  3113   001096  0E28               	movlw	40
  3114   001098  6E8A               	movwf	138,c	;volatile
  3115   00109A                     
  3116                           ;Digitizer16bitsV2.c: 425:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  3117   00109A  0E4D               	movlw	77
  3118   00109C  6E47               	movwf	??_Interrups^0,c
  3119   00109E  0EA5               	movlw	165
  3120   0010A0                     i2u220_47:
  3121   0010A0  FFFF               	dw	65535	; errata NOP
  3122   0010A2  2EE8               	decfsz	wreg,f,c
  3123   0010A4  D7FD               	bra	i2u220_47
  3124   0010A6  2E47               	decfsz	??_Interrups^0,f,c
  3125   0010A8  D7FB               	bra	i2u220_47
  3126   0010AA  D000               	nop2	
  3127   0010AC  F000               	nop	
  3128   0010AE                     
  3129                           ;Digitizer16bitsV2.c: 427:         SumData_TC = 0;
  3130   0010AE  0E00               	movlw	0
  3131   0010B0  6E11               	movwf	_SumData_TC^0,c
  3132   0010B2  0E00               	movlw	0
  3133   0010B4  6E12               	movwf	(_SumData_TC+1)^0,c
  3134   0010B6  0E00               	movlw	0
  3135   0010B8  6E13               	movwf	(_SumData_TC+2)^0,c
  3136   0010BA  0E00               	movlw	0
  3137   0010BC  6E14               	movwf	(_SumData_TC+3)^0,c
  3138   0010BE                     
  3139                           ;Digitizer16bitsV2.c: 428:         Data_TC = ReadDataADC();
  3140   0010BE  EC78  F00B         	call	_ReadDataADC	;wreg free
  3141   0010C2  C039  F02B         	movff	?_ReadDataADC,_Data_TC
  3142   0010C6  C03A  F02C         	movff	?_ReadDataADC+1,_Data_TC+1
  3143   0010CA                     
  3144                           ;Digitizer16bitsV2.c: 429:         for(conta = 0; conta<50; conta++){
  3145   0010CA  0E00               	movlw	0
  3146   0010CC  6E54               	movwf	Interrups@conta^0,c
  3147   0010CE                     i2l3305:
  3148   0010CE  FFFF               	dw	65535	; assembler added errata NOP
  3149                           
  3150                           ;Digitizer16bitsV2.c: 430:             Data_TC = ReadDataADC();
  3151   0010D0  EC78  F00B         	call	_ReadDataADC	;wreg free
  3152   0010D4  C039  F02B         	movff	?_ReadDataADC,_Data_TC
  3153   0010D8  C03A  F02C         	movff	?_ReadDataADC+1,_Data_TC+1
  3154   0010DC                     
  3155                           ;Digitizer16bitsV2.c: 431:             SumData_TC = SumData_TC + Data_TC;
  3156   0010DC  C02B  F047         	movff	_Data_TC,??_Interrups
  3157   0010E0  C02C  F048         	movff	_Data_TC+1,??_Interrups+1
  3158   0010E4  0E00               	movlw	0
  3159   0010E6  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3160   0010E8  0EFF               	movlw	255
  3161   0010EA  6E49               	movwf	(??_Interrups+2)^0,c
  3162   0010EC  6E4A               	movwf	(??_Interrups+3)^0,c
  3163   0010EE  5011               	movf	_SumData_TC^0,w,c
  3164   0010F0  2447               	addwf	??_Interrups^0,w,c
  3165   0010F2  6E11               	movwf	_SumData_TC^0,c
  3166   0010F4  5012               	movf	(_SumData_TC+1)^0,w,c
  3167   0010F6  2048               	addwfc	(??_Interrups+1)^0,w,c
  3168   0010F8  6E12               	movwf	(_SumData_TC+1)^0,c
  3169   0010FA  5013               	movf	(_SumData_TC+2)^0,w,c
  3170   0010FC  2049               	addwfc	(??_Interrups+2)^0,w,c
  3171   0010FE  6E13               	movwf	(_SumData_TC+2)^0,c
  3172   001100  5014               	movf	(_SumData_TC+3)^0,w,c
  3173   001102  204A               	addwfc	(??_Interrups+3)^0,w,c
  3174   001104  6E14               	movwf	(_SumData_TC+3)^0,c
  3175   001106                     
  3176                           ;Digitizer16bitsV2.c: 432:         }
  3177   001106  2A54               	incf	Interrups@conta^0,f,c
  3178   001108  0E31               	movlw	49
  3179   00110A  6454               	cpfsgt	Interrups@conta^0,c
  3180   00110C  EF8A  F008         	goto	i2u161_41
  3181   001110  EF8D  F008         	goto	i2u161_40
  3182   001114                     i2u161_41:
  3183   001114  FFFF               	dw	65535	; assembler added errata NOP
  3184   001116  EF67  F008         	goto	i2l3305
  3185   00111A                     i2u161_40:
  3186   00111A  FFFF               	dw	65535	; assembler added errata NOP
  3187   00111C                     
  3188                           ;Digitizer16bitsV2.c: 434:         LATB = 0x20;
  3189   00111C  0E20               	movlw	32
  3190   00111E  6E8A               	movwf	138,c	;volatile
  3191   001120                     
  3192                           ;Digitizer16bitsV2.c: 435:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  3193   001120  0E4D               	movlw	77
  3194   001122  6E47               	movwf	??_Interrups^0,c
  3195   001124  0EA5               	movlw	165
  3196   001126                     i2u221_47:
  3197   001126  FFFF               	dw	65535	; errata NOP
  3198   001128  2EE8               	decfsz	wreg,f,c
  3199   00112A  D7FD               	bra	i2u221_47
  3200   00112C  2E47               	decfsz	??_Interrups^0,f,c
  3201   00112E  D7FB               	bra	i2u221_47
  3202   001130  D000               	nop2	
  3203   001132  F000               	nop	
  3204   001134                     
  3205                           ;Digitizer16bitsV2.c: 437:         SumData_TS = 0;
  3206   001134  0E00               	movlw	0
  3207   001136  6E0D               	movwf	_SumData_TS^0,c
  3208   001138  0E00               	movlw	0
  3209   00113A  6E0E               	movwf	(_SumData_TS+1)^0,c
  3210   00113C  0E00               	movlw	0
  3211   00113E  6E0F               	movwf	(_SumData_TS+2)^0,c
  3212   001140  0E00               	movlw	0
  3213   001142  6E10               	movwf	(_SumData_TS+3)^0,c
  3214   001144                     
  3215                           ;Digitizer16bitsV2.c: 438:         Data_TS = ReadDataADC();
  3216   001144  EC78  F00B         	call	_ReadDataADC	;wreg free
  3217   001148  C039  F029         	movff	?_ReadDataADC,_Data_TS
  3218   00114C  C03A  F02A         	movff	?_ReadDataADC+1,_Data_TS+1
  3219   001150                     
  3220                           ;Digitizer16bitsV2.c: 439:         for(conta = 0; conta<50; conta++){
  3221   001150  0E00               	movlw	0
  3222   001152  6E54               	movwf	Interrups@conta^0,c
  3223   001154                     i2l3327:
  3224   001154  FFFF               	dw	65535	; assembler added errata NOP
  3225                           
  3226                           ;Digitizer16bitsV2.c: 440:             Data_TS = ReadDataADC();
  3227   001156  EC78  F00B         	call	_ReadDataADC	;wreg free
  3228   00115A  C039  F029         	movff	?_ReadDataADC,_Data_TS
  3229   00115E  C03A  F02A         	movff	?_ReadDataADC+1,_Data_TS+1
  3230   001162                     
  3231                           ;Digitizer16bitsV2.c: 441:             SumData_TS = SumData_TS + Data_TS;
  3232   001162  C029  F047         	movff	_Data_TS,??_Interrups
  3233   001166  C02A  F048         	movff	_Data_TS+1,??_Interrups+1
  3234   00116A  0E00               	movlw	0
  3235   00116C  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3236   00116E  0EFF               	movlw	255
  3237   001170  6E49               	movwf	(??_Interrups+2)^0,c
  3238   001172  6E4A               	movwf	(??_Interrups+3)^0,c
  3239   001174  500D               	movf	_SumData_TS^0,w,c
  3240   001176  2447               	addwf	??_Interrups^0,w,c
  3241   001178  6E0D               	movwf	_SumData_TS^0,c
  3242   00117A  500E               	movf	(_SumData_TS+1)^0,w,c
  3243   00117C  2048               	addwfc	(??_Interrups+1)^0,w,c
  3244   00117E  6E0E               	movwf	(_SumData_TS+1)^0,c
  3245   001180  500F               	movf	(_SumData_TS+2)^0,w,c
  3246   001182  2049               	addwfc	(??_Interrups+2)^0,w,c
  3247   001184  6E0F               	movwf	(_SumData_TS+2)^0,c
  3248   001186  5010               	movf	(_SumData_TS+3)^0,w,c
  3249   001188  204A               	addwfc	(??_Interrups+3)^0,w,c
  3250   00118A  6E10               	movwf	(_SumData_TS+3)^0,c
  3251   00118C                     
  3252                           ;Digitizer16bitsV2.c: 442:         }
  3253   00118C  2A54               	incf	Interrups@conta^0,f,c
  3254   00118E  0E31               	movlw	49
  3255   001190  6454               	cpfsgt	Interrups@conta^0,c
  3256   001192  EFCD  F008         	goto	i2u162_41
  3257   001196  EFD0  F008         	goto	i2u162_40
  3258   00119A                     i2u162_41:
  3259   00119A  FFFF               	dw	65535	; assembler added errata NOP
  3260   00119C  EFAA  F008         	goto	i2l3327
  3261   0011A0                     i2u162_40:
  3262   0011A0  FFFF               	dw	65535	; assembler added errata NOP
  3263   0011A2                     
  3264                           ;Digitizer16bitsV2.c: 444:         LATB = 0x24;
  3265   0011A2  0E24               	movlw	36
  3266   0011A4  6E8A               	movwf	138,c	;volatile
  3267   0011A6                     
  3268                           ;Digitizer16bitsV2.c: 445:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  3269   0011A6  0E4D               	movlw	77
  3270   0011A8  6E47               	movwf	??_Interrups^0,c
  3271   0011AA  0EA5               	movlw	165
  3272   0011AC                     i2u222_47:
  3273   0011AC  FFFF               	dw	65535	; errata NOP
  3274   0011AE  2EE8               	decfsz	wreg,f,c
  3275   0011B0  D7FD               	bra	i2u222_47
  3276   0011B2  2E47               	decfsz	??_Interrups^0,f,c
  3277   0011B4  D7FB               	bra	i2u222_47
  3278   0011B6  D000               	nop2	
  3279   0011B8  F000               	nop	
  3280   0011BA                     
  3281                           ;Digitizer16bitsV2.c: 447:         SumData_AUX0 = 0;
  3282   0011BA  0E00               	movlw	0
  3283   0011BC  6E09               	movwf	_SumData_AUX0^0,c
  3284   0011BE  0E00               	movlw	0
  3285   0011C0  6E0A               	movwf	(_SumData_AUX0+1)^0,c
  3286   0011C2  0E00               	movlw	0
  3287   0011C4  6E0B               	movwf	(_SumData_AUX0+2)^0,c
  3288   0011C6  0E00               	movlw	0
  3289   0011C8  6E0C               	movwf	(_SumData_AUX0+3)^0,c
  3290   0011CA                     
  3291                           ;Digitizer16bitsV2.c: 448:         Data_AUX0 = ReadDataADC();
  3292   0011CA  EC78  F00B         	call	_ReadDataADC	;wreg free
  3293   0011CE  C039  F025         	movff	?_ReadDataADC,_Data_AUX0
  3294   0011D2  C03A  F026         	movff	?_ReadDataADC+1,_Data_AUX0+1
  3295   0011D6                     
  3296                           ;Digitizer16bitsV2.c: 449:         for(conta = 0; conta<50; conta++){
  3297   0011D6  0E00               	movlw	0
  3298   0011D8  6E54               	movwf	Interrups@conta^0,c
  3299   0011DA                     i2l3349:
  3300   0011DA  FFFF               	dw	65535	; assembler added errata NOP
  3301                           
  3302                           ;Digitizer16bitsV2.c: 450:             Data_AUX0 = ReadDataADC();
  3303   0011DC  EC78  F00B         	call	_ReadDataADC	;wreg free
  3304   0011E0  C039  F025         	movff	?_ReadDataADC,_Data_AUX0
  3305   0011E4  C03A  F026         	movff	?_ReadDataADC+1,_Data_AUX0+1
  3306   0011E8                     
  3307                           ;Digitizer16bitsV2.c: 451:             SumData_AUX0 = SumData_AUX0 + Data_AUX0;
  3308   0011E8  C025  F047         	movff	_Data_AUX0,??_Interrups
  3309   0011EC  C026  F048         	movff	_Data_AUX0+1,??_Interrups+1
  3310   0011F0  0E00               	movlw	0
  3311   0011F2  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3312   0011F4  0EFF               	movlw	255
  3313   0011F6  6E49               	movwf	(??_Interrups+2)^0,c
  3314   0011F8  6E4A               	movwf	(??_Interrups+3)^0,c
  3315   0011FA  5009               	movf	_SumData_AUX0^0,w,c
  3316   0011FC  2447               	addwf	??_Interrups^0,w,c
  3317   0011FE  6E09               	movwf	_SumData_AUX0^0,c
  3318   001200  500A               	movf	(_SumData_AUX0+1)^0,w,c
  3319   001202  2048               	addwfc	(??_Interrups+1)^0,w,c
  3320   001204  6E0A               	movwf	(_SumData_AUX0+1)^0,c
  3321   001206  500B               	movf	(_SumData_AUX0+2)^0,w,c
  3322   001208  2049               	addwfc	(??_Interrups+2)^0,w,c
  3323   00120A  6E0B               	movwf	(_SumData_AUX0+2)^0,c
  3324   00120C  500C               	movf	(_SumData_AUX0+3)^0,w,c
  3325   00120E  204A               	addwfc	(??_Interrups+3)^0,w,c
  3326   001210  6E0C               	movwf	(_SumData_AUX0+3)^0,c
  3327   001212                     
  3328                           ;Digitizer16bitsV2.c: 452:         }
  3329   001212  2A54               	incf	Interrups@conta^0,f,c
  3330   001214  0E31               	movlw	49
  3331   001216  6454               	cpfsgt	Interrups@conta^0,c
  3332   001218  EF10  F009         	goto	i2u163_41
  3333   00121C  EF13  F009         	goto	i2u163_40
  3334   001220                     i2u163_41:
  3335   001220  FFFF               	dw	65535	; assembler added errata NOP
  3336   001222  EFED  F008         	goto	i2l3349
  3337   001226                     i2u163_40:
  3338   001226  FFFF               	dw	65535	; assembler added errata NOP
  3339   001228                     
  3340                           ;Digitizer16bitsV2.c: 454:         LATB = 0x22;
  3341   001228  0E22               	movlw	34
  3342   00122A  6E8A               	movwf	138,c	;volatile
  3343   00122C                     
  3344                           ;Digitizer16bitsV2.c: 455:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  3345   00122C  0E4D               	movlw	77
  3346   00122E  6E47               	movwf	??_Interrups^0,c
  3347   001230  0EA5               	movlw	165
  3348   001232                     i2u223_47:
  3349   001232  FFFF               	dw	65535	; errata NOP
  3350   001234  2EE8               	decfsz	wreg,f,c
  3351   001236  D7FD               	bra	i2u223_47
  3352   001238  2E47               	decfsz	??_Interrups^0,f,c
  3353   00123A  D7FB               	bra	i2u223_47
  3354   00123C  D000               	nop2	
  3355   00123E  F000               	nop	
  3356   001240                     
  3357                           ;Digitizer16bitsV2.c: 457:         SumData_AUX1 = 0;
  3358   001240  0E00               	movlw	0
  3359   001242  6E05               	movwf	_SumData_AUX1^0,c
  3360   001244  0E00               	movlw	0
  3361   001246  6E06               	movwf	(_SumData_AUX1+1)^0,c
  3362   001248  0E00               	movlw	0
  3363   00124A  6E07               	movwf	(_SumData_AUX1+2)^0,c
  3364   00124C  0E00               	movlw	0
  3365   00124E  6E08               	movwf	(_SumData_AUX1+3)^0,c
  3366   001250                     
  3367                           ;Digitizer16bitsV2.c: 458:         Data_AUX1 = ReadDataADC();
  3368   001250  EC78  F00B         	call	_ReadDataADC	;wreg free
  3369   001254  C039  F023         	movff	?_ReadDataADC,_Data_AUX1
  3370   001258  C03A  F024         	movff	?_ReadDataADC+1,_Data_AUX1+1
  3371   00125C                     
  3372                           ;Digitizer16bitsV2.c: 459:         for(conta = 0; conta<50; conta++){
  3373   00125C  0E00               	movlw	0
  3374   00125E  6E54               	movwf	Interrups@conta^0,c
  3375   001260                     i2l3371:
  3376   001260  FFFF               	dw	65535	; assembler added errata NOP
  3377                           
  3378                           ;Digitizer16bitsV2.c: 460:             Data_AUX1 = ReadDataADC();
  3379   001262  EC78  F00B         	call	_ReadDataADC	;wreg free
  3380   001266  C039  F023         	movff	?_ReadDataADC,_Data_AUX1
  3381   00126A  C03A  F024         	movff	?_ReadDataADC+1,_Data_AUX1+1
  3382   00126E                     
  3383                           ;Digitizer16bitsV2.c: 461:             SumData_AUX1 = SumData_AUX1 + Data_AUX1;
  3384   00126E  C023  F047         	movff	_Data_AUX1,??_Interrups
  3385   001272  C024  F048         	movff	_Data_AUX1+1,??_Interrups+1
  3386   001276  0E00               	movlw	0
  3387   001278  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3388   00127A  0EFF               	movlw	255
  3389   00127C  6E49               	movwf	(??_Interrups+2)^0,c
  3390   00127E  6E4A               	movwf	(??_Interrups+3)^0,c
  3391   001280  5005               	movf	_SumData_AUX1^0,w,c
  3392   001282  2447               	addwf	??_Interrups^0,w,c
  3393   001284  6E05               	movwf	_SumData_AUX1^0,c
  3394   001286  5006               	movf	(_SumData_AUX1+1)^0,w,c
  3395   001288  2048               	addwfc	(??_Interrups+1)^0,w,c
  3396   00128A  6E06               	movwf	(_SumData_AUX1+1)^0,c
  3397   00128C  5007               	movf	(_SumData_AUX1+2)^0,w,c
  3398   00128E  2049               	addwfc	(??_Interrups+2)^0,w,c
  3399   001290  6E07               	movwf	(_SumData_AUX1+2)^0,c
  3400   001292  5008               	movf	(_SumData_AUX1+3)^0,w,c
  3401   001294  204A               	addwfc	(??_Interrups+3)^0,w,c
  3402   001296  6E08               	movwf	(_SumData_AUX1+3)^0,c
  3403   001298                     
  3404                           ;Digitizer16bitsV2.c: 462:         }
  3405   001298  2A54               	incf	Interrups@conta^0,f,c
  3406   00129A  0E31               	movlw	49
  3407   00129C  6454               	cpfsgt	Interrups@conta^0,c
  3408   00129E  EF53  F009         	goto	i2u164_41
  3409   0012A2  EF56  F009         	goto	i2u164_40
  3410   0012A6                     i2u164_41:
  3411   0012A6  FFFF               	dw	65535	; assembler added errata NOP
  3412   0012A8  EF30  F009         	goto	i2l3371
  3413   0012AC                     i2u164_40:
  3414   0012AC  FFFF               	dw	65535	; assembler added errata NOP
  3415   0012AE                     
  3416                           ;Digitizer16bitsV2.c: 464:         LATB = 0x26;
  3417   0012AE  0E26               	movlw	38
  3418   0012B0  6E8A               	movwf	138,c	;volatile
  3419   0012B2                     
  3420                           ;Digitizer16bitsV2.c: 465:         LATBbits.LB7 = 1;
  3421   0012B2  8E8A               	bsf	138,7,c	;volatile
  3422   0012B4                     
  3423                           ;Digitizer16bitsV2.c: 466:         _delay((unsigned long)((8)*(39321600UL/4000.0)));
  3424   0012B4  0E4D               	movlw	77
  3425   0012B6  6E47               	movwf	??_Interrups^0,c
  3426   0012B8  0EA5               	movlw	165
  3427   0012BA                     i2u224_47:
  3428   0012BA  FFFF               	dw	65535	; errata NOP
  3429   0012BC  2EE8               	decfsz	wreg,f,c
  3430   0012BE  D7FD               	bra	i2u224_47
  3431   0012C0  2E47               	decfsz	??_Interrups^0,f,c
  3432   0012C2  D7FB               	bra	i2u224_47
  3433   0012C4  D000               	nop2	
  3434   0012C6  F000               	nop	
  3435   0012C8                     
  3436                           ;Digitizer16bitsV2.c: 468:         SumData_AUX2 = 0;
  3437   0012C8  0E00               	movlw	0
  3438   0012CA  6E01               	movwf	_SumData_AUX2^0,c
  3439   0012CC  0E00               	movlw	0
  3440   0012CE  6E02               	movwf	(_SumData_AUX2+1)^0,c
  3441   0012D0  0E00               	movlw	0
  3442   0012D2  6E03               	movwf	(_SumData_AUX2+2)^0,c
  3443   0012D4  0E00               	movlw	0
  3444   0012D6  6E04               	movwf	(_SumData_AUX2+3)^0,c
  3445   0012D8                     
  3446                           ;Digitizer16bitsV2.c: 469:         Data_AUX2 = ReadDataADC();
  3447   0012D8  EC78  F00B         	call	_ReadDataADC	;wreg free
  3448   0012DC  C039  F021         	movff	?_ReadDataADC,_Data_AUX2
  3449   0012E0  C03A  F022         	movff	?_ReadDataADC+1,_Data_AUX2+1
  3450   0012E4                     
  3451                           ;Digitizer16bitsV2.c: 470:         for(conta = 0; conta<50; conta++){
  3452   0012E4  0E00               	movlw	0
  3453   0012E6  6E54               	movwf	Interrups@conta^0,c
  3454   0012E8                     i2l3395:
  3455   0012E8  FFFF               	dw	65535	; assembler added errata NOP
  3456                           
  3457                           ;Digitizer16bitsV2.c: 471:             Data_AUX2 = ReadDataADC();
  3458   0012EA  EC78  F00B         	call	_ReadDataADC	;wreg free
  3459   0012EE  C039  F021         	movff	?_ReadDataADC,_Data_AUX2
  3460   0012F2  C03A  F022         	movff	?_ReadDataADC+1,_Data_AUX2+1
  3461   0012F6                     
  3462                           ;Digitizer16bitsV2.c: 472:             SumData_AUX2 = SumData_AUX2 + Data_AUX2;
  3463   0012F6  C021  F047         	movff	_Data_AUX2,??_Interrups
  3464   0012FA  C022  F048         	movff	_Data_AUX2+1,??_Interrups+1
  3465   0012FE  0E00               	movlw	0
  3466   001300  BE48               	btfsc	(??_Interrups+1)^0,7,c
  3467   001302  0EFF               	movlw	255
  3468   001304  6E49               	movwf	(??_Interrups+2)^0,c
  3469   001306  6E4A               	movwf	(??_Interrups+3)^0,c
  3470   001308  5001               	movf	_SumData_AUX2^0,w,c
  3471   00130A  2447               	addwf	??_Interrups^0,w,c
  3472   00130C  6E01               	movwf	_SumData_AUX2^0,c
  3473   00130E  5002               	movf	(_SumData_AUX2+1)^0,w,c
  3474   001310  2048               	addwfc	(??_Interrups+1)^0,w,c
  3475   001312  6E02               	movwf	(_SumData_AUX2+1)^0,c
  3476   001314  5003               	movf	(_SumData_AUX2+2)^0,w,c
  3477   001316  2049               	addwfc	(??_Interrups+2)^0,w,c
  3478   001318  6E03               	movwf	(_SumData_AUX2+2)^0,c
  3479   00131A  5004               	movf	(_SumData_AUX2+3)^0,w,c
  3480   00131C  204A               	addwfc	(??_Interrups+3)^0,w,c
  3481   00131E  6E04               	movwf	(_SumData_AUX2+3)^0,c
  3482   001320                     
  3483                           ;Digitizer16bitsV2.c: 473:         }
  3484   001320  2A54               	incf	Interrups@conta^0,f,c
  3485   001322  0E31               	movlw	49
  3486   001324  6454               	cpfsgt	Interrups@conta^0,c
  3487   001326  EF97  F009         	goto	i2u165_41
  3488   00132A  EF9A  F009         	goto	i2u165_40
  3489   00132E                     i2u165_41:
  3490   00132E  FFFF               	dw	65535	; assembler added errata NOP
  3491   001330  EF74  F009         	goto	i2l3395
  3492   001334                     i2u165_40:
  3493   001334  FFFF               	dw	65535	; assembler added errata NOP
  3494   001336                     
  3495                           ;Digitizer16bitsV2.c: 474:         LATBbits.LB7 = 0;
  3496   001336  9E8A               	bcf	138,7,c	;volatile
  3497   001338                     
  3498                           ;Digitizer16bitsV2.c: 477:         Data_X = (signed short) (SumData_X/50);
  3499   001338  C01D  F039         	movff	_SumData_X,___aldiv@dividend
  3500   00133C  C01E  F03A         	movff	_SumData_X+1,___aldiv@dividend+1
  3501   001340  C01F  F03B         	movff	_SumData_X+2,___aldiv@dividend+2
  3502   001344  C020  F03C         	movff	_SumData_X+3,___aldiv@dividend+3
  3503   001348  0E32               	movlw	50
  3504   00134A  6E3D               	movwf	___aldiv@divisor^0,c
  3505   00134C  0E00               	movlw	0
  3506   00134E  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3507   001350  0E00               	movlw	0
  3508   001352  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3509   001354  0E00               	movlw	0
  3510   001356  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3511   001358  ECDC  F00A         	call	___aldiv	;wreg free
  3512   00135C  C039  F031         	movff	?___aldiv,_Data_X
  3513   001360  C03A  F032         	movff	?___aldiv+1,_Data_X+1
  3514                           
  3515                           ;Digitizer16bitsV2.c: 478:         Data_Y = (signed short) (SumData_Y/50);
  3516   001364  C019  F039         	movff	_SumData_Y,___aldiv@dividend
  3517   001368  C01A  F03A         	movff	_SumData_Y+1,___aldiv@dividend+1
  3518   00136C  C01B  F03B         	movff	_SumData_Y+2,___aldiv@dividend+2
  3519   001370  C01C  F03C         	movff	_SumData_Y+3,___aldiv@dividend+3
  3520   001374  0E32               	movlw	50
  3521   001376  6E3D               	movwf	___aldiv@divisor^0,c
  3522   001378  0E00               	movlw	0
  3523   00137A  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3524   00137C  0E00               	movlw	0
  3525   00137E  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3526   001380  0E00               	movlw	0
  3527   001382  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3528   001384  ECDC  F00A         	call	___aldiv	;wreg free
  3529   001388  C039  F02F         	movff	?___aldiv,_Data_Y
  3530   00138C  C03A  F030         	movff	?___aldiv+1,_Data_Y+1
  3531                           
  3532                           ;Digitizer16bitsV2.c: 479:         Data_Z = (signed short) (SumData_Z/50);
  3533   001390  C015  F039         	movff	_SumData_Z,___aldiv@dividend
  3534   001394  C016  F03A         	movff	_SumData_Z+1,___aldiv@dividend+1
  3535   001398  C017  F03B         	movff	_SumData_Z+2,___aldiv@dividend+2
  3536   00139C  C018  F03C         	movff	_SumData_Z+3,___aldiv@dividend+3
  3537   0013A0  0E32               	movlw	50
  3538   0013A2  6E3D               	movwf	___aldiv@divisor^0,c
  3539   0013A4  0E00               	movlw	0
  3540   0013A6  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3541   0013A8  0E00               	movlw	0
  3542   0013AA  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3543   0013AC  0E00               	movlw	0
  3544   0013AE  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3545   0013B0  ECDC  F00A         	call	___aldiv	;wreg free
  3546   0013B4  C039  F02D         	movff	?___aldiv,_Data_Z
  3547   0013B8  C03A  F02E         	movff	?___aldiv+1,_Data_Z+1
  3548                           
  3549                           ;Digitizer16bitsV2.c: 480:         Data_TC = (signed short) (SumData_TC/50);
  3550   0013BC  C011  F039         	movff	_SumData_TC,___aldiv@dividend
  3551   0013C0  C012  F03A         	movff	_SumData_TC+1,___aldiv@dividend+1
  3552   0013C4  C013  F03B         	movff	_SumData_TC+2,___aldiv@dividend+2
  3553   0013C8  C014  F03C         	movff	_SumData_TC+3,___aldiv@dividend+3
  3554   0013CC  0E32               	movlw	50
  3555   0013CE  6E3D               	movwf	___aldiv@divisor^0,c
  3556   0013D0  0E00               	movlw	0
  3557   0013D2  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3558   0013D4  0E00               	movlw	0
  3559   0013D6  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3560   0013D8  0E00               	movlw	0
  3561   0013DA  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3562   0013DC  ECDC  F00A         	call	___aldiv	;wreg free
  3563   0013E0  C039  F02B         	movff	?___aldiv,_Data_TC
  3564   0013E4  C03A  F02C         	movff	?___aldiv+1,_Data_TC+1
  3565                           
  3566                           ;Digitizer16bitsV2.c: 481:         Data_TS = (signed short) (SumData_TS/50);
  3567   0013E8  C00D  F039         	movff	_SumData_TS,___aldiv@dividend
  3568   0013EC  C00E  F03A         	movff	_SumData_TS+1,___aldiv@dividend+1
  3569   0013F0  C00F  F03B         	movff	_SumData_TS+2,___aldiv@dividend+2
  3570   0013F4  C010  F03C         	movff	_SumData_TS+3,___aldiv@dividend+3
  3571   0013F8  0E32               	movlw	50
  3572   0013FA  6E3D               	movwf	___aldiv@divisor^0,c
  3573   0013FC  0E00               	movlw	0
  3574   0013FE  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3575   001400  0E00               	movlw	0
  3576   001402  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3577   001404  0E00               	movlw	0
  3578   001406  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3579   001408  ECDC  F00A         	call	___aldiv	;wreg free
  3580   00140C  C039  F029         	movff	?___aldiv,_Data_TS
  3581   001410  C03A  F02A         	movff	?___aldiv+1,_Data_TS+1
  3582                           
  3583                           ;Digitizer16bitsV2.c: 482:         Data_AUX0 = (signed short) (SumData_AUX0/50);
  3584   001414  C009  F039         	movff	_SumData_AUX0,___aldiv@dividend
  3585   001418  C00A  F03A         	movff	_SumData_AUX0+1,___aldiv@dividend+1
  3586   00141C  C00B  F03B         	movff	_SumData_AUX0+2,___aldiv@dividend+2
  3587   001420  C00C  F03C         	movff	_SumData_AUX0+3,___aldiv@dividend+3
  3588   001424  0E32               	movlw	50
  3589   001426  6E3D               	movwf	___aldiv@divisor^0,c
  3590   001428  0E00               	movlw	0
  3591   00142A  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3592   00142C  0E00               	movlw	0
  3593   00142E  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3594   001430  0E00               	movlw	0
  3595   001432  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3596   001434  ECDC  F00A         	call	___aldiv	;wreg free
  3597   001438  C039  F025         	movff	?___aldiv,_Data_AUX0
  3598   00143C  C03A  F026         	movff	?___aldiv+1,_Data_AUX0+1
  3599                           
  3600                           ;Digitizer16bitsV2.c: 483:         Data_AUX1 = (signed short) (SumData_AUX1/50);
  3601   001440  C005  F039         	movff	_SumData_AUX1,___aldiv@dividend
  3602   001444  C006  F03A         	movff	_SumData_AUX1+1,___aldiv@dividend+1
  3603   001448  C007  F03B         	movff	_SumData_AUX1+2,___aldiv@dividend+2
  3604   00144C  C008  F03C         	movff	_SumData_AUX1+3,___aldiv@dividend+3
  3605   001450  0E32               	movlw	50
  3606   001452  6E3D               	movwf	___aldiv@divisor^0,c
  3607   001454  0E00               	movlw	0
  3608   001456  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3609   001458  0E00               	movlw	0
  3610   00145A  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3611   00145C  0E00               	movlw	0
  3612   00145E  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3613   001460  ECDC  F00A         	call	___aldiv	;wreg free
  3614   001464  C039  F023         	movff	?___aldiv,_Data_AUX1
  3615   001468  C03A  F024         	movff	?___aldiv+1,_Data_AUX1+1
  3616                           
  3617                           ;Digitizer16bitsV2.c: 484:         Data_AUX2 = (signed short) (SumData_AUX2/50);
  3618   00146C  C001  F039         	movff	_SumData_AUX2,___aldiv@dividend
  3619   001470  C002  F03A         	movff	_SumData_AUX2+1,___aldiv@dividend+1
  3620   001474  C003  F03B         	movff	_SumData_AUX2+2,___aldiv@dividend+2
  3621   001478  C004  F03C         	movff	_SumData_AUX2+3,___aldiv@dividend+3
  3622   00147C  0E32               	movlw	50
  3623   00147E  6E3D               	movwf	___aldiv@divisor^0,c
  3624   001480  0E00               	movlw	0
  3625   001482  6E3E               	movwf	(___aldiv@divisor+1)^0,c
  3626   001484  0E00               	movlw	0
  3627   001486  6E3F               	movwf	(___aldiv@divisor+2)^0,c
  3628   001488  0E00               	movlw	0
  3629   00148A  6E40               	movwf	(___aldiv@divisor+3)^0,c
  3630   00148C  ECDC  F00A         	call	___aldiv	;wreg free
  3631   001490  C039  F021         	movff	?___aldiv,_Data_AUX2
  3632   001494  C03A  F022         	movff	?___aldiv+1,_Data_AUX2+1
  3633   001498                     
  3634                           ;Digitizer16bitsV2.c: 487:         print_string("JROADQ");
  3635   001498  0EAF               	movlw	low STR_3
  3636   00149A  6E3A               	movwf	print_string@str^0,c
  3637   00149C  0E15               	movlw	high STR_3
  3638   00149E  6E3B               	movwf	(print_string@str+1)^0,c
  3639   0014A0  ECDC  F00C         	call	_print_string	;wreg free
  3640   0014A4                     
  3641                           ;Digitizer16bitsV2.c: 488:         WriteByte_USART(ContaSample);
  3642   0014A4  5033               	movf	_ContaSample^0,w,c
  3643   0014A6  EC63  F00D         	call	_WriteByte_USART
  3644   0014AA                     
  3645                           ;Digitizer16bitsV2.c: 489:         print_value(Data_X);
  3646   0014AA  C031  F03A         	movff	_Data_X,print_value@value
  3647   0014AE  C032  F03B         	movff	_Data_X+1,print_value@value+1
  3648   0014B2  EC83  F00D         	call	_print_value	;wreg free
  3649   0014B6                     
  3650                           ;Digitizer16bitsV2.c: 490:         print_value(Data_Y);
  3651   0014B6  C02F  F03A         	movff	_Data_Y,print_value@value
  3652   0014BA  C030  F03B         	movff	_Data_Y+1,print_value@value+1
  3653   0014BE  EC83  F00D         	call	_print_value	;wreg free
  3654   0014C2                     
  3655                           ;Digitizer16bitsV2.c: 491:         print_value(Data_Z);
  3656   0014C2  C02D  F03A         	movff	_Data_Z,print_value@value
  3657   0014C6  C02E  F03B         	movff	_Data_Z+1,print_value@value+1
  3658   0014CA  EC83  F00D         	call	_print_value	;wreg free
  3659   0014CE                     
  3660                           ;Digitizer16bitsV2.c: 492:         print_value(Data_TC);
  3661   0014CE  C02B  F03A         	movff	_Data_TC,print_value@value
  3662   0014D2  C02C  F03B         	movff	_Data_TC+1,print_value@value+1
  3663   0014D6  EC83  F00D         	call	_print_value	;wreg free
  3664   0014DA                     
  3665                           ;Digitizer16bitsV2.c: 493:         print_value(Data_TS);
  3666   0014DA  C029  F03A         	movff	_Data_TS,print_value@value
  3667   0014DE  C02A  F03B         	movff	_Data_TS+1,print_value@value+1
  3668   0014E2  EC83  F00D         	call	_print_value	;wreg free
  3669   0014E6                     
  3670                           ;Digitizer16bitsV2.c: 494:         print_value(Data_AUX0);
  3671   0014E6  C025  F03A         	movff	_Data_AUX0,print_value@value
  3672   0014EA  C026  F03B         	movff	_Data_AUX0+1,print_value@value+1
  3673   0014EE  EC83  F00D         	call	_print_value	;wreg free
  3674   0014F2                     
  3675                           ;Digitizer16bitsV2.c: 495:         print_value(Data_AUX1);
  3676   0014F2  C023  F03A         	movff	_Data_AUX1,print_value@value
  3677   0014F6  C024  F03B         	movff	_Data_AUX1+1,print_value@value+1
  3678   0014FA  EC83  F00D         	call	_print_value	;wreg free
  3679   0014FE                     
  3680                           ;Digitizer16bitsV2.c: 496:         print_value(Data_AUX2);
  3681   0014FE  C021  F03A         	movff	_Data_AUX2,print_value@value
  3682   001502  C022  F03B         	movff	_Data_AUX2+1,print_value@value+1
  3683   001506  EC83  F00D         	call	_print_value	;wreg free
  3684   00150A                     
  3685                           ;Digitizer16bitsV2.c: 497:         print_string("\n\r");
  3686   00150A  0E8C               	movlw	low (STR_5+21)
  3687   00150C  6E3A               	movwf	print_string@str^0,c
  3688   00150E  0E15               	movlw	high (STR_5+21)
  3689   001510  6E3B               	movwf	(print_string@str+1)^0,c
  3690   001512  ECDC  F00C         	call	_print_string	;wreg free
  3691   001516                     
  3692                           ;Digitizer16bitsV2.c: 499:         if(ContaSample == 4){
  3693   001516  0E04               	movlw	4
  3694   001518  1833               	xorwf	_ContaSample^0,w,c
  3695   00151A  A4D8               	btfss	status,2,c
  3696   00151C  EF92  F00A         	goto	i2u166_41
  3697   001520  EF95  F00A         	goto	i2u166_40
  3698   001524                     i2u166_41:
  3699   001524  FFFF               	dw	65535	; assembler added errata NOP
  3700   001526  EFA3  F00A         	goto	i2l197
  3701   00152A                     i2u166_40:
  3702   00152A  FFFF               	dw	65535	; assembler added errata NOP
  3703   00152C                     
  3704                           ;Digitizer16bitsV2.c: 500:             INTCONbits.TMR0IE = 0;
  3705   00152C  9AF2               	bcf	242,5,c	;volatile
  3706   00152E                     
  3707                           ;Digitizer16bitsV2.c: 501:             if(ControlSample == 1){
  3708   00152E  0434               	decf	_ControlSample^0,w,c
  3709   001530  A4D8               	btfss	status,2,c
  3710   001532  EF9D  F00A         	goto	i2u167_41
  3711   001536  EFA0  F00A         	goto	i2u167_40
  3712   00153A                     i2u167_41:
  3713   00153A  FFFF               	dw	65535	; assembler added errata NOP
  3714   00153C  EFA3  F00A         	goto	i2l197
  3715   001540                     i2u167_40:
  3716   001540  FFFF               	dw	65535	; assembler added errata NOP
  3717   001542                     
  3718                           ;Digitizer16bitsV2.c: 502:                 INTCONbits.INT0IF = 0;
  3719   001542  92F2               	bcf	242,1,c	;volatile
  3720                           
  3721                           ;Digitizer16bitsV2.c: 503:                 INTCONbits.INT0IE = 1;
  3722   001544  88F2               	bsf	242,4,c	;volatile
  3723   001546                     i2l197:
  3724   001546  FFFF               	dw	65535	; assembler added errata NOP
  3725                           
  3726                           ;Digitizer16bitsV2.c: 507:         LATAbits.LA0 = 0;
  3727   001548  9089               	bcf	137,0,c	;volatile
  3728   00154A                     i2l199:
  3729   00154A  FFFF               	dw	65535	; assembler added errata NOP
  3730   00154C  C052  FFF5         	movff	??_Interrups+11,tablat
  3731   001550  C051  FFF8         	movff	??_Interrups+10,tblptru
  3732   001554  C050  FFF7         	movff	??_Interrups+9,tblptrh
  3733   001558  C04F  FFF6         	movff	??_Interrups+8,tblptrl
  3734   00155C  C04E  FFDA         	movff	??_Interrups+7,fsr2h
  3735   001560  C04D  FFD9         	movff	??_Interrups+6,fsr2l
  3736   001564  C04C  FFEA         	movff	??_Interrups+5,fsr0h
  3737   001568  C04B  FFE9         	movff	??_Interrups+4,fsr0l
  3738   00156C  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3739   00156E  0011               	retfie		f
  3740   001570  FFFF               	dw	65535	; errata NOP
  3741   001572                     __end_of_Interrups:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _print_value *****************
  3745 ;; Defined at:
  3746 ;;		line 141 in file "LIB258_USART.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  value           2    1[COMRAM] short 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  Bytes           2    3[COMRAM] unsigned char [2]
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3760 ;;      Params:         2       0       0       0       0       0       0
  3761 ;;      Locals:         2       0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0
  3763 ;;      Totals:         4       0       0       0       0       0       0
  3764 ;;Total ram usage:        4 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 1
  3767 ;; This function calls:
  3768 ;;		_WriteByte_USART
  3769 ;; This function is called by:
  3770 ;;		_Interrups
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text5
  3775   001B06                     __ptext5:
  3776                           	callstack 0
  3777   001B06                     _print_value:
  3778                           	callstack 0
  3779   001B06  FFFF               	dw	65535	; assembler added errata NOP
  3780   001B08                     
  3781                           ;LIB258_USART.c: 143:     char Bytes[2];;LIB258_USART.c: 146:     Bytes[1] = (char) (val
      +                          ue>>8);
  3782   001B08  503B               	movf	(print_value@value+1)^0,w,c
  3783   001B0A  6E3D               	movwf	(print_value@Bytes+1)^0,c
  3784   001B0C                     
  3785                           ;LIB258_USART.c: 148:     Bytes[0] = (char) (value);
  3786   001B0C  C03A  F03C         	movff	print_value@value,print_value@Bytes
  3787   001B10                     
  3788                           ;LIB258_USART.c: 150:     WriteByte_USART(Bytes[0]);
  3789   001B10  503C               	movf	print_value@Bytes^0,w,c
  3790   001B12  EC63  F00D         	call	_WriteByte_USART
  3791   001B16                     
  3792                           ;LIB258_USART.c: 151:     WriteByte_USART(Bytes[1]);
  3793   001B16  503D               	movf	(print_value@Bytes+1)^0,w,c
  3794   001B18  EC63  F00D         	call	_WriteByte_USART
  3795   001B1C  0012               	return		;funcret
  3796   001B1E  FFFF               	dw	65535	; errata NOP
  3797   001B20                     __end_of_print_value:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function ___aldiv *****************
  3801 ;; Defined at:
  3802 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  dividend        4    0[COMRAM] long 
  3805 ;;  divisor         4    4[COMRAM] long 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  quotient        4   10[COMRAM] long 
  3808 ;;  sign            1    9[COMRAM] unsigned char 
  3809 ;;  counter         1    8[COMRAM] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  4    0[COMRAM] long 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3819 ;;      Params:         8       0       0       0       0       0       0
  3820 ;;      Locals:         6       0       0       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0
  3822 ;;      Totals:        14       0       0       0       0       0       0
  3823 ;;Total ram usage:       14 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_Interrups
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text6
  3833   0015B8                     __ptext6:
  3834                           	callstack 0
  3835   0015B8                     ___aldiv:
  3836                           	callstack 0
  3837   0015B8  FFFF               	dw	65535	; assembler added errata NOP
  3838   0015BA  0E00               	movlw	0
  3839   0015BC  6E42               	movwf	___aldiv@sign^0,c
  3840   0015BE  BE40               	btfsc	(___aldiv@divisor+3)^0,7,c
  3841   0015C0  EFE7  F00A         	goto	i2u129_40
  3842   0015C4  EFE4  F00A         	goto	i2u129_41
  3843   0015C8                     i2u129_41:
  3844   0015C8  FFFF               	dw	65535	; assembler added errata NOP
  3845   0015CA  EFF2  F00A         	goto	i2l2653
  3846   0015CE                     i2u129_40:
  3847   0015CE  FFFF               	dw	65535	; assembler added errata NOP
  3848   0015D0  1E40               	comf	(___aldiv@divisor+3)^0,f,c
  3849   0015D2  1E3F               	comf	(___aldiv@divisor+2)^0,f,c
  3850   0015D4  1E3E               	comf	(___aldiv@divisor+1)^0,f,c
  3851   0015D6  6C3D               	negf	___aldiv@divisor^0,c
  3852   0015D8  0E00               	movlw	0
  3853   0015DA  223E               	addwfc	(___aldiv@divisor+1)^0,f,c
  3854   0015DC  223F               	addwfc	(___aldiv@divisor+2)^0,f,c
  3855   0015DE  2240               	addwfc	(___aldiv@divisor+3)^0,f,c
  3856   0015E0  0E01               	movlw	1
  3857   0015E2  6E42               	movwf	___aldiv@sign^0,c
  3858   0015E4                     i2l2653:
  3859   0015E4  FFFF               	dw	65535	; assembler added errata NOP
  3860   0015E6  BE3C               	btfsc	(___aldiv@dividend+3)^0,7,c
  3861   0015E8  EFFB  F00A         	goto	i2u130_40
  3862   0015EC  EFF8  F00A         	goto	i2u130_41
  3863   0015F0                     i2u130_41:
  3864   0015F0  FFFF               	dw	65535	; assembler added errata NOP
  3865   0015F2  EF06  F00B         	goto	i2l2659
  3866   0015F6                     i2u130_40:
  3867   0015F6  FFFF               	dw	65535	; assembler added errata NOP
  3868   0015F8  1E3C               	comf	(___aldiv@dividend+3)^0,f,c
  3869   0015FA  1E3B               	comf	(___aldiv@dividend+2)^0,f,c
  3870   0015FC  1E3A               	comf	(___aldiv@dividend+1)^0,f,c
  3871   0015FE  6C39               	negf	___aldiv@dividend^0,c
  3872   001600  0E00               	movlw	0
  3873   001602  223A               	addwfc	(___aldiv@dividend+1)^0,f,c
  3874   001604  223B               	addwfc	(___aldiv@dividend+2)^0,f,c
  3875   001606  223C               	addwfc	(___aldiv@dividend+3)^0,f,c
  3876   001608  0E01               	movlw	1
  3877   00160A  1A42               	xorwf	___aldiv@sign^0,f,c
  3878   00160C                     i2l2659:
  3879   00160C  FFFF               	dw	65535	; assembler added errata NOP
  3880   00160E  0E00               	movlw	0
  3881   001610  6E43               	movwf	___aldiv@quotient^0,c
  3882   001612  0E00               	movlw	0
  3883   001614  6E44               	movwf	(___aldiv@quotient+1)^0,c
  3884   001616  0E00               	movlw	0
  3885   001618  6E45               	movwf	(___aldiv@quotient+2)^0,c
  3886   00161A  0E00               	movlw	0
  3887   00161C  6E46               	movwf	(___aldiv@quotient+3)^0,c
  3888   00161E  503D               	movf	___aldiv@divisor^0,w,c
  3889   001620  103E               	iorwf	(___aldiv@divisor+1)^0,w,c
  3890   001622  103F               	iorwf	(___aldiv@divisor+2)^0,w,c
  3891   001624  1040               	iorwf	(___aldiv@divisor+3)^0,w,c
  3892   001626  B4D8               	btfsc	status,2,c
  3893   001628  EF18  F00B         	goto	i2u131_41
  3894   00162C  EF1B  F00B         	goto	i2u131_40
  3895   001630                     i2u131_41:
  3896   001630  FFFF               	dw	65535	; assembler added errata NOP
  3897   001632  EF5A  F00B         	goto	i2l2681
  3898   001636                     i2u131_40:
  3899   001636  FFFF               	dw	65535	; assembler added errata NOP
  3900   001638  0E01               	movlw	1
  3901   00163A  6E41               	movwf	___aldiv@counter^0,c
  3902   00163C  EF27  F00B         	goto	i2l2667
  3903   001640                     i2l2665:
  3904   001640  FFFF               	dw	65535	; assembler added errata NOP
  3905   001642  90D8               	bcf	status,0,c
  3906   001644  363D               	rlcf	___aldiv@divisor^0,f,c
  3907   001646  363E               	rlcf	(___aldiv@divisor+1)^0,f,c
  3908   001648  363F               	rlcf	(___aldiv@divisor+2)^0,f,c
  3909   00164A  3640               	rlcf	(___aldiv@divisor+3)^0,f,c
  3910   00164C  2A41               	incf	___aldiv@counter^0,f,c
  3911   00164E                     i2l2667:
  3912   00164E  FFFF               	dw	65535	; assembler added errata NOP
  3913   001650  AE40               	btfss	(___aldiv@divisor+3)^0,7,c
  3914   001652  EF2D  F00B         	goto	i2u132_41
  3915   001656  EF30  F00B         	goto	i2u132_40
  3916   00165A                     i2u132_41:
  3917   00165A  FFFF               	dw	65535	; assembler added errata NOP
  3918   00165C  EF20  F00B         	goto	i2l2665
  3919   001660                     i2u132_40:
  3920   001660  FFFF               	dw	65535	; assembler added errata NOP
  3921   001662                     i2l2669:
  3922   001662  FFFF               	dw	65535	; assembler added errata NOP
  3923   001664  90D8               	bcf	status,0,c
  3924   001666  3643               	rlcf	___aldiv@quotient^0,f,c
  3925   001668  3644               	rlcf	(___aldiv@quotient+1)^0,f,c
  3926   00166A  3645               	rlcf	(___aldiv@quotient+2)^0,f,c
  3927   00166C  3646               	rlcf	(___aldiv@quotient+3)^0,f,c
  3928   00166E  503D               	movf	___aldiv@divisor^0,w,c
  3929   001670  5C39               	subwf	___aldiv@dividend^0,w,c
  3930   001672  503E               	movf	(___aldiv@divisor+1)^0,w,c
  3931   001674  583A               	subwfb	(___aldiv@dividend+1)^0,w,c
  3932   001676  503F               	movf	(___aldiv@divisor+2)^0,w,c
  3933   001678  583B               	subwfb	(___aldiv@dividend+2)^0,w,c
  3934   00167A  5040               	movf	(___aldiv@divisor+3)^0,w,c
  3935   00167C  583C               	subwfb	(___aldiv@dividend+3)^0,w,c
  3936   00167E  A0D8               	btfss	status,0,c
  3937   001680  EF44  F00B         	goto	i2u133_41
  3938   001684  EF47  F00B         	goto	i2u133_40
  3939   001688                     i2u133_41:
  3940   001688  FFFF               	dw	65535	; assembler added errata NOP
  3941   00168A  EF51  F00B         	goto	i2l2677
  3942   00168E                     i2u133_40:
  3943   00168E  FFFF               	dw	65535	; assembler added errata NOP
  3944   001690  503D               	movf	___aldiv@divisor^0,w,c
  3945   001692  5E39               	subwf	___aldiv@dividend^0,f,c
  3946   001694  503E               	movf	(___aldiv@divisor+1)^0,w,c
  3947   001696  5A3A               	subwfb	(___aldiv@dividend+1)^0,f,c
  3948   001698  503F               	movf	(___aldiv@divisor+2)^0,w,c
  3949   00169A  5A3B               	subwfb	(___aldiv@dividend+2)^0,f,c
  3950   00169C  5040               	movf	(___aldiv@divisor+3)^0,w,c
  3951   00169E  5A3C               	subwfb	(___aldiv@dividend+3)^0,f,c
  3952   0016A0  8043               	bsf	___aldiv@quotient^0,0,c
  3953   0016A2                     i2l2677:
  3954   0016A2  FFFF               	dw	65535	; assembler added errata NOP
  3955   0016A4  90D8               	bcf	status,0,c
  3956   0016A6  3240               	rrcf	(___aldiv@divisor+3)^0,f,c
  3957   0016A8  323F               	rrcf	(___aldiv@divisor+2)^0,f,c
  3958   0016AA  323E               	rrcf	(___aldiv@divisor+1)^0,f,c
  3959   0016AC  323D               	rrcf	___aldiv@divisor^0,f,c
  3960   0016AE  2E41               	decfsz	___aldiv@counter^0,f,c
  3961   0016B0  EF31  F00B         	goto	i2l2669
  3962   0016B4                     i2l2681:
  3963   0016B4  FFFF               	dw	65535	; assembler added errata NOP
  3964   0016B6  5042               	movf	___aldiv@sign^0,w,c
  3965   0016B8  B4D8               	btfsc	status,2,c
  3966   0016BA  EF61  F00B         	goto	i2u134_41
  3967   0016BE  EF64  F00B         	goto	i2u134_40
  3968   0016C2                     i2u134_41:
  3969   0016C2  FFFF               	dw	65535	; assembler added errata NOP
  3970   0016C4  EF6D  F00B         	goto	i2l2685
  3971   0016C8                     i2u134_40:
  3972   0016C8  FFFF               	dw	65535	; assembler added errata NOP
  3973   0016CA  1E46               	comf	(___aldiv@quotient+3)^0,f,c
  3974   0016CC  1E45               	comf	(___aldiv@quotient+2)^0,f,c
  3975   0016CE  1E44               	comf	(___aldiv@quotient+1)^0,f,c
  3976   0016D0  6C43               	negf	___aldiv@quotient^0,c
  3977   0016D2  0E00               	movlw	0
  3978   0016D4  2244               	addwfc	(___aldiv@quotient+1)^0,f,c
  3979   0016D6  2245               	addwfc	(___aldiv@quotient+2)^0,f,c
  3980   0016D8  2246               	addwfc	(___aldiv@quotient+3)^0,f,c
  3981   0016DA                     i2l2685:
  3982   0016DA  FFFF               	dw	65535	; assembler added errata NOP
  3983   0016DC  C043  F039         	movff	___aldiv@quotient,?___aldiv
  3984   0016E0  C044  F03A         	movff	___aldiv@quotient+1,?___aldiv+1
  3985   0016E4  C045  F03B         	movff	___aldiv@quotient+2,?___aldiv+2
  3986   0016E8  C046  F03C         	movff	___aldiv@quotient+3,?___aldiv+3
  3987   0016EC  0012               	return		;funcret
  3988   0016EE  FFFF               	dw	65535	; errata NOP
  3989   0016F0                     __end_of___aldiv:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _TransmitDAT_USART *****************
  3993 ;; Defined at:
  3994 ;;		line 128 in file "LIB258_USART.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  DAT_ID          1    wreg     unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  DAT_ID          1    3[COMRAM] unsigned char 
  3999 ;;  conta           1    4[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4009 ;;      Params:         0       0       0       0       0       0       0
  4010 ;;      Locals:         2       0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0
  4012 ;;      Totals:         2       0       0       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 2
  4016 ;; This function calls:
  4017 ;;		_WriteByte_USART
  4018 ;;		_print_string
  4019 ;; This function is called by:
  4020 ;;		_Interrups
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text7
  4025   001A26                     __ptext7:
  4026                           	callstack 0
  4027   001A26                     _TransmitDAT_USART:
  4028                           	callstack 0
  4029   001A26  FFFF               	dw	65535	; assembler added errata NOP
  4030                           
  4031                           ;incstack = 0
  4032                           ;TransmitDAT_USART@DAT_ID stored from wreg
  4033   001A28  6E3C               	movwf	TransmitDAT_USART@DAT_ID^0,c
  4034   001A2A                     
  4035                           ;LIB258_USART.c: 129:     unsigned char conta;;LIB258_USART.c: 131:     print_string("NN
      +                          NNJRODAT");
  4036   001A2A  0E9A               	movlw	low STR_12
  4037   001A2C  6E3A               	movwf	print_string@str^0,c
  4038   001A2E  0E15               	movlw	high STR_12
  4039   001A30  6E3B               	movwf	(print_string@str+1)^0,c
  4040   001A32  ECDC  F00C         	call	_print_string	;wreg free
  4041   001A36                     
  4042                           ;LIB258_USART.c: 132:     WriteByte_USART(DAT_ID);
  4043   001A36  503C               	movf	TransmitDAT_USART@DAT_ID^0,w,c
  4044   001A38  EC63  F00D         	call	_WriteByte_USART
  4045   001A3C                     
  4046                           ;LIB258_USART.c: 133:     for(conta=0; conta<12; conta++){
  4047   001A3C  0E00               	movlw	0
  4048   001A3E  6E3D               	movwf	TransmitDAT_USART@conta^0,c
  4049   001A40                     i2l2555:
  4050   001A40  FFFF               	dw	65535	; assembler added errata NOP
  4051                           
  4052                           ;LIB258_USART.c: 134:         WriteByte_USART(BufferDAT[conta]);
  4053   001A42  0E6C               	movlw	low _BufferDAT
  4054   001A44  243D               	addwf	TransmitDAT_USART@conta^0,w,c
  4055   001A46  6ED9               	movwf	fsr2l,c
  4056   001A48  6ADA               	clrf	fsr2h,c
  4057   001A4A  0E00               	movlw	high _BufferDAT
  4058   001A4C  22DA               	addwfc	fsr2h,f,c
  4059   001A4E  50DF               	movf	indf2,w,c
  4060   001A50  EC63  F00D         	call	_WriteByte_USART
  4061   001A54                     
  4062                           ;LIB258_USART.c: 135:     }
  4063   001A54  2A3D               	incf	TransmitDAT_USART@conta^0,f,c
  4064   001A56  0E0B               	movlw	11
  4065   001A58  643D               	cpfsgt	TransmitDAT_USART@conta^0,c
  4066   001A5A  EF31  F00D         	goto	i2u117_41
  4067   001A5E  EF34  F00D         	goto	i2u117_40
  4068   001A62                     i2u117_41:
  4069   001A62  FFFF               	dw	65535	; assembler added errata NOP
  4070   001A64  EF20  F00D         	goto	i2l2555
  4071   001A68                     i2u117_40:
  4072   001A68  FFFF               	dw	65535	; assembler added errata NOP
  4073   001A6A                     
  4074                           ;LIB258_USART.c: 136:     print_string("\n\r");
  4075   001A6A  0E8C               	movlw	low (STR_5+21)
  4076   001A6C  6E3A               	movwf	print_string@str^0,c
  4077   001A6E  0E15               	movlw	high (STR_5+21)
  4078   001A70  6E3B               	movwf	(print_string@str+1)^0,c
  4079   001A72  ECDC  F00C         	call	_print_string	;wreg free
  4080   001A76  0012               	return		;funcret
  4081   001A78  FFFF               	dw	65535	; errata NOP
  4082   001A7A                     __end_of_TransmitDAT_USART:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _TransmitCMD_USART *****************
  4086 ;; Defined at:
  4087 ;;		line 119 in file "LIB258_USART.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  CMD_ID          1    wreg     unsigned char 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  CMD_ID          1    3[COMRAM] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4101 ;;      Params:         0       0       0       0       0       0       0
  4102 ;;      Locals:         1       0       0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0
  4104 ;;      Totals:         1       0       0       0       0       0       0
  4105 ;;Total ram usage:        1 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 2
  4108 ;; This function calls:
  4109 ;;		_WriteByte_USART
  4110 ;;		_print_string
  4111 ;; This function is called by:
  4112 ;;		_Interrups
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text8
  4117   001AA0                     __ptext8:
  4118                           	callstack 0
  4119   001AA0                     _TransmitCMD_USART:
  4120                           	callstack 0
  4121   001AA0  FFFF               	dw	65535	; assembler added errata NOP
  4122                           
  4123                           ;incstack = 0
  4124                           ;TransmitCMD_USART@CMD_ID stored from wreg
  4125   001AA2  6E3C               	movwf	TransmitCMD_USART@CMD_ID^0,c
  4126   001AA4                     
  4127                           ;LIB258_USART.c: 121:     print_string("NNNNJROCMD");
  4128   001AA4  0E8F               	movlw	low STR_10
  4129   001AA6  6E3A               	movwf	print_string@str^0,c
  4130   001AA8  0E15               	movlw	high STR_10
  4131   001AAA  6E3B               	movwf	(print_string@str+1)^0,c
  4132   001AAC  ECDC  F00C         	call	_print_string	;wreg free
  4133   001AB0                     
  4134                           ;LIB258_USART.c: 122:     WriteByte_USART(CMD_ID);
  4135   001AB0  503C               	movf	TransmitCMD_USART@CMD_ID^0,w,c
  4136   001AB2  EC63  F00D         	call	_WriteByte_USART
  4137   001AB6                     
  4138                           ;LIB258_USART.c: 123:     print_string("\n\r");
  4139   001AB6  0E8C               	movlw	low (STR_5+21)
  4140   001AB8  6E3A               	movwf	print_string@str^0,c
  4141   001ABA  0E15               	movlw	high (STR_5+21)
  4142   001ABC  6E3B               	movwf	(print_string@str+1)^0,c
  4143   001ABE  ECDC  F00C         	call	_print_string	;wreg free
  4144   001AC2  0012               	return		;funcret
  4145   001AC4  FFFF               	dw	65535	; errata NOP
  4146   001AC6                     __end_of_TransmitCMD_USART:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _print_string *****************
  4150 ;; Defined at:
  4151 ;;		line 78 in file "LIB258_USART.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  str             2    1[COMRAM] PTR unsigned char 
  4154 ;;		 -> STR_13(3), STR_12(11), STR_11(3), STR_10(11), 
  4155 ;;		 -> STR_9(3), STR_8(7), STR_7(3), STR_6(7), 
  4156 ;;		 -> STR_5(24), STR_4(3), STR_3(7), STR_2(3), 
  4157 ;;		 -> BufferDAT(13), STR_1(10), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4169 ;;      Params:         2       0       0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0
  4172 ;;      Totals:         2       0       0       0       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 1
  4176 ;; This function calls:
  4177 ;;		_WriteByte_USART
  4178 ;; This function is called by:
  4179 ;;		_Interrups
  4180 ;;		_TransmitCMD_USART
  4181 ;;		_TransmitDAT_USART
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text9
  4186   0019B8                     __ptext9:
  4187                           	callstack 0
  4188   0019B8                     _print_string:
  4189                           	callstack 0
  4190   0019B8  FFFF               	dw	65535	; assembler added errata NOP
  4191   0019BA                     
  4192                           ;LIB258_USART.c: 79:     while(*str != '\0'){
  4193   0019BA  EFF5  F00C         	goto	i2l2483
  4194   0019BE                     i2l2479:
  4195   0019BE  FFFF               	dw	65535	; assembler added errata NOP
  4196                           
  4197                           ;LIB258_USART.c: 80:         WriteByte_USART(*str);
  4198   0019C0  C03A  FFF6         	movff	print_string@str,tblptrl
  4199   0019C4  C03B  FFF7         	movff	print_string@str+1,tblptrh
  4200   0019C8  6AF8               	clrf	tblptru,c
  4201   0019CA  0E05               	movlw	(high __ramtop+-1)
  4202   0019CC  64F7               	cpfsgt	tblptrh,c
  4203   0019CE  D004               	bra	i2u102_47
  4204   0019D0  0008               	tblrd		*
  4205   0019D2  FFFF               	dw	65535	; errata NOP
  4206   0019D4  50F5               	movf	tablat,w,c
  4207   0019D6  D005               	bra	i2u102_40
  4208   0019D8                     i2u102_47:
  4209   0019D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4210   0019DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4211   0019E0  50EF               	movf	indf0,w,c
  4212   0019E2                     i2u102_40:
  4213   0019E2  EC63  F00D         	call	_WriteByte_USART
  4214   0019E6                     
  4215                           ;LIB258_USART.c: 81:         str++;
  4216   0019E6  4A3A               	infsnz	print_string@str^0,f,c
  4217   0019E8  2A3B               	incf	(print_string@str+1)^0,f,c
  4218   0019EA                     i2l2483:
  4219   0019EA  FFFF               	dw	65535	; assembler added errata NOP
  4220                           
  4221                           ;LIB258_USART.c: 79:     while(*str != '\0'){
  4222   0019EC  C03A  FFF6         	movff	print_string@str,tblptrl
  4223   0019F0  C03B  FFF7         	movff	print_string@str+1,tblptrh
  4224   0019F4  6AF8               	clrf	tblptru,c
  4225   0019F6  0E05               	movlw	(high __ramtop+-1)
  4226   0019F8  64F7               	cpfsgt	tblptrh,c
  4227   0019FA  D004               	bra	i2u103_47
  4228   0019FC  0008               	tblrd		*
  4229   0019FE  FFFF               	dw	65535	; errata NOP
  4230   001A00  50F5               	movf	tablat,w,c
  4231   001A02  D005               	bra	i2u103_40
  4232   001A04                     i2u103_47:
  4233   001A04  CFF6 FFE9          	movff	tblptrl,fsr0l
  4234   001A08  CFF7 FFEA          	movff	tblptrh,fsr0h
  4235   001A0C  50EF               	movf	indf0,w,c
  4236   001A0E                     i2u103_40:
  4237   001A0E  0900               	iorlw	0
  4238   001A10  A4D8               	btfss	status,2,c
  4239   001A12  EF0D  F00D         	goto	i2u104_41
  4240   001A16  EF10  F00D         	goto	i2u104_40
  4241   001A1A                     i2u104_41:
  4242   001A1A  FFFF               	dw	65535	; assembler added errata NOP
  4243   001A1C  EFDF  F00C         	goto	i2l2479
  4244   001A20                     i2u104_40:
  4245   001A20  FFFF               	dw	65535	; assembler added errata NOP
  4246   001A22  0012               	return		;funcret
  4247   001A24  FFFF               	dw	65535	; errata NOP
  4248   001A26                     __end_of_print_string:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _WriteByte_USART *****************
  4252 ;; Defined at:
  4253 ;;		line 70 in file "LIB258_USART.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  byte            1    wreg     unsigned char 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  byte            1    0[COMRAM] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4267 ;;      Params:         0       0       0       0       0       0       0
  4268 ;;      Locals:         1       0       0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0
  4270 ;;      Totals:         1       0       0       0       0       0       0
  4271 ;;Total ram usage:        1 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_Interrups
  4277 ;;		_print_string
  4278 ;;		_TransmitCMD_USART
  4279 ;;		_TransmitDAT_USART
  4280 ;;		_print_value
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text10
  4285   001AC6                     __ptext10:
  4286                           	callstack 0
  4287   001AC6                     _WriteByte_USART:
  4288                           	callstack 0
  4289   001AC6  FFFF               	dw	65535	; assembler added errata NOP
  4290                           
  4291                           ;incstack = 0
  4292                           ;WriteByte_USART@byte stored from wreg
  4293   001AC8  6E39               	movwf	WriteByte_USART@byte^0,c
  4294   001ACA                     
  4295                           ;LIB258_USART.c: 72:     TXREG = byte;
  4296   001ACA  C039  FFAD         	movff	WriteByte_USART@byte,4013	;volatile
  4297   001ACE                     
  4298                           ;LIB258_USART.c: 73:     __nop();
  4299   001ACE  F000               	nop	
  4300   001AD0                     i2l319:
  4301   001AD0  FFFF               	dw	65535	; assembler added errata NOP
  4302   001AD2  A2AC               	btfss	172,1,c	;volatile
  4303   001AD4  EF6E  F00D         	goto	i2u101_41
  4304   001AD8  EF71  F00D         	goto	i2u101_40
  4305   001ADC                     i2u101_41:
  4306   001ADC  FFFF               	dw	65535	; assembler added errata NOP
  4307   001ADE  EF68  F00D         	goto	i2l319
  4308   001AE2                     i2u101_40:
  4309   001AE2  FFFF               	dw	65535	; assembler added errata NOP
  4310   001AE4  0012               	return		;funcret
  4311   001AE6  FFFF               	dw	65535	; errata NOP
  4312   001AE8                     __end_of_WriteByte_USART:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _ReceiveCMD_USART *****************
  4316 ;; Defined at:
  4317 ;;		line 87 in file "LIB258_USART.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  data_byte       1    4[COMRAM] unsigned char 
  4322 ;;  conta_byte      1    3[COMRAM] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      unsigned char 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4332 ;;      Params:         0       0       0       0       0       0       0
  4333 ;;      Locals:         2       0       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0
  4335 ;;      Totals:         2       0       0       0       0       0       0
  4336 ;;Total ram usage:        2 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 1
  4339 ;; This function calls:
  4340 ;;		_ReadByte_USART
  4341 ;; This function is called by:
  4342 ;;		_Interrups
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text11
  4347   0017E0                     __ptext11:
  4348                           	callstack 0
  4349   0017E0                     _ReceiveCMD_USART:
  4350                           	callstack 0
  4351   0017E0  FFFF               	dw	65535	; assembler added errata NOP
  4352   0017E2                     
  4353                           ;LIB258_USART.c: 88:     unsigned char conta_byte;;LIB258_USART.c: 89:     char data_byt
      +                          e;;LIB258_USART.c: 91:     for(conta_byte=0; conta_byte<10;conta_byte++){
  4354   0017E2  0E00               	movlw	0
  4355   0017E4  6E3C               	movwf	ReceiveCMD_USART@conta_byte^0,c
  4356   0017E6                     i2l2571:
  4357   0017E6  FFFF               	dw	65535	; assembler added errata NOP
  4358                           
  4359                           ;LIB258_USART.c: 92:         data_byte = ReadByte_USART();
  4360   0017E8  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4361   0017EC  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4362   0017EE                     
  4363                           ;LIB258_USART.c: 93:         if(data_byte == 'J'){
  4364   0017EE  0E4A               	movlw	74
  4365   0017F0  183D               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4366   0017F2  A4D8               	btfss	status,2,c
  4367   0017F4  EFFE  F00B         	goto	i2u118_41
  4368   0017F8  EF01  F00C         	goto	i2u118_40
  4369   0017FC                     i2u118_41:
  4370   0017FC  FFFF               	dw	65535	; assembler added errata NOP
  4371   0017FE  EF04  F00C         	goto	i2l2577
  4372   001802                     i2u118_40:
  4373   001802  FFFF               	dw	65535	; assembler added errata NOP
  4374   001804  EF0F  F00C         	goto	i2l2581
  4375   001808                     i2l2577:
  4376   001808  FFFF               	dw	65535	; assembler added errata NOP
  4377                           
  4378                           ;LIB258_USART.c: 96:     }
  4379   00180A  2A3C               	incf	ReceiveCMD_USART@conta_byte^0,f,c
  4380   00180C  0E09               	movlw	9
  4381   00180E  643C               	cpfsgt	ReceiveCMD_USART@conta_byte^0,c
  4382   001810  EF0C  F00C         	goto	i2u119_41
  4383   001814  EF0F  F00C         	goto	i2u119_40
  4384   001818                     i2u119_41:
  4385   001818  FFFF               	dw	65535	; assembler added errata NOP
  4386   00181A  EFF3  F00B         	goto	i2l2571
  4387   00181E                     i2u119_40:
  4388   00181E                     i2l2581:
  4389   00181E  FFFF               	dw	65535	; assembler added errata NOP
  4390                           
  4391                           ;LIB258_USART.c: 97:     if(conta_byte < 10){
  4392   001820  0E0A               	movlw	10
  4393   001822  603C               	cpfslt	ReceiveCMD_USART@conta_byte^0,c
  4394   001824  EF16  F00C         	goto	i2u120_41
  4395   001828  EF19  F00C         	goto	i2u120_40
  4396   00182C                     i2u120_41:
  4397   00182C  FFFF               	dw	65535	; assembler added errata NOP
  4398   00182E  EF58  F00C         	goto	i2l334
  4399   001832                     i2u120_40:
  4400   001832  FFFF               	dw	65535	; assembler added errata NOP
  4401   001834                     
  4402                           ;LIB258_USART.c: 98:         data_byte = ReadByte_USART();
  4403   001834  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4404   001838  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4405   00183A                     
  4406                           ;LIB258_USART.c: 99:         if(data_byte == 'R'){
  4407   00183A  0E52               	movlw	82
  4408   00183C  183D               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4409   00183E  A4D8               	btfss	status,2,c
  4410   001840  EF24  F00C         	goto	i2u121_41
  4411   001844  EF27  F00C         	goto	i2u121_40
  4412   001848                     i2u121_41:
  4413   001848  FFFF               	dw	65535	; assembler added errata NOP
  4414   00184A  EF58  F00C         	goto	i2l334
  4415   00184E                     i2u121_40:
  4416   00184E  FFFF               	dw	65535	; assembler added errata NOP
  4417   001850                     
  4418                           ;LIB258_USART.c: 100:             data_byte = ReadByte_USART();
  4419   001850  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4420   001854  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4421   001856                     
  4422                           ;LIB258_USART.c: 101:             if(data_byte == 'O'){
  4423   001856  0E4F               	movlw	79
  4424   001858  183D               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4425   00185A  A4D8               	btfss	status,2,c
  4426   00185C  EF32  F00C         	goto	i2u122_41
  4427   001860  EF35  F00C         	goto	i2u122_40
  4428   001864                     i2u122_41:
  4429   001864  FFFF               	dw	65535	; assembler added errata NOP
  4430   001866  EF58  F00C         	goto	i2l334
  4431   00186A                     i2u122_40:
  4432   00186A  FFFF               	dw	65535	; assembler added errata NOP
  4433   00186C                     
  4434                           ;LIB258_USART.c: 102:                 data_byte = ReadByte_USART();
  4435   00186C  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4436   001870  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4437   001872                     
  4438                           ;LIB258_USART.c: 103:                 if(data_byte == 'C'){
  4439   001872  0E43               	movlw	67
  4440   001874  183D               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4441   001876  A4D8               	btfss	status,2,c
  4442   001878  EF40  F00C         	goto	i2u123_41
  4443   00187C  EF43  F00C         	goto	i2u123_40
  4444   001880                     i2u123_41:
  4445   001880  FFFF               	dw	65535	; assembler added errata NOP
  4446   001882  EF58  F00C         	goto	i2l334
  4447   001886                     i2u123_40:
  4448   001886  FFFF               	dw	65535	; assembler added errata NOP
  4449   001888                     
  4450                           ;LIB258_USART.c: 104:                     data_byte = ReadByte_USART();
  4451   001888  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4452   00188C  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4453                           
  4454                           ;LIB258_USART.c: 105:                     data_byte = ReadByte_USART();
  4455   00188E  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4456   001892  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4457                           
  4458                           ;LIB258_USART.c: 106:                     BufferDAT[12] = ReadByte_USART();
  4459   001894  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4460   001898  0100               	movlb	0	; () banked
  4461   00189A  6F78               	movwf	(_BufferDAT+12)& (0+255),b
  4462                           
  4463                           ;LIB258_USART.c: 107:                     data_byte = ReadByte_USART();
  4464   00189C  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4465   0018A0  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4466                           
  4467                           ;LIB258_USART.c: 108:                     data_byte = ReadByte_USART();
  4468   0018A2  EC5E  F00C         	call	_ReadByte_USART	;wreg free
  4469   0018A6  6E3D               	movwf	ReceiveCMD_USART@data_byte^0,c
  4470   0018A8                     
  4471                           ;LIB258_USART.c: 109:                     return BufferDAT[12];
  4472   0018A8  0100               	movlb	0	; () banked
  4473   0018AA  5178               	movf	(_BufferDAT+12)& (0+255),w,b
  4474   0018AC  EF5B  F00C         	goto	i2l338
  4475   0018B0                     i2l334:
  4476   0018B0  FFFF               	dw	65535	; assembler added errata NOP
  4477                           
  4478                           ;LIB258_USART.c: 114:     RCSTAbits.CREN = 0;
  4479   0018B2  98AB               	bcf	171,4,c	;volatile
  4480   0018B4                     
  4481                           ;LIB258_USART.c: 115:     return 'X';
  4482   0018B4  0E58               	movlw	88
  4483   0018B6                     i2l338:
  4484   0018B6  FFFF               	dw	65535	; assembler added errata NOP
  4485   0018B8  0012               	return		;funcret
  4486   0018BA  FFFF               	dw	65535	; errata NOP
  4487   0018BC                     __end_of_ReceiveCMD_USART:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function _ReadByte_USART *****************
  4491 ;; Defined at:
  4492 ;;		line 38 in file "LIB258_USART.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  Ready           1    2[COMRAM] unsigned char 
  4497 ;;  conta           1    1[COMRAM] unsigned char 
  4498 ;;  data            1    0[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      unsigned char 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4508 ;;      Params:         0       0       0       0       0       0       0
  4509 ;;      Locals:         3       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0
  4511 ;;      Totals:         3       0       0       0       0       0       0
  4512 ;;Total ram usage:        3 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_ReceiveCMD_USART
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text12
  4522   0018BC                     __ptext12:
  4523                           	callstack 0
  4524   0018BC                     _ReadByte_USART:
  4525                           	callstack 0
  4526   0018BC  FFFF               	dw	65535	; assembler added errata NOP
  4527   0018BE                     
  4528                           ;LIB258_USART.c: 39:     unsigned char conta;;LIB258_USART.c: 40:     unsigned char Read
      +                          y;;LIB258_USART.c: 41:     char data;;LIB258_USART.c: 43:     conta = 0;
  4529   0018BE  0E00               	movlw	0
  4530   0018C0  6E3A               	movwf	ReadByte_USART@conta^0,c
  4531   0018C2                     
  4532                           ;LIB258_USART.c: 44:     Ready = 255;
  4533   0018C2  683B               	setf	ReadByte_USART@Ready^0,c
  4534                           
  4535                           ;LIB258_USART.c: 45:     TMR2 = 0x00;
  4536   0018C4  0E00               	movlw	0
  4537   0018C6  6ECC               	movwf	204,c	;volatile
  4538   0018C8                     
  4539                           ;LIB258_USART.c: 46:     T2CONbits.TMR2ON = 1;
  4540   0018C8  84CA               	bsf	202,2,c	;volatile
  4541                           
  4542                           ;LIB258_USART.c: 48:     while(Ready){
  4543   0018CA  EF91  F00C         	goto	i2l299
  4544   0018CE                     i2l301:
  4545   0018CE  FFFF               	dw	65535	; assembler added errata NOP
  4546   0018D0  BA9E               	btfsc	158,5,c	;volatile
  4547   0018D2  EF6D  F00C         	goto	i2u105_41
  4548   0018D6  EF70  F00C         	goto	i2u105_40
  4549   0018DA                     i2u105_41:
  4550   0018DA  FFFF               	dw	65535	; assembler added errata NOP
  4551   0018DC  EF79  F00C         	goto	i2l305
  4552   0018E0                     i2u105_40:
  4553   0018E0  FFFF               	dw	65535	; assembler added errata NOP
  4554   0018E2  A29E               	btfss	158,1,c	;volatile
  4555   0018E4  EF76  F00C         	goto	i2u106_41
  4556   0018E8  EF79  F00C         	goto	i2u106_40
  4557   0018EC                     i2u106_41:
  4558   0018EC  FFFF               	dw	65535	; assembler added errata NOP
  4559   0018EE  EF67  F00C         	goto	i2l301
  4560   0018F2                     i2u106_40:
  4561   0018F2                     i2l305:
  4562   0018F2  FFFF               	dw	65535	; assembler added errata NOP
  4563                           
  4564                           ;LIB258_USART.c: 50:         PIR1bits.TMR2IF = 0;
  4565   0018F4  929E               	bcf	158,1,c	;volatile
  4566   0018F6                     
  4567                           ;LIB258_USART.c: 51:         conta++;
  4568   0018F6  2A3A               	incf	ReadByte_USART@conta^0,f,c
  4569   0018F8                     
  4570                           ;LIB258_USART.c: 52:         if((PIR1bits.RCIF == 1) || (conta>3)){
  4571   0018F8  BA9E               	btfsc	158,5,c	;volatile
  4572   0018FA  EF81  F00C         	goto	i2u107_41
  4573   0018FE  EF84  F00C         	goto	i2u107_40
  4574   001902                     i2u107_41:
  4575   001902  FFFF               	dw	65535	; assembler added errata NOP
  4576   001904  EF8E  F00C         	goto	i2l2499
  4577   001908                     i2u107_40:
  4578   001908  FFFF               	dw	65535	; assembler added errata NOP
  4579   00190A  0E03               	movlw	3
  4580   00190C  643A               	cpfsgt	ReadByte_USART@conta^0,c
  4581   00190E  EF8B  F00C         	goto	i2u108_41
  4582   001912  EF8E  F00C         	goto	i2u108_40
  4583   001916                     i2u108_41:
  4584   001916  FFFF               	dw	65535	; assembler added errata NOP
  4585   001918  EF91  F00C         	goto	i2l299
  4586   00191C                     i2u108_40:
  4587   00191C                     i2l2499:
  4588   00191C  FFFF               	dw	65535	; assembler added errata NOP
  4589                           
  4590                           ;LIB258_USART.c: 53:             Ready = 0;
  4591   00191E  0E00               	movlw	0
  4592   001920  6E3B               	movwf	ReadByte_USART@Ready^0,c
  4593   001922                     i2l299:
  4594   001922  FFFF               	dw	65535	; assembler added errata NOP
  4595                           
  4596                           ;LIB258_USART.c: 48:     while(Ready){
  4597   001924  503B               	movf	ReadByte_USART@Ready^0,w,c
  4598   001926  A4D8               	btfss	status,2,c
  4599   001928  EF98  F00C         	goto	i2u109_41
  4600   00192C  EF9B  F00C         	goto	i2u109_40
  4601   001930                     i2u109_41:
  4602   001930  FFFF               	dw	65535	; assembler added errata NOP
  4603   001932  EF67  F00C         	goto	i2l301
  4604   001936                     i2u109_40:
  4605   001936  FFFF               	dw	65535	; assembler added errata NOP
  4606   001938                     
  4607                           ;LIB258_USART.c: 56:     PIR1bits.TMR2IF = 0;
  4608   001938  929E               	bcf	158,1,c	;volatile
  4609                           
  4610                           ;LIB258_USART.c: 57:     T2CONbits.TMR2ON = 0;
  4611   00193A  94CA               	bcf	202,2,c	;volatile
  4612                           
  4613                           ;LIB258_USART.c: 58:     data = (char) RCREG;
  4614   00193C  CFAE F039          	movff	4014,ReadByte_USART@data	;volatile
  4615   001940                     
  4616                           ;LIB258_USART.c: 59:     return data;
  4617   001940  5039               	movf	ReadByte_USART@data^0,w,c
  4618   001942  0012               	return		;funcret
  4619   001944  FFFF               	dw	65535	; errata NOP
  4620   001946                     __end_of_ReadByte_USART:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _ReadDataADC *****************
  4624 ;; Defined at:
  4625 ;;		line 10 in file "LIB_ADS7825.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  DataADC         2    3[COMRAM] short 
  4630 ;;  i               1    2[COMRAM] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2    0[COMRAM] short 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4640 ;;      Params:         2       0       0       0       0       0       0
  4641 ;;      Locals:         3       0       0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0
  4643 ;;      Totals:         5       0       0       0       0       0       0
  4644 ;;Total ram usage:        5 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_Interrups
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text13
  4654   0016F0                     __ptext13:
  4655                           	callstack 0
  4656   0016F0                     _ReadDataADC:
  4657                           	callstack 0
  4658   0016F0  FFFF               	dw	65535	; assembler added errata NOP
  4659   0016F2                     
  4660                           ;LIB_ADS7825.c: 11:     unsigned char i;;LIB_ADS7825.c: 12:     signed short DataADC;;LI
      +                          B_ADS7825.c: 14:     LATBbits.LB5 = 1;
  4661   0016F2  8A8A               	bsf	138,5,c	;volatile
  4662                           
  4663                           ;LIB_ADS7825.c: 15:     LATAbits.LA1 = 1;
  4664   0016F4  8289               	bsf	137,1,c	;volatile
  4665                           
  4666                           ;LIB_ADS7825.c: 16:     LATAbits.LA2 = 0;
  4667   0016F6  9489               	bcf	137,2,c	;volatile
  4668   0016F8                     
  4669                           ;LIB_ADS7825.c: 17:     _delay((unsigned long)((25)*(39321600UL/4000000.0)));
  4670   0016F8  0E3D               	movlw	61
  4671   0016FA                     i2u225_47:
  4672   0016FA  FFFF               	dw	65535	; errata NOP
  4673   0016FC  2EE8               	decfsz	wreg,f,c
  4674   0016FE  D7FD               	bra	i2u225_47
  4675   001700  F000               	nop	
  4676   001702                     
  4677                           ;LIB_ADS7825.c: 20:     LATAbits.LA1 = 0;
  4678   001702  9289               	bcf	137,1,c	;volatile
  4679   001704                     
  4680                           ;LIB_ADS7825.c: 21:     LATBbits.LB5 = 0;
  4681   001704  9A8A               	bcf	138,5,c	;volatile
  4682   001706                     i2l414:
  4683   001706  FFFF               	dw	65535	; assembler added errata NOP
  4684   001708  B881               	btfsc	129,4,c	;volatile
  4685   00170A  EF89  F00B         	goto	i2u110_41
  4686   00170E  EF8C  F00B         	goto	i2u110_40
  4687   001712                     i2u110_41:
  4688   001712  FFFF               	dw	65535	; assembler added errata NOP
  4689   001714  EF83  F00B         	goto	i2l414
  4690   001718                     i2u110_40:
  4691   001718  FFFF               	dw	65535	; assembler added errata NOP
  4692   00171A                     
  4693                           ;LIB_ADS7825.c: 23:     LATBbits.LB5 = 1;
  4694   00171A  8A8A               	bsf	138,5,c	;volatile
  4695                           
  4696                           ;LIB_ADS7825.c: 24:     LATAbits.LA1 = 1;
  4697   00171C  8289               	bsf	137,1,c	;volatile
  4698   00171E                     i2l417:
  4699   00171E  FFFF               	dw	65535	; assembler added errata NOP
  4700   001720  A881               	btfss	129,4,c	;volatile
  4701   001722  EF95  F00B         	goto	i2u111_41
  4702   001726  EF98  F00B         	goto	i2u111_40
  4703   00172A                     i2u111_41:
  4704   00172A  FFFF               	dw	65535	; assembler added errata NOP
  4705   00172C  EF8F  F00B         	goto	i2l417
  4706   001730                     i2u111_40:
  4707   001730  FFFF               	dw	65535	; assembler added errata NOP
  4708   001732                     
  4709                           ;LIB_ADS7825.c: 28:     LATBbits.LB5 = 0;
  4710   001732  9A8A               	bcf	138,5,c	;volatile
  4711                           
  4712                           ;LIB_ADS7825.c: 29:     LATAbits.LA2 = 1;
  4713   001734  8489               	bsf	137,2,c	;volatile
  4714   001736                     i2l420:
  4715   001736  FFFF               	dw	65535	; assembler added errata NOP
  4716   001738  B881               	btfsc	129,4,c	;volatile
  4717   00173A  EFA1  F00B         	goto	i2u112_41
  4718   00173E  EFA4  F00B         	goto	i2u112_40
  4719   001742                     i2u112_41:
  4720   001742  FFFF               	dw	65535	; assembler added errata NOP
  4721   001744  EF9B  F00B         	goto	i2l420
  4722   001748                     i2u112_40:
  4723   001748  FFFF               	dw	65535	; assembler added errata NOP
  4724   00174A                     
  4725                           ;LIB_ADS7825.c: 31:     LATAbits.LA2 = 0;
  4726   00174A  9489               	bcf	137,2,c	;volatile
  4727                           
  4728                           ;LIB_ADS7825.c: 32:     LATAbits.LA2 = 1;
  4729   00174C  8489               	bsf	137,2,c	;volatile
  4730   00174E                     i2l423:
  4731   00174E  FFFF               	dw	65535	; assembler added errata NOP
  4732   001750  A881               	btfss	129,4,c	;volatile
  4733   001752  EFAD  F00B         	goto	i2u113_41
  4734   001756  EFB0  F00B         	goto	i2u113_40
  4735   00175A                     i2u113_41:
  4736   00175A  FFFF               	dw	65535	; assembler added errata NOP
  4737   00175C  EFA7  F00B         	goto	i2l423
  4738   001760                     i2u113_40:
  4739   001760  FFFF               	dw	65535	; assembler added errata NOP
  4740   001762                     
  4741                           ;LIB_ADS7825.c: 36:     DataADC = 0;
  4742   001762  0E00               	movlw	0
  4743   001764  6E3D               	movwf	(ReadDataADC@DataADC+1)^0,c
  4744   001766  0E00               	movlw	0
  4745   001768  6E3C               	movwf	ReadDataADC@DataADC^0,c
  4746                           
  4747                           ;LIB_ADS7825.c: 37:     for (i = 0;i < 15; i++){
  4748   00176A  0E00               	movlw	0
  4749   00176C  6E3B               	movwf	ReadDataADC@i^0,c
  4750   00176E                     i2l426:
  4751   00176E  FFFF               	dw	65535	; assembler added errata NOP
  4752                           
  4753                           ;LIB_ADS7825.c: 38:         LATAbits.LA2 = 0;
  4754   001770  9489               	bcf	137,2,c	;volatile
  4755                           
  4756                           ;LIB_ADS7825.c: 39:         __nop();
  4757   001772  F000               	nop	
  4758                           
  4759                           ;LIB_ADS7825.c: 40:         if (PORTCbits.RC5 == 1){
  4760   001774  AA82               	btfss	130,5,c	;volatile
  4761   001776  EFBF  F00B         	goto	i2u114_41
  4762   00177A  EFC2  F00B         	goto	i2u114_40
  4763   00177E                     i2u114_41:
  4764   00177E  FFFF               	dw	65535	; assembler added errata NOP
  4765   001780  EFC8  F00B         	goto	i2l2521
  4766   001784                     i2u114_40:
  4767   001784  FFFF               	dw	65535	; assembler added errata NOP
  4768   001786                     
  4769                           ;LIB_ADS7825.c: 41:             DataADC = DataADC | 0x0001;
  4770   001786  0E01               	movlw	1
  4771   001788  103C               	iorwf	ReadDataADC@DataADC^0,w,c
  4772   00178A  6E3C               	movwf	ReadDataADC@DataADC^0,c
  4773   00178C  503D               	movf	(ReadDataADC@DataADC+1)^0,w,c
  4774   00178E  6E3D               	movwf	(ReadDataADC@DataADC+1)^0,c
  4775   001790                     i2l2521:
  4776   001790  FFFF               	dw	65535	; assembler added errata NOP
  4777                           
  4778                           ;LIB_ADS7825.c: 43:         LATAbits.LA2 = 1;
  4779   001792  8489               	bsf	137,2,c	;volatile
  4780   001794                     
  4781                           ;LIB_ADS7825.c: 44:         DataADC <<= 1;
  4782   001794  90D8               	bcf	status,0,c
  4783   001796  363C               	rlcf	ReadDataADC@DataADC^0,f,c
  4784   001798  363D               	rlcf	(ReadDataADC@DataADC+1)^0,f,c
  4785   00179A                     
  4786                           ;LIB_ADS7825.c: 45:     }
  4787   00179A  2A3B               	incf	ReadDataADC@i^0,f,c
  4788   00179C  0E0E               	movlw	14
  4789   00179E  643B               	cpfsgt	ReadDataADC@i^0,c
  4790   0017A0  EFD4  F00B         	goto	i2u115_41
  4791   0017A4  EFD7  F00B         	goto	i2u115_40
  4792   0017A8                     i2u115_41:
  4793   0017A8  FFFF               	dw	65535	; assembler added errata NOP
  4794   0017AA  EFB7  F00B         	goto	i2l426
  4795   0017AE                     i2u115_40:
  4796   0017AE  FFFF               	dw	65535	; assembler added errata NOP
  4797   0017B0                     
  4798                           ;LIB_ADS7825.c: 46:     LATAbits.LA2 = 0;
  4799   0017B0  9489               	bcf	137,2,c	;volatile
  4800                           
  4801                           ;LIB_ADS7825.c: 47:     __nop();
  4802   0017B2  F000               	nop	
  4803                           
  4804                           ;LIB_ADS7825.c: 48:     if (PORTCbits.RC5 == 1){
  4805   0017B4  AA82               	btfss	130,5,c	;volatile
  4806   0017B6  EFDF  F00B         	goto	i2u116_41
  4807   0017BA  EFE2  F00B         	goto	i2u116_40
  4808   0017BE                     i2u116_41:
  4809   0017BE  FFFF               	dw	65535	; assembler added errata NOP
  4810   0017C0  EFE8  F00B         	goto	i2l2529
  4811   0017C4                     i2u116_40:
  4812   0017C4  FFFF               	dw	65535	; assembler added errata NOP
  4813   0017C6                     
  4814                           ;LIB_ADS7825.c: 49:         DataADC = DataADC | 0x0001;
  4815   0017C6  0E01               	movlw	1
  4816   0017C8  103C               	iorwf	ReadDataADC@DataADC^0,w,c
  4817   0017CA  6E3C               	movwf	ReadDataADC@DataADC^0,c
  4818   0017CC  503D               	movf	(ReadDataADC@DataADC+1)^0,w,c
  4819   0017CE  6E3D               	movwf	(ReadDataADC@DataADC+1)^0,c
  4820   0017D0                     i2l2529:
  4821   0017D0  FFFF               	dw	65535	; assembler added errata NOP
  4822                           
  4823                           ;LIB_ADS7825.c: 52:     LATBbits.LB5 = 1;
  4824   0017D2  8A8A               	bsf	138,5,c	;volatile
  4825   0017D4                     
  4826                           ;LIB_ADS7825.c: 53:     return DataADC;
  4827   0017D4  C03C  F039         	movff	ReadDataADC@DataADC,?_ReadDataADC
  4828   0017D8  C03D  F03A         	movff	ReadDataADC@DataADC+1,?_ReadDataADC+1
  4829   0017DC  0012               	return		;funcret
  4830   0017DE  FFFF               	dw	65535	; errata NOP
  4831   0017E0                     __end_of_ReadDataADC:
  4832                           	callstack 0
  4833                           
  4834                           	psect	rparam
  4835   000000                     
  4836                           	psect	temp
  4837   000055                     btemp:
  4838                           	callstack 0
  4839   000055                     	ds	1
  4840   000000                     int$flags	set	btemp
  4841   000000                     wtemp8	set	btemp+1
  4842   000000                     ttemp5	set	btemp+1
  4843   000000                     ttemp6	set	btemp+4
  4844   000000                     ttemp7	set	btemp+8
  4845                           
  4846                           	psect	idloc
  4847                           
  4848                           ;Config register IDLOC0 @ 0x200000
  4849                           ;	unspecified, using default values
  4850   200000                     	org	2097152
  4851   200000  FF                 	db	255
  4852                           
  4853                           ;Config register IDLOC1 @ 0x200001
  4854                           ;	unspecified, using default values
  4855   200001                     	org	2097153
  4856   200001  FF                 	db	255
  4857                           
  4858                           ;Config register IDLOC2 @ 0x200002
  4859                           ;	unspecified, using default values
  4860   200002                     	org	2097154
  4861   200002  FF                 	db	255
  4862                           
  4863                           ;Config register IDLOC3 @ 0x200003
  4864                           ;	unspecified, using default values
  4865   200003                     	org	2097155
  4866   200003  FF                 	db	255
  4867                           
  4868                           ;Config register IDLOC4 @ 0x200004
  4869                           ;	unspecified, using default values
  4870   200004                     	org	2097156
  4871   200004  FF                 	db	255
  4872                           
  4873                           ;Config register IDLOC5 @ 0x200005
  4874                           ;	unspecified, using default values
  4875   200005                     	org	2097157
  4876   200005  FF                 	db	255
  4877                           
  4878                           ;Config register IDLOC6 @ 0x200006
  4879                           ;	unspecified, using default values
  4880   200006                     	org	2097158
  4881   200006  FF                 	db	255
  4882                           
  4883                           ;Config register IDLOC7 @ 0x200007
  4884                           ;	unspecified, using default values
  4885   200007                     	org	2097159
  4886   200007  FF                 	db	255
  4887                           
  4888                           	psect	config
  4889                           
  4890                           ; Padding undefined space
  4891   300000                     	org	3145728
  4892   300000  FF                 	db	255
  4893                           
  4894                           ;Config register CONFIG1H @ 0x300001
  4895                           ;	Oscillator Selection bits
  4896                           ;	OSC = HSPLL, HS oscillator with PLL enabled/Clock frequency = (4 x FOSC)
  4897                           ;	Oscillator System Clock Switch Enable bit
  4898                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4899   300001                     	org	3145729
  4900   300001  26                 	db	38
  4901                           
  4902                           ;Config register CONFIG2L @ 0x300002
  4903                           ;	Power-up Timer Enable bit
  4904                           ;	PWRT = ON, PWRT enabled
  4905                           ;	Brown-out Reset Enable bit
  4906                           ;	BOR = OFF, Brown-out Reset disabled
  4907                           ;	Brown-out Reset Voltage bits
  4908                           ;	BORV = 25, VBOR set to 2.5V
  4909   300002                     	org	3145730
  4910   300002  0C                 	db	12
  4911                           
  4912                           ;Config register CONFIG2H @ 0x300003
  4913                           ;	Watchdog Timer Enable bit
  4914                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4915                           ;	Watchdog Timer Postscale Select bits
  4916                           ;	WDTPS = 128, 1:128
  4917   300003                     	org	3145731
  4918   300003  0E                 	db	14
  4919                           
  4920                           ;Config register CONFIG4L @ 0x300006
  4921                           ;	Stack Full/Underflow Reset Enable bit
  4922                           ;	STVR = ON, Stack Full/Underflow will cause Reset
  4923                           ;	Low-Voltage ICSP Enable bit
  4924                           ;	LVP = OFF, Low-Voltage ICSP disabled
  4925                           ;	Background Debugger Enable bit
  4926                           ;	DEBUG = 0x1, unprogrammed default
  4927   300006                     	org	3145734
  4928   300006  81                 	db	129
  4929                           
  4930                           ; Padding undefined space
  4931   300007                     	org	3145735
  4932   300007  FF                 	db	255
  4933                           
  4934                           ;Config register CONFIG5L @ 0x300008
  4935                           ;	Code Protection bit
  4936                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4937                           ;	Code Protection bit
  4938                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4939                           ;	Code Protection bit
  4940                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4941                           ;	Code Protection bit
  4942                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4943   300008                     	org	3145736
  4944   300008  0F                 	db	15
  4945                           
  4946                           ;Config register CONFIG5H @ 0x300009
  4947                           ;	Boot Block Code Protection bit
  4948                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4949                           ;	Data EEPROM Code Protection bit
  4950                           ;	CPD = OFF, Data EEPROM not code protected
  4951   300009                     	org	3145737
  4952   300009  C0                 	db	192
  4953                           
  4954                           ;Config register CONFIG6L @ 0x30000A
  4955                           ;	Write Protection bit
  4956                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4957                           ;	Write Protection bit
  4958                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4959                           ;	Write Protection bit
  4960                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4961                           ;	Write Protection bit
  4962                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4963   30000A                     	org	3145738
  4964   30000A  0F                 	db	15
  4965                           
  4966                           ;Config register CONFIG6H @ 0x30000B
  4967                           ;	Configuration Register Write Protection bit
  4968                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4969                           ;	Boot Block Write Protection bit
  4970                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4971                           ;	Data EEPROM Write Protection bit
  4972                           ;	WRTD = OFF, Data EEPROM not write protected
  4973   30000B                     	org	3145739
  4974   30000B  E0                 	db	224
  4975                           
  4976                           ;Config register CONFIG7L @ 0x30000C
  4977                           ;	Table Read Protection bit
  4978                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4979                           ;	Table Read Protection bit
  4980                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4981                           ;	Table Read Protection bit
  4982                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4983                           ;	Table Read Protection bit
  4984                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4985   30000C                     	org	3145740
  4986   30000C  0F                 	db	15
  4987                           
  4988                           ;Config register CONFIG7H @ 0x30000D
  4989                           ;	Boot Block Table Read Protection bit
  4990                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4991   30000D                     	org	3145741
  4992   30000D  40                 	db	64
  4993                           tosu	equ	0xFFF
  4994                           tosh	equ	0xFFE
  4995                           tosl	equ	0xFFD
  4996                           stkptr	equ	0xFFC
  4997                           pclatu	equ	0xFFB
  4998                           pclath	equ	0xFFA
  4999                           pcl	equ	0xFF9
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           prodh	equ	0xFF4
  5005                           prodl	equ	0xFF3
  5006                           indf0	equ	0xFEF
  5007                           postinc0	equ	0xFEE
  5008                           postdec0	equ	0xFED
  5009                           preinc0	equ	0xFEC
  5010                           plusw0	equ	0xFEB
  5011                           fsr0h	equ	0xFEA
  5012                           fsr0l	equ	0xFE9
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           postinc1	equ	0xFE6
  5016                           postdec1	equ	0xFE5
  5017                           preinc1	equ	0xFE4
  5018                           plusw1	equ	0xFE3
  5019                           fsr1h	equ	0xFE2
  5020                           fsr1l	equ	0xFE1
  5021                           bsr	equ	0xFE0
  5022                           indf2	equ	0xFDF
  5023                           postinc2	equ	0xFDE
  5024                           postdec2	equ	0xFDD
  5025                           preinc2	equ	0xFDC
  5026                           plusw2	equ	0xFDB
  5027                           fsr2h	equ	0xFDA
  5028                           fsr2l	equ	0xFD9
  5029                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      84
    BANK0           160      2      27
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    print_string@str	PTR unsigned char  size(2) Largest target is 24
		 -> STR_13(CODE[3]), STR_12(CODE[11]), STR_11(CODE[3]), STR_10(CODE[11]), 
		 -> STR_9(CODE[3]), STR_8(CODE[7]), STR_7(CODE[3]), STR_6(CODE[7]), 
		 -> STR_5(CODE[24]), STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[3]), 
		 -> BufferDAT(BANK0[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrups in COMRAM

    _Interrups->___aldiv
    _print_value->_WriteByte_USART
    _TransmitDAT_USART->_print_string
    _TransmitCMD_USART->_print_string
    _print_string->_WriteByte_USART
    _ReceiveCMD_USART->_ReadByte_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrups in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrups in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrups in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrups in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrups in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrups in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
                    _CloseSerialPort
                   _ConfigSerialPort
                     _OpenSerialPort
 ---------------------------------------------------------------------------------
 (1) _OpenSerialPort                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigSerialPort                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseSerialPort                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrups                                           14    14      0   10957
                                             14 COMRAM    14    14      0
                        _ReadDataADC
                   _ReceiveCMD_USART
                  _TransmitCMD_USART
                  _TransmitDAT_USART
                    _WriteByte_USART
                            ___aldiv
                       _print_string
                        _print_value
 ---------------------------------------------------------------------------------
 (3) _print_value                                          4     2      2    1960
                                              1 COMRAM     4     2      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    3948
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) _TransmitDAT_USART                                    2     2      0    1243
                                              3 COMRAM     2     2      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _TransmitCMD_USART                                    1     1      0    1175
                                              3 COMRAM     1     1      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_string                                         2     0      2    1131
                                              1 COMRAM     2     0      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (4) _WriteByte_USART                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReceiveCMD_USART                                     2     2      0     235
                                              3 COMRAM     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByte_USART                                       3     3      0      71
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ReadDataADC                                          5     3      2     116
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CloseSerialPort
   _ConfigSerialPort
   _OpenSerialPort

 _Interrups (ROOT)
   _ReadDataADC
   _ReceiveCMD_USART
     _ReadByte_USART
   _TransmitCMD_USART
     _WriteByte_USART
     _print_string
       _WriteByte_USART
   _TransmitDAT_USART
     _WriteByte_USART
     _print_string
   _WriteByte_USART
   ___aldiv
   _print_string
   _print_value
     _WriteByte_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      1B       5       16.9%
BITBIGSFRlll        81      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      54       1       89.4%
BITBIGSFRlhh        19      0       0      17        0.0%
BITBIGSFRlhlhhl     11      0       0      21        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRlhlhl       C      0       0      22        0.0%
BITBIGSFRlhllh       8      0       0      23        0.0%
BITBIGSFRlhlhhh      8      0       0      20        0.0%
BITBIGSFRllh         6      0       0      25        0.0%
BITBIGSFRlhlll       6      0       0      24        0.0%
BITBIGSFRlhlhhh      4      0       0      18        0.0%
BITBIGSFRlhlhhh      3      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      27        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 10 11:59:07 2023

                                                       ?_OpenSerialPort 0039  
                                                                   l204 19AE  
                                                                   l205 19B0  
                                                                   l290 1B02  
                                                                   l293 1B24  
                                                                   l296 1B2C  
                                                                   _PR2 0FCB  
                                               TransmitDAT_USART@DAT_ID 003C  
                                                                   wreg 0FE8  
                                                TransmitDAT_USART@conta 003D  
                                                                  l3701 1974  
                                                                  l3711 199A  
                                                                  l3703 1976  
                                                                  l3721 19A8  
                                                                  l3713 199E  
                                                                  l3705 1978  
                                                                  l3723 19AA  
                                                                  l3715 19A0  
                                                                  l3707 197A  
                                                                  l3725 19AC  
                                                                  l3717 19A4  
                                                                  l3709 1996  
                                                                  l3719 19A6  
                                                                  l3673 1AEA  
                                                                  l3675 1AEE  
                                                                  l3683 1B22  
                                                                  l3691 196A  
                                                                  l3685 1B28  
                                                                  l3677 1AFA  
                                                                  l3693 196C  
                                                                  l3679 1B00  
                                                                  l3695 196E  
                                                                  l3687 1946  
                                                                  l3697 1970  
                                                                  l3689 195C  
                                                                  l3699 1972  
                                                                  STR_1 15A5  
                                                                  STR_2 158C  
                                                                  STR_3 15AF  
                                                                  STR_4 158C  
                                                                  STR_5 1577  
                                                                  STR_6 15AF  
                                                                  STR_7 158C  
                                                                  STR_8 15AF  
                                                                  STR_9 158C  
                                                                  u2007 1986  
                                                                  _LATA 0F89  
                                                                  _LATB 0F8A  
                                                                  _LATC 0F8B  
                                                                  _TMR2 0FCC  
                                                                  _main 1946  
                                                         ??_ReadDataADC 003B  
                                                                  fsr0h 0FEA  
                                                                  indf0 0FEF  
                                                                  fsr2h 0FDA  
                                                                  fsr0l 0FE9  
                                                                  indf2 0FDF  
                                                                  fsr2l 0FD9  
                                               __end_of_CloseSerialPort 1B30  
                                                                  btemp 0055  
                                                                  start 1572  
                                                          ___param_bank 0000  
                                                       __end_of___aldiv 16F0  
                                                                 ?_main 0039  
                                                                 STR_10 158F  
                                                                 STR_11 158C  
                                                                 STR_12 159A  
                                                                 STR_13 158C  
                                                                 _T0CON 0FD5  
                                                                 _T2CON 0FCA  
                                                                 i2l123 0722  
                                                                 i2l301 18CE  
                                                                 i2l310 1942  
                                                                 i2l142 04DE  
                                                                 i2l128 0130  
                                                                 i2l305 18F2  
                                                                 i2l161 0806  
                                                                 i2l322 1AE4  
                                                                 i2l146 06DC  
                                                                 i2l163 08BC  
                                                                 i2l420 1736  
                                                                 i2l309 1938  
                                                                 i2l341 1AC2  
                                                                 i2l149 0ECC  
                                                                 i2l430 17DC  
                                                                 i2l422 174A  
                                                                 i2l414 1706  
                                                                 i2l334 18B0  
                                                                 i2l182 0F88  
                                                                 i2l423 174E  
                                                                 i2l319 1AD0  
                                                                 i2l416 171A  
                                                                 i2l328 1A22  
                                                                 i2l417 171E  
                                                                 i2l177 0C6A  
                                                                 i2l426 176E  
                                                                 i2l338 18B6  
                                                                 i2l346 1A76  
                                                                 i2l427 17B0  
                                                                 i2l419 1732  
                                                                 i2l196 1336  
                                                                 i2l349 1B1C  
                                                                 i2l197 1546  
                                                                 i2l199 154A  
                                                                 i2l299 1922  
                                                                 i2l651 16EC  
                                                                 _RCREG 0FAE  
                                                                 _RCSTA 0FAB  
                                                                 _TMR0H 0FD7  
                                                                 _TMR0L 0FD6  
                                                                 _SPBRG 0FAF  
                                                                 _TRISA 0F92  
                                                                 _TRISB 0F93  
                                                                 _TRISC 0F94  
                                                                 _TXREG 0FAD  
                                                                 _TXSTA 0FAC  
                                                                 tablat 0FF5  
                                                                 ttemp5 0056  
                                                                 ttemp6 0059  
                                                                 ttemp7 005D  
                                                                 status 0FD8  
                                                                 wtemp8 0056  
                                                       __initialization 1A7A  
                                                          __end_of_main 19B8  
                                                   __end_of_ReadDataADC 17E0  
                                                                ??_main 0079  
                                                         __activetblptr 0002  
                                                          ReadDataADC@i 003B  
                                                        _ReadByte_USART 18BC  
                                                                i2l3001 0824  
                                                                i2l3011 085E  
                                                                i2l3003 0828  
                                                                i2l3101 0A84  
                                                                i2l3021 087C  
                                                                i2l3013 086A  
                                                                i2l3005 0838  
                                                                i2l3111 0AC0  
                                                                i2l3031 08D6  
                                                                i2l3023 08A6  
                                                                i2l3007 083A  
                                                                i2l3201 0E26  
                                                                i2l3121 0AFE  
                                                                i2l3113 0AC2  
                                                                i2l3041 08F6  
                                                                i2l3033 08E6  
                                                                i2l3025 08A8  
                                                                i2l3009 084E  
                                                                i2l3211 0E58  
                                                                i2l3203 0E32  
                                                                i2l3131 0B1C  
                                                                i2l3123 0B0A  
                                                                i2l3115 0AD6  
                                                                i2l3107 0A88  
                                                                i2l3051 0948  
                                                                i2l3043 0904  
                                                                i2l3035 08F2  
                                                                i2l3027 08BE  
                                                                i2l3019 086E  
                                                                i2l2501 1940  
                                                                i2l3221 0EFE  
                                                                i2l3205 0E3E  
                                                                i2l3141 0B74  
                                                                i2l3133 0B46  
                                                                i2l3117 0ADA  
                                                                i2l3109 0A96  
                                                                i2l3053 095C  
                                                                i2l3045 092E  
                                                                i2l3029 08C2  
                                                                i2l3213 0E5E  
                                                                i2l2511 1704  
                                                                i2l3311 1108  
                                                                i2l3231 0F2A  
                                                                i2l3223 0F00  
                                                                i2l3215 0EE0  
                                                                i2l3207 0E4A  
                                                                i2l3151 0B94  
                                                                i2l3143 0B84  
                                                                i2l3135 0B48  
                                                                i2l3119 0AEE  
                                                                i2l3071 09CA  
                                                                i2l3063 097C  
                                                                i2l3055 096C  
                                                                i2l3047 0930  
                                                                i2l2521 1790  
                                                                i2l2513 1762  
                                                                i2l2505 16F2  
                                                                i2l2601 18B4  
                                                                i2l3401 1322  
                                                                i2l3321 1150  
                                                                i2l3313 111C  
                                                                i2l3305 10CE  
                                                                i2l3241 0F48  
                                                                i2l3233 0F36  
                                                                i2l3225 0F04  
                                                                i2l3217 0EF2  
                                                                i2l3209 0E50  
                                                                i2l3161 0BE6  
                                                                i2l3153 0BA2  
                                                                i2l3145 0B90  
                                                                i2l3137 0B5C  
                                                                i2l3129 0B0E  
                                                                i2l3073 09CE  
                                                                i2l3065 098A  
                                                                i2l3057 0978  
                                                                i2l3049 0944  
                                                                i2l2531 17D4  
                                                                i2l2523 1794  
                                                                i2l2507 16F8  
                                                                i2l3411 14B6  
                                                                i2l3403 1338  
                                                                i2l3331 118C  
                                                                i2l3315 1120  
                                                                i2l3307 10DC  
                                                                i2l3251 0FA2  
                                                                i2l3243 0F72  
                                                                i2l3227 0F06  
                                                                i2l3219 0EF6  
                                                                i2l3163 0BE8  
                                                                i2l3155 0BCC  
                                                                i2l3139 0B60  
                                                                i2l3091 0A3C  
                                                                i2l3075 09E2  
                                                                i2l3067 09B4  
                                                                i2l2525 179A  
                                                                i2l2509 1702  
                                                                i2l2605 1AA4  
                                                                i2l2541 1B16  
                                                                i2l3421 14F2  
                                                                i2l3413 14C2  
                                                                i2l3405 1498  
                                                                i2l3341 11CA  
                                                                i2l3333 118E  
                                                                i2l3317 1134  
                                                                i2l3309 1106  
                                                                i2l3261 0FC2  
                                                                i2l3253 0FB2  
                                                                i2l3245 0F74  
                                                                i2l3229 0F1A  
                                                                i2l3181 0C56  
                                                                i2l3165 0BFC  
                                                                i2l3157 0BCE  
                                                                i2l3093 0A50  
                                                                i2l3085 0A02  
                                                                i2l3077 09F2  
                                                                i2l3069 09B6  
                                                                i2l2701 007C  
                                                                i2l2527 17C6  
                                                                i2l2519 1786  
                                                                i2l2607 1AB0  
                                                                i2l2535 1B08  
                                                                i2l3431 152E  
                                                                i2l3423 14FE  
                                                                i2l3415 14CE  
                                                                i2l3407 14A4  
                                                                i2l3351 11E8  
                                                                i2l3343 11D6  
                                                                i2l3335 11A2  
                                                                i2l3327 1154  
                                                                i2l3319 1144  
                                                                i2l3271 1014  
                                                                i2l3263 0FD0  
                                                                i2l3255 0FBE  
                                                                i2l3247 0F8A  
                                                                i2l3239 0F3A  
                                                                i2l3191 0DEA  
                                                                i2l3183 0C6C  
                                                                i2l3175 0C1C  
                                                                i2l3167 0C0C  
                                                                i2l3159 0BE2  
                                                                i2l3095 0A54  
                                                                i2l3087 0A10  
                                                                i2l3079 09FE  
                                                                i2l2711 00A8  
                                                                i2l2703 007E  
                                                                i2l2529 17D0  
                                                                i2l2473 1ACA  
                                                                i2l2481 19E6  
                                                                i2l2609 1AB6  
                                                                i2l2561 1A6A  
                                                                i2l2545 1A2A  
                                                                i2l2537 1B0C  
                                                                i2l3433 1542  
                                                                i2l3425 150A  
                                                                i2l3417 14DA  
                                                                i2l3409 14AA  
                                                                i2l3361 1240  
                                                                i2l3353 1212  
                                                                i2l3337 11A6  
                                                                i2l3329 1162  
                                                                i2l3273 1028  
                                                                i2l3265 0FFA  
                                                                i2l3249 0F8E  
                                                                i2l3193 0DF6  
                                                                i2l3185 0DCC  
                                                                i2l3177 0C2A  
                                                                i2l3169 0C18  
                                                                i2l3097 0A68  
                                                                i2l3089 0A3A  
                                                                i2l2801 02C4  
                                                                i2l2721 00DE  
                                                                i2l2713 00AC  
                                                                i2l2705 0084  
                                                                i2l2491 18E2  
                                                                i2l2571 17E6  
                                                                i2l2475 1ACE  
                                                                i2l2483 19EA  
                                                                i2l2555 1A40  
                                                                i2l2547 1A36  
                                                                i2l2651 15E0  
                                                                i2l2539 1B10  
                                                                i2l3427 1516  
                                                                i2l3419 14E6  
                                                                i2l3371 1260  
                                                                i2l3363 1250  
                                                                i2l3355 1214  
                                                                i2l3339 11BA  
                                                                i2l3291 1096  
                                                                i2l3283 1048  
                                                                i2l3275 1038  
                                                                i2l3267 0FFC  
                                                                i2l3195 0E02  
                                                                i2l3187 0DD8  
                                                                i2l3179 0C54  
                                                                i2l3099 0A78  
                                                                i2l2803 02C8  
                                                                i2l2731 011A  
                                                                i2l2715 00AE  
                                                                i2l2707 0090  
                                                                i2l2493 18F6  
                                                                i2l2485 18BE  
                                                                i2l2581 181E  
                                                                i2l2573 17EE  
                                                                i2l2565 17E2  
                                                                i2l2477 19BA  
                                                                i2l2557 1A54  
                                                                i2l2549 1A3C  
                                                                i2l2661 161E  
                                                                i2l2653 15E4  
                                                                i2l2645 15BA  
                                                                i2l3429 152C  
                                                                i2l3381 12B2  
                                                                i2l3373 126E  
                                                                i2l3365 125C  
                                                                i2l3357 1228  
                                                                i2l3349 11DA  
                                                                i2l3293 109A  
                                                                i2l3285 1056  
                                                                i2l3277 1044  
                                                                i2l3269 1010  
                                                                i2l3197 0E0E  
                                                                i2l3189 0DDE  
                                                                i2l2901 066A  
                                                                i2l2821 0336  
                                                                i2l2805 02DC  
                                                                i2l2741 015A  
                                                                i2l2733 011C  
                                                                i2l2717 00C2  
                                                                i2l2709 009C  
                                                                i2l2495 18F8  
                                                                i2l2487 18C2  
                                                                i2l2591 186C  
                                                                i2l2583 1834  
                                                                i2l2479 19BE  
                                                                i2l2559 1A56  
                                                                i2l2671 166E  
                                                                i2l2663 1638  
                                                                i2l2655 15F8  
                                                                i2l2647 15BE  
                                                                i2l3383 12B4  
                                                                i2l3375 1298  
                                                                i2l3359 122C  
                                                                i2l3295 10AE  
                                                                i2l3287 1080  
                                                                i2l3199 0E1A  
                                                                i2l2911 06A6  
                                                                i2l2903 0676  
                                                                i2l2831 037E  
                                                                i2l2823 034A  
                                                                i2l2815 02FC  
                                                                i2l2807 02EC  
                                                                i2l2751 0178  
                                                                i2l2743 0166  
                                                                i2l2735 0132  
                                                                i2l2727 00E2  
                                                                i2l2719 00D2  
                                                                i2l2497 190A  
                                                                i2l2489 18C8  
                                                                i2l2593 1872  
                                                                i2l2585 183A  
                                                                i2l2577 1808  
                                                                i2l2673 1690  
                                                                i2l2665 1640  
                                                                i2l2681 16B4  
                                                                i2l2657 1608  
                                                                i2l2649 15D0  
                                                                i2l3385 12C8  
                                                                i2l3377 129A  
                                                                i2l3297 10BE  
                                                                i2l3289 1082  
                                                                i2l2913 06B2  
                                                                i2l2905 0682  
                                                                i2l2841 03BA  
                                                                i2l2825 034E  
                                                                i2l2817 030A  
                                                                i2l2809 02F8  
                                                                i2l2761 01D0  
                                                                i2l2753 01A2  
                                                                i2l2737 0136  
                                                                i2l2729 00F0  
                                                                i2l2921 06E4  
                                                                i2l2499 191C  
                                                                i2l2595 1888  
                                                                i2l2587 1850  
                                                                i2l2579 180C  
                                                                i2l2683 16CA  
                                                                i2l2675 16A0  
                                                                i2l2667 164E  
                                                                i2l2659 160C  
                                                                i2l3395 12E8  
                                                                i2l3387 12D8  
                                                                i2l3379 12AE  
                                                                i2l3299 10CA  
                                                                i2l2931 0762  
                                                                i2l2923 0736  
                                                                i2l2915 06BE  
                                                                i2l2907 068E  
                                                                i2l2851 03F8  
                                                                i2l2843 03BC  
                                                                i2l2827 0362  
                                                                i2l2819 0334  
                                                                i2l2771 01F0  
                                                                i2l2763 01E0  
                                                                i2l2755 01A4  
                                                                i2l2739 014A  
                                                                i2l2691 003E  
                                                                i2l2597 18A8  
                                                                i2l2589 1856  
                                                                i2l2685 16DA  
                                                                i2l2677 16A2  
                                                                i2l2669 1662  
                                                                i2l3397 12F6  
                                                                i2l3389 12E4  
                                                                i2l2941 077C  
                                                                i2l2933 076A  
                                                                i2l2925 0748  
                                                                i2l2917 06C4  
                                                                i2l2909 069A  
                                                                i2l2861 0416  
                                                                i2l2853 0404  
                                                                i2l2845 03D0  
                                                                i2l2837 0382  
                                                                i2l2829 0372  
                                                                i2l2781 0242  
                                                                i2l2773 01FE  
                                                                i2l2765 01EC  
                                                                i2l2757 01B8  
                                                                i2l2749 016A  
                                                                i2l2693 0050  
                                                                i2l2679 16AE  
                                                                i2l3399 1320  
                                                                i2l2951 0796  
                                                                i2l2943 0786  
                                                                i2l2935 0770  
                                                                i2l2927 0752  
                                                                i2l2919 06D0  
                                                                i2l2871 045C  
                                                                i2l2863 0440  
                                                                i2l2847 03D4  
                                                                i2l2839 0390  
                                                                i2l2783 0256  
                                                                i2l2775 0228  
                                                                i2l2759 01BC  
                                                                i2l2695 0058  
                                                                i2l2961 07AC  
                                                                i2l2953 079C  
                                                                i2l2945 078E  
                                                                i2l2937 0774  
                                                                i2l2929 075A  
                                                                i2l2873 0470  
                                                                i2l2865 0442  
                                                                i2l2849 03E8  
                                                                i2l2793 0276  
                                                                i2l2785 0266  
                                                                i2l2777 022A  
                                                                i2l2697 006E  
                                                                i2l2689 002C  
                                                                i2l2971 07CE  
                                                                i2l2963 07B2  
                                                                i2l2955 07A4  
                                                                i2l2947 0792  
                                                                i2l2939 0778  
                                                                i2l3771 06FA  
                                                                i2l2891 04E0  
                                                                i2l2883 0490  
                                                                i2l2875 0480  
                                                                i2l2867 0456  
                                                                i2l2859 0408  
                                                                i2l2795 0284  
                                                                i2l2787 0272  
                                                                i2l2779 023E  
                                                                i2l2699 0070  
                                                                i2l3773 0E74  
                                                                i2l2981 07F0  
                                                                i2l2973 07D0  
                                                                i2l2965 07BE  
                                                                i2l2957 07A8  
                                                                i2l2949 0794  
                                                                i2l2893 0640  
                                                                i2l2885 049E  
                                                                i2l2877 048C  
                                                                i2l2869 045A  
                                                                i2l2797 02AE  
                                                                i2l2991 080A  
                                                                i2l2983 07F8  
                                                                i2l2975 07D2  
                                                                i2l2967 07C6  
                                                                i2l2959 07AA  
                                                                i2l2895 064C  
                                                                i2l2887 04C8  
                                                                i2l2799 02B0  
                                                                _INTCON 0FF2  
                                                                i2l2993 0816  
                                                                i2l2985 07FC  
                                                                i2l2977 07D8  
                                                                i2l2969 07CA  
                                                                i2l2897 0652  
                                                                i2l2889 04CA  
                                                                i2l2995 0818  
                                                                i2l2987 07FE  
                                                                i2l2979 07E4  
                                                                i2l2899 065E  
                                                                i2l2997 081A  
                                                                i2l2989 0800  
                                                                i2l2999 0820  
                                                                _CmdGPS 0035  
                                                      ?_CloseSerialPort 0039  
                                                                _Data_G 0027  
                                                                _Data_X 0031  
                                                                _Data_Y 002F  
                                                                _Data_Z 002D  
                                              __end_of_ReceiveCMD_USART 18BC  
                                                                _FlagRX 0038  
                                              __end_of_ConfigSerialPort 1B06  
                                                           _ContaSample 0033  
                                                             ??___aldiv 0041  
                                                      print_value@Bytes 003C  
                                                                clear_0 1A80  
                                                                clear_1 1A8C  
                                                            _SumData_TC 0011  
                                                            _SumData_TS 000D  
                                                      print_value@value 003A  
                                                                isa$std 0001  
                                                           Interrups@ID 0053  
                                                __end_of_ReadByte_USART 1946  
                                                          __mediumconst 0000  
                                                                tblptrh 0FF7  
                                                                tblptrl 0FF6  
                                                                tblptru 0FF8  
                                                            __accesstop 0060  
                                               __end_of__initialization 1A92  
                                                          ?_print_value 003A  
                                                           _ReadDataADC 16F0  
                                                         ___rparam_used 0001  
                                                      ??_OpenSerialPort 0079  
                                                        __pcstackCOMRAM 0039  
                                                       ?_ReadByte_USART 0039  
                                                     __end_of_Interrups 1572  
                                                            __pbssBANK0 0060  
                                                               _Data_TC 002B  
                                                               _Data_TS 0029  
                                                               _FlagGPS 0037  
                                                               __Hparam 0000  
                                                               __Lparam 0000  
                                                    ReadDataADC@DataADC 003C  
                                                               ___aldiv 15B8  
                                                          __psmallconst 1576  
                                                               __pcinit 1A7A  
                                                               __ramtop 0600  
                                                               __ptext0 1946  
                                                               __ptext1 1B20  
                                                               __ptext2 1AE8  
                                                               __ptext3 1B28  
                                                               __ptext5 1B06  
                                                               __ptext6 15B8  
                                                               __ptext7 1A26  
                                                               __ptext8 1AA0  
                                                               __ptext9 19B8  
                                                             _T2CONbits 0FCA  
                                                      ___aldiv@dividend 0039  
                                                  end_of_initialization 1A92  
                                                   WriteByte_USART@byte 0039  
                                                         __Lmediumconst 0000  
                                                     ?_ReceiveCMD_USART 0039  
                                                     ?_ConfigSerialPort 0039  
                                                    ??_ReceiveCMD_USART 003C  
                                                             _RCSTAbits 0FAB  
                                                      ___aldiv@quotient 0043  
                                                               postinc0 0FEE  
                                                    ??_ConfigSerialPort 0079  
                                                     ??_WriteByte_USART 0039  
                                                             _PORTBbits 0F81  
                                                             _PORTCbits 0F82  
                                                             _TRISBbits 0F93  
                                                             _TRISCbits 0F94  
                                                         ?_print_string 003A  
                                                             _Data_AUX0 0025  
                                                             _Data_AUX1 0023  
                                                             _Data_AUX2 0021  
                                                             _DataBytes 0060  
                                                             _TXSTAbits 0FAC  
                                                          ?_ReadDataADC 0039  
                                                             _BufferDAT 006C  
                                                      ??_ReadByte_USART 0039  
                                                   start_initialization 1A7A  
                                                             _RegBuffer 0036  
                                                        ??_print_string 003C  
                                               TransmitCMD_USART@CMD_ID 003C  
                                                             _Interrups 0008  
                                            ReceiveCMD_USART@conta_byte 003C  
                                                     _TransmitDAT_USART 1A26  
                                                             _SumData_X 001D  
                                                             _SumData_Y 0019  
                                                             _SumData_Z 0015  
                                                     _TransmitCMD_USART 1AA0  
                                                    ?_TransmitDAT_USART 0039  
                                                    ?_TransmitCMD_USART 0039  
                                                           __pbssCOMRAM 0001  
                                                   ??_TransmitDAT_USART 003C  
                                                         __pcstackBANK0 0079  
                                                   ??_TransmitCMD_USART 003C  
                                                            ?_Interrups 0039  
                                             __end_of_TransmitDAT_USART 1A7A  
                                             __end_of_TransmitCMD_USART 1AC6  
                                                             __pintcode 0008  
                                                              ?___aldiv 0039  
                                                       print_string@str 003A  
                                                           __smallconst 1576  
                                                     ??_CloseSerialPort 0079  
                                                       ___aldiv@divisor 003D  
                                                       ___aldiv@counter 0041  
                                                              _LATAbits 0F89  
                                                              _LATBbits 0F8A  
                                                              _LATCbits 0F8B  
                                                       _WriteByte_USART 1AC6  
                                                              _PIE1bits 0F9D  
                                                              i2u101_40 1AE2  
                                                              i2u101_41 1ADC  
                                                              i2u110_40 1718  
                                                              i2u102_40 19E2  
                                                              i2u110_41 1712  
                                                              i2u102_47 19D8  
                                                              i2u111_40 1730  
                                                              i2u103_40 1A0E  
                                                              i2u111_41 172A  
                                                              i2u103_47 1A04  
                                                              i2u112_40 1748  
                                                              i2u120_40 1832  
                                                              i2u104_40 1A20  
                                                              i2u112_41 1742  
                                                              i2u120_41 182C  
                                                              i2u104_41 1A1A  
                                                              i2u113_40 1760  
                                                              i2u105_40 18E0  
                                                              i2u121_40 184E  
                                                              i2u113_41 175A  
                                                              i2u105_41 18DA  
                                                              i2u121_41 1848  
                                                              i2u201_47 00B4  
                                                              i2u114_40 1784  
                                                              i2u106_40 18F2  
                                                              i2u122_40 186A  
                                                              i2u130_40 15F6  
                                                              i2u114_41 177E  
                                                              i2u106_41 18EC  
                                                              i2u122_41 1864  
                                                              i2u130_41 15F0  
                                                              i2u210_47 08C8  
                                                              i2u202_47 013C  
                                                              i2u115_40 17AE  
                                                              i2u107_40 1908  
                                                              i2u123_40 1886  
                                                              i2u131_40 1636  
                                                              i2u115_41 17A8  
                                                              i2u107_41 1902  
                                                              i2u123_41 1880  
                                                              i2u131_41 1630  
                                                              i2u211_47 094E  
                                                              i2u203_47 01C2  
                                                              i2u116_40 17C4  
                                                              i2u108_40 191C  
                                                              i2u132_40 1660  
                                                              i2u140_40 023C  
                                                              i2u116_41 17BE  
                                                              i2u108_41 1916  
                                                              i2u132_41 165A  
                                                              i2u140_41 0236  
                                                              i2u220_47 10A0  
                                                              i2u212_47 09D4  
                                                              i2u204_47 0248  
                                                              i2u109_40 1936  
                                                              i2u117_40 1A68  
                                                              i2u133_40 168E  
                                                              i2u141_40 02C2  
                                                              i2u109_41 1930  
                                                              i2u117_41 1A62  
                                                              i2u133_41 1688  
                                                              i2u141_41 02BC  
                                                              i2u221_47 1126  
                                                              i2u213_47 0A5A  
                                                              i2u205_47 02CE  
                                                              i2u118_40 1802  
                                                              i2u134_40 16C8  
                                                              i2u150_40 09C8  
                                                              i2u142_40 0348  
                                                              i2u118_41 17FC  
                                                              i2u134_41 16C2  
                                                              i2u150_41 09C2  
                                                              i2u142_41 0342  
                                                              i2u222_47 11AC  
                                                              i2u214_47 0AE0  
                                                              i2u206_47 0354  
                                                              i2u119_40 181E  
                                                              i2u151_40 0A4E  
                                                              i2u143_40 03CE  
                                                              i2u135_40 003C  
                                                              i2u119_41 1818  
                                                              i2u151_41 0A48  
                                                              i2u143_41 03C8  
                                                              i2u135_41 0036  
                                                              i2u223_47 1232  
                                                              i2u215_47 0B66  
                                                              i2u207_47 03DA  
                                                              i2u160_40 1094  
                                                              i2u152_40 0AD4  
                                                              i2u144_40 0454  
                                                              i2u136_40 004E  
                                                              i2u160_41 108E  
                                                              i2u152_41 0ACE  
                                                              i2u144_41 044E  
                                                              i2u136_41 0048  
                                                              i2u224_47 12BA  
                                                              i2u216_47 0BEE  
                                                              i2u208_47 0462  
                                                              i2u129_40 15CE  
                                                              i2u161_40 111A  
                                                              i2u153_40 0B5A  
                                                              i2u145_40 04DC  
                                                              i2u137_40 006C  
                                                              i2u129_41 15C8  
                                                              i2u161_41 1114  
                                                              i2u153_41 0B54  
                                                              i2u145_41 04D6  
                                                              i2u137_41 0066  
                                                              i2u225_47 16FA  
                                                              i2u217_47 0F0C  
                                                              i2u209_47 0840  
                                                              i2u162_40 11A0  
                                                              i2u154_40 0BE0  
                                                              i2u146_40 0734  
                                                              i2u138_40 012E  
                                                              i2u162_41 119A  
                                                              i2u154_41 0BDA  
                                                              i2u146_41 072E  
                                                              i2u138_41 0128  
                                                              i2u218_47 0F94  
                                                              i2u163_40 1226  
                                                              i2u155_40 0C68  
                                                              i2u147_40 0746  
                                                              i2u139_40 01B6  
                                                              i2u163_41 1220  
                                                              i2u155_41 0C62  
                                                              i2u147_41 0740  
                                                              i2u139_41 01B0  
                                                              i2u219_47 101A  
                                                              i2u164_40 12AC  
                                                              i2u156_40 0EDE  
                                                              i2u148_40 08BA  
                                                              i2u164_41 12A6  
                                                              i2u156_41 0ED8  
                                                              i2u148_41 08B4  
                                                              i2u165_40 1334  
                                                              i2u157_40 0EF0  
                                                              i2u149_40 0942  
                                                              i2u165_41 132E  
                                                              i2u157_41 0EEA  
                                                              i2u149_41 093C  
                                                              i2u166_40 152A  
                                                              i2u158_40 0F86  
                                                              i2u166_41 1524  
                                                              i2u158_41 0F80  
                                                              i2u167_40 1540  
                                                              i2u159_40 100E  
                                                              i2u167_41 153A  
                                                              i2u159_41 1008  
                                                              _PIR1bits 0F9E  
                                                              _RCONbits 0FD0  
                                                  __end_of_print_string 1A26  
                                                            _ADCON1bits 0FC1  
                                             ReceiveCMD_USART@data_byte 003D  
                                                           _INTCON2bits 0FF1  
                                                        Interrups@conta 0054  
                                                           ??_Interrups 0047  
                                                         ??_print_value 003C  
                                                              __Hrparam 0000  
                                                              __Lrparam 0000  
                                                              __ptext10 1AC6  
                                                              __ptext11 17E0  
                                                              __ptext12 18BC  
                                                              __ptext13 16F0  
                                               __end_of_WriteByte_USART 1AE8  
                                                          _SumData_AUX0 0009  
                                                          _SumData_AUX1 0005  
                                                          _SumData_AUX2 0001  
                                                   __end_of_print_value 1B20  
                                                              isa$xinst 0000  
                                                              int$flags 0055  
                                                        _OpenSerialPort 1B20  
                                                            _INTCONbits 0FF2  
                                                              intlevel2 1B30  
                                                   ReadByte_USART@Ready 003B  
                                                   ReadByte_USART@conta 003A  
                                                         _ControlSample 0034  
                                                       _CloseSerialPort 1B28  
                                                __end_of_OpenSerialPort 1B28  
                                                      _ReceiveCMD_USART 17E0  
                                                      _ConfigSerialPort 1AE8  
                                                    ReadByte_USART@data 0039  
                                                          ___aldiv@sign 0042  
                                                          _print_string 19B8  
                                                      ?_WriteByte_USART 0039  
                                                           _print_value 1B06  
