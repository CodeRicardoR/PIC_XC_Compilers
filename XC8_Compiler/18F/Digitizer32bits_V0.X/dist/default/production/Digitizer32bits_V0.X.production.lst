

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Oct 19 14:48:01 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F258
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F258 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  001864                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for _BufferDAT
    87  001864  58                 	db	88
    88  001865  58                 	db	88
    89  001866  58                 	db	88
    90  001867  58                 	db	88
    91  001868  58                 	db	88
    92  001869  58                 	db	88
    93  00186A  58                 	db	88
    94  00186B  58                 	db	88
    95  00186C  58                 	db	88
    96  00186D  58                 	db	88
    97  00186E  58                 	db	88
    98  00186F  58                 	db	88
    99  001870  00                 	db	0
   100  0000                     _TXREG	set	4013
   101  0000                     _RCREG	set	4014
   102  0000                     _SPBRG	set	4015
   103  0000                     _TXSTA	set	4012
   104  0000                     _LATB	set	3978
   105  0000                     _ADCON1bits	set	4033
   106  0000                     _LATCbits	set	3979
   107  0000                     _TXSTAbits	set	4012
   108  0000                     _T2CONbits	set	4042
   109  0000                     _RCSTA	set	4011
   110  0000                     _SSPSTATbits	set	4039
   111  0000                     _TRISCbits	set	3988
   112  0000                     _INTCON	set	4082
   113  0000                     _TRISBbits	set	3987
   114  0000                     _LATC	set	3979
   115  0000                     _LATA	set	3977
   116  0000                     _PORTCbits	set	3970
   117  0000                     _LATAbits	set	3977
   118  0000                     _PIE1bits	set	3997
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _T0CON	set	4053
   121  0000                     _TMR0L	set	4054
   122  0000                     _TMR0H	set	4055
   123  0000                     _PIR1bits	set	3998
   124  0000                     _INTCONbits	set	4082
   125  0000                     _TRISA	set	3986
   126  0000                     _SSPCON1bits	set	4038
   127  0000                     _SSPSTAT	set	4039
   128  0000                     _RCONbits	set	4048
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISB	set	3987
   131  0000                     _SSPBUF	set	4041
   132  0000                     _TMR2	set	4044
   133  0000                     _PR2	set	4043
   134  0000                     _T2CON	set	4042
   135                           
   136                           	psect	smallconst
   137  001022                     __psmallconst:
   138                           	callstack 0
   139  001022  00                 	db	0
   140  001023                     STR_1:
   141  001023  47                 	db	71	;'G'
   142  001024  2D                 	db	45
   143  001025  4A                 	db	74	;'J'
   144  001026  52                 	db	82	;'R'
   145  001027  4F                 	db	79	;'O'
   146  001028  44                 	db	68	;'D'
   147  001029  41                 	db	65	;'A'
   148  00102A  54                 	db	84	;'T'
   149  00102B  45                 	db	69	;'E'
   150  00102C  58                 	db	88	;'X'
   151  00102D  58                 	db	88	;'X'
   152  00102E  58                 	db	88	;'X'
   153  00102F  58                 	db	88	;'X'
   154  001030  58                 	db	88	;'X'
   155  001031  58                 	db	88	;'X'
   156  001032  58                 	db	88	;'X'
   157  001033  58                 	db	88	;'X'
   158  001034  58                 	db	88	;'X'
   159  001035  58                 	db	88	;'X'
   160  001036  58                 	db	88	;'X'
   161  001037  58                 	db	88	;'X'
   162  001038  0A                 	db	10
   163  001039  0D                 	db	13
   164  00103A  00                 	db	0
   165  00103B                     STR_6:
   166  00103B  4E                 	db	78	;'N'
   167  00103C  4E                 	db	78	;'N'
   168  00103D  4E                 	db	78	;'N'
   169  00103E  4E                 	db	78	;'N'
   170  00103F  4A                 	db	74	;'J'
   171  001040  52                 	db	82	;'R'
   172  001041  4F                 	db	79	;'O'
   173  001042  43                 	db	67	;'C'
   174  001043  4D                 	db	77	;'M'
   175  001044  44                 	db	68	;'D'
   176  001045  00                 	db	0
   177  001046                     STR_8:
   178  001046  4E                 	db	78	;'N'
   179  001047  4E                 	db	78	;'N'
   180  001048  4E                 	db	78	;'N'
   181  001049  4E                 	db	78	;'N'
   182  00104A  4A                 	db	74	;'J'
   183  00104B  52                 	db	82	;'R'
   184  00104C  4F                 	db	79	;'O'
   185  00104D  44                 	db	68	;'D'
   186  00104E  41                 	db	65	;'A'
   187  00104F  54                 	db	84	;'T'
   188  001050  00                 	db	0
   189  001051                     STR_2:
   190  001051  4A                 	db	74	;'J'
   191  001052  52                 	db	82	;'R'
   192  001053  4F                 	db	79	;'O'
   193  001054  41                 	db	65	;'A'
   194  001055  44                 	db	68	;'D'
   195  001056  51                 	db	81	;'Q'
   196  001057  2C                 	db	44
   197  001058  00                 	db	0
   198  001059                     STR_3:
   199  001059  2C                 	db	44
   200  00105A  0A                 	db	10
   201  00105B  0D                 	db	13
   202  00105C  00                 	db	0
   203  00105D  00                 	db	0	; dummy byte at the end
   204  0000                     
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208  001656                     __pcinit:
   209                           	callstack 0
   210  001656                     start_initialization:
   211                           	callstack 0
   212  001656                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to BANK0 (13 bytes)
   216                           ; load TBLPTR registers with __pidataBANK0
   217  001656  0E64               	movlw	low __pidataBANK0
   218  001658  6EF6               	movwf	tblptrl,c
   219  00165A  0E18               	movlw	high __pidataBANK0
   220  00165C  6EF7               	movwf	tblptrh,c
   221  00165E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   222  001660  6EF8               	movwf	tblptru,c
   223  001662  EE00  F075         	lfsr	0,__pdataBANK0
   224  001666  EE10 F00D          	lfsr	1,13
   225  00166A                     copy_data0:
   226  00166A  0009               	tblrd		*+
   227  00166C  CFF5 FFEE          	movff	tablat,postinc0
   228  001670  50E5               	movf	postdec1,w,c
   229  001672  50E1               	movf	fsr1l,w,c
   230  001674  E1FA               	bnz	copy_data0
   231                           
   232                           ; Clear objects allocated to BANK0 (21 bytes)
   233  001676  EE00  F060         	lfsr	0,__pbssBANK0
   234  00167A  0E15               	movlw	21
   235  00167C                     clear_0:
   236  00167C  6AEE               	clrf	postinc0,c
   237  00167E  06E8               	decf	wreg,f,c
   238  001680  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to COMRAM (49 bytes)
   241  001682  EE00  F001         	lfsr	0,__pbssCOMRAM
   242  001686  0E31               	movlw	49
   243  001688                     clear_1:
   244  001688  6AEE               	clrf	postinc0,c
   245  00168A  06E8               	decf	wreg,f,c
   246  00168C  E1FD               	bnz	clear_1
   247  00168E                     end_of_initialization:
   248                           	callstack 0
   249  00168E                     __end_of__initialization:
   250                           	callstack 0
   251  00168E  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   252  001690  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   253  001692  0E00               	movlw	low (__Lmediumconst shr (0+16))
   254  001694  6EF8               	movwf	tblptru,c
   255  001696  0100               	movlb	0
   256  001698  EFD6  F00A         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259  000001                     __pbssCOMRAM:
   260                           	callstack 0
   261  000001                     _SumData_Z:
   262                           	callstack 0
   263  000001                     	ds	8
   264  000009                     _SumData_Y:
   265                           	callstack 0
   266  000009                     	ds	8
   267  000011                     _SumData_X:
   268                           	callstack 0
   269  000011                     	ds	8
   270  000019                     _Data_TS:
   271                           	callstack 0
   272  000019                     	ds	4
   273  00001D                     _Data_TC:
   274                           	callstack 0
   275  00001D                     	ds	4
   276  000021                     _Data_Z:
   277                           	callstack 0
   278  000021                     	ds	4
   279  000025                     _Data_Y:
   280                           	callstack 0
   281  000025                     	ds	4
   282  000029                     _Data_X:
   283                           	callstack 0
   284  000029                     	ds	4
   285  00002D                     _BufferSPI:
   286                           	callstack 0
   287  00002D                     	ds	3
   288  000030                     _ModeSample:
   289                           	callstack 0
   290  000030                     	ds	1
   291  000031                     _ContaSample:
   292                           	callstack 0
   293  000031                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296  000060                     __pbssBANK0:
   297                           	callstack 0
   298  000060                     _SumData_TS:
   299                           	callstack 0
   300  000060                     	ds	8
   301  000068                     _SumData_TC:
   302                           	callstack 0
   303  000068                     	ds	8
   304  000070                     print_value@F5258:
   305                           	callstack 0
   306  000070                     	ds	5
   307                           
   308                           	psect	dataBANK0
   309  000075                     __pdataBANK0:
   310                           	callstack 0
   311  000075                     _BufferDAT:
   312                           	callstack 0
   313  000075                     	ds	13
   314                           
   315                           	psect	cstackBANK0
   316  000000                     __pcstackBANK0:
   317                           	callstack 0
   318  000000                     
   319                           ; 1 bytes @ 0x0
   320                           
   321                           	psect	cstackCOMRAM
   322  000032                     __pcstackCOMRAM:
   323                           	callstack 0
   324  000032                     ?___aodiv:
   325                           	callstack 0
   326  000032                     TransferByte_SPI@data:
   327                           	callstack 0
   328  000032                     ReadByte_USART@data:
   329                           	callstack 0
   330  000032                     WriteByte_USART@byte:
   331                           	callstack 0
   332  000032                     ___aodiv@dividend:
   333                           	callstack 0
   334                           
   335                           ; 8 bytes @ 0x0
   336  000032                     	ds	1
   337  000033                     ??_ResetAD7177:
   338  000033                     ?_ReadADC32:
   339                           	callstack 0
   340  000033                     ReadRegister_1bytesAD7177@command:
   341                           	callstack 0
   342  000033                     ReadRegister_2bytesAD7177@command:
   343                           	callstack 0
   344  000033                     ReadByte_USART@conta:
   345                           	callstack 0
   346  000033                     print_string@str:
   347                           	callstack 0
   348  000033                     print_value@value:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x1
   352  000033                     	ds	1
   353  000034                     ResetAD7177@conta:
   354                           	callstack 0
   355  000034                     ReadByte_USART@Ready:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x2
   359  000034                     	ds	1
   360  000035                     ReceiveCMD_USART@conta_byte:
   361                           	callstack 0
   362  000035                     TransmitCMD_USART@CMD_ID:
   363                           	callstack 0
   364  000035                     TransmitDAT_USART@DAT_ID:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x3
   368  000035                     	ds	1
   369  000036                     ReceiveCMD_USART@data_byte:
   370                           	callstack 0
   371  000036                     TransmitDAT_USART@conta:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x4
   375  000036                     	ds	1
   376  000037                     ??_ReadADC32:
   377  000037                     ??_print_value:
   378                           
   379                           ; 1 bytes @ 0x5
   380  000037                     	ds	3
   381  00003A                     ___aodiv@divisor:
   382                           	callstack 0
   383                           
   384                           ; 8 bytes @ 0x8
   385  00003A                     	ds	1
   386  00003B                     ReadADC32@DataADC:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x9
   390  00003B                     	ds	1
   391  00003C                     print_value@Bytes:
   392                           	callstack 0
   393                           
   394                           ; 5 bytes @ 0xA
   395  00003C                     	ds	3
   396  00003F                     ReadADC32@byte3:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0xD
   400  00003F                     	ds	1
   401  000040                     ReadADC32@byte2:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xE
   405  000040                     	ds	1
   406  000041                     ReadADC32@byte1:
   407                           	callstack 0
   408  000041                     print_value@conta:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xF
   412  000041                     	ds	1
   413  000042                     ReadADC32@byte0:
   414                           	callstack 0
   415  000042                     ___aodiv@counter:
   416                           	callstack 0
   417  000042                     print_value@RegTemp:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x10
   421  000042                     	ds	1
   422  000043                     ___aodiv@sign:
   423                           	callstack 0
   424  000043                     ReadADC32@data_ini:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x11
   428  000043                     	ds	1
   429  000044                     ___aodiv@quotient:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x12
   433  000044                     	ds	8
   434  00004C                     ??_Interrups:
   435                           
   436                           ; 1 bytes @ 0x1A
   437  00004C                     	ds	16
   438  00005C                     Interrups@ID:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x2A
   442  00005C                     	ds	1
   443  00005D                     Interrups@conta:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x2B
   447  00005D                     	ds	1
   448                           
   449 ;;
   450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   451 ;;
   452 ;; *************** function _main *****************
   453 ;; Defined at:
   454 ;;		line 313 in file "Digitizer32bits_V0.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   468 ;;      Params:         0       0       0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels required when called: 5
   474 ;; This function calls:
   475 ;;		_ClosePort_SPI
   476 ;;		_CloseSerialPort
   477 ;;		_ConfigPort_SPI
   478 ;;		_ConfigSerialPort
   479 ;;		_OpenPort_SPI
   480 ;;		_OpenSerialPort
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text0
   487  0015AC                     __ptext0:
   488                           	callstack 0
   489  0015AC                     _main:
   490                           	callstack 26
   491  0015AC  FFFF               	dw	65535	; assembler added errata NOP
   492                           
   493                           ;Digitizer32bits_V0.c: 317:     ADCON1bits.PCFG = 0x07;
   494  0015AE  50C1               	movf	193,w,c	;volatile
   495  0015B0  0BF0               	andlw	-16
   496  0015B2  0907               	iorlw	7
   497  0015B4  6EC1               	movwf	193,c	;volatile
   498                           
   499                           ;Digitizer32bits_V0.c: 318:     LATA = 0;
   500  0015B6  0E00               	movlw	0
   501  0015B8  6E89               	movwf	137,c	;volatile
   502                           
   503                           ;Digitizer32bits_V0.c: 319:     LATB = 0;
   504  0015BA  0E00               	movlw	0
   505  0015BC  6E8A               	movwf	138,c	;volatile
   506                           
   507                           ;Digitizer32bits_V0.c: 320:     LATC = 0;
   508  0015BE  0E00               	movlw	0
   509  0015C0  6E8B               	movwf	139,c	;volatile
   510                           
   511                           ;Digitizer32bits_V0.c: 321:     TRISA = 0;
   512  0015C2  0E00               	movlw	0
   513  0015C4  6E92               	movwf	146,c	;volatile
   514                           
   515                           ;Digitizer32bits_V0.c: 322:     TRISB = 0;
   516  0015C6  0E00               	movlw	0
   517  0015C8  6E93               	movwf	147,c	;volatile
   518                           
   519                           ;Digitizer32bits_V0.c: 323:     TRISC = 0;
   520  0015CA  0E00               	movlw	0
   521  0015CC  6E94               	movwf	148,c	;volatile
   522  0015CE                     
   523                           ;Digitizer32bits_V0.c: 325:     TRISBbits.TRISB0 = 1;
   524  0015CE  8093               	bsf	147,0,c	;volatile
   525  0015D0                     
   526                           ;Digitizer32bits_V0.c: 326:     LATAbits.LATA1 = 0;
   527  0015D0  9289               	bcf	137,1,c	;volatile
   528  0015D2                     
   529                           ;Digitizer32bits_V0.c: 327:     LATAbits.LATA2 = 0;
   530  0015D2  9489               	bcf	137,2,c	;volatile
   531                           
   532                           ;Digitizer32bits_V0.c: 330:     ContaSample = 0;
   533  0015D4  0E00               	movlw	0
   534  0015D6  6E31               	movwf	_ContaSample^0,c
   535                           
   536                           ;Digitizer32bits_V0.c: 331:     ModeSample = 0;
   537  0015D8  0E00               	movlw	0
   538  0015DA  6E30               	movwf	_ModeSample^0,c
   539  0015DC                     
   540                           ;Digitizer32bits_V0.c: 335:     LATCbits.LATC2 = 1;
   541  0015DC  848B               	bsf	139,2,c	;volatile
   542  0015DE                     
   543                           ;Digitizer32bits_V0.c: 336:     ConfigPort_SPI();
   544  0015DE  ECF5  F00B         	call	_ConfigPort_SPI	;wreg free
   545                           
   546                           ;Digitizer32bits_V0.c: 337:     OpenPort_SPI();
   547  0015E2  EC3D  F00C         	call	_OpenPort_SPI	;wreg free
   548  0015E6                     
   549                           ;Digitizer32bits_V0.c: 340:     ConfigSerialPort();
   550  0015E6  ECD8  F00B         	call	_ConfigSerialPort	;wreg free
   551  0015EA                     
   552                           ;Digitizer32bits_V0.c: 341:     OpenSerialPort();
   553  0015EA  EC39  F00C         	call	_OpenSerialPort	;wreg free
   554  0015EE                     
   555                           ;Digitizer32bits_V0.c: 347:     RCONbits.IPEN = 0;
   556  0015EE  9ED0               	bcf	208,7,c	;volatile
   557  0015F0                     
   558                           ;Digitizer32bits_V0.c: 348:     INTCON = 0x00;
   559  0015F0  0E00               	movlw	0
   560  0015F2  6EF2               	movwf	242,c	;volatile
   561  0015F4                     
   562                           ;Digitizer32bits_V0.c: 350:     INTCONbits.PEIE = 1;
   563  0015F4  8CF2               	bsf	242,6,c	;volatile
   564  0015F6                     
   565                           ;Digitizer32bits_V0.c: 351:     INTCONbits.GIE = 1;
   566  0015F6  8EF2               	bsf	242,7,c	;volatile
   567  0015F8                     l165:
   568  0015F8  FFFF               	dw	65535	; assembler added errata NOP
   569  0015FA  EFFC  F00A         	goto	l165
   570  0015FE  EF0F  F008         	goto	start
   571  001602                     __end_of_main:
   572                           	callstack 0
   573                           
   574 ;; *************** function _OpenSerialPort *****************
   575 ;; Defined at:
   576 ;;		line 25 in file "LIB18F_USART.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		None
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   590 ;;      Params:         0       0       0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; Hardware stack levels required when called: 4
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text1
   605  001872                     __ptext1:
   606                           	callstack 0
   607  001872                     _OpenSerialPort:
   608                           	callstack 0
   609  001872  FFFF               	dw	65535	; assembler added errata NOP
   610  001874                     
   611                           ;LIB18F_USART.c: 27:     RCSTAbits.SPEN = 1;
   612  001874  8EAB               	bsf	171,7,c	;volatile
   613  001876  0012               	return		;funcret
   614  001878  FFFF               	dw	65535	; errata NOP
   615  00187A                     __end_of_OpenSerialPort:
   616                           	callstack 0
   617                           
   618 ;; *************** function _OpenPort_SPI *****************
   619 ;; Defined at:
   620 ;;		line 22 in file "LIB18F_SPI.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		None
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 4
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649  00187A                     __ptext2:
   650                           	callstack 0
   651  00187A                     _OpenPort_SPI:
   652                           	callstack 0
   653  00187A  FFFF               	dw	65535	; assembler added errata NOP
   654  00187C                     
   655                           ;LIB18F_SPI.c: 24:     SSPCON1bits.SSPEN = 1;
   656  00187C  8AC6               	bsf	198,5,c	;volatile
   657  00187E  0012               	return		;funcret
   658  001880  FFFF               	dw	65535	; errata NOP
   659  001882                     __end_of_OpenPort_SPI:
   660                           	callstack 0
   661                           
   662 ;; *************** function _ConfigSerialPort *****************
   663 ;; Defined at:
   664 ;;		line 9 in file "LIB18F_USART.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   678 ;;      Params:         0       0       0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 4
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text3
   693  0017B0                     __ptext3:
   694                           	callstack 0
   695  0017B0                     _ConfigSerialPort:
   696                           	callstack 0
   697  0017B0  FFFF               	dw	65535	; assembler added errata NOP
   698  0017B2                     
   699                           ;LIB18F_USART.c: 11:     TRISCbits.TRISC6 = 0;
   700  0017B2  9C94               	bcf	148,6,c	;volatile
   701                           
   702                           ;LIB18F_USART.c: 12:     TRISCbits.TRISC7 = 1;
   703  0017B4  8E94               	bsf	148,7,c	;volatile
   704  0017B6                     
   705                           ;LIB18F_USART.c: 14:     TXSTA = 0b00100100;
   706  0017B6  0E24               	movlw	36
   707  0017B8  6EAC               	movwf	172,c	;volatile
   708                           
   709                           ;LIB18F_USART.c: 15:     RCSTA = 0b00010000;
   710  0017BA  0E10               	movlw	16
   711  0017BC  6EAB               	movwf	171,c	;volatile
   712                           
   713                           ;LIB18F_USART.c: 17:     SPBRG = 63;
   714  0017BE  0E3F               	movlw	63
   715  0017C0  6EAF               	movwf	175,c	;volatile
   716  0017C2                     
   717                           ;LIB18F_USART.c: 19:     PIE1bits.RCIE = 1;
   718  0017C2  8A9D               	bsf	157,5,c	;volatile
   719                           
   720                           ;LIB18F_USART.c: 21:     T2CON = 0b01111011;
   721  0017C4  0E7B               	movlw	123
   722  0017C6  6ECA               	movwf	202,c	;volatile
   723  0017C8                     
   724                           ;LIB18F_USART.c: 22:     PR2 = 0xFF;
   725  0017C8  68CB               	setf	203,c	;volatile
   726  0017CA  0012               	return		;funcret
   727  0017CC  FFFF               	dw	65535	; errata NOP
   728  0017CE                     __end_of_ConfigSerialPort:
   729                           	callstack 0
   730                           
   731 ;; *************** function _ConfigPort_SPI *****************
   732 ;; Defined at:
   733 ;;		line 10 in file "LIB18F_SPI.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 4
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text4
   762  0017EA                     __ptext4:
   763                           	callstack 0
   764  0017EA                     _ConfigPort_SPI:
   765                           	callstack 0
   766  0017EA  FFFF               	dw	65535	; assembler added errata NOP
   767  0017EC                     
   768                           ;LIB18F_SPI.c: 12:     TRISCbits.TRISC3 = 0;
   769  0017EC  9694               	bcf	148,3,c	;volatile
   770                           
   771                           ;LIB18F_SPI.c: 13:     TRISCbits.TRISC4 = 1;
   772  0017EE  8894               	bsf	148,4,c	;volatile
   773                           
   774                           ;LIB18F_SPI.c: 14:     TRISCbits.TRISC5 = 0;
   775  0017F0  9A94               	bcf	148,5,c	;volatile
   776  0017F2                     
   777                           ;LIB18F_SPI.c: 16:     SSPSTAT = 0b00000000;
   778  0017F2  0E00               	movlw	0
   779  0017F4  6EC7               	movwf	199,c	;volatile
   780  0017F6                     
   781                           ;LIB18F_SPI.c: 17:     SSPCON1bits.CKP = 1;
   782  0017F6  88C6               	bsf	198,4,c	;volatile
   783                           
   784                           ;LIB18F_SPI.c: 18:     SSPCON1bits.SSPM = 0x01;
   785  0017F8  50C6               	movf	198,w,c	;volatile
   786  0017FA  0BF0               	andlw	-16
   787  0017FC  0901               	iorlw	1
   788  0017FE  6EC6               	movwf	198,c	;volatile
   789  001800  0012               	return		;funcret
   790  001802  FFFF               	dw	65535	; errata NOP
   791  001804                     __end_of_ConfigPort_SPI:
   792                           	callstack 0
   793                           
   794 ;; *************** function _CloseSerialPort *****************
   795 ;; Defined at:
   796 ;;		line 30 in file "LIB18F_USART.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		None
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   810 ;;      Params:         0       0       0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 4
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text5
   825  001882                     __ptext5:
   826                           	callstack 0
   827  001882                     _CloseSerialPort:
   828                           	callstack 26
   829  001882  FFFF               	dw	65535	; assembler added errata NOP
   830                           
   831                           ;LIB18F_USART.c: 32:     RCSTAbits.SPEN = 0;
   832  001884  9EAB               	bcf	171,7,c	;volatile
   833  001886  0012               	return		;funcret
   834  001888  FFFF               	dw	65535	; errata NOP
   835  00188A                     __end_of_CloseSerialPort:
   836                           	callstack 0
   837                           
   838 ;; *************** function _ClosePort_SPI *****************
   839 ;; Defined at:
   840 ;;		line 28 in file "LIB18F_SPI.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		None
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         0       0       0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 4
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text6
   869  00188A                     __ptext6:
   870                           	callstack 0
   871  00188A                     _ClosePort_SPI:
   872                           	callstack 26
   873  00188A  FFFF               	dw	65535	; assembler added errata NOP
   874                           
   875                           ;LIB18F_SPI.c: 30:     SSPCON1bits.SSPEN = 0;
   876  00188C  9AC6               	bcf	198,5,c	;volatile
   877  00188E  0012               	return		;funcret
   878  001890  FFFF               	dw	65535	; errata NOP
   879  001892                     __end_of_ClosePort_SPI:
   880                           	callstack 0
   881                           
   882 ;; *************** function _Interrups *****************
   883 ;; Defined at:
   884 ;;		line 28 in file "Digitizer32bits_V0.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  conta           1   43[COMRAM] unsigned char 
   889 ;;  ID              1   42[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   899 ;;      Params:         0       0       0       0       0       0       0
   900 ;;      Locals:         2       0       0       0       0       0       0
   901 ;;      Temps:         16       0       0       0       0       0       0
   902 ;;      Totals:        18       0       0       0       0       0       0
   903 ;;Total ram usage:       18 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 3
   906 ;; This function calls:
   907 ;;		_ReadADC32
   908 ;;		_ReadRegister_1bytesAD7177
   909 ;;		_ReadRegister_2bytesAD7177
   910 ;;		_ReceiveCMD_USART
   911 ;;		_ResetAD7177
   912 ;;		_SelectChannelC
   913 ;;		_SelectChannelS
   914 ;;		_SelectChannelX
   915 ;;		_SelectChannelY
   916 ;;		_SelectChannelZ
   917 ;;		_TransmitCMD_USART
   918 ;;		_TransmitDAT_USART
   919 ;;		_WriteByte_USART
   920 ;;		_WriteRegister_2bytesAD7177
   921 ;;		___aodiv
   922 ;;		_print_string
   923 ;;		_print_value
   924 ;; This function is called by:
   925 ;;		Interrupt level 2
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	intcode
   930  000008                     __pintcode:
   931                           	callstack 0
   932  000008                     _Interrups:
   933                           	callstack 0
   934  000008  FFFF               	dw	65535	; assembler added errata NOP
   935                           
   936                           ;incstack = 0
   937  00000A  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   938  00000C  CFE1 F054          	movff	fsr1l,??_Interrups+8
   939  000010  CFE2 F055          	movff	fsr1h,??_Interrups+9
   940  000014  CFD9 F056          	movff	fsr2l,??_Interrups+10
   941  000018  CFDA F057          	movff	fsr2h,??_Interrups+11
   942  00001C  CFF6 F058          	movff	tblptrl,??_Interrups+12
   943  000020  CFF7 F059          	movff	tblptrh,??_Interrups+13
   944  000024  CFF8 F05A          	movff	tblptru,??_Interrups+14
   945  000028  CFF5 F05B          	movff	tablat,??_Interrups+15
   946  00002C                     
   947                           ;Digitizer32bits_V0.c: 29:     char ID;;Digitizer32bits_V0.c: 30:     unsigned char cont
      +                          a;;Digitizer32bits_V0.c: 32:     if((PIE1bits.RC1IE == 1) && (PIR1bits.RC1IF == 1)){
   948  00002C  AA9D               	btfss	157,5,c	;volatile
   949  00002E  EF1B  F000         	goto	i2u90_41
   950  000032  EF1E  F000         	goto	i2u90_40
   951  000036                     i2u90_41:
   952  000036  FFFF               	dw	65535	; assembler added errata NOP
   953  000038  EF92  F004         	goto	i2l121
   954  00003C                     i2u90_40:
   955  00003C  FFFF               	dw	65535	; assembler added errata NOP
   956  00003E  AA9E               	btfss	158,5,c	;volatile
   957  000040  EF24  F000         	goto	i2u91_41
   958  000044  EF27  F000         	goto	i2u91_40
   959  000048                     i2u91_41:
   960  000048  FFFF               	dw	65535	; assembler added errata NOP
   961  00004A  EF92  F004         	goto	i2l121
   962  00004E                     i2u91_40:
   963  00004E  FFFF               	dw	65535	; assembler added errata NOP
   964  000050                     
   965                           ;Digitizer32bits_V0.c: 33:         ID = ReceiveCMD_USART();
   966  000050  EC23  F00A         	call	_ReceiveCMD_USART	;wreg free
   967  000054  6E5C               	movwf	Interrups@ID^0,c
   968                           
   969                           ;Digitizer32bits_V0.c: 34:         switch(ID){
   970  000056  EF5B  F004         	goto	i2l2361
   971  00005A                     i2l2095:
   972  00005A  FFFF               	dw	65535	; assembler added errata NOP
   973                           
   974                           ;Digitizer32bits_V0.c: 38:                 ResetAD7177();
   975  00005C  EC71  F00B         	call	_ResetAD7177	;wreg free
   976  000060                     
   977                           ;Digitizer32bits_V0.c: 39:                 _delay((unsigned long)((5)*(39321600UL/4000.0
      +                          )));
   978  000060  0E30               	movlw	48
   979  000062  6E4C               	movwf	??_Interrups^0,c
   980  000064  0EE7               	movlw	231
   981  000066                     i2u123_47:
   982  000066  FFFF               	dw	65535	; errata NOP
   983  000068  2EE8               	decfsz	wreg,f,c
   984  00006A  D7FD               	bra	i2u123_47
   985  00006C  2E4C               	decfsz	??_Interrups^0,f,c
   986  00006E  D7FB               	bra	i2u123_47
   987  000070  D000               	nop2	
   988  000072                     
   989                           ;Digitizer32bits_V0.c: 40:                 BufferSPI[0] = 0x01;
   990  000072  0E01               	movlw	1
   991  000074  6E2D               	movwf	_BufferSPI^0,c
   992  000076                     
   993                           ;Digitizer32bits_V0.c: 41:                 BufferSPI[1] = 0x00;
   994  000076  0E00               	movlw	0
   995  000078  6E2E               	movwf	(_BufferSPI+1)^0,c
   996  00007A                     
   997                           ;Digitizer32bits_V0.c: 42:                 BufferSPI[2] = 0x2C;
   998  00007A  0E2C               	movlw	44
   999  00007C  6E2F               	movwf	(_BufferSPI+2)^0,c
  1000  00007E                     
  1001                           ;Digitizer32bits_V0.c: 43:                 WriteRegister_2bytesAD7177();
  1002  00007E  ECE7  F00B         	call	_WriteRegister_2bytesAD7177	;wreg free
  1003  000082                     
  1004                           ;Digitizer32bits_V0.c: 44:                 _delay((unsigned long)((5)*(39321600UL/4000.0
      +                          )));
  1005  000082  0E30               	movlw	48
  1006  000084  6E4C               	movwf	??_Interrups^0,c
  1007  000086  0EE7               	movlw	231
  1008  000088                     i2u124_47:
  1009  000088  FFFF               	dw	65535	; errata NOP
  1010  00008A  2EE8               	decfsz	wreg,f,c
  1011  00008C  D7FD               	bra	i2u124_47
  1012  00008E  2E4C               	decfsz	??_Interrups^0,f,c
  1013  000090  D7FB               	bra	i2u124_47
  1014  000092  D000               	nop2	
  1015  000094                     
  1016                           ;Digitizer32bits_V0.c: 45:                 BufferSPI[0] = 0x20;
  1017  000094  0E20               	movlw	32
  1018  000096  6E2D               	movwf	_BufferSPI^0,c
  1019  000098                     
  1020                           ;Digitizer32bits_V0.c: 46:                 BufferSPI[1] = 0x1F;
  1021  000098  0E1F               	movlw	31
  1022  00009A  6E2E               	movwf	(_BufferSPI+1)^0,c
  1023  00009C                     
  1024                           ;Digitizer32bits_V0.c: 47:                 BufferSPI[2] = 0x00;
  1025  00009C  0E00               	movlw	0
  1026  00009E  6E2F               	movwf	(_BufferSPI+2)^0,c
  1027  0000A0                     
  1028                           ;Digitizer32bits_V0.c: 48:                 WriteRegister_2bytesAD7177();
  1029  0000A0  ECE7  F00B         	call	_WriteRegister_2bytesAD7177	;wreg free
  1030  0000A4                     
  1031                           ;Digitizer32bits_V0.c: 49:                 _delay((unsigned long)((5)*(39321600UL/4000.0
      +                          )));
  1032  0000A4  0E30               	movlw	48
  1033  0000A6  6E4C               	movwf	??_Interrups^0,c
  1034  0000A8  0EE7               	movlw	231
  1035  0000AA                     i2u125_47:
  1036  0000AA  FFFF               	dw	65535	; errata NOP
  1037  0000AC  2EE8               	decfsz	wreg,f,c
  1038  0000AE  D7FD               	bra	i2u125_47
  1039  0000B0  2E4C               	decfsz	??_Interrups^0,f,c
  1040  0000B2  D7FB               	bra	i2u125_47
  1041  0000B4  D000               	nop2	
  1042  0000B6                     
  1043                           ;Digitizer32bits_V0.c: 50:                 BufferSPI[0] = 0x02;
  1044  0000B6  0E02               	movlw	2
  1045  0000B8  6E2D               	movwf	_BufferSPI^0,c
  1046  0000BA                     
  1047                           ;Digitizer32bits_V0.c: 51:                 BufferSPI[1] = 0x00;
  1048  0000BA  0E00               	movlw	0
  1049  0000BC  6E2E               	movwf	(_BufferSPI+1)^0,c
  1050  0000BE                     
  1051                           ;Digitizer32bits_V0.c: 52:                 BufferSPI[2] = 0x02;
  1052  0000BE  0E02               	movlw	2
  1053  0000C0  6E2F               	movwf	(_BufferSPI+2)^0,c
  1054  0000C2                     
  1055                           ;Digitizer32bits_V0.c: 53:                 WriteRegister_2bytesAD7177();
  1056  0000C2  ECE7  F00B         	call	_WriteRegister_2bytesAD7177	;wreg free
  1057  0000C6                     
  1058                           ;Digitizer32bits_V0.c: 54:                 _delay((unsigned long)((5)*(39321600UL/4000.0
      +                          )));
  1059  0000C6  0E30               	movlw	48
  1060  0000C8  6E4C               	movwf	??_Interrups^0,c
  1061  0000CA  0EE7               	movlw	231
  1062  0000CC                     i2u126_47:
  1063  0000CC  FFFF               	dw	65535	; errata NOP
  1064  0000CE  2EE8               	decfsz	wreg,f,c
  1065  0000D0  D7FD               	bra	i2u126_47
  1066  0000D2  2E4C               	decfsz	??_Interrups^0,f,c
  1067  0000D4  D7FB               	bra	i2u126_47
  1068  0000D6  D000               	nop2	
  1069  0000D8                     
  1070                           ;Digitizer32bits_V0.c: 55:                 BufferSPI[0] = 0x28;
  1071  0000D8  0E28               	movlw	40
  1072  0000DA  6E2D               	movwf	_BufferSPI^0,c
  1073  0000DC                     
  1074                           ;Digitizer32bits_V0.c: 56:                 BufferSPI[1] = 0x05;
  1075  0000DC  0E05               	movlw	5
  1076  0000DE  6E2E               	movwf	(_BufferSPI+1)^0,c
  1077  0000E0                     
  1078                           ;Digitizer32bits_V0.c: 57:                 BufferSPI[2] = 0x07;
  1079  0000E0  0E07               	movlw	7
  1080  0000E2  6E2F               	movwf	(_BufferSPI+2)^0,c
  1081  0000E4                     
  1082                           ;Digitizer32bits_V0.c: 58:                 WriteRegister_2bytesAD7177();
  1083  0000E4  ECE7  F00B         	call	_WriteRegister_2bytesAD7177	;wreg free
  1084  0000E8                     
  1085                           ;Digitizer32bits_V0.c: 60:                 TransmitCMD_USART('0');
  1086  0000E8  0E30               	movlw	48
  1087  0000EA  EC91  F00B         	call	_TransmitCMD_USART
  1088                           
  1089                           ;Digitizer32bits_V0.c: 61:                 break;
  1090  0000EE  EFFB  F007         	goto	i2l160
  1091  0000F2                     i2l2139:
  1092  0000F2  FFFF               	dw	65535	; assembler added errata NOP
  1093                           
  1094                           ;Digitizer32bits_V0.c: 63:                 TransmitCMD_USART('1');
  1095  0000F4  0E31               	movlw	49
  1096  0000F6  EC91  F00B         	call	_TransmitCMD_USART
  1097                           
  1098                           ;Digitizer32bits_V0.c: 66:                 break;
  1099  0000FA  EFFB  F007         	goto	i2l160
  1100  0000FE                     i2l2141:
  1101  0000FE  FFFF               	dw	65535	; assembler added errata NOP
  1102                           
  1103                           ;Digitizer32bits_V0.c: 68:                 TransmitCMD_USART('2');
  1104  000100  0E32               	movlw	50
  1105  000102  EC91  F00B         	call	_TransmitCMD_USART
  1106                           
  1107                           ;Digitizer32bits_V0.c: 71:                 break;
  1108  000106  EFFB  F007         	goto	i2l160
  1109  00010A                     i2l2143:
  1110  00010A  FFFF               	dw	65535	; assembler added errata NOP
  1111                           
  1112                           ;Digitizer32bits_V0.c: 73:                 TransmitCMD_USART('3');
  1113  00010C  0E33               	movlw	51
  1114  00010E  EC91  F00B         	call	_TransmitCMD_USART
  1115  000112                     
  1116                           ;Digitizer32bits_V0.c: 76:                 ReadRegister_2bytesAD7177(0x50);
  1117  000112  0E50               	movlw	80
  1118  000114  ECC7  F00B         	call	_ReadRegister_2bytesAD7177
  1119  000118                     
  1120                           ;Digitizer32bits_V0.c: 77:                 BufferDAT[0] = BufferSPI[0];
  1121  000118  C02D  F075         	movff	_BufferSPI,_BufferDAT
  1122  00011C                     
  1123                           ;Digitizer32bits_V0.c: 78:                 BufferDAT[1] = BufferSPI[1];
  1124  00011C  C02E  F076         	movff	_BufferSPI+1,_BufferDAT+1
  1125  000120                     
  1126                           ;Digitizer32bits_V0.c: 79:                 _delay((unsigned long)((1)*(39321600UL/4000.0
      +                          )));
  1127  000120  0E0A               	movlw	10
  1128  000122  6E4C               	movwf	??_Interrups^0,c
  1129  000124  0E94               	movlw	148
  1130  000126                     i2u127_47:
  1131  000126  FFFF               	dw	65535	; errata NOP
  1132  000128  2EE8               	decfsz	wreg,f,c
  1133  00012A  D7FD               	bra	i2u127_47
  1134  00012C  2E4C               	decfsz	??_Interrups^0,f,c
  1135  00012E  D7FB               	bra	i2u127_47
  1136  000130                     
  1137                           ;Digitizer32bits_V0.c: 80:                 ReadRegister_2bytesAD7177(0x60);
  1138  000130  0E60               	movlw	96
  1139  000132  ECC7  F00B         	call	_ReadRegister_2bytesAD7177
  1140  000136                     
  1141                           ;Digitizer32bits_V0.c: 81:                 BufferDAT[2] = BufferSPI[0];
  1142  000136  C02D  F077         	movff	_BufferSPI,_BufferDAT+2
  1143  00013A                     
  1144                           ;Digitizer32bits_V0.c: 82:                 BufferDAT[3] = BufferSPI[1];
  1145  00013A  C02E  F078         	movff	_BufferSPI+1,_BufferDAT+3
  1146  00013E                     
  1147                           ;Digitizer32bits_V0.c: 83:                 _delay((unsigned long)((1)*(39321600UL/4000.0
      +                          )));
  1148  00013E  0E0A               	movlw	10
  1149  000140  6E4C               	movwf	??_Interrups^0,c
  1150  000142  0E94               	movlw	148
  1151  000144                     i2u128_47:
  1152  000144  FFFF               	dw	65535	; errata NOP
  1153  000146  2EE8               	decfsz	wreg,f,c
  1154  000148  D7FD               	bra	i2u128_47
  1155  00014A  2E4C               	decfsz	??_Interrups^0,f,c
  1156  00014C  D7FB               	bra	i2u128_47
  1157  00014E                     
  1158                           ;Digitizer32bits_V0.c: 84:                 ReadRegister_2bytesAD7177(0x68);
  1159  00014E  0E68               	movlw	104
  1160  000150  ECC7  F00B         	call	_ReadRegister_2bytesAD7177
  1161  000154                     
  1162                           ;Digitizer32bits_V0.c: 85:                 BufferDAT[4] = BufferSPI[0];
  1163  000154  C02D  F079         	movff	_BufferSPI,_BufferDAT+4
  1164  000158                     
  1165                           ;Digitizer32bits_V0.c: 86:                 BufferDAT[5] = BufferSPI[1];
  1166  000158  C02E  F07A         	movff	_BufferSPI+1,_BufferDAT+5
  1167  00015C                     
  1168                           ;Digitizer32bits_V0.c: 87:                 _delay((unsigned long)((1)*(39321600UL/4000.0
      +                          )));
  1169  00015C  0E0A               	movlw	10
  1170  00015E  6E4C               	movwf	??_Interrups^0,c
  1171  000160  0E94               	movlw	148
  1172  000162                     i2u129_47:
  1173  000162  FFFF               	dw	65535	; errata NOP
  1174  000164  2EE8               	decfsz	wreg,f,c
  1175  000166  D7FD               	bra	i2u129_47
  1176  000168  2E4C               	decfsz	??_Interrups^0,f,c
  1177  00016A  D7FB               	bra	i2u129_47
  1178  00016C                     
  1179                           ;Digitizer32bits_V0.c: 88:                 ReadRegister_2bytesAD7177(0x42);
  1180  00016C  0E42               	movlw	66
  1181  00016E  ECC7  F00B         	call	_ReadRegister_2bytesAD7177
  1182  000172                     
  1183                           ;Digitizer32bits_V0.c: 89:                 BufferDAT[6] = BufferSPI[0];
  1184  000172  C02D  F07B         	movff	_BufferSPI,_BufferDAT+6
  1185  000176                     
  1186                           ;Digitizer32bits_V0.c: 90:                 BufferDAT[7] = BufferSPI[1];
  1187  000176  C02E  F07C         	movff	_BufferSPI+1,_BufferDAT+7
  1188  00017A                     
  1189                           ;Digitizer32bits_V0.c: 91:                 _delay((unsigned long)((1)*(39321600UL/4000.0
      +                          )));
  1190  00017A  0E0A               	movlw	10
  1191  00017C  6E4C               	movwf	??_Interrups^0,c
  1192  00017E  0E94               	movlw	148
  1193  000180                     i2u130_47:
  1194  000180  FFFF               	dw	65535	; errata NOP
  1195  000182  2EE8               	decfsz	wreg,f,c
  1196  000184  D7FD               	bra	i2u130_47
  1197  000186  2E4C               	decfsz	??_Interrups^0,f,c
  1198  000188  D7FB               	bra	i2u130_47
  1199  00018A                     
  1200                           ;Digitizer32bits_V0.c: 92:                 ReadRegister_2bytesAD7177(0x47);
  1201  00018A  0E47               	movlw	71
  1202  00018C  ECC7  F00B         	call	_ReadRegister_2bytesAD7177
  1203  000190                     
  1204                           ;Digitizer32bits_V0.c: 93:                 BufferDAT[8] = BufferSPI[0];
  1205  000190  C02D  F07D         	movff	_BufferSPI,_BufferDAT+8
  1206  000194                     
  1207                           ;Digitizer32bits_V0.c: 94:                 BufferDAT[9] = BufferSPI[1];
  1208  000194  C02E  F07E         	movff	_BufferSPI+1,_BufferDAT+9
  1209  000198                     
  1210                           ;Digitizer32bits_V0.c: 95:                 _delay((unsigned long)((1)*(39321600UL/4000.0
      +                          )));
  1211  000198  0E0A               	movlw	10
  1212  00019A  6E4C               	movwf	??_Interrups^0,c
  1213  00019C  0E94               	movlw	148
  1214  00019E                     i2u131_47:
  1215  00019E  FFFF               	dw	65535	; errata NOP
  1216  0001A0  2EE8               	decfsz	wreg,f,c
  1217  0001A2  D7FD               	bra	i2u131_47
  1218  0001A4  2E4C               	decfsz	??_Interrups^0,f,c
  1219  0001A6  D7FB               	bra	i2u131_47
  1220  0001A8                     
  1221                           ;Digitizer32bits_V0.c: 96:                 ReadRegister_1bytesAD7177(0x40);
  1222  0001A8  0E40               	movlw	64
  1223  0001AA  EC02  F00C         	call	_ReadRegister_1bytesAD7177
  1224  0001AE                     
  1225                           ;Digitizer32bits_V0.c: 97:                 BufferDAT[10] = BufferSPI[0];
  1226  0001AE  C02D  F07F         	movff	_BufferSPI,_BufferDAT+10
  1227  0001B2                     
  1228                           ;Digitizer32bits_V0.c: 100:                 BufferSPI[0] = 0x01;
  1229  0001B2  0E01               	movlw	1
  1230  0001B4  6E2D               	movwf	_BufferSPI^0,c
  1231  0001B6                     
  1232                           ;Digitizer32bits_V0.c: 101:                 BufferSPI[1] = 0x00;
  1233  0001B6  0E00               	movlw	0
  1234  0001B8  6E2E               	movwf	(_BufferSPI+1)^0,c
  1235  0001BA                     
  1236                           ;Digitizer32bits_V0.c: 102:                 BufferSPI[2] = 0x0C;
  1237  0001BA  0E0C               	movlw	12
  1238  0001BC  6E2F               	movwf	(_BufferSPI+2)^0,c
  1239  0001BE                     
  1240                           ;Digitizer32bits_V0.c: 103:                 WriteRegister_2bytesAD7177();
  1241  0001BE  ECE7  F00B         	call	_WriteRegister_2bytesAD7177	;wreg free
  1242  0001C2                     
  1243                           ;Digitizer32bits_V0.c: 105:                 TransmitDAT_USART('3');
  1244  0001C2  0E33               	movlw	51
  1245  0001C4  EC01  F00B         	call	_TransmitDAT_USART
  1246                           
  1247                           ;Digitizer32bits_V0.c: 106:                 break;
  1248  0001C8  EFFB  F007         	goto	i2l160
  1249  0001CC                     i2l2199:
  1250  0001CC  FFFF               	dw	65535	; assembler added errata NOP
  1251                           
  1252                           ;Digitizer32bits_V0.c: 108:                 TransmitCMD_USART('4');
  1253  0001CE  0E34               	movlw	52
  1254  0001D0  EC91  F00B         	call	_TransmitCMD_USART
  1255                           
  1256                           ;Digitizer32bits_V0.c: 111:                 break;
  1257  0001D4  EFFB  F007         	goto	i2l160
  1258  0001D8                     i2l2201:
  1259  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  1260                           
  1261                           ;Digitizer32bits_V0.c: 113:                 ModeSample = 0;
  1262  0001DA  0E00               	movlw	0
  1263  0001DC  6E30               	movwf	_ModeSample^0,c
  1264  0001DE                     
  1265                           ;Digitizer32bits_V0.c: 114:                 TransmitCMD_USART('5');
  1266  0001DE  0E35               	movlw	53
  1267  0001E0  EC91  F00B         	call	_TransmitCMD_USART
  1268                           
  1269                           ;Digitizer32bits_V0.c: 115:                 break;
  1270  0001E4  EFFB  F007         	goto	i2l160
  1271  0001E8                     i2l2205:
  1272  0001E8  FFFF               	dw	65535	; assembler added errata NOP
  1273                           
  1274                           ;Digitizer32bits_V0.c: 117:                 TransmitCMD_USART('6');
  1275  0001EA  0E36               	movlw	54
  1276  0001EC  EC91  F00B         	call	_TransmitCMD_USART
  1277                           
  1278                           ;Digitizer32bits_V0.c: 118:                 break;
  1279  0001F0  EFFB  F007         	goto	i2l160
  1280  0001F4                     i2l2207:
  1281  0001F4  FFFF               	dw	65535	; assembler added errata NOP
  1282                           
  1283                           ;Digitizer32bits_V0.c: 120:                 TransmitCMD_USART('7');
  1284  0001F6  0E37               	movlw	55
  1285  0001F8  EC91  F00B         	call	_TransmitCMD_USART
  1286                           
  1287                           ;Digitizer32bits_V0.c: 121:                 break;
  1288  0001FC  EFFB  F007         	goto	i2l160
  1289  000200                     i2l2209:
  1290  000200  FFFF               	dw	65535	; assembler added errata NOP
  1291                           
  1292                           ;Digitizer32bits_V0.c: 123:                 TransmitCMD_USART('8');
  1293  000202  0E38               	movlw	56
  1294  000204  EC91  F00B         	call	_TransmitCMD_USART
  1295                           
  1296                           ;Digitizer32bits_V0.c: 126:                 break;
  1297  000208  EFFB  F007         	goto	i2l160
  1298  00020C                     i2l133:
  1299  00020C  FFFF               	dw	65535	; assembler added errata NOP
  1300                           
  1301                           ;Digitizer32bits_V0.c: 128:                 LATAbits.LATA1 = 1;
  1302  00020E  8289               	bsf	137,1,c	;volatile
  1303  000210                     
  1304                           ;Digitizer32bits_V0.c: 131:                 TMR0H = 0x10;
  1305  000210  0E10               	movlw	16
  1306  000212  6ED7               	movwf	215,c	;volatile
  1307                           
  1308                           ;Digitizer32bits_V0.c: 132:                 TMR0L = 0x3D;
  1309  000214  0E3D               	movlw	61
  1310  000216  6ED6               	movwf	214,c	;volatile
  1311                           
  1312                           ;Digitizer32bits_V0.c: 133:                 T0CON = 0b10000011;
  1313  000218  0E83               	movlw	131
  1314  00021A  6ED5               	movwf	213,c	;volatile
  1315  00021C                     
  1316                           ;Digitizer32bits_V0.c: 135:                 INTCONbits.TMR0IF = 0;
  1317  00021C  94F2               	bcf	242,2,c	;volatile
  1318  00021E                     
  1319                           ;Digitizer32bits_V0.c: 136:                 INTCONbits.TMR0IE = 1;
  1320  00021E  8AF2               	bsf	242,5,c	;volatile
  1321  000220                     
  1322                           ;Digitizer32bits_V0.c: 137:                 INTCONbits.INT0IE = 0;
  1323  000220  98F2               	bcf	242,4,c	;volatile
  1324                           
  1325                           ;Digitizer32bits_V0.c: 140:                 ContaSample = 0;
  1326  000222  0E00               	movlw	0
  1327  000224  6E31               	movwf	_ContaSample^0,c
  1328                           
  1329                           ;Digitizer32bits_V0.c: 141:                 ModeSample = 0;
  1330  000226  0E00               	movlw	0
  1331  000228  6E30               	movwf	_ModeSample^0,c
  1332  00022A                     
  1333                           ;Digitizer32bits_V0.c: 142:                 TransmitCMD_USART('9');
  1334  00022A  0E39               	movlw	57
  1335  00022C  EC91  F00B         	call	_TransmitCMD_USART
  1336  000230                     
  1337                           ;Digitizer32bits_V0.c: 145:                 print_string("G-JRODATEXXXXXXXXXXXX\n\r");
  1338  000230  0E23               	movlw	low STR_1
  1339  000232  6E33               	movwf	print_string@str^0,c
  1340  000234  0E10               	movlw	high STR_1
  1341  000236  6E34               	movwf	(print_string@str+1)^0,c
  1342  000238  EC4E  F00B         	call	_print_string	;wreg free
  1343  00023C                     
  1344                           ;Digitizer32bits_V0.c: 146:                 SumData_X = 0;
  1345  00023C  EE20  F011         	lfsr	2,_SumData_X
  1346  000240  0E07               	movlw	7
  1347  000242                     i2u92_41:
  1348  000242  6ADE               	clrf	postinc2,c
  1349  000244  06E8               	decf	wreg,f,c
  1350  000246  E2FD               	bc	i2u92_41
  1351  000248                     
  1352                           ;Digitizer32bits_V0.c: 147:                 SumData_Y = 0;
  1353  000248  EE20  F009         	lfsr	2,_SumData_Y
  1354  00024C  0E07               	movlw	7
  1355  00024E                     i2u93_41:
  1356  00024E  6ADE               	clrf	postinc2,c
  1357  000250  06E8               	decf	wreg,f,c
  1358  000252  E2FD               	bc	i2u93_41
  1359  000254                     
  1360                           ;Digitizer32bits_V0.c: 148:                 SumData_Z = 0;
  1361  000254  EE20  F001         	lfsr	2,_SumData_Z
  1362  000258  0E07               	movlw	7
  1363  00025A                     i2u94_41:
  1364  00025A  6ADE               	clrf	postinc2,c
  1365  00025C  06E8               	decf	wreg,f,c
  1366  00025E  E2FD               	bc	i2u94_41
  1367  000260                     
  1368                           ;Digitizer32bits_V0.c: 149:                 SumData_TC = 0;
  1369  000260  EE20  F068         	lfsr	2,_SumData_TC
  1370  000264  0E07               	movlw	7
  1371  000266                     i2u95_41:
  1372  000266  6ADE               	clrf	postinc2,c
  1373  000268  06E8               	decf	wreg,f,c
  1374  00026A  E2FD               	bc	i2u95_41
  1375  00026C                     
  1376                           ;Digitizer32bits_V0.c: 150:                 SumData_TS = 0;
  1377  00026C  EE20  F060         	lfsr	2,_SumData_TS
  1378  000270  0E07               	movlw	7
  1379  000272                     i2u96_41:
  1380  000272  6ADE               	clrf	postinc2,c
  1381  000274  06E8               	decf	wreg,f,c
  1382  000276  E2FD               	bc	i2u96_41
  1383  000278                     
  1384                           ;Digitizer32bits_V0.c: 152:                 LATCbits.LATC2 = 0;
  1385  000278  948B               	bcf	139,2,c	;volatile
  1386  00027A                     
  1387                           ;Digitizer32bits_V0.c: 153:                 LATAbits.LATA2 = 1;
  1388  00027A  8489               	bsf	137,2,c	;volatile
  1389  00027C                     
  1390                           ;Digitizer32bits_V0.c: 155:                 SelectChannelX();
  1391  00027C  EC1D  F00C         	call	_SelectChannelX	;wreg free
  1392  000280                     
  1393                           ;Digitizer32bits_V0.c: 156:                 _delay((unsigned long)((5)*(39321600UL/4000.
      +                          0)));
  1394  000280  0E30               	movlw	48
  1395  000282  6E4C               	movwf	??_Interrups^0,c
  1396  000284  0EE7               	movlw	231
  1397  000286                     i2u132_47:
  1398  000286  FFFF               	dw	65535	; errata NOP
  1399  000288  2EE8               	decfsz	wreg,f,c
  1400  00028A  D7FD               	bra	i2u132_47
  1401  00028C  2E4C               	decfsz	??_Interrups^0,f,c
  1402  00028E  D7FB               	bra	i2u132_47
  1403  000290  D000               	nop2	
  1404  000292                     
  1405                           ;Digitizer32bits_V0.c: 157:                 Data_X = ReadADC32();
  1406  000292  EC09  F009         	call	_ReadADC32	;wreg free
  1407  000296  C033  F029         	movff	?_ReadADC32,_Data_X
  1408  00029A  C034  F02A         	movff	?_ReadADC32+1,_Data_X+1
  1409  00029E  C035  F02B         	movff	?_ReadADC32+2,_Data_X+2
  1410  0002A2  C036  F02C         	movff	?_ReadADC32+3,_Data_X+3
  1411  0002A6                     
  1412                           ;Digitizer32bits_V0.c: 158:                 for(conta=0; conta<10; conta++){
  1413  0002A6  0E00               	movlw	0
  1414  0002A8  6E5D               	movwf	Interrups@conta^0,c
  1415  0002AA                     i2l2249:
  1416  0002AA  FFFF               	dw	65535	; assembler added errata NOP
  1417                           
  1418                           ;Digitizer32bits_V0.c: 159:                     Data_X = ReadADC32();
  1419  0002AC  EC09  F009         	call	_ReadADC32	;wreg free
  1420  0002B0  C033  F029         	movff	?_ReadADC32,_Data_X
  1421  0002B4  C034  F02A         	movff	?_ReadADC32+1,_Data_X+1
  1422  0002B8  C035  F02B         	movff	?_ReadADC32+2,_Data_X+2
  1423  0002BC  C036  F02C         	movff	?_ReadADC32+3,_Data_X+3
  1424  0002C0                     
  1425                           ;Digitizer32bits_V0.c: 160:                     SumData_X = (signed long long) SumData_X
      +                           + Data_X;
  1426  0002C0  C029  F04C         	movff	_Data_X,??_Interrups
  1427  0002C4  C02A  F04D         	movff	_Data_X+1,??_Interrups+1
  1428  0002C8  C02B  F04E         	movff	_Data_X+2,??_Interrups+2
  1429  0002CC  C02C  F04F         	movff	_Data_X+3,??_Interrups+3
  1430  0002D0  6A50               	clrf	(??_Interrups+4)^0,c
  1431  0002D2  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  1432  0002D4  6850               	setf	(??_Interrups+4)^0,c
  1433  0002D6  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  1434  0002DA  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  1435  0002DE  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  1436  0002E2  5011               	movf	_SumData_X^0,w,c
  1437  0002E4  244C               	addwf	??_Interrups^0,w,c
  1438  0002E6  6E11               	movwf	_SumData_X^0,c
  1439  0002E8  5012               	movf	(_SumData_X+1)^0,w,c
  1440  0002EA  204D               	addwfc	(??_Interrups+1)^0,w,c
  1441  0002EC  6E12               	movwf	(_SumData_X+1)^0,c
  1442  0002EE  5013               	movf	(_SumData_X+2)^0,w,c
  1443  0002F0  204E               	addwfc	(??_Interrups+2)^0,w,c
  1444  0002F2  6E13               	movwf	(_SumData_X+2)^0,c
  1445  0002F4  5014               	movf	(_SumData_X+3)^0,w,c
  1446  0002F6  204F               	addwfc	(??_Interrups+3)^0,w,c
  1447  0002F8  6E14               	movwf	(_SumData_X+3)^0,c
  1448  0002FA  5015               	movf	(_SumData_X+4)^0,w,c
  1449  0002FC  2050               	addwfc	(??_Interrups+4)^0,w,c
  1450  0002FE  6E15               	movwf	(_SumData_X+4)^0,c
  1451  000300  5016               	movf	(_SumData_X+5)^0,w,c
  1452  000302  2051               	addwfc	(??_Interrups+5)^0,w,c
  1453  000304  6E16               	movwf	(_SumData_X+5)^0,c
  1454  000306  5017               	movf	(_SumData_X+6)^0,w,c
  1455  000308  2052               	addwfc	(??_Interrups+6)^0,w,c
  1456  00030A  6E17               	movwf	(_SumData_X+6)^0,c
  1457  00030C  5018               	movf	(_SumData_X+7)^0,w,c
  1458  00030E  2053               	addwfc	(??_Interrups+7)^0,w,c
  1459  000310  6E18               	movwf	(_SumData_X+7)^0,c
  1460  000312                     
  1461                           ;Digitizer32bits_V0.c: 161:                 }
  1462  000312  2A5D               	incf	Interrups@conta^0,f,c
  1463  000314  0E09               	movlw	9
  1464  000316  645D               	cpfsgt	Interrups@conta^0,c
  1465  000318  EF90  F001         	goto	i2u97_41
  1466  00031C  EF93  F001         	goto	i2u97_40
  1467  000320                     i2u97_41:
  1468  000320  FFFF               	dw	65535	; assembler added errata NOP
  1469  000322  EF55  F001         	goto	i2l2249
  1470  000326                     i2u97_40:
  1471  000326  FFFF               	dw	65535	; assembler added errata NOP
  1472  000328                     
  1473                           ;Digitizer32bits_V0.c: 164:                 SelectChannelY();
  1474  000328  EC16  F00C         	call	_SelectChannelY	;wreg free
  1475  00032C                     
  1476                           ;Digitizer32bits_V0.c: 165:                 _delay((unsigned long)((5)*(39321600UL/4000.
      +                          0)));
  1477  00032C  0E30               	movlw	48
  1478  00032E  6E4C               	movwf	??_Interrups^0,c
  1479  000330  0EE7               	movlw	231
  1480  000332                     i2u133_47:
  1481  000332  FFFF               	dw	65535	; errata NOP
  1482  000334  2EE8               	decfsz	wreg,f,c
  1483  000336  D7FD               	bra	i2u133_47
  1484  000338  2E4C               	decfsz	??_Interrups^0,f,c
  1485  00033A  D7FB               	bra	i2u133_47
  1486  00033C  D000               	nop2	
  1487  00033E                     
  1488                           ;Digitizer32bits_V0.c: 166:                 Data_Y = ReadADC32();
  1489  00033E  EC09  F009         	call	_ReadADC32	;wreg free
  1490  000342  C033  F025         	movff	?_ReadADC32,_Data_Y
  1491  000346  C034  F026         	movff	?_ReadADC32+1,_Data_Y+1
  1492  00034A  C035  F027         	movff	?_ReadADC32+2,_Data_Y+2
  1493  00034E  C036  F028         	movff	?_ReadADC32+3,_Data_Y+3
  1494  000352                     
  1495                           ;Digitizer32bits_V0.c: 167:                 for(conta=0; conta<10; conta++){
  1496  000352  0E00               	movlw	0
  1497  000354  6E5D               	movwf	Interrups@conta^0,c
  1498  000356                     i2l2269:
  1499  000356  FFFF               	dw	65535	; assembler added errata NOP
  1500                           
  1501                           ;Digitizer32bits_V0.c: 168:                     Data_Y = ReadADC32();
  1502  000358  EC09  F009         	call	_ReadADC32	;wreg free
  1503  00035C  C033  F025         	movff	?_ReadADC32,_Data_Y
  1504  000360  C034  F026         	movff	?_ReadADC32+1,_Data_Y+1
  1505  000364  C035  F027         	movff	?_ReadADC32+2,_Data_Y+2
  1506  000368  C036  F028         	movff	?_ReadADC32+3,_Data_Y+3
  1507  00036C                     
  1508                           ;Digitizer32bits_V0.c: 169:                     SumData_Y = (signed long long) SumData_Y
      +                           + Data_Y;
  1509  00036C  C025  F04C         	movff	_Data_Y,??_Interrups
  1510  000370  C026  F04D         	movff	_Data_Y+1,??_Interrups+1
  1511  000374  C027  F04E         	movff	_Data_Y+2,??_Interrups+2
  1512  000378  C028  F04F         	movff	_Data_Y+3,??_Interrups+3
  1513  00037C  6A50               	clrf	(??_Interrups+4)^0,c
  1514  00037E  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  1515  000380  6850               	setf	(??_Interrups+4)^0,c
  1516  000382  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  1517  000386  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  1518  00038A  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  1519  00038E  5009               	movf	_SumData_Y^0,w,c
  1520  000390  244C               	addwf	??_Interrups^0,w,c
  1521  000392  6E09               	movwf	_SumData_Y^0,c
  1522  000394  500A               	movf	(_SumData_Y+1)^0,w,c
  1523  000396  204D               	addwfc	(??_Interrups+1)^0,w,c
  1524  000398  6E0A               	movwf	(_SumData_Y+1)^0,c
  1525  00039A  500B               	movf	(_SumData_Y+2)^0,w,c
  1526  00039C  204E               	addwfc	(??_Interrups+2)^0,w,c
  1527  00039E  6E0B               	movwf	(_SumData_Y+2)^0,c
  1528  0003A0  500C               	movf	(_SumData_Y+3)^0,w,c
  1529  0003A2  204F               	addwfc	(??_Interrups+3)^0,w,c
  1530  0003A4  6E0C               	movwf	(_SumData_Y+3)^0,c
  1531  0003A6  500D               	movf	(_SumData_Y+4)^0,w,c
  1532  0003A8  2050               	addwfc	(??_Interrups+4)^0,w,c
  1533  0003AA  6E0D               	movwf	(_SumData_Y+4)^0,c
  1534  0003AC  500E               	movf	(_SumData_Y+5)^0,w,c
  1535  0003AE  2051               	addwfc	(??_Interrups+5)^0,w,c
  1536  0003B0  6E0E               	movwf	(_SumData_Y+5)^0,c
  1537  0003B2  500F               	movf	(_SumData_Y+6)^0,w,c
  1538  0003B4  2052               	addwfc	(??_Interrups+6)^0,w,c
  1539  0003B6  6E0F               	movwf	(_SumData_Y+6)^0,c
  1540  0003B8  5010               	movf	(_SumData_Y+7)^0,w,c
  1541  0003BA  2053               	addwfc	(??_Interrups+7)^0,w,c
  1542  0003BC  6E10               	movwf	(_SumData_Y+7)^0,c
  1543  0003BE                     
  1544                           ;Digitizer32bits_V0.c: 170:                 }
  1545  0003BE  2A5D               	incf	Interrups@conta^0,f,c
  1546  0003C0  0E09               	movlw	9
  1547  0003C2  645D               	cpfsgt	Interrups@conta^0,c
  1548  0003C4  EFE6  F001         	goto	i2u98_41
  1549  0003C8  EFE9  F001         	goto	i2u98_40
  1550  0003CC                     i2u98_41:
  1551  0003CC  FFFF               	dw	65535	; assembler added errata NOP
  1552  0003CE  EFAB  F001         	goto	i2l2269
  1553  0003D2                     i2u98_40:
  1554  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  1555  0003D4                     
  1556                           ;Digitizer32bits_V0.c: 173:                 SelectChannelZ();
  1557  0003D4  EC0F  F00C         	call	_SelectChannelZ	;wreg free
  1558  0003D8                     
  1559                           ;Digitizer32bits_V0.c: 174:                 _delay((unsigned long)((5)*(39321600UL/4000.
      +                          0)));
  1560  0003D8  0E30               	movlw	48
  1561  0003DA  6E4C               	movwf	??_Interrups^0,c
  1562  0003DC  0EE7               	movlw	231
  1563  0003DE                     i2u134_47:
  1564  0003DE  FFFF               	dw	65535	; errata NOP
  1565  0003E0  2EE8               	decfsz	wreg,f,c
  1566  0003E2  D7FD               	bra	i2u134_47
  1567  0003E4  2E4C               	decfsz	??_Interrups^0,f,c
  1568  0003E6  D7FB               	bra	i2u134_47
  1569  0003E8  D000               	nop2	
  1570  0003EA                     
  1571                           ;Digitizer32bits_V0.c: 175:                 Data_Z = ReadADC32();
  1572  0003EA  EC09  F009         	call	_ReadADC32	;wreg free
  1573  0003EE  C033  F021         	movff	?_ReadADC32,_Data_Z
  1574  0003F2  C034  F022         	movff	?_ReadADC32+1,_Data_Z+1
  1575  0003F6  C035  F023         	movff	?_ReadADC32+2,_Data_Z+2
  1576  0003FA  C036  F024         	movff	?_ReadADC32+3,_Data_Z+3
  1577  0003FE                     
  1578                           ;Digitizer32bits_V0.c: 176:                 for(conta=0; conta<10; conta++){
  1579  0003FE  0E00               	movlw	0
  1580  000400  6E5D               	movwf	Interrups@conta^0,c
  1581  000402                     i2l2289:
  1582  000402  FFFF               	dw	65535	; assembler added errata NOP
  1583                           
  1584                           ;Digitizer32bits_V0.c: 177:                     Data_Z = ReadADC32();
  1585  000404  EC09  F009         	call	_ReadADC32	;wreg free
  1586  000408  C033  F021         	movff	?_ReadADC32,_Data_Z
  1587  00040C  C034  F022         	movff	?_ReadADC32+1,_Data_Z+1
  1588  000410  C035  F023         	movff	?_ReadADC32+2,_Data_Z+2
  1589  000414  C036  F024         	movff	?_ReadADC32+3,_Data_Z+3
  1590  000418                     
  1591                           ;Digitizer32bits_V0.c: 178:                     SumData_Z = (signed long long) SumData_Z
      +                           + Data_Z;
  1592  000418  C021  F04C         	movff	_Data_Z,??_Interrups
  1593  00041C  C022  F04D         	movff	_Data_Z+1,??_Interrups+1
  1594  000420  C023  F04E         	movff	_Data_Z+2,??_Interrups+2
  1595  000424  C024  F04F         	movff	_Data_Z+3,??_Interrups+3
  1596  000428  6A50               	clrf	(??_Interrups+4)^0,c
  1597  00042A  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  1598  00042C  6850               	setf	(??_Interrups+4)^0,c
  1599  00042E  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  1600  000432  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  1601  000436  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  1602  00043A  5001               	movf	_SumData_Z^0,w,c
  1603  00043C  244C               	addwf	??_Interrups^0,w,c
  1604  00043E  6E01               	movwf	_SumData_Z^0,c
  1605  000440  5002               	movf	(_SumData_Z+1)^0,w,c
  1606  000442  204D               	addwfc	(??_Interrups+1)^0,w,c
  1607  000444  6E02               	movwf	(_SumData_Z+1)^0,c
  1608  000446  5003               	movf	(_SumData_Z+2)^0,w,c
  1609  000448  204E               	addwfc	(??_Interrups+2)^0,w,c
  1610  00044A  6E03               	movwf	(_SumData_Z+2)^0,c
  1611  00044C  5004               	movf	(_SumData_Z+3)^0,w,c
  1612  00044E  204F               	addwfc	(??_Interrups+3)^0,w,c
  1613  000450  6E04               	movwf	(_SumData_Z+3)^0,c
  1614  000452  5005               	movf	(_SumData_Z+4)^0,w,c
  1615  000454  2050               	addwfc	(??_Interrups+4)^0,w,c
  1616  000456  6E05               	movwf	(_SumData_Z+4)^0,c
  1617  000458  5006               	movf	(_SumData_Z+5)^0,w,c
  1618  00045A  2051               	addwfc	(??_Interrups+5)^0,w,c
  1619  00045C  6E06               	movwf	(_SumData_Z+5)^0,c
  1620  00045E  5007               	movf	(_SumData_Z+6)^0,w,c
  1621  000460  2052               	addwfc	(??_Interrups+6)^0,w,c
  1622  000462  6E07               	movwf	(_SumData_Z+6)^0,c
  1623  000464  5008               	movf	(_SumData_Z+7)^0,w,c
  1624  000466  2053               	addwfc	(??_Interrups+7)^0,w,c
  1625  000468  6E08               	movwf	(_SumData_Z+7)^0,c
  1626  00046A                     
  1627                           ;Digitizer32bits_V0.c: 179:                 }
  1628  00046A  2A5D               	incf	Interrups@conta^0,f,c
  1629  00046C  0E09               	movlw	9
  1630  00046E  645D               	cpfsgt	Interrups@conta^0,c
  1631  000470  EF3C  F002         	goto	i2u99_41
  1632  000474  EF3F  F002         	goto	i2u99_40
  1633  000478                     i2u99_41:
  1634  000478  FFFF               	dw	65535	; assembler added errata NOP
  1635  00047A  EF01  F002         	goto	i2l2289
  1636  00047E                     i2u99_40:
  1637  00047E  FFFF               	dw	65535	; assembler added errata NOP
  1638  000480                     
  1639                           ;Digitizer32bits_V0.c: 182:                 SelectChannelC();
  1640  000480  EC2B  F00C         	call	_SelectChannelC	;wreg free
  1641  000484                     
  1642                           ;Digitizer32bits_V0.c: 183:                 _delay((unsigned long)((5)*(39321600UL/4000.
      +                          0)));
  1643  000484  0E30               	movlw	48
  1644  000486  6E4C               	movwf	??_Interrups^0,c
  1645  000488  0EE7               	movlw	231
  1646  00048A                     i2u135_47:
  1647  00048A  FFFF               	dw	65535	; errata NOP
  1648  00048C  2EE8               	decfsz	wreg,f,c
  1649  00048E  D7FD               	bra	i2u135_47
  1650  000490  2E4C               	decfsz	??_Interrups^0,f,c
  1651  000492  D7FB               	bra	i2u135_47
  1652  000494  D000               	nop2	
  1653  000496                     
  1654                           ;Digitizer32bits_V0.c: 184:                 Data_TC = ReadADC32();
  1655  000496  EC09  F009         	call	_ReadADC32	;wreg free
  1656  00049A  C033  F01D         	movff	?_ReadADC32,_Data_TC
  1657  00049E  C034  F01E         	movff	?_ReadADC32+1,_Data_TC+1
  1658  0004A2  C035  F01F         	movff	?_ReadADC32+2,_Data_TC+2
  1659  0004A6  C036  F020         	movff	?_ReadADC32+3,_Data_TC+3
  1660  0004AA                     
  1661                           ;Digitizer32bits_V0.c: 185:                 for(conta=0; conta<10; conta++){
  1662  0004AA  0E00               	movlw	0
  1663  0004AC  6E5D               	movwf	Interrups@conta^0,c
  1664  0004AE                     i2l2309:
  1665  0004AE  FFFF               	dw	65535	; assembler added errata NOP
  1666                           
  1667                           ;Digitizer32bits_V0.c: 186:                     Data_TC = ReadADC32();
  1668  0004B0  EC09  F009         	call	_ReadADC32	;wreg free
  1669  0004B4  C033  F01D         	movff	?_ReadADC32,_Data_TC
  1670  0004B8  C034  F01E         	movff	?_ReadADC32+1,_Data_TC+1
  1671  0004BC  C035  F01F         	movff	?_ReadADC32+2,_Data_TC+2
  1672  0004C0  C036  F020         	movff	?_ReadADC32+3,_Data_TC+3
  1673  0004C4                     
  1674                           ;Digitizer32bits_V0.c: 187:                     SumData_TC = (signed long long) SumData_
      +                          TC + Data_TC;
  1675  0004C4  C01D  F04C         	movff	_Data_TC,??_Interrups
  1676  0004C8  C01E  F04D         	movff	_Data_TC+1,??_Interrups+1
  1677  0004CC  C01F  F04E         	movff	_Data_TC+2,??_Interrups+2
  1678  0004D0  C020  F04F         	movff	_Data_TC+3,??_Interrups+3
  1679  0004D4  6A50               	clrf	(??_Interrups+4)^0,c
  1680  0004D6  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  1681  0004D8  6850               	setf	(??_Interrups+4)^0,c
  1682  0004DA  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  1683  0004DE  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  1684  0004E2  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  1685  0004E6  0100               	movlb	0	; () banked
  1686  0004E8  5168               	movf	_SumData_TC& (0+255),w,b
  1687  0004EA  244C               	addwf	??_Interrups^0,w,c
  1688  0004EC  6F68               	movwf	_SumData_TC& (0+255),b
  1689  0004EE  5169               	movf	(_SumData_TC+1)& (0+255),w,b
  1690  0004F0  204D               	addwfc	(??_Interrups+1)^0,w,c
  1691  0004F2  6F69               	movwf	(_SumData_TC+1)& (0+255),b
  1692  0004F4  516A               	movf	(_SumData_TC+2)& (0+255),w,b
  1693  0004F6  204E               	addwfc	(??_Interrups+2)^0,w,c
  1694  0004F8  6F6A               	movwf	(_SumData_TC+2)& (0+255),b
  1695  0004FA  516B               	movf	(_SumData_TC+3)& (0+255),w,b
  1696  0004FC  204F               	addwfc	(??_Interrups+3)^0,w,c
  1697  0004FE  6F6B               	movwf	(_SumData_TC+3)& (0+255),b
  1698  000500  516C               	movf	(_SumData_TC+4)& (0+255),w,b
  1699  000502  2050               	addwfc	(??_Interrups+4)^0,w,c
  1700  000504  6F6C               	movwf	(_SumData_TC+4)& (0+255),b
  1701  000506  516D               	movf	(_SumData_TC+5)& (0+255),w,b
  1702  000508  2051               	addwfc	(??_Interrups+5)^0,w,c
  1703  00050A  6F6D               	movwf	(_SumData_TC+5)& (0+255),b
  1704  00050C  516E               	movf	(_SumData_TC+6)& (0+255),w,b
  1705  00050E  2052               	addwfc	(??_Interrups+6)^0,w,c
  1706  000510  6F6E               	movwf	(_SumData_TC+6)& (0+255),b
  1707  000512  516F               	movf	(_SumData_TC+7)& (0+255),w,b
  1708  000514  2053               	addwfc	(??_Interrups+7)^0,w,c
  1709  000516  6F6F               	movwf	(_SumData_TC+7)& (0+255),b
  1710  000518                     
  1711                           ; BSR set to: 0
  1712                           ;Digitizer32bits_V0.c: 188:                 }
  1713  000518  2A5D               	incf	Interrups@conta^0,f,c
  1714  00051A                     
  1715                           ; BSR set to: 0
  1716  00051A  0E09               	movlw	9
  1717  00051C  645D               	cpfsgt	Interrups@conta^0,c
  1718  00051E  EF93  F002         	goto	i2u100_41
  1719  000522  EF96  F002         	goto	i2u100_40
  1720  000526                     i2u100_41:
  1721  000526  FFFF               	dw	65535	; assembler added errata NOP
  1722  000528  EF57  F002         	goto	i2l2309
  1723  00052C                     i2u100_40:
  1724  00052C  FFFF               	dw	65535	; assembler added errata NOP
  1725  00052E                     
  1726                           ; BSR set to: 0
  1727                           ;Digitizer32bits_V0.c: 191:                 SelectChannelS();
  1728  00052E  EC24  F00C         	call	_SelectChannelS	;wreg free
  1729  000532                     
  1730                           ;Digitizer32bits_V0.c: 192:                 _delay((unsigned long)((5)*(39321600UL/4000.
      +                          0)));
  1731  000532  0E30               	movlw	48
  1732  000534  6E4C               	movwf	??_Interrups^0,c
  1733  000536  0EE7               	movlw	231
  1734  000538                     i2u136_47:
  1735  000538  FFFF               	dw	65535	; errata NOP
  1736  00053A  2EE8               	decfsz	wreg,f,c
  1737  00053C  D7FD               	bra	i2u136_47
  1738  00053E  2E4C               	decfsz	??_Interrups^0,f,c
  1739  000540  D7FB               	bra	i2u136_47
  1740  000542  D000               	nop2	
  1741  000544                     
  1742                           ;Digitizer32bits_V0.c: 193:                 Data_TS = ReadADC32();
  1743  000544  EC09  F009         	call	_ReadADC32	;wreg free
  1744  000548  C033  F019         	movff	?_ReadADC32,_Data_TS
  1745  00054C  C034  F01A         	movff	?_ReadADC32+1,_Data_TS+1
  1746  000550  C035  F01B         	movff	?_ReadADC32+2,_Data_TS+2
  1747  000554  C036  F01C         	movff	?_ReadADC32+3,_Data_TS+3
  1748  000558                     
  1749                           ;Digitizer32bits_V0.c: 194:                 for(conta=0; conta<10; conta++){
  1750  000558  0E00               	movlw	0
  1751  00055A  6E5D               	movwf	Interrups@conta^0,c
  1752  00055C                     i2l2329:
  1753  00055C  FFFF               	dw	65535	; assembler added errata NOP
  1754                           
  1755                           ;Digitizer32bits_V0.c: 195:                     Data_TS = ReadADC32();
  1756  00055E  EC09  F009         	call	_ReadADC32	;wreg free
  1757  000562  C033  F019         	movff	?_ReadADC32,_Data_TS
  1758  000566  C034  F01A         	movff	?_ReadADC32+1,_Data_TS+1
  1759  00056A  C035  F01B         	movff	?_ReadADC32+2,_Data_TS+2
  1760  00056E  C036  F01C         	movff	?_ReadADC32+3,_Data_TS+3
  1761  000572                     
  1762                           ;Digitizer32bits_V0.c: 196:                     SumData_TS = (signed long long) SumData_
      +                          TS + Data_TS;
  1763  000572  C019  F04C         	movff	_Data_TS,??_Interrups
  1764  000576  C01A  F04D         	movff	_Data_TS+1,??_Interrups+1
  1765  00057A  C01B  F04E         	movff	_Data_TS+2,??_Interrups+2
  1766  00057E  C01C  F04F         	movff	_Data_TS+3,??_Interrups+3
  1767  000582  6A50               	clrf	(??_Interrups+4)^0,c
  1768  000584  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  1769  000586  6850               	setf	(??_Interrups+4)^0,c
  1770  000588  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  1771  00058C  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  1772  000590  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  1773  000594  0100               	movlb	0	; () banked
  1774  000596  5160               	movf	_SumData_TS& (0+255),w,b
  1775  000598  244C               	addwf	??_Interrups^0,w,c
  1776  00059A  6F60               	movwf	_SumData_TS& (0+255),b
  1777  00059C  5161               	movf	(_SumData_TS+1)& (0+255),w,b
  1778  00059E  204D               	addwfc	(??_Interrups+1)^0,w,c
  1779  0005A0  6F61               	movwf	(_SumData_TS+1)& (0+255),b
  1780  0005A2  5162               	movf	(_SumData_TS+2)& (0+255),w,b
  1781  0005A4  204E               	addwfc	(??_Interrups+2)^0,w,c
  1782  0005A6  6F62               	movwf	(_SumData_TS+2)& (0+255),b
  1783  0005A8  5163               	movf	(_SumData_TS+3)& (0+255),w,b
  1784  0005AA  204F               	addwfc	(??_Interrups+3)^0,w,c
  1785  0005AC  6F63               	movwf	(_SumData_TS+3)& (0+255),b
  1786  0005AE  5164               	movf	(_SumData_TS+4)& (0+255),w,b
  1787  0005B0  2050               	addwfc	(??_Interrups+4)^0,w,c
  1788  0005B2  6F64               	movwf	(_SumData_TS+4)& (0+255),b
  1789  0005B4  5165               	movf	(_SumData_TS+5)& (0+255),w,b
  1790  0005B6  2051               	addwfc	(??_Interrups+5)^0,w,c
  1791  0005B8  6F65               	movwf	(_SumData_TS+5)& (0+255),b
  1792  0005BA  5166               	movf	(_SumData_TS+6)& (0+255),w,b
  1793  0005BC  2052               	addwfc	(??_Interrups+6)^0,w,c
  1794  0005BE  6F66               	movwf	(_SumData_TS+6)& (0+255),b
  1795  0005C0  5167               	movf	(_SumData_TS+7)& (0+255),w,b
  1796  0005C2  2053               	addwfc	(??_Interrups+7)^0,w,c
  1797  0005C4  6F67               	movwf	(_SumData_TS+7)& (0+255),b
  1798  0005C6                     
  1799                           ; BSR set to: 0
  1800                           ;Digitizer32bits_V0.c: 197:                 }
  1801  0005C6  2A5D               	incf	Interrups@conta^0,f,c
  1802  0005C8                     
  1803                           ; BSR set to: 0
  1804  0005C8  0E09               	movlw	9
  1805  0005CA  645D               	cpfsgt	Interrups@conta^0,c
  1806  0005CC  EFEA  F002         	goto	i2u101_41
  1807  0005D0  EFED  F002         	goto	i2u101_40
  1808  0005D4                     i2u101_41:
  1809  0005D4  FFFF               	dw	65535	; assembler added errata NOP
  1810  0005D6  EFAE  F002         	goto	i2l2329
  1811  0005DA                     i2u101_40:
  1812  0005DA  FFFF               	dw	65535	; assembler added errata NOP
  1813  0005DC                     
  1814                           ; BSR set to: 0
  1815                           ;Digitizer32bits_V0.c: 200:                 Data_X = (signed long long) SumData_X/10;
  1816  0005DC  C011  F032         	movff	_SumData_X,___aodiv@dividend
  1817  0005E0  C012  F033         	movff	_SumData_X+1,___aodiv@dividend+1
  1818  0005E4  C013  F034         	movff	_SumData_X+2,___aodiv@dividend+2
  1819  0005E8  C014  F035         	movff	_SumData_X+3,___aodiv@dividend+3
  1820  0005EC  C015  F036         	movff	_SumData_X+4,___aodiv@dividend+4
  1821  0005F0  C016  F037         	movff	_SumData_X+5,___aodiv@dividend+5
  1822  0005F4  C017  F038         	movff	_SumData_X+6,___aodiv@dividend+6
  1823  0005F8  C018  F039         	movff	_SumData_X+7,___aodiv@dividend+7
  1824  0005FC  0E0A               	movlw	10
  1825  0005FE  6E3A               	movwf	___aodiv@divisor^0,c
  1826  000600  0E00               	movlw	0
  1827  000602  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  1828  000604  0E00               	movlw	0
  1829  000606  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  1830  000608  0E00               	movlw	0
  1831  00060A  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  1832  00060C  0E00               	movlw	0
  1833  00060E  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  1834  000610  0E00               	movlw	0
  1835  000612  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  1836  000614  0E00               	movlw	0
  1837  000616  6E40               	movwf	(___aodiv@divisor+6)^0,c
  1838  000618  0E00               	movlw	0
  1839  00061A  6E41               	movwf	(___aodiv@divisor+7)^0,c
  1840  00061C  EC2F  F008         	call	___aodiv	;wreg free
  1841  000620  C032  F04C         	movff	?___aodiv,??_Interrups
  1842  000624  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  1843  000628  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  1844  00062C  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  1845  000630  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  1846  000634  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  1847  000638  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  1848  00063C  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  1849  000640  C04C  F029         	movff	??_Interrups,_Data_X
  1850  000644  C04D  F02A         	movff	??_Interrups+1,_Data_X+1
  1851  000648  C04E  F02B         	movff	??_Interrups+2,_Data_X+2
  1852  00064C  C04F  F02C         	movff	??_Interrups+3,_Data_X+3
  1853                           
  1854                           ;Digitizer32bits_V0.c: 201:                 Data_Y = (signed long long) SumData_Y/10;
  1855  000650  C009  F032         	movff	_SumData_Y,___aodiv@dividend
  1856  000654  C00A  F033         	movff	_SumData_Y+1,___aodiv@dividend+1
  1857  000658  C00B  F034         	movff	_SumData_Y+2,___aodiv@dividend+2
  1858  00065C  C00C  F035         	movff	_SumData_Y+3,___aodiv@dividend+3
  1859  000660  C00D  F036         	movff	_SumData_Y+4,___aodiv@dividend+4
  1860  000664  C00E  F037         	movff	_SumData_Y+5,___aodiv@dividend+5
  1861  000668  C00F  F038         	movff	_SumData_Y+6,___aodiv@dividend+6
  1862  00066C  C010  F039         	movff	_SumData_Y+7,___aodiv@dividend+7
  1863  000670  0E0A               	movlw	10
  1864  000672  6E3A               	movwf	___aodiv@divisor^0,c
  1865  000674  0E00               	movlw	0
  1866  000676  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  1867  000678  0E00               	movlw	0
  1868  00067A  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  1869  00067C  0E00               	movlw	0
  1870  00067E  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  1871  000680  0E00               	movlw	0
  1872  000682  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  1873  000684  0E00               	movlw	0
  1874  000686  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  1875  000688  0E00               	movlw	0
  1876  00068A  6E40               	movwf	(___aodiv@divisor+6)^0,c
  1877  00068C  0E00               	movlw	0
  1878  00068E  6E41               	movwf	(___aodiv@divisor+7)^0,c
  1879  000690  EC2F  F008         	call	___aodiv	;wreg free
  1880  000694  C032  F04C         	movff	?___aodiv,??_Interrups
  1881  000698  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  1882  00069C  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  1883  0006A0  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  1884  0006A4  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  1885  0006A8  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  1886  0006AC  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  1887  0006B0  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  1888  0006B4  C04C  F025         	movff	??_Interrups,_Data_Y
  1889  0006B8  C04D  F026         	movff	??_Interrups+1,_Data_Y+1
  1890  0006BC  C04E  F027         	movff	??_Interrups+2,_Data_Y+2
  1891  0006C0  C04F  F028         	movff	??_Interrups+3,_Data_Y+3
  1892                           
  1893                           ;Digitizer32bits_V0.c: 202:                 Data_Z = (signed long long) SumData_Z/10;
  1894  0006C4  C001  F032         	movff	_SumData_Z,___aodiv@dividend
  1895  0006C8  C002  F033         	movff	_SumData_Z+1,___aodiv@dividend+1
  1896  0006CC  C003  F034         	movff	_SumData_Z+2,___aodiv@dividend+2
  1897  0006D0  C004  F035         	movff	_SumData_Z+3,___aodiv@dividend+3
  1898  0006D4  C005  F036         	movff	_SumData_Z+4,___aodiv@dividend+4
  1899  0006D8  C006  F037         	movff	_SumData_Z+5,___aodiv@dividend+5
  1900  0006DC  C007  F038         	movff	_SumData_Z+6,___aodiv@dividend+6
  1901  0006E0  C008  F039         	movff	_SumData_Z+7,___aodiv@dividend+7
  1902  0006E4  0E0A               	movlw	10
  1903  0006E6  6E3A               	movwf	___aodiv@divisor^0,c
  1904  0006E8  0E00               	movlw	0
  1905  0006EA  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  1906  0006EC  0E00               	movlw	0
  1907  0006EE  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  1908  0006F0  0E00               	movlw	0
  1909  0006F2  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  1910  0006F4  0E00               	movlw	0
  1911  0006F6  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  1912  0006F8  0E00               	movlw	0
  1913  0006FA  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  1914  0006FC  0E00               	movlw	0
  1915  0006FE  6E40               	movwf	(___aodiv@divisor+6)^0,c
  1916  000700  0E00               	movlw	0
  1917  000702  6E41               	movwf	(___aodiv@divisor+7)^0,c
  1918  000704  EC2F  F008         	call	___aodiv	;wreg free
  1919  000708  C032  F04C         	movff	?___aodiv,??_Interrups
  1920  00070C  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  1921  000710  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  1922  000714  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  1923  000718  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  1924  00071C  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  1925  000720  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  1926  000724  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  1927  000728  C04C  F021         	movff	??_Interrups,_Data_Z
  1928  00072C  C04D  F022         	movff	??_Interrups+1,_Data_Z+1
  1929  000730  C04E  F023         	movff	??_Interrups+2,_Data_Z+2
  1930  000734  C04F  F024         	movff	??_Interrups+3,_Data_Z+3
  1931                           
  1932                           ;Digitizer32bits_V0.c: 203:                 Data_TC = (signed long long) SumData_TC/10;
  1933  000738  C068  F032         	movff	_SumData_TC,___aodiv@dividend
  1934  00073C  C069  F033         	movff	_SumData_TC+1,___aodiv@dividend+1
  1935  000740  C06A  F034         	movff	_SumData_TC+2,___aodiv@dividend+2
  1936  000744  C06B  F035         	movff	_SumData_TC+3,___aodiv@dividend+3
  1937  000748  C06C  F036         	movff	_SumData_TC+4,___aodiv@dividend+4
  1938  00074C  C06D  F037         	movff	_SumData_TC+5,___aodiv@dividend+5
  1939  000750  C06E  F038         	movff	_SumData_TC+6,___aodiv@dividend+6
  1940  000754  C06F  F039         	movff	_SumData_TC+7,___aodiv@dividend+7
  1941  000758  0E0A               	movlw	10
  1942  00075A  6E3A               	movwf	___aodiv@divisor^0,c
  1943  00075C  0E00               	movlw	0
  1944  00075E  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  1945  000760  0E00               	movlw	0
  1946  000762  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  1947  000764  0E00               	movlw	0
  1948  000766  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  1949  000768  0E00               	movlw	0
  1950  00076A  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  1951  00076C  0E00               	movlw	0
  1952  00076E  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  1953  000770  0E00               	movlw	0
  1954  000772  6E40               	movwf	(___aodiv@divisor+6)^0,c
  1955  000774  0E00               	movlw	0
  1956  000776  6E41               	movwf	(___aodiv@divisor+7)^0,c
  1957  000778  EC2F  F008         	call	___aodiv	;wreg free
  1958  00077C  C032  F04C         	movff	?___aodiv,??_Interrups
  1959  000780  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  1960  000784  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  1961  000788  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  1962  00078C  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  1963  000790  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  1964  000794  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  1965  000798  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  1966  00079C  C04C  F01D         	movff	??_Interrups,_Data_TC
  1967  0007A0  C04D  F01E         	movff	??_Interrups+1,_Data_TC+1
  1968  0007A4  C04E  F01F         	movff	??_Interrups+2,_Data_TC+2
  1969  0007A8  C04F  F020         	movff	??_Interrups+3,_Data_TC+3
  1970                           
  1971                           ;Digitizer32bits_V0.c: 204:                 Data_TS = (signed long long) SumData_TS/10;
  1972  0007AC  C060  F032         	movff	_SumData_TS,___aodiv@dividend
  1973  0007B0  C061  F033         	movff	_SumData_TS+1,___aodiv@dividend+1
  1974  0007B4  C062  F034         	movff	_SumData_TS+2,___aodiv@dividend+2
  1975  0007B8  C063  F035         	movff	_SumData_TS+3,___aodiv@dividend+3
  1976  0007BC  C064  F036         	movff	_SumData_TS+4,___aodiv@dividend+4
  1977  0007C0  C065  F037         	movff	_SumData_TS+5,___aodiv@dividend+5
  1978  0007C4  C066  F038         	movff	_SumData_TS+6,___aodiv@dividend+6
  1979  0007C8  C067  F039         	movff	_SumData_TS+7,___aodiv@dividend+7
  1980  0007CC  0E0A               	movlw	10
  1981  0007CE  6E3A               	movwf	___aodiv@divisor^0,c
  1982  0007D0  0E00               	movlw	0
  1983  0007D2  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  1984  0007D4  0E00               	movlw	0
  1985  0007D6  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  1986  0007D8  0E00               	movlw	0
  1987  0007DA  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  1988  0007DC  0E00               	movlw	0
  1989  0007DE  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  1990  0007E0  0E00               	movlw	0
  1991  0007E2  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  1992  0007E4  0E00               	movlw	0
  1993  0007E6  6E40               	movwf	(___aodiv@divisor+6)^0,c
  1994  0007E8  0E00               	movlw	0
  1995  0007EA  6E41               	movwf	(___aodiv@divisor+7)^0,c
  1996  0007EC  EC2F  F008         	call	___aodiv	;wreg free
  1997  0007F0  C032  F04C         	movff	?___aodiv,??_Interrups
  1998  0007F4  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  1999  0007F8  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  2000  0007FC  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  2001  000800  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  2002  000804  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  2003  000808  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  2004  00080C  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  2005  000810  C04C  F019         	movff	??_Interrups,_Data_TS
  2006  000814  C04D  F01A         	movff	??_Interrups+1,_Data_TS+1
  2007  000818  C04E  F01B         	movff	??_Interrups+2,_Data_TS+2
  2008  00081C  C04F  F01C         	movff	??_Interrups+3,_Data_TS+3
  2009  000820                     
  2010                           ;Digitizer32bits_V0.c: 207:                 print_string("JROADQ,");
  2011  000820  0E51               	movlw	low STR_2
  2012  000822  6E33               	movwf	print_string@str^0,c
  2013  000824  0E10               	movlw	high STR_2
  2014  000826  6E34               	movwf	(print_string@str+1)^0,c
  2015  000828  EC4E  F00B         	call	_print_string	;wreg free
  2016  00082C                     
  2017                           ;Digitizer32bits_V0.c: 208:                 WriteByte_USART(ContaSample);
  2018  00082C  5031               	movf	_ContaSample^0,w,c
  2019  00082E  ECB6  F00B         	call	_WriteByte_USART
  2020  000832                     
  2021                           ;Digitizer32bits_V0.c: 209:                 print_value(Data_X);
  2022  000832  C029  F033         	movff	_Data_X,print_value@value
  2023  000836  C02A  F034         	movff	_Data_X+1,print_value@value+1
  2024  00083A  C02B  F035         	movff	_Data_X+2,print_value@value+2
  2025  00083E  C02C  F036         	movff	_Data_X+3,print_value@value+3
  2026  000842  EC9B  F009         	call	_print_value	;wreg free
  2027  000846                     
  2028                           ;Digitizer32bits_V0.c: 210:                 print_value(Data_Y);
  2029  000846  C025  F033         	movff	_Data_Y,print_value@value
  2030  00084A  C026  F034         	movff	_Data_Y+1,print_value@value+1
  2031  00084E  C027  F035         	movff	_Data_Y+2,print_value@value+2
  2032  000852  C028  F036         	movff	_Data_Y+3,print_value@value+3
  2033  000856  EC9B  F009         	call	_print_value	;wreg free
  2034  00085A                     
  2035                           ;Digitizer32bits_V0.c: 211:                 print_value(Data_Z);
  2036  00085A  C021  F033         	movff	_Data_Z,print_value@value
  2037  00085E  C022  F034         	movff	_Data_Z+1,print_value@value+1
  2038  000862  C023  F035         	movff	_Data_Z+2,print_value@value+2
  2039  000866  C024  F036         	movff	_Data_Z+3,print_value@value+3
  2040  00086A  EC9B  F009         	call	_print_value	;wreg free
  2041  00086E                     
  2042                           ;Digitizer32bits_V0.c: 212:                 print_value(Data_TC);
  2043  00086E  C01D  F033         	movff	_Data_TC,print_value@value
  2044  000872  C01E  F034         	movff	_Data_TC+1,print_value@value+1
  2045  000876  C01F  F035         	movff	_Data_TC+2,print_value@value+2
  2046  00087A  C020  F036         	movff	_Data_TC+3,print_value@value+3
  2047  00087E  EC9B  F009         	call	_print_value	;wreg free
  2048  000882                     
  2049                           ;Digitizer32bits_V0.c: 213:                 print_value(Data_TS);
  2050  000882  C019  F033         	movff	_Data_TS,print_value@value
  2051  000886  C01A  F034         	movff	_Data_TS+1,print_value@value+1
  2052  00088A  C01B  F035         	movff	_Data_TS+2,print_value@value+2
  2053  00088E  C01C  F036         	movff	_Data_TS+3,print_value@value+3
  2054  000892  EC9B  F009         	call	_print_value	;wreg free
  2055  000896                     
  2056                           ;Digitizer32bits_V0.c: 214:                 print_string(",\n\r");
  2057  000896  0E59               	movlw	low STR_3
  2058  000898  6E33               	movwf	print_string@str^0,c
  2059  00089A  0E10               	movlw	high STR_3
  2060  00089C  6E34               	movwf	(print_string@str+1)^0,c
  2061  00089E  EC4E  F00B         	call	_print_string	;wreg free
  2062  0008A2                     
  2063                           ;Digitizer32bits_V0.c: 215:                 LATAbits.LATA2 = 0;
  2064  0008A2  9489               	bcf	137,2,c	;volatile
  2065                           
  2066                           ;Digitizer32bits_V0.c: 216:                 break;
  2067  0008A4  EFFB  F007         	goto	i2l160
  2068  0008A8                     i2l2357:
  2069  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  2070                           
  2071                           ;Digitizer32bits_V0.c: 218:                 TransmitCMD_USART('X');
  2072  0008AA  0E58               	movlw	88
  2073  0008AC  EC91  F00B         	call	_TransmitCMD_USART
  2074  0008B0                     
  2075                           ;Digitizer32bits_V0.c: 219:                 RCSTAbits.CREN = 1;
  2076  0008B0  88AB               	bsf	171,4,c	;volatile
  2077                           
  2078                           ;Digitizer32bits_V0.c: 220:         }
  2079  0008B2  EFFB  F007         	goto	i2l160
  2080  0008B6                     i2l2361:
  2081  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  2082  0008B8  505C               	movf	Interrups@ID^0,w,c
  2083  0008BA  6E4C               	movwf	??_Interrups^0,c
  2084  0008BC  6A4D               	clrf	(??_Interrups+1)^0,c
  2085                           
  2086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2087                           ; Switch size 1, requested type "simple"
  2088                           ; Number of cases is 1, Range of values is 0 to 0
  2089                           ; switch strategies available:
  2090                           ; Name         Instructions Cycles
  2091                           ; simple_byte            4     3 (average)
  2092                           ;	Chosen strategy is simple_byte
  2093  0008BE  504D               	movf	(??_Interrups+1)^0,w,c
  2094  0008C0  0A00               	xorlw	0	; case 0
  2095  0008C2  B4D8               	btfsc	status,2,c
  2096  0008C4  EF66  F004         	goto	i2l2665
  2097  0008C8  EF54  F004         	goto	i2l2357
  2098  0008CC                     i2l2665:
  2099  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  2100                           
  2101                           ; Switch size 1, requested type "simple"
  2102                           ; Number of cases is 10, Range of values is 48 to 57
  2103                           ; switch strategies available:
  2104                           ; Name         Instructions Cycles
  2105                           ; simple_byte           31    16 (average)
  2106                           ;	Chosen strategy is simple_byte
  2107  0008CE  504C               	movf	??_Interrups^0,w,c
  2108  0008D0  0A30               	xorlw	48	; case 48
  2109  0008D2  B4D8               	btfsc	status,2,c
  2110  0008D4  EF2D  F000         	goto	i2l2095
  2111  0008D8  0A01               	xorlw	1	; case 49
  2112  0008DA  B4D8               	btfsc	status,2,c
  2113  0008DC  EF79  F000         	goto	i2l2139
  2114  0008E0  0A03               	xorlw	3	; case 50
  2115  0008E2  B4D8               	btfsc	status,2,c
  2116  0008E4  EF7F  F000         	goto	i2l2141
  2117  0008E8  0A01               	xorlw	1	; case 51
  2118  0008EA  B4D8               	btfsc	status,2,c
  2119  0008EC  EF85  F000         	goto	i2l2143
  2120  0008F0  0A07               	xorlw	7	; case 52
  2121  0008F2  B4D8               	btfsc	status,2,c
  2122  0008F4  EFE6  F000         	goto	i2l2199
  2123  0008F8  0A01               	xorlw	1	; case 53
  2124  0008FA  B4D8               	btfsc	status,2,c
  2125  0008FC  EFEC  F000         	goto	i2l2201
  2126  000900  0A03               	xorlw	3	; case 54
  2127  000902  B4D8               	btfsc	status,2,c
  2128  000904  EFF4  F000         	goto	i2l2205
  2129  000908  0A01               	xorlw	1	; case 55
  2130  00090A  B4D8               	btfsc	status,2,c
  2131  00090C  EFFA  F000         	goto	i2l2207
  2132  000910  0A0F               	xorlw	15	; case 56
  2133  000912  B4D8               	btfsc	status,2,c
  2134  000914  EF00  F001         	goto	i2l2209
  2135  000918  0A01               	xorlw	1	; case 57
  2136  00091A  B4D8               	btfsc	status,2,c
  2137  00091C  EF06  F001         	goto	i2l133
  2138  000920  EF54  F004         	goto	i2l2357
  2139  000924                     i2l121:
  2140  000924  FFFF               	dw	65535	; assembler added errata NOP
  2141  000926  AAF2               	btfss	242,5,c	;volatile
  2142  000928  EF98  F004         	goto	i2u102_41
  2143  00092C  EF9B  F004         	goto	i2u102_40
  2144  000930                     i2u102_41:
  2145  000930  FFFF               	dw	65535	; assembler added errata NOP
  2146  000932  EFFB  F007         	goto	i2l160
  2147  000936                     i2u102_40:
  2148  000936  FFFF               	dw	65535	; assembler added errata NOP
  2149  000938  A4F2               	btfss	242,2,c	;volatile
  2150  00093A  EFA1  F004         	goto	i2u103_41
  2151  00093E  EFA4  F004         	goto	i2u103_40
  2152  000942                     i2u103_41:
  2153  000942  FFFF               	dw	65535	; assembler added errata NOP
  2154  000944  EFFB  F007         	goto	i2l160
  2155  000948                     i2u103_40:
  2156  000948  FFFF               	dw	65535	; assembler added errata NOP
  2157  00094A                     
  2158                           ;Digitizer32bits_V0.c: 222:         INTCONbits.TMR0IF = 0;
  2159  00094A  94F2               	bcf	242,2,c	;volatile
  2160  00094C                     
  2161                           ;Digitizer32bits_V0.c: 223:         TMR0H = 0x10;
  2162  00094C  0E10               	movlw	16
  2163  00094E  6ED7               	movwf	215,c	;volatile
  2164                           
  2165                           ;Digitizer32bits_V0.c: 224:         TMR0L = 0x3D;
  2166  000950  0E3D               	movlw	61
  2167  000952  6ED6               	movwf	214,c	;volatile
  2168  000954                     
  2169                           ;Digitizer32bits_V0.c: 225:         ContaSample++;
  2170  000954  2A31               	incf	_ContaSample^0,f,c
  2171  000956                     
  2172                           ;Digitizer32bits_V0.c: 228:         SumData_X = 0;
  2173  000956  EE20  F011         	lfsr	2,_SumData_X
  2174  00095A  0E07               	movlw	7
  2175  00095C                     i2u104_41:
  2176  00095C  6ADE               	clrf	postinc2,c
  2177  00095E  06E8               	decf	wreg,f,c
  2178  000960  E2FD               	bc	i2u104_41
  2179  000962                     
  2180                           ;Digitizer32bits_V0.c: 229:         SumData_Y = 0;
  2181  000962  EE20  F009         	lfsr	2,_SumData_Y
  2182  000966  0E07               	movlw	7
  2183  000968                     i2u105_41:
  2184  000968  6ADE               	clrf	postinc2,c
  2185  00096A  06E8               	decf	wreg,f,c
  2186  00096C  E2FD               	bc	i2u105_41
  2187  00096E                     
  2188                           ;Digitizer32bits_V0.c: 230:         SumData_Z = 0;
  2189  00096E  EE20  F001         	lfsr	2,_SumData_Z
  2190  000972  0E07               	movlw	7
  2191  000974                     i2u106_41:
  2192  000974  6ADE               	clrf	postinc2,c
  2193  000976  06E8               	decf	wreg,f,c
  2194  000978  E2FD               	bc	i2u106_41
  2195  00097A                     
  2196                           ;Digitizer32bits_V0.c: 231:         SumData_TC = 0;
  2197  00097A  EE20  F068         	lfsr	2,_SumData_TC
  2198  00097E  0E07               	movlw	7
  2199  000980                     i2u107_41:
  2200  000980  6ADE               	clrf	postinc2,c
  2201  000982  06E8               	decf	wreg,f,c
  2202  000984  E2FD               	bc	i2u107_41
  2203  000986                     
  2204                           ;Digitizer32bits_V0.c: 232:         SumData_TS = 0;
  2205  000986  EE20  F060         	lfsr	2,_SumData_TS
  2206  00098A  0E07               	movlw	7
  2207  00098C                     i2u108_41:
  2208  00098C  6ADE               	clrf	postinc2,c
  2209  00098E  06E8               	decf	wreg,f,c
  2210  000990  E2FD               	bc	i2u108_41
  2211  000992                     
  2212                           ;Digitizer32bits_V0.c: 234:         LATAbits.LATA2 = 1;
  2213  000992  8489               	bsf	137,2,c	;volatile
  2214  000994                     
  2215                           ;Digitizer32bits_V0.c: 237:         SelectChannelX();
  2216  000994  EC1D  F00C         	call	_SelectChannelX	;wreg free
  2217  000998                     
  2218                           ;Digitizer32bits_V0.c: 238:         _delay((unsigned long)((5)*(39321600UL/4000.0)));
  2219  000998  0E30               	movlw	48
  2220  00099A  6E4C               	movwf	??_Interrups^0,c
  2221  00099C  0EE7               	movlw	231
  2222  00099E                     i2u137_47:
  2223  00099E  FFFF               	dw	65535	; errata NOP
  2224  0009A0  2EE8               	decfsz	wreg,f,c
  2225  0009A2  D7FD               	bra	i2u137_47
  2226  0009A4  2E4C               	decfsz	??_Interrups^0,f,c
  2227  0009A6  D7FB               	bra	i2u137_47
  2228  0009A8  D000               	nop2	
  2229  0009AA                     
  2230                           ;Digitizer32bits_V0.c: 239:         Data_X = ReadADC32();
  2231  0009AA  EC09  F009         	call	_ReadADC32	;wreg free
  2232  0009AE  C033  F029         	movff	?_ReadADC32,_Data_X
  2233  0009B2  C034  F02A         	movff	?_ReadADC32+1,_Data_X+1
  2234  0009B6  C035  F02B         	movff	?_ReadADC32+2,_Data_X+2
  2235  0009BA  C036  F02C         	movff	?_ReadADC32+3,_Data_X+3
  2236  0009BE                     
  2237                           ;Digitizer32bits_V0.c: 240:         for(conta=0; conta<10; conta++){
  2238  0009BE  0E00               	movlw	0
  2239  0009C0  6E5D               	movwf	Interrups@conta^0,c
  2240  0009C2                     i2l2395:
  2241  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  2242                           
  2243                           ;Digitizer32bits_V0.c: 241:             Data_X = ReadADC32();
  2244  0009C4  EC09  F009         	call	_ReadADC32	;wreg free
  2245  0009C8  C033  F029         	movff	?_ReadADC32,_Data_X
  2246  0009CC  C034  F02A         	movff	?_ReadADC32+1,_Data_X+1
  2247  0009D0  C035  F02B         	movff	?_ReadADC32+2,_Data_X+2
  2248  0009D4  C036  F02C         	movff	?_ReadADC32+3,_Data_X+3
  2249  0009D8                     
  2250                           ;Digitizer32bits_V0.c: 242:             SumData_X = (signed long long) SumData_X + Data_
      +                          X;
  2251  0009D8  C029  F04C         	movff	_Data_X,??_Interrups
  2252  0009DC  C02A  F04D         	movff	_Data_X+1,??_Interrups+1
  2253  0009E0  C02B  F04E         	movff	_Data_X+2,??_Interrups+2
  2254  0009E4  C02C  F04F         	movff	_Data_X+3,??_Interrups+3
  2255  0009E8  6A50               	clrf	(??_Interrups+4)^0,c
  2256  0009EA  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  2257  0009EC  6850               	setf	(??_Interrups+4)^0,c
  2258  0009EE  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  2259  0009F2  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  2260  0009F6  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  2261  0009FA  5011               	movf	_SumData_X^0,w,c
  2262  0009FC  244C               	addwf	??_Interrups^0,w,c
  2263  0009FE  6E11               	movwf	_SumData_X^0,c
  2264  000A00  5012               	movf	(_SumData_X+1)^0,w,c
  2265  000A02  204D               	addwfc	(??_Interrups+1)^0,w,c
  2266  000A04  6E12               	movwf	(_SumData_X+1)^0,c
  2267  000A06  5013               	movf	(_SumData_X+2)^0,w,c
  2268  000A08  204E               	addwfc	(??_Interrups+2)^0,w,c
  2269  000A0A  6E13               	movwf	(_SumData_X+2)^0,c
  2270  000A0C  5014               	movf	(_SumData_X+3)^0,w,c
  2271  000A0E  204F               	addwfc	(??_Interrups+3)^0,w,c
  2272  000A10  6E14               	movwf	(_SumData_X+3)^0,c
  2273  000A12  5015               	movf	(_SumData_X+4)^0,w,c
  2274  000A14  2050               	addwfc	(??_Interrups+4)^0,w,c
  2275  000A16  6E15               	movwf	(_SumData_X+4)^0,c
  2276  000A18  5016               	movf	(_SumData_X+5)^0,w,c
  2277  000A1A  2051               	addwfc	(??_Interrups+5)^0,w,c
  2278  000A1C  6E16               	movwf	(_SumData_X+5)^0,c
  2279  000A1E  5017               	movf	(_SumData_X+6)^0,w,c
  2280  000A20  2052               	addwfc	(??_Interrups+6)^0,w,c
  2281  000A22  6E17               	movwf	(_SumData_X+6)^0,c
  2282  000A24  5018               	movf	(_SumData_X+7)^0,w,c
  2283  000A26  2053               	addwfc	(??_Interrups+7)^0,w,c
  2284  000A28  6E18               	movwf	(_SumData_X+7)^0,c
  2285  000A2A                     
  2286                           ;Digitizer32bits_V0.c: 243:         }
  2287  000A2A  2A5D               	incf	Interrups@conta^0,f,c
  2288  000A2C  0E09               	movlw	9
  2289  000A2E  645D               	cpfsgt	Interrups@conta^0,c
  2290  000A30  EF1C  F005         	goto	i2u109_41
  2291  000A34  EF1F  F005         	goto	i2u109_40
  2292  000A38                     i2u109_41:
  2293  000A38  FFFF               	dw	65535	; assembler added errata NOP
  2294  000A3A  EFE1  F004         	goto	i2l2395
  2295  000A3E                     i2u109_40:
  2296  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  2297  000A40                     
  2298                           ;Digitizer32bits_V0.c: 246:         SelectChannelY();
  2299  000A40  EC16  F00C         	call	_SelectChannelY	;wreg free
  2300  000A44                     
  2301                           ;Digitizer32bits_V0.c: 247:         _delay((unsigned long)((5)*(39321600UL/4000.0)));
  2302  000A44  0E30               	movlw	48
  2303  000A46  6E4C               	movwf	??_Interrups^0,c
  2304  000A48  0EE7               	movlw	231
  2305  000A4A                     i2u138_47:
  2306  000A4A  FFFF               	dw	65535	; errata NOP
  2307  000A4C  2EE8               	decfsz	wreg,f,c
  2308  000A4E  D7FD               	bra	i2u138_47
  2309  000A50  2E4C               	decfsz	??_Interrups^0,f,c
  2310  000A52  D7FB               	bra	i2u138_47
  2311  000A54  D000               	nop2	
  2312  000A56                     
  2313                           ;Digitizer32bits_V0.c: 248:         Data_Y = ReadADC32();
  2314  000A56  EC09  F009         	call	_ReadADC32	;wreg free
  2315  000A5A  C033  F025         	movff	?_ReadADC32,_Data_Y
  2316  000A5E  C034  F026         	movff	?_ReadADC32+1,_Data_Y+1
  2317  000A62  C035  F027         	movff	?_ReadADC32+2,_Data_Y+2
  2318  000A66  C036  F028         	movff	?_ReadADC32+3,_Data_Y+3
  2319  000A6A                     
  2320                           ;Digitizer32bits_V0.c: 249:         for(conta=0; conta<10; conta++){
  2321  000A6A  0E00               	movlw	0
  2322  000A6C  6E5D               	movwf	Interrups@conta^0,c
  2323  000A6E                     i2l2415:
  2324  000A6E  FFFF               	dw	65535	; assembler added errata NOP
  2325                           
  2326                           ;Digitizer32bits_V0.c: 250:             Data_Y = ReadADC32();
  2327  000A70  EC09  F009         	call	_ReadADC32	;wreg free
  2328  000A74  C033  F025         	movff	?_ReadADC32,_Data_Y
  2329  000A78  C034  F026         	movff	?_ReadADC32+1,_Data_Y+1
  2330  000A7C  C035  F027         	movff	?_ReadADC32+2,_Data_Y+2
  2331  000A80  C036  F028         	movff	?_ReadADC32+3,_Data_Y+3
  2332  000A84                     
  2333                           ;Digitizer32bits_V0.c: 251:             SumData_Y = (signed long long) SumData_Y + Data_
      +                          Y;
  2334  000A84  C025  F04C         	movff	_Data_Y,??_Interrups
  2335  000A88  C026  F04D         	movff	_Data_Y+1,??_Interrups+1
  2336  000A8C  C027  F04E         	movff	_Data_Y+2,??_Interrups+2
  2337  000A90  C028  F04F         	movff	_Data_Y+3,??_Interrups+3
  2338  000A94  6A50               	clrf	(??_Interrups+4)^0,c
  2339  000A96  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  2340  000A98  6850               	setf	(??_Interrups+4)^0,c
  2341  000A9A  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  2342  000A9E  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  2343  000AA2  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  2344  000AA6  5009               	movf	_SumData_Y^0,w,c
  2345  000AA8  244C               	addwf	??_Interrups^0,w,c
  2346  000AAA  6E09               	movwf	_SumData_Y^0,c
  2347  000AAC  500A               	movf	(_SumData_Y+1)^0,w,c
  2348  000AAE  204D               	addwfc	(??_Interrups+1)^0,w,c
  2349  000AB0  6E0A               	movwf	(_SumData_Y+1)^0,c
  2350  000AB2  500B               	movf	(_SumData_Y+2)^0,w,c
  2351  000AB4  204E               	addwfc	(??_Interrups+2)^0,w,c
  2352  000AB6  6E0B               	movwf	(_SumData_Y+2)^0,c
  2353  000AB8  500C               	movf	(_SumData_Y+3)^0,w,c
  2354  000ABA  204F               	addwfc	(??_Interrups+3)^0,w,c
  2355  000ABC  6E0C               	movwf	(_SumData_Y+3)^0,c
  2356  000ABE  500D               	movf	(_SumData_Y+4)^0,w,c
  2357  000AC0  2050               	addwfc	(??_Interrups+4)^0,w,c
  2358  000AC2  6E0D               	movwf	(_SumData_Y+4)^0,c
  2359  000AC4  500E               	movf	(_SumData_Y+5)^0,w,c
  2360  000AC6  2051               	addwfc	(??_Interrups+5)^0,w,c
  2361  000AC8  6E0E               	movwf	(_SumData_Y+5)^0,c
  2362  000ACA  500F               	movf	(_SumData_Y+6)^0,w,c
  2363  000ACC  2052               	addwfc	(??_Interrups+6)^0,w,c
  2364  000ACE  6E0F               	movwf	(_SumData_Y+6)^0,c
  2365  000AD0  5010               	movf	(_SumData_Y+7)^0,w,c
  2366  000AD2  2053               	addwfc	(??_Interrups+7)^0,w,c
  2367  000AD4  6E10               	movwf	(_SumData_Y+7)^0,c
  2368  000AD6                     
  2369                           ;Digitizer32bits_V0.c: 252:         }
  2370  000AD6  2A5D               	incf	Interrups@conta^0,f,c
  2371  000AD8  0E09               	movlw	9
  2372  000ADA  645D               	cpfsgt	Interrups@conta^0,c
  2373  000ADC  EF72  F005         	goto	i2u110_41
  2374  000AE0  EF75  F005         	goto	i2u110_40
  2375  000AE4                     i2u110_41:
  2376  000AE4  FFFF               	dw	65535	; assembler added errata NOP
  2377  000AE6  EF37  F005         	goto	i2l2415
  2378  000AEA                     i2u110_40:
  2379  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  2380  000AEC                     
  2381                           ;Digitizer32bits_V0.c: 255:         SelectChannelZ();
  2382  000AEC  EC0F  F00C         	call	_SelectChannelZ	;wreg free
  2383  000AF0                     
  2384                           ;Digitizer32bits_V0.c: 256:         _delay((unsigned long)((5)*(39321600UL/4000.0)));
  2385  000AF0  0E30               	movlw	48
  2386  000AF2  6E4C               	movwf	??_Interrups^0,c
  2387  000AF4  0EE7               	movlw	231
  2388  000AF6                     i2u139_47:
  2389  000AF6  FFFF               	dw	65535	; errata NOP
  2390  000AF8  2EE8               	decfsz	wreg,f,c
  2391  000AFA  D7FD               	bra	i2u139_47
  2392  000AFC  2E4C               	decfsz	??_Interrups^0,f,c
  2393  000AFE  D7FB               	bra	i2u139_47
  2394  000B00  D000               	nop2	
  2395  000B02                     
  2396                           ;Digitizer32bits_V0.c: 257:         Data_Z = ReadADC32();
  2397  000B02  EC09  F009         	call	_ReadADC32	;wreg free
  2398  000B06  C033  F021         	movff	?_ReadADC32,_Data_Z
  2399  000B0A  C034  F022         	movff	?_ReadADC32+1,_Data_Z+1
  2400  000B0E  C035  F023         	movff	?_ReadADC32+2,_Data_Z+2
  2401  000B12  C036  F024         	movff	?_ReadADC32+3,_Data_Z+3
  2402  000B16                     
  2403                           ;Digitizer32bits_V0.c: 258:         for(conta=0; conta<10; conta++){
  2404  000B16  0E00               	movlw	0
  2405  000B18  6E5D               	movwf	Interrups@conta^0,c
  2406  000B1A                     i2l2435:
  2407  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  2408                           
  2409                           ;Digitizer32bits_V0.c: 259:             Data_Z = ReadADC32();
  2410  000B1C  EC09  F009         	call	_ReadADC32	;wreg free
  2411  000B20  C033  F021         	movff	?_ReadADC32,_Data_Z
  2412  000B24  C034  F022         	movff	?_ReadADC32+1,_Data_Z+1
  2413  000B28  C035  F023         	movff	?_ReadADC32+2,_Data_Z+2
  2414  000B2C  C036  F024         	movff	?_ReadADC32+3,_Data_Z+3
  2415  000B30                     
  2416                           ;Digitizer32bits_V0.c: 260:             SumData_Z = (signed long long) SumData_Z + Data_
      +                          Z;
  2417  000B30  C021  F04C         	movff	_Data_Z,??_Interrups
  2418  000B34  C022  F04D         	movff	_Data_Z+1,??_Interrups+1
  2419  000B38  C023  F04E         	movff	_Data_Z+2,??_Interrups+2
  2420  000B3C  C024  F04F         	movff	_Data_Z+3,??_Interrups+3
  2421  000B40  6A50               	clrf	(??_Interrups+4)^0,c
  2422  000B42  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  2423  000B44  6850               	setf	(??_Interrups+4)^0,c
  2424  000B46  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  2425  000B4A  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  2426  000B4E  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  2427  000B52  5001               	movf	_SumData_Z^0,w,c
  2428  000B54  244C               	addwf	??_Interrups^0,w,c
  2429  000B56  6E01               	movwf	_SumData_Z^0,c
  2430  000B58  5002               	movf	(_SumData_Z+1)^0,w,c
  2431  000B5A  204D               	addwfc	(??_Interrups+1)^0,w,c
  2432  000B5C  6E02               	movwf	(_SumData_Z+1)^0,c
  2433  000B5E  5003               	movf	(_SumData_Z+2)^0,w,c
  2434  000B60  204E               	addwfc	(??_Interrups+2)^0,w,c
  2435  000B62  6E03               	movwf	(_SumData_Z+2)^0,c
  2436  000B64  5004               	movf	(_SumData_Z+3)^0,w,c
  2437  000B66  204F               	addwfc	(??_Interrups+3)^0,w,c
  2438  000B68  6E04               	movwf	(_SumData_Z+3)^0,c
  2439  000B6A  5005               	movf	(_SumData_Z+4)^0,w,c
  2440  000B6C  2050               	addwfc	(??_Interrups+4)^0,w,c
  2441  000B6E  6E05               	movwf	(_SumData_Z+4)^0,c
  2442  000B70  5006               	movf	(_SumData_Z+5)^0,w,c
  2443  000B72  2051               	addwfc	(??_Interrups+5)^0,w,c
  2444  000B74  6E06               	movwf	(_SumData_Z+5)^0,c
  2445  000B76  5007               	movf	(_SumData_Z+6)^0,w,c
  2446  000B78  2052               	addwfc	(??_Interrups+6)^0,w,c
  2447  000B7A  6E07               	movwf	(_SumData_Z+6)^0,c
  2448  000B7C  5008               	movf	(_SumData_Z+7)^0,w,c
  2449  000B7E  2053               	addwfc	(??_Interrups+7)^0,w,c
  2450  000B80  6E08               	movwf	(_SumData_Z+7)^0,c
  2451  000B82                     
  2452                           ;Digitizer32bits_V0.c: 261:         }
  2453  000B82  2A5D               	incf	Interrups@conta^0,f,c
  2454  000B84  0E09               	movlw	9
  2455  000B86  645D               	cpfsgt	Interrups@conta^0,c
  2456  000B88  EFC8  F005         	goto	i2u111_41
  2457  000B8C  EFCB  F005         	goto	i2u111_40
  2458  000B90                     i2u111_41:
  2459  000B90  FFFF               	dw	65535	; assembler added errata NOP
  2460  000B92  EF8D  F005         	goto	i2l2435
  2461  000B96                     i2u111_40:
  2462  000B96  FFFF               	dw	65535	; assembler added errata NOP
  2463  000B98                     
  2464                           ;Digitizer32bits_V0.c: 264:         SelectChannelC();
  2465  000B98  EC2B  F00C         	call	_SelectChannelC	;wreg free
  2466  000B9C                     
  2467                           ;Digitizer32bits_V0.c: 265:         _delay((unsigned long)((5)*(39321600UL/4000.0)));
  2468  000B9C  0E30               	movlw	48
  2469  000B9E  6E4C               	movwf	??_Interrups^0,c
  2470  000BA0  0EE7               	movlw	231
  2471  000BA2                     i2u140_47:
  2472  000BA2  FFFF               	dw	65535	; errata NOP
  2473  000BA4  2EE8               	decfsz	wreg,f,c
  2474  000BA6  D7FD               	bra	i2u140_47
  2475  000BA8  2E4C               	decfsz	??_Interrups^0,f,c
  2476  000BAA  D7FB               	bra	i2u140_47
  2477  000BAC  D000               	nop2	
  2478  000BAE                     
  2479                           ;Digitizer32bits_V0.c: 266:         Data_TC = ReadADC32();
  2480  000BAE  EC09  F009         	call	_ReadADC32	;wreg free
  2481  000BB2  C033  F01D         	movff	?_ReadADC32,_Data_TC
  2482  000BB6  C034  F01E         	movff	?_ReadADC32+1,_Data_TC+1
  2483  000BBA  C035  F01F         	movff	?_ReadADC32+2,_Data_TC+2
  2484  000BBE  C036  F020         	movff	?_ReadADC32+3,_Data_TC+3
  2485  000BC2                     
  2486                           ;Digitizer32bits_V0.c: 267:         for(conta=0; conta<10; conta++){
  2487  000BC2  0E00               	movlw	0
  2488  000BC4  6E5D               	movwf	Interrups@conta^0,c
  2489  000BC6                     i2l2455:
  2490  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  2491                           
  2492                           ;Digitizer32bits_V0.c: 268:             Data_TC = ReadADC32();
  2493  000BC8  EC09  F009         	call	_ReadADC32	;wreg free
  2494  000BCC  C033  F01D         	movff	?_ReadADC32,_Data_TC
  2495  000BD0  C034  F01E         	movff	?_ReadADC32+1,_Data_TC+1
  2496  000BD4  C035  F01F         	movff	?_ReadADC32+2,_Data_TC+2
  2497  000BD8  C036  F020         	movff	?_ReadADC32+3,_Data_TC+3
  2498  000BDC                     
  2499                           ;Digitizer32bits_V0.c: 269:             SumData_TC = (signed long long) SumData_TC + Dat
      +                          a_TC;
  2500  000BDC  C01D  F04C         	movff	_Data_TC,??_Interrups
  2501  000BE0  C01E  F04D         	movff	_Data_TC+1,??_Interrups+1
  2502  000BE4  C01F  F04E         	movff	_Data_TC+2,??_Interrups+2
  2503  000BE8  C020  F04F         	movff	_Data_TC+3,??_Interrups+3
  2504  000BEC  6A50               	clrf	(??_Interrups+4)^0,c
  2505  000BEE  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  2506  000BF0  6850               	setf	(??_Interrups+4)^0,c
  2507  000BF2  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  2508  000BF6  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  2509  000BFA  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  2510  000BFE  0100               	movlb	0	; () banked
  2511  000C00  5168               	movf	_SumData_TC& (0+255),w,b
  2512  000C02  244C               	addwf	??_Interrups^0,w,c
  2513  000C04  6F68               	movwf	_SumData_TC& (0+255),b
  2514  000C06  5169               	movf	(_SumData_TC+1)& (0+255),w,b
  2515  000C08  204D               	addwfc	(??_Interrups+1)^0,w,c
  2516  000C0A  6F69               	movwf	(_SumData_TC+1)& (0+255),b
  2517  000C0C  516A               	movf	(_SumData_TC+2)& (0+255),w,b
  2518  000C0E  204E               	addwfc	(??_Interrups+2)^0,w,c
  2519  000C10  6F6A               	movwf	(_SumData_TC+2)& (0+255),b
  2520  000C12  516B               	movf	(_SumData_TC+3)& (0+255),w,b
  2521  000C14  204F               	addwfc	(??_Interrups+3)^0,w,c
  2522  000C16  6F6B               	movwf	(_SumData_TC+3)& (0+255),b
  2523  000C18  516C               	movf	(_SumData_TC+4)& (0+255),w,b
  2524  000C1A  2050               	addwfc	(??_Interrups+4)^0,w,c
  2525  000C1C  6F6C               	movwf	(_SumData_TC+4)& (0+255),b
  2526  000C1E  516D               	movf	(_SumData_TC+5)& (0+255),w,b
  2527  000C20  2051               	addwfc	(??_Interrups+5)^0,w,c
  2528  000C22  6F6D               	movwf	(_SumData_TC+5)& (0+255),b
  2529  000C24  516E               	movf	(_SumData_TC+6)& (0+255),w,b
  2530  000C26  2052               	addwfc	(??_Interrups+6)^0,w,c
  2531  000C28  6F6E               	movwf	(_SumData_TC+6)& (0+255),b
  2532  000C2A  516F               	movf	(_SumData_TC+7)& (0+255),w,b
  2533  000C2C  2053               	addwfc	(??_Interrups+7)^0,w,c
  2534  000C2E  6F6F               	movwf	(_SumData_TC+7)& (0+255),b
  2535  000C30                     
  2536                           ; BSR set to: 0
  2537                           ;Digitizer32bits_V0.c: 270:         }
  2538  000C30  2A5D               	incf	Interrups@conta^0,f,c
  2539  000C32                     
  2540                           ; BSR set to: 0
  2541  000C32  0E09               	movlw	9
  2542  000C34  645D               	cpfsgt	Interrups@conta^0,c
  2543  000C36  EF1F  F006         	goto	i2u112_41
  2544  000C3A  EF22  F006         	goto	i2u112_40
  2545  000C3E                     i2u112_41:
  2546  000C3E  FFFF               	dw	65535	; assembler added errata NOP
  2547  000C40  EFE3  F005         	goto	i2l2455
  2548  000C44                     i2u112_40:
  2549  000C44  FFFF               	dw	65535	; assembler added errata NOP
  2550  000C46                     
  2551                           ; BSR set to: 0
  2552                           ;Digitizer32bits_V0.c: 273:         SelectChannelS();
  2553  000C46  EC24  F00C         	call	_SelectChannelS	;wreg free
  2554  000C4A                     
  2555                           ;Digitizer32bits_V0.c: 274:         _delay((unsigned long)((5)*(39321600UL/4000.0)));
  2556  000C4A  0E30               	movlw	48
  2557  000C4C  6E4C               	movwf	??_Interrups^0,c
  2558  000C4E  0EE7               	movlw	231
  2559  000C50                     i2u141_47:
  2560  000C50  FFFF               	dw	65535	; errata NOP
  2561  000C52  2EE8               	decfsz	wreg,f,c
  2562  000C54  D7FD               	bra	i2u141_47
  2563  000C56  2E4C               	decfsz	??_Interrups^0,f,c
  2564  000C58  D7FB               	bra	i2u141_47
  2565  000C5A  D000               	nop2	
  2566  000C5C                     
  2567                           ;Digitizer32bits_V0.c: 275:         Data_TS = ReadADC32();
  2568  000C5C  EC09  F009         	call	_ReadADC32	;wreg free
  2569  000C60  C033  F019         	movff	?_ReadADC32,_Data_TS
  2570  000C64  C034  F01A         	movff	?_ReadADC32+1,_Data_TS+1
  2571  000C68  C035  F01B         	movff	?_ReadADC32+2,_Data_TS+2
  2572  000C6C  C036  F01C         	movff	?_ReadADC32+3,_Data_TS+3
  2573  000C70                     
  2574                           ;Digitizer32bits_V0.c: 276:         for(conta=0; conta<10; conta++){
  2575  000C70  0E00               	movlw	0
  2576  000C72  6E5D               	movwf	Interrups@conta^0,c
  2577  000C74                     i2l2475:
  2578  000C74  FFFF               	dw	65535	; assembler added errata NOP
  2579                           
  2580                           ;Digitizer32bits_V0.c: 277:             Data_TS = ReadADC32();
  2581  000C76  EC09  F009         	call	_ReadADC32	;wreg free
  2582  000C7A  C033  F019         	movff	?_ReadADC32,_Data_TS
  2583  000C7E  C034  F01A         	movff	?_ReadADC32+1,_Data_TS+1
  2584  000C82  C035  F01B         	movff	?_ReadADC32+2,_Data_TS+2
  2585  000C86  C036  F01C         	movff	?_ReadADC32+3,_Data_TS+3
  2586  000C8A                     
  2587                           ;Digitizer32bits_V0.c: 278:             SumData_TS = (signed long long) SumData_TS + Dat
      +                          a_TS;
  2588  000C8A  C019  F04C         	movff	_Data_TS,??_Interrups
  2589  000C8E  C01A  F04D         	movff	_Data_TS+1,??_Interrups+1
  2590  000C92  C01B  F04E         	movff	_Data_TS+2,??_Interrups+2
  2591  000C96  C01C  F04F         	movff	_Data_TS+3,??_Interrups+3
  2592  000C9A  6A50               	clrf	(??_Interrups+4)^0,c
  2593  000C9C  BE4F               	btfsc	(??_Interrups+3)^0,7,c
  2594  000C9E  6850               	setf	(??_Interrups+4)^0,c
  2595  000CA0  C050  F051         	movff	??_Interrups+4,??_Interrups+5
  2596  000CA4  C050  F052         	movff	??_Interrups+4,??_Interrups+6
  2597  000CA8  C050  F053         	movff	??_Interrups+4,??_Interrups+7
  2598  000CAC  0100               	movlb	0	; () banked
  2599  000CAE  5160               	movf	_SumData_TS& (0+255),w,b
  2600  000CB0  244C               	addwf	??_Interrups^0,w,c
  2601  000CB2  6F60               	movwf	_SumData_TS& (0+255),b
  2602  000CB4  5161               	movf	(_SumData_TS+1)& (0+255),w,b
  2603  000CB6  204D               	addwfc	(??_Interrups+1)^0,w,c
  2604  000CB8  6F61               	movwf	(_SumData_TS+1)& (0+255),b
  2605  000CBA  5162               	movf	(_SumData_TS+2)& (0+255),w,b
  2606  000CBC  204E               	addwfc	(??_Interrups+2)^0,w,c
  2607  000CBE  6F62               	movwf	(_SumData_TS+2)& (0+255),b
  2608  000CC0  5163               	movf	(_SumData_TS+3)& (0+255),w,b
  2609  000CC2  204F               	addwfc	(??_Interrups+3)^0,w,c
  2610  000CC4  6F63               	movwf	(_SumData_TS+3)& (0+255),b
  2611  000CC6  5164               	movf	(_SumData_TS+4)& (0+255),w,b
  2612  000CC8  2050               	addwfc	(??_Interrups+4)^0,w,c
  2613  000CCA  6F64               	movwf	(_SumData_TS+4)& (0+255),b
  2614  000CCC  5165               	movf	(_SumData_TS+5)& (0+255),w,b
  2615  000CCE  2051               	addwfc	(??_Interrups+5)^0,w,c
  2616  000CD0  6F65               	movwf	(_SumData_TS+5)& (0+255),b
  2617  000CD2  5166               	movf	(_SumData_TS+6)& (0+255),w,b
  2618  000CD4  2052               	addwfc	(??_Interrups+6)^0,w,c
  2619  000CD6  6F66               	movwf	(_SumData_TS+6)& (0+255),b
  2620  000CD8  5167               	movf	(_SumData_TS+7)& (0+255),w,b
  2621  000CDA  2053               	addwfc	(??_Interrups+7)^0,w,c
  2622  000CDC  6F67               	movwf	(_SumData_TS+7)& (0+255),b
  2623  000CDE                     
  2624                           ; BSR set to: 0
  2625                           ;Digitizer32bits_V0.c: 279:         }
  2626  000CDE  2A5D               	incf	Interrups@conta^0,f,c
  2627  000CE0                     
  2628                           ; BSR set to: 0
  2629  000CE0  0E09               	movlw	9
  2630  000CE2  645D               	cpfsgt	Interrups@conta^0,c
  2631  000CE4  EF76  F006         	goto	i2u113_41
  2632  000CE8  EF79  F006         	goto	i2u113_40
  2633  000CEC                     i2u113_41:
  2634  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  2635  000CEE  EF3A  F006         	goto	i2l2475
  2636  000CF2                     i2u113_40:
  2637  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  2638  000CF4                     
  2639                           ; BSR set to: 0
  2640                           ;Digitizer32bits_V0.c: 282:         Data_X = (signed long long) SumData_X/10;
  2641  000CF4  C011  F032         	movff	_SumData_X,___aodiv@dividend
  2642  000CF8  C012  F033         	movff	_SumData_X+1,___aodiv@dividend+1
  2643  000CFC  C013  F034         	movff	_SumData_X+2,___aodiv@dividend+2
  2644  000D00  C014  F035         	movff	_SumData_X+3,___aodiv@dividend+3
  2645  000D04  C015  F036         	movff	_SumData_X+4,___aodiv@dividend+4
  2646  000D08  C016  F037         	movff	_SumData_X+5,___aodiv@dividend+5
  2647  000D0C  C017  F038         	movff	_SumData_X+6,___aodiv@dividend+6
  2648  000D10  C018  F039         	movff	_SumData_X+7,___aodiv@dividend+7
  2649  000D14  0E0A               	movlw	10
  2650  000D16  6E3A               	movwf	___aodiv@divisor^0,c
  2651  000D18  0E00               	movlw	0
  2652  000D1A  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  2653  000D1C  0E00               	movlw	0
  2654  000D1E  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  2655  000D20  0E00               	movlw	0
  2656  000D22  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  2657  000D24  0E00               	movlw	0
  2658  000D26  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  2659  000D28  0E00               	movlw	0
  2660  000D2A  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  2661  000D2C  0E00               	movlw	0
  2662  000D2E  6E40               	movwf	(___aodiv@divisor+6)^0,c
  2663  000D30  0E00               	movlw	0
  2664  000D32  6E41               	movwf	(___aodiv@divisor+7)^0,c
  2665  000D34  EC2F  F008         	call	___aodiv	;wreg free
  2666  000D38  C032  F04C         	movff	?___aodiv,??_Interrups
  2667  000D3C  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  2668  000D40  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  2669  000D44  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  2670  000D48  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  2671  000D4C  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  2672  000D50  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  2673  000D54  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  2674  000D58  C04C  F029         	movff	??_Interrups,_Data_X
  2675  000D5C  C04D  F02A         	movff	??_Interrups+1,_Data_X+1
  2676  000D60  C04E  F02B         	movff	??_Interrups+2,_Data_X+2
  2677  000D64  C04F  F02C         	movff	??_Interrups+3,_Data_X+3
  2678                           
  2679                           ;Digitizer32bits_V0.c: 283:         Data_Y = (signed long long) SumData_Y/10;
  2680  000D68  C009  F032         	movff	_SumData_Y,___aodiv@dividend
  2681  000D6C  C00A  F033         	movff	_SumData_Y+1,___aodiv@dividend+1
  2682  000D70  C00B  F034         	movff	_SumData_Y+2,___aodiv@dividend+2
  2683  000D74  C00C  F035         	movff	_SumData_Y+3,___aodiv@dividend+3
  2684  000D78  C00D  F036         	movff	_SumData_Y+4,___aodiv@dividend+4
  2685  000D7C  C00E  F037         	movff	_SumData_Y+5,___aodiv@dividend+5
  2686  000D80  C00F  F038         	movff	_SumData_Y+6,___aodiv@dividend+6
  2687  000D84  C010  F039         	movff	_SumData_Y+7,___aodiv@dividend+7
  2688  000D88  0E0A               	movlw	10
  2689  000D8A  6E3A               	movwf	___aodiv@divisor^0,c
  2690  000D8C  0E00               	movlw	0
  2691  000D8E  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  2692  000D90  0E00               	movlw	0
  2693  000D92  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  2694  000D94  0E00               	movlw	0
  2695  000D96  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  2696  000D98  0E00               	movlw	0
  2697  000D9A  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  2698  000D9C  0E00               	movlw	0
  2699  000D9E  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  2700  000DA0  0E00               	movlw	0
  2701  000DA2  6E40               	movwf	(___aodiv@divisor+6)^0,c
  2702  000DA4  0E00               	movlw	0
  2703  000DA6  6E41               	movwf	(___aodiv@divisor+7)^0,c
  2704  000DA8  EC2F  F008         	call	___aodiv	;wreg free
  2705  000DAC  C032  F04C         	movff	?___aodiv,??_Interrups
  2706  000DB0  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  2707  000DB4  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  2708  000DB8  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  2709  000DBC  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  2710  000DC0  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  2711  000DC4  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  2712  000DC8  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  2713  000DCC  C04C  F025         	movff	??_Interrups,_Data_Y
  2714  000DD0  C04D  F026         	movff	??_Interrups+1,_Data_Y+1
  2715  000DD4  C04E  F027         	movff	??_Interrups+2,_Data_Y+2
  2716  000DD8  C04F  F028         	movff	??_Interrups+3,_Data_Y+3
  2717                           
  2718                           ;Digitizer32bits_V0.c: 284:         Data_Z = (signed long long) SumData_Z/10;
  2719  000DDC  C001  F032         	movff	_SumData_Z,___aodiv@dividend
  2720  000DE0  C002  F033         	movff	_SumData_Z+1,___aodiv@dividend+1
  2721  000DE4  C003  F034         	movff	_SumData_Z+2,___aodiv@dividend+2
  2722  000DE8  C004  F035         	movff	_SumData_Z+3,___aodiv@dividend+3
  2723  000DEC  C005  F036         	movff	_SumData_Z+4,___aodiv@dividend+4
  2724  000DF0  C006  F037         	movff	_SumData_Z+5,___aodiv@dividend+5
  2725  000DF4  C007  F038         	movff	_SumData_Z+6,___aodiv@dividend+6
  2726  000DF8  C008  F039         	movff	_SumData_Z+7,___aodiv@dividend+7
  2727  000DFC  0E0A               	movlw	10
  2728  000DFE  6E3A               	movwf	___aodiv@divisor^0,c
  2729  000E00  0E00               	movlw	0
  2730  000E02  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  2731  000E04  0E00               	movlw	0
  2732  000E06  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  2733  000E08  0E00               	movlw	0
  2734  000E0A  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  2735  000E0C  0E00               	movlw	0
  2736  000E0E  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  2737  000E10  0E00               	movlw	0
  2738  000E12  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  2739  000E14  0E00               	movlw	0
  2740  000E16  6E40               	movwf	(___aodiv@divisor+6)^0,c
  2741  000E18  0E00               	movlw	0
  2742  000E1A  6E41               	movwf	(___aodiv@divisor+7)^0,c
  2743  000E1C  EC2F  F008         	call	___aodiv	;wreg free
  2744  000E20  C032  F04C         	movff	?___aodiv,??_Interrups
  2745  000E24  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  2746  000E28  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  2747  000E2C  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  2748  000E30  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  2749  000E34  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  2750  000E38  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  2751  000E3C  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  2752  000E40  C04C  F021         	movff	??_Interrups,_Data_Z
  2753  000E44  C04D  F022         	movff	??_Interrups+1,_Data_Z+1
  2754  000E48  C04E  F023         	movff	??_Interrups+2,_Data_Z+2
  2755  000E4C  C04F  F024         	movff	??_Interrups+3,_Data_Z+3
  2756                           
  2757                           ;Digitizer32bits_V0.c: 285:         Data_TC = (signed long long) SumData_TC/10;
  2758  000E50  C068  F032         	movff	_SumData_TC,___aodiv@dividend
  2759  000E54  C069  F033         	movff	_SumData_TC+1,___aodiv@dividend+1
  2760  000E58  C06A  F034         	movff	_SumData_TC+2,___aodiv@dividend+2
  2761  000E5C  C06B  F035         	movff	_SumData_TC+3,___aodiv@dividend+3
  2762  000E60  C06C  F036         	movff	_SumData_TC+4,___aodiv@dividend+4
  2763  000E64  C06D  F037         	movff	_SumData_TC+5,___aodiv@dividend+5
  2764  000E68  C06E  F038         	movff	_SumData_TC+6,___aodiv@dividend+6
  2765  000E6C  C06F  F039         	movff	_SumData_TC+7,___aodiv@dividend+7
  2766  000E70  0E0A               	movlw	10
  2767  000E72  6E3A               	movwf	___aodiv@divisor^0,c
  2768  000E74  0E00               	movlw	0
  2769  000E76  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  2770  000E78  0E00               	movlw	0
  2771  000E7A  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  2772  000E7C  0E00               	movlw	0
  2773  000E7E  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  2774  000E80  0E00               	movlw	0
  2775  000E82  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  2776  000E84  0E00               	movlw	0
  2777  000E86  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  2778  000E88  0E00               	movlw	0
  2779  000E8A  6E40               	movwf	(___aodiv@divisor+6)^0,c
  2780  000E8C  0E00               	movlw	0
  2781  000E8E  6E41               	movwf	(___aodiv@divisor+7)^0,c
  2782  000E90  EC2F  F008         	call	___aodiv	;wreg free
  2783  000E94  C032  F04C         	movff	?___aodiv,??_Interrups
  2784  000E98  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  2785  000E9C  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  2786  000EA0  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  2787  000EA4  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  2788  000EA8  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  2789  000EAC  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  2790  000EB0  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  2791  000EB4  C04C  F01D         	movff	??_Interrups,_Data_TC
  2792  000EB8  C04D  F01E         	movff	??_Interrups+1,_Data_TC+1
  2793  000EBC  C04E  F01F         	movff	??_Interrups+2,_Data_TC+2
  2794  000EC0  C04F  F020         	movff	??_Interrups+3,_Data_TC+3
  2795                           
  2796                           ;Digitizer32bits_V0.c: 286:         Data_TS = (signed long long) SumData_TS/10;
  2797  000EC4  C060  F032         	movff	_SumData_TS,___aodiv@dividend
  2798  000EC8  C061  F033         	movff	_SumData_TS+1,___aodiv@dividend+1
  2799  000ECC  C062  F034         	movff	_SumData_TS+2,___aodiv@dividend+2
  2800  000ED0  C063  F035         	movff	_SumData_TS+3,___aodiv@dividend+3
  2801  000ED4  C064  F036         	movff	_SumData_TS+4,___aodiv@dividend+4
  2802  000ED8  C065  F037         	movff	_SumData_TS+5,___aodiv@dividend+5
  2803  000EDC  C066  F038         	movff	_SumData_TS+6,___aodiv@dividend+6
  2804  000EE0  C067  F039         	movff	_SumData_TS+7,___aodiv@dividend+7
  2805  000EE4  0E0A               	movlw	10
  2806  000EE6  6E3A               	movwf	___aodiv@divisor^0,c
  2807  000EE8  0E00               	movlw	0
  2808  000EEA  6E3B               	movwf	(___aodiv@divisor+1)^0,c
  2809  000EEC  0E00               	movlw	0
  2810  000EEE  6E3C               	movwf	(___aodiv@divisor+2)^0,c
  2811  000EF0  0E00               	movlw	0
  2812  000EF2  6E3D               	movwf	(___aodiv@divisor+3)^0,c
  2813  000EF4  0E00               	movlw	0
  2814  000EF6  6E3E               	movwf	(___aodiv@divisor+4)^0,c
  2815  000EF8  0E00               	movlw	0
  2816  000EFA  6E3F               	movwf	(___aodiv@divisor+5)^0,c
  2817  000EFC  0E00               	movlw	0
  2818  000EFE  6E40               	movwf	(___aodiv@divisor+6)^0,c
  2819  000F00  0E00               	movlw	0
  2820  000F02  6E41               	movwf	(___aodiv@divisor+7)^0,c
  2821  000F04  EC2F  F008         	call	___aodiv	;wreg free
  2822  000F08  C032  F04C         	movff	?___aodiv,??_Interrups
  2823  000F0C  C033  F04D         	movff	?___aodiv+1,??_Interrups+1
  2824  000F10  C034  F04E         	movff	?___aodiv+2,??_Interrups+2
  2825  000F14  C035  F04F         	movff	?___aodiv+3,??_Interrups+3
  2826  000F18  C036  F050         	movff	?___aodiv+4,??_Interrups+4
  2827  000F1C  C037  F051         	movff	?___aodiv+5,??_Interrups+5
  2828  000F20  C038  F052         	movff	?___aodiv+6,??_Interrups+6
  2829  000F24  C039  F053         	movff	?___aodiv+7,??_Interrups+7
  2830  000F28  C04C  F019         	movff	??_Interrups,_Data_TS
  2831  000F2C  C04D  F01A         	movff	??_Interrups+1,_Data_TS+1
  2832  000F30  C04E  F01B         	movff	??_Interrups+2,_Data_TS+2
  2833  000F34  C04F  F01C         	movff	??_Interrups+3,_Data_TS+3
  2834  000F38                     
  2835                           ;Digitizer32bits_V0.c: 289:         print_string("JROADQ,");
  2836  000F38  0E51               	movlw	low STR_2
  2837  000F3A  6E33               	movwf	print_string@str^0,c
  2838  000F3C  0E10               	movlw	high STR_2
  2839  000F3E  6E34               	movwf	(print_string@str+1)^0,c
  2840  000F40  EC4E  F00B         	call	_print_string	;wreg free
  2841  000F44                     
  2842                           ;Digitizer32bits_V0.c: 290:         WriteByte_USART(ContaSample);
  2843  000F44  5031               	movf	_ContaSample^0,w,c
  2844  000F46  ECB6  F00B         	call	_WriteByte_USART
  2845  000F4A                     
  2846                           ;Digitizer32bits_V0.c: 291:         print_value(Data_X);
  2847  000F4A  C029  F033         	movff	_Data_X,print_value@value
  2848  000F4E  C02A  F034         	movff	_Data_X+1,print_value@value+1
  2849  000F52  C02B  F035         	movff	_Data_X+2,print_value@value+2
  2850  000F56  C02C  F036         	movff	_Data_X+3,print_value@value+3
  2851  000F5A  EC9B  F009         	call	_print_value	;wreg free
  2852  000F5E                     
  2853                           ;Digitizer32bits_V0.c: 292:         print_value(Data_Y);
  2854  000F5E  C025  F033         	movff	_Data_Y,print_value@value
  2855  000F62  C026  F034         	movff	_Data_Y+1,print_value@value+1
  2856  000F66  C027  F035         	movff	_Data_Y+2,print_value@value+2
  2857  000F6A  C028  F036         	movff	_Data_Y+3,print_value@value+3
  2858  000F6E  EC9B  F009         	call	_print_value	;wreg free
  2859  000F72                     
  2860                           ;Digitizer32bits_V0.c: 293:         print_value(Data_Z);
  2861  000F72  C021  F033         	movff	_Data_Z,print_value@value
  2862  000F76  C022  F034         	movff	_Data_Z+1,print_value@value+1
  2863  000F7A  C023  F035         	movff	_Data_Z+2,print_value@value+2
  2864  000F7E  C024  F036         	movff	_Data_Z+3,print_value@value+3
  2865  000F82  EC9B  F009         	call	_print_value	;wreg free
  2866  000F86                     
  2867                           ;Digitizer32bits_V0.c: 294:         print_value(Data_TC);
  2868  000F86  C01D  F033         	movff	_Data_TC,print_value@value
  2869  000F8A  C01E  F034         	movff	_Data_TC+1,print_value@value+1
  2870  000F8E  C01F  F035         	movff	_Data_TC+2,print_value@value+2
  2871  000F92  C020  F036         	movff	_Data_TC+3,print_value@value+3
  2872  000F96  EC9B  F009         	call	_print_value	;wreg free
  2873  000F9A                     
  2874                           ;Digitizer32bits_V0.c: 295:         print_value(Data_TS);
  2875  000F9A  C019  F033         	movff	_Data_TS,print_value@value
  2876  000F9E  C01A  F034         	movff	_Data_TS+1,print_value@value+1
  2877  000FA2  C01B  F035         	movff	_Data_TS+2,print_value@value+2
  2878  000FA6  C01C  F036         	movff	_Data_TS+3,print_value@value+3
  2879  000FAA  EC9B  F009         	call	_print_value	;wreg free
  2880  000FAE                     
  2881                           ;Digitizer32bits_V0.c: 296:         print_string(",\n\r");
  2882  000FAE  0E59               	movlw	low STR_3
  2883  000FB0  6E33               	movwf	print_string@str^0,c
  2884  000FB2  0E10               	movlw	high STR_3
  2885  000FB4  6E34               	movwf	(print_string@str+1)^0,c
  2886  000FB6  EC4E  F00B         	call	_print_string	;wreg free
  2887  000FBA                     
  2888                           ;Digitizer32bits_V0.c: 297:         LATAbits.LATA2 = 0;
  2889  000FBA  9489               	bcf	137,2,c	;volatile
  2890  000FBC                     
  2891                           ;Digitizer32bits_V0.c: 299:         if(ContaSample > (10 - 2)){
  2892  000FBC  0E08               	movlw	8
  2893  000FBE  6431               	cpfsgt	_ContaSample^0,c
  2894  000FC0  EFE4  F007         	goto	i2u114_41
  2895  000FC4  EFE7  F007         	goto	i2u114_40
  2896  000FC8                     i2u114_41:
  2897  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  2898  000FCA  EFFB  F007         	goto	i2l160
  2899  000FCE                     i2u114_40:
  2900  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  2901  000FD0                     
  2902                           ;Digitizer32bits_V0.c: 300:             INTCONbits.TMR0IE = 0;
  2903  000FD0  9AF2               	bcf	242,5,c	;volatile
  2904  000FD2                     
  2905                           ;Digitizer32bits_V0.c: 301:             if(ModeSample == 1){
  2906  000FD2  0430               	decf	_ModeSample^0,w,c
  2907  000FD4  A4D8               	btfss	status,2,c
  2908  000FD6  EFEF  F007         	goto	i2u115_41
  2909  000FDA  EFF2  F007         	goto	i2u115_40
  2910  000FDE                     i2u115_41:
  2911  000FDE  FFFF               	dw	65535	; assembler added errata NOP
  2912  000FE0  EFF7  F007         	goto	i2l158
  2913  000FE4                     i2u115_40:
  2914  000FE4  FFFF               	dw	65535	; assembler added errata NOP
  2915  000FE6                     
  2916                           ;Digitizer32bits_V0.c: 302:                 INTCONbits.INT0IF = 0;
  2917  000FE6  92F2               	bcf	242,1,c	;volatile
  2918                           
  2919                           ;Digitizer32bits_V0.c: 303:                 INTCONbits.INT0IE = 1;
  2920  000FE8  88F2               	bsf	242,4,c	;volatile
  2921                           
  2922                           ;Digitizer32bits_V0.c: 304:             }else{
  2923  000FEA  EFF9  F007         	goto	i2l159
  2924  000FEE                     i2l158:
  2925  000FEE  FFFF               	dw	65535	; assembler added errata NOP
  2926                           
  2927                           ;Digitizer32bits_V0.c: 305:                 LATCbits.LATC2 = 1;
  2928  000FF0  848B               	bsf	139,2,c	;volatile
  2929  000FF2                     i2l159:
  2930  000FF2  FFFF               	dw	65535	; assembler added errata NOP
  2931                           
  2932                           ;Digitizer32bits_V0.c: 307:             LATAbits.LATA1 = 0;
  2933  000FF4  9289               	bcf	137,1,c	;volatile
  2934  000FF6                     i2l160:
  2935  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  2936  000FF8  C05B  FFF5         	movff	??_Interrups+15,tablat
  2937  000FFC  C05A  FFF8         	movff	??_Interrups+14,tblptru
  2938  001000  C059  FFF7         	movff	??_Interrups+13,tblptrh
  2939  001004  C058  FFF6         	movff	??_Interrups+12,tblptrl
  2940  001008  C057  FFDA         	movff	??_Interrups+11,fsr2h
  2941  00100C  C056  FFD9         	movff	??_Interrups+10,fsr2l
  2942  001010  C055  FFE2         	movff	??_Interrups+9,fsr1h
  2943  001014  C054  FFE1         	movff	??_Interrups+8,fsr1l
  2944  001018  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2945  00101A  0011               	retfie		f
  2946  00101C  FFFF               	dw	65535	; errata NOP
  2947  00101E                     __end_of_Interrups:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _print_value *****************
  2951 ;; Defined at:
  2952 ;;		line 161 in file "LIB18F_USART.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  value           4    1[COMRAM] long 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  Bytes           5   10[COMRAM] unsigned char [5]
  2957 ;;  RegTemp         4   16[COMRAM] long 
  2958 ;;  conta           1   15[COMRAM] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2968 ;;      Params:         4       0       0       0       0       0       0
  2969 ;;      Locals:        10       0       0       0       0       0       0
  2970 ;;      Temps:          5       0       0       0       0       0       0
  2971 ;;      Totals:        19       0       0       0       0       0       0
  2972 ;;Total ram usage:       19 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 1
  2975 ;; This function calls:
  2976 ;;		_WriteByte_USART
  2977 ;; This function is called by:
  2978 ;;		_Interrups
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text8
  2983  001336                     __ptext8:
  2984                           	callstack 0
  2985  001336                     _print_value:
  2986                           	callstack 0
  2987  001336  FFFF               	dw	65535	; assembler added errata NOP
  2988  001338                     
  2989                           ;LIB18F_USART.c: 163:     char Bytes[5]={0,0,0,0};
  2990  001338  EE20  F070         	lfsr	2,print_value@F5258
  2991  00133C  EE10  F03C         	lfsr	1,print_value@Bytes
  2992  001340  0E04               	movlw	4
  2993  001342                     i2u79_41:
  2994  001342  CFDB FFE3          	movff	plusw2,plusw1
  2995  001346  06E8               	decf	wreg,f,c
  2996  001348  E2FC               	bc	i2u79_41
  2997  00134A                     
  2998                           ;LIB18F_USART.c: 164:     signed long RegTemp;;LIB18F_USART.c: 165:     unsigned char co
      +                          nta;;LIB18F_USART.c: 168:     RegTemp = value>>24;
  2999  00134A  0E18               	movlw	24
  3000  00134C  6E37               	movwf	??_print_value^0,c
  3001  00134E  C033  F038         	movff	print_value@value,??_print_value+1
  3002  001352  C034  F039         	movff	print_value@value+1,??_print_value+2
  3003  001356  C035  F03A         	movff	print_value@value+2,??_print_value+3
  3004  00135A  C036  F03B         	movff	print_value@value+3,??_print_value+4
  3005  00135E                     i2u80_45:
  3006  00135E  FFFF               	dw	65535	; assembler added errata NOP
  3007  001360  6637               	tstfsz	??_print_value^0,c
  3008  001362  EFB5  F009         	goto	i2u80_46
  3009  001366  EFBE  F009         	goto	i2u80_47
  3010  00136A                     i2u80_46:
  3011  00136A  FFFF               	dw	65535	; assembler added errata NOP
  3012  00136C  343B               	rlcf	(??_print_value+4)^0,w,c
  3013  00136E  323B               	rrcf	(??_print_value+4)^0,f,c
  3014  001370  323A               	rrcf	(??_print_value+3)^0,f,c
  3015  001372  3239               	rrcf	(??_print_value+2)^0,f,c
  3016  001374  3238               	rrcf	(??_print_value+1)^0,f,c
  3017  001376  2E37               	decfsz	??_print_value^0,f,c
  3018  001378  EFAF  F009         	goto	i2u80_45
  3019  00137C                     i2u80_47:
  3020  00137C  FFFF               	dw	65535	; assembler added errata NOP
  3021  00137E  C038  F042         	movff	??_print_value+1,print_value@RegTemp
  3022  001382  C039  F043         	movff	??_print_value+2,print_value@RegTemp+1
  3023  001386  C03A  F044         	movff	??_print_value+3,print_value@RegTemp+2
  3024  00138A  C03B  F045         	movff	??_print_value+4,print_value@RegTemp+3
  3025  00138E                     
  3026                           ;LIB18F_USART.c: 169:     Bytes[3] = (char) RegTemp;
  3027  00138E  C042  F03F         	movff	print_value@RegTemp,print_value@Bytes+3
  3028  001392                     
  3029                           ;LIB18F_USART.c: 171:     RegTemp = value>>16;
  3030  001392  0E10               	movlw	16
  3031  001394  6E37               	movwf	??_print_value^0,c
  3032  001396  C033  F038         	movff	print_value@value,??_print_value+1
  3033  00139A  C034  F039         	movff	print_value@value+1,??_print_value+2
  3034  00139E  C035  F03A         	movff	print_value@value+2,??_print_value+3
  3035  0013A2  C036  F03B         	movff	print_value@value+3,??_print_value+4
  3036  0013A6                     i2u81_45:
  3037  0013A6  FFFF               	dw	65535	; assembler added errata NOP
  3038  0013A8  6637               	tstfsz	??_print_value^0,c
  3039  0013AA  EFD9  F009         	goto	i2u81_46
  3040  0013AE  EFE2  F009         	goto	i2u81_47
  3041  0013B2                     i2u81_46:
  3042  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  3043  0013B4  343B               	rlcf	(??_print_value+4)^0,w,c
  3044  0013B6  323B               	rrcf	(??_print_value+4)^0,f,c
  3045  0013B8  323A               	rrcf	(??_print_value+3)^0,f,c
  3046  0013BA  3239               	rrcf	(??_print_value+2)^0,f,c
  3047  0013BC  3238               	rrcf	(??_print_value+1)^0,f,c
  3048  0013BE  2E37               	decfsz	??_print_value^0,f,c
  3049  0013C0  EFD3  F009         	goto	i2u81_45
  3050  0013C4                     i2u81_47:
  3051  0013C4  FFFF               	dw	65535	; assembler added errata NOP
  3052  0013C6  C038  F042         	movff	??_print_value+1,print_value@RegTemp
  3053  0013CA  C039  F043         	movff	??_print_value+2,print_value@RegTemp+1
  3054  0013CE  C03A  F044         	movff	??_print_value+3,print_value@RegTemp+2
  3055  0013D2  C03B  F045         	movff	??_print_value+4,print_value@RegTemp+3
  3056  0013D6                     
  3057                           ;LIB18F_USART.c: 172:     Bytes[2] = (char) RegTemp;
  3058  0013D6  C042  F03E         	movff	print_value@RegTemp,print_value@Bytes+2
  3059  0013DA                     
  3060                           ;LIB18F_USART.c: 174:     RegTemp = value>>8;
  3061  0013DA  C034  F037         	movff	print_value@value+1,??_print_value
  3062  0013DE  C035  F038         	movff	print_value@value+2,??_print_value+1
  3063  0013E2  C036  F039         	movff	print_value@value+3,??_print_value+2
  3064  0013E6  6A3A               	clrf	(??_print_value+3)^0,c
  3065  0013E8  BE39               	btfsc	(??_print_value+2)^0,7,c
  3066  0013EA  683A               	setf	(??_print_value+3)^0,c
  3067  0013EC  C037  F042         	movff	??_print_value,print_value@RegTemp
  3068  0013F0  C038  F043         	movff	??_print_value+1,print_value@RegTemp+1
  3069  0013F4  C039  F044         	movff	??_print_value+2,print_value@RegTemp+2
  3070  0013F8  C03A  F045         	movff	??_print_value+3,print_value@RegTemp+3
  3071  0013FC                     
  3072                           ;LIB18F_USART.c: 175:     Bytes[1] = (char) RegTemp;
  3073  0013FC  C042  F03D         	movff	print_value@RegTemp,print_value@Bytes+1
  3074  001400                     
  3075                           ;LIB18F_USART.c: 177:     RegTemp = value;
  3076  001400  C033  F042         	movff	print_value@value,print_value@RegTemp
  3077  001404  C034  F043         	movff	print_value@value+1,print_value@RegTemp+1
  3078  001408  C035  F044         	movff	print_value@value+2,print_value@RegTemp+2
  3079  00140C  C036  F045         	movff	print_value@value+3,print_value@RegTemp+3
  3080  001410                     
  3081                           ;LIB18F_USART.c: 178:     Bytes[0] = (char) RegTemp;
  3082  001410  C042  F03C         	movff	print_value@RegTemp,print_value@Bytes
  3083  001414                     
  3084                           ;LIB18F_USART.c: 180:     for(conta=0; conta<4; conta++){
  3085  001414  0E00               	movlw	0
  3086  001416  6E41               	movwf	print_value@conta^0,c
  3087  001418                     i2l2039:
  3088  001418  FFFF               	dw	65535	; assembler added errata NOP
  3089                           
  3090                           ;LIB18F_USART.c: 181:         WriteByte_USART(Bytes[conta]);
  3091  00141A  0E3C               	movlw	low print_value@Bytes
  3092  00141C  2441               	addwf	print_value@conta^0,w,c
  3093  00141E  6ED9               	movwf	fsr2l,c
  3094  001420  6ADA               	clrf	fsr2h,c
  3095  001422  0E00               	movlw	high print_value@Bytes
  3096  001424  22DA               	addwfc	fsr2h,f,c
  3097  001426  50DF               	movf	indf2,w,c
  3098  001428  ECB6  F00B         	call	_WriteByte_USART
  3099  00142C                     
  3100                           ;LIB18F_USART.c: 182:     }
  3101  00142C  2A41               	incf	print_value@conta^0,f,c
  3102  00142E  0E03               	movlw	3
  3103  001430  6441               	cpfsgt	print_value@conta^0,c
  3104  001432  EF1D  F00A         	goto	i2u82_41
  3105  001436  EF20  F00A         	goto	i2u82_40
  3106  00143A                     i2u82_41:
  3107  00143A  FFFF               	dw	65535	; assembler added errata NOP
  3108  00143C  EF0C  F00A         	goto	i2l2039
  3109  001440                     i2u82_40:
  3110  001440  FFFF               	dw	65535	; assembler added errata NOP
  3111  001442  0012               	return		;funcret
  3112  001444  FFFF               	dw	65535	; errata NOP
  3113  001446                     __end_of_print_value:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function ___aodiv *****************
  3117 ;; Defined at:
  3118 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  dividend        8    0[COMRAM] long long 
  3121 ;;  divisor         8    8[COMRAM] long long 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  quotient        8   18[COMRAM] long long 
  3124 ;;  sign            1   17[COMRAM] unsigned char 
  3125 ;;  counter         1   16[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  8    0[COMRAM] long long 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3135 ;;      Params:        16       0       0       0       0       0       0
  3136 ;;      Locals:        10       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0
  3138 ;;      Totals:        26       0       0       0       0       0       0
  3139 ;;Total ram usage:       26 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_Interrups
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text9
  3149  00105E                     __ptext9:
  3150                           	callstack 0
  3151  00105E                     ___aodiv:
  3152                           	callstack 0
  3153  00105E  FFFF               	dw	65535	; assembler added errata NOP
  3154  001060  0E00               	movlw	0
  3155  001062  6E43               	movwf	___aodiv@sign^0,c
  3156  001064  BE41               	btfsc	(___aodiv@divisor+7)^0,7,c
  3157  001066  EF3A  F008         	goto	i2u83_40
  3158  00106A  EF37  F008         	goto	i2u83_41
  3159  00106E                     i2u83_41:
  3160  00106E  FFFF               	dw	65535	; assembler added errata NOP
  3161  001070  EF4D  F008         	goto	i2l2053
  3162  001074                     i2u83_40:
  3163  001074  FFFF               	dw	65535	; assembler added errata NOP
  3164  001076  1E41               	comf	(___aodiv@divisor+7)^0,f,c
  3165  001078  1E40               	comf	(___aodiv@divisor+6)^0,f,c
  3166  00107A  1E3F               	comf	(___aodiv@divisor+5)^0,f,c
  3167  00107C  1E3E               	comf	(___aodiv@divisor+4)^0,f,c
  3168  00107E  1E3D               	comf	(___aodiv@divisor+3)^0,f,c
  3169  001080  1E3C               	comf	(___aodiv@divisor+2)^0,f,c
  3170  001082  1E3B               	comf	(___aodiv@divisor+1)^0,f,c
  3171  001084  6C3A               	negf	___aodiv@divisor^0,c
  3172  001086  0E00               	movlw	0
  3173  001088  223B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3174  00108A  223C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3175  00108C  223D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3176  00108E  223E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3177  001090  223F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3178  001092  2240               	addwfc	(___aodiv@divisor+6)^0,f,c
  3179  001094  2241               	addwfc	(___aodiv@divisor+7)^0,f,c
  3180  001096  0E01               	movlw	1
  3181  001098  6E43               	movwf	___aodiv@sign^0,c
  3182  00109A                     i2l2053:
  3183  00109A  FFFF               	dw	65535	; assembler added errata NOP
  3184  00109C  BE39               	btfsc	(___aodiv@dividend+7)^0,7,c
  3185  00109E  EF56  F008         	goto	i2u84_40
  3186  0010A2  EF53  F008         	goto	i2u84_41
  3187  0010A6                     i2u84_41:
  3188  0010A6  FFFF               	dw	65535	; assembler added errata NOP
  3189  0010A8  EF69  F008         	goto	i2l2059
  3190  0010AC                     i2u84_40:
  3191  0010AC  FFFF               	dw	65535	; assembler added errata NOP
  3192  0010AE  1E39               	comf	(___aodiv@dividend+7)^0,f,c
  3193  0010B0  1E38               	comf	(___aodiv@dividend+6)^0,f,c
  3194  0010B2  1E37               	comf	(___aodiv@dividend+5)^0,f,c
  3195  0010B4  1E36               	comf	(___aodiv@dividend+4)^0,f,c
  3196  0010B6  1E35               	comf	(___aodiv@dividend+3)^0,f,c
  3197  0010B8  1E34               	comf	(___aodiv@dividend+2)^0,f,c
  3198  0010BA  1E33               	comf	(___aodiv@dividend+1)^0,f,c
  3199  0010BC  6C32               	negf	___aodiv@dividend^0,c
  3200  0010BE  0E00               	movlw	0
  3201  0010C0  2233               	addwfc	(___aodiv@dividend+1)^0,f,c
  3202  0010C2  2234               	addwfc	(___aodiv@dividend+2)^0,f,c
  3203  0010C4  2235               	addwfc	(___aodiv@dividend+3)^0,f,c
  3204  0010C6  2236               	addwfc	(___aodiv@dividend+4)^0,f,c
  3205  0010C8  2237               	addwfc	(___aodiv@dividend+5)^0,f,c
  3206  0010CA  2238               	addwfc	(___aodiv@dividend+6)^0,f,c
  3207  0010CC  2239               	addwfc	(___aodiv@dividend+7)^0,f,c
  3208  0010CE  0E01               	movlw	1
  3209  0010D0  1A43               	xorwf	___aodiv@sign^0,f,c
  3210  0010D2                     i2l2059:
  3211  0010D2  FFFF               	dw	65535	; assembler added errata NOP
  3212  0010D4  EE20  F044         	lfsr	2,___aodiv@quotient
  3213  0010D8  0E07               	movlw	7
  3214  0010DA                     i2u85_41:
  3215  0010DA  6ADE               	clrf	postinc2,c
  3216  0010DC  06E8               	decf	wreg,f,c
  3217  0010DE  E2FD               	bc	i2u85_41
  3218  0010E0  503A               	movf	___aodiv@divisor^0,w,c
  3219  0010E2  103B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3220  0010E4  103C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3221  0010E6  103D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3222  0010E8  103E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3223  0010EA  103F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3224  0010EC  1040               	iorwf	(___aodiv@divisor+6)^0,w,c
  3225  0010EE  1041               	iorwf	(___aodiv@divisor+7)^0,w,c
  3226  0010F0  B4D8               	btfsc	status,2,c
  3227  0010F2  EF7D  F008         	goto	i2u86_41
  3228  0010F6  EF80  F008         	goto	i2u86_40
  3229  0010FA                     i2u86_41:
  3230  0010FA  FFFF               	dw	65535	; assembler added errata NOP
  3231  0010FC  EFDB  F008         	goto	i2l2081
  3232  001100                     i2u86_40:
  3233  001100  FFFF               	dw	65535	; assembler added errata NOP
  3234  001102  0E01               	movlw	1
  3235  001104  6E42               	movwf	___aodiv@counter^0,c
  3236  001106  EF90  F008         	goto	i2l2067
  3237  00110A                     i2l2065:
  3238  00110A  FFFF               	dw	65535	; assembler added errata NOP
  3239  00110C  90D8               	bcf	status,0,c
  3240  00110E  363A               	rlcf	___aodiv@divisor^0,f,c
  3241  001110  363B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3242  001112  363C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3243  001114  363D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3244  001116  363E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3245  001118  363F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3246  00111A  3640               	rlcf	(___aodiv@divisor+6)^0,f,c
  3247  00111C  3641               	rlcf	(___aodiv@divisor+7)^0,f,c
  3248  00111E  2A42               	incf	___aodiv@counter^0,f,c
  3249  001120                     i2l2067:
  3250  001120  FFFF               	dw	65535	; assembler added errata NOP
  3251  001122  AE41               	btfss	(___aodiv@divisor+7)^0,7,c
  3252  001124  EF96  F008         	goto	i2u87_41
  3253  001128  EF99  F008         	goto	i2u87_40
  3254  00112C                     i2u87_41:
  3255  00112C  FFFF               	dw	65535	; assembler added errata NOP
  3256  00112E  EF85  F008         	goto	i2l2065
  3257  001132                     i2u87_40:
  3258  001132  FFFF               	dw	65535	; assembler added errata NOP
  3259  001134                     i2l2069:
  3260  001134  FFFF               	dw	65535	; assembler added errata NOP
  3261  001136  90D8               	bcf	status,0,c
  3262  001138  3644               	rlcf	___aodiv@quotient^0,f,c
  3263  00113A  3645               	rlcf	(___aodiv@quotient+1)^0,f,c
  3264  00113C  3646               	rlcf	(___aodiv@quotient+2)^0,f,c
  3265  00113E  3647               	rlcf	(___aodiv@quotient+3)^0,f,c
  3266  001140  3648               	rlcf	(___aodiv@quotient+4)^0,f,c
  3267  001142  3649               	rlcf	(___aodiv@quotient+5)^0,f,c
  3268  001144  364A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3269  001146  364B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3270  001148  503A               	movf	___aodiv@divisor^0,w,c
  3271  00114A  5C32               	subwf	___aodiv@dividend^0,w,c
  3272  00114C  503B               	movf	(___aodiv@divisor+1)^0,w,c
  3273  00114E  5833               	subwfb	(___aodiv@dividend+1)^0,w,c
  3274  001150  503C               	movf	(___aodiv@divisor+2)^0,w,c
  3275  001152  5834               	subwfb	(___aodiv@dividend+2)^0,w,c
  3276  001154  503D               	movf	(___aodiv@divisor+3)^0,w,c
  3277  001156  5835               	subwfb	(___aodiv@dividend+3)^0,w,c
  3278  001158  503E               	movf	(___aodiv@divisor+4)^0,w,c
  3279  00115A  5836               	subwfb	(___aodiv@dividend+4)^0,w,c
  3280  00115C  503F               	movf	(___aodiv@divisor+5)^0,w,c
  3281  00115E  5837               	subwfb	(___aodiv@dividend+5)^0,w,c
  3282  001160  5040               	movf	(___aodiv@divisor+6)^0,w,c
  3283  001162  5838               	subwfb	(___aodiv@dividend+6)^0,w,c
  3284  001164  5041               	movf	(___aodiv@divisor+7)^0,w,c
  3285  001166  5839               	subwfb	(___aodiv@dividend+7)^0,w,c
  3286  001168  A0D8               	btfss	status,0,c
  3287  00116A  EFB9  F008         	goto	i2u88_41
  3288  00116E  EFBC  F008         	goto	i2u88_40
  3289  001172                     i2u88_41:
  3290  001172  FFFF               	dw	65535	; assembler added errata NOP
  3291  001174  EFCE  F008         	goto	i2l2077
  3292  001178                     i2u88_40:
  3293  001178  FFFF               	dw	65535	; assembler added errata NOP
  3294  00117A  503A               	movf	___aodiv@divisor^0,w,c
  3295  00117C  5E32               	subwf	___aodiv@dividend^0,f,c
  3296  00117E  503B               	movf	(___aodiv@divisor+1)^0,w,c
  3297  001180  5A33               	subwfb	(___aodiv@dividend+1)^0,f,c
  3298  001182  503C               	movf	(___aodiv@divisor+2)^0,w,c
  3299  001184  5A34               	subwfb	(___aodiv@dividend+2)^0,f,c
  3300  001186  503D               	movf	(___aodiv@divisor+3)^0,w,c
  3301  001188  5A35               	subwfb	(___aodiv@dividend+3)^0,f,c
  3302  00118A  503E               	movf	(___aodiv@divisor+4)^0,w,c
  3303  00118C  5A36               	subwfb	(___aodiv@dividend+4)^0,f,c
  3304  00118E  503F               	movf	(___aodiv@divisor+5)^0,w,c
  3305  001190  5A37               	subwfb	(___aodiv@dividend+5)^0,f,c
  3306  001192  5040               	movf	(___aodiv@divisor+6)^0,w,c
  3307  001194  5A38               	subwfb	(___aodiv@dividend+6)^0,f,c
  3308  001196  5041               	movf	(___aodiv@divisor+7)^0,w,c
  3309  001198  5A39               	subwfb	(___aodiv@dividend+7)^0,f,c
  3310  00119A  8044               	bsf	___aodiv@quotient^0,0,c
  3311  00119C                     i2l2077:
  3312  00119C  FFFF               	dw	65535	; assembler added errata NOP
  3313  00119E  90D8               	bcf	status,0,c
  3314  0011A0  3241               	rrcf	(___aodiv@divisor+7)^0,f,c
  3315  0011A2  3240               	rrcf	(___aodiv@divisor+6)^0,f,c
  3316  0011A4  323F               	rrcf	(___aodiv@divisor+5)^0,f,c
  3317  0011A6  323E               	rrcf	(___aodiv@divisor+4)^0,f,c
  3318  0011A8  323D               	rrcf	(___aodiv@divisor+3)^0,f,c
  3319  0011AA  323C               	rrcf	(___aodiv@divisor+2)^0,f,c
  3320  0011AC  323B               	rrcf	(___aodiv@divisor+1)^0,f,c
  3321  0011AE  323A               	rrcf	___aodiv@divisor^0,f,c
  3322  0011B0  2E42               	decfsz	___aodiv@counter^0,f,c
  3323  0011B2  EF9A  F008         	goto	i2l2069
  3324  0011B6                     i2l2081:
  3325  0011B6  FFFF               	dw	65535	; assembler added errata NOP
  3326  0011B8  5043               	movf	___aodiv@sign^0,w,c
  3327  0011BA  B4D8               	btfsc	status,2,c
  3328  0011BC  EFE2  F008         	goto	i2u89_41
  3329  0011C0  EFE5  F008         	goto	i2u89_40
  3330  0011C4                     i2u89_41:
  3331  0011C4  FFFF               	dw	65535	; assembler added errata NOP
  3332  0011C6  EFF6  F008         	goto	i2l2085
  3333  0011CA                     i2u89_40:
  3334  0011CA  FFFF               	dw	65535	; assembler added errata NOP
  3335  0011CC  1E4B               	comf	(___aodiv@quotient+7)^0,f,c
  3336  0011CE  1E4A               	comf	(___aodiv@quotient+6)^0,f,c
  3337  0011D0  1E49               	comf	(___aodiv@quotient+5)^0,f,c
  3338  0011D2  1E48               	comf	(___aodiv@quotient+4)^0,f,c
  3339  0011D4  1E47               	comf	(___aodiv@quotient+3)^0,f,c
  3340  0011D6  1E46               	comf	(___aodiv@quotient+2)^0,f,c
  3341  0011D8  1E45               	comf	(___aodiv@quotient+1)^0,f,c
  3342  0011DA  6C44               	negf	___aodiv@quotient^0,c
  3343  0011DC  0E00               	movlw	0
  3344  0011DE  2245               	addwfc	(___aodiv@quotient+1)^0,f,c
  3345  0011E0  2246               	addwfc	(___aodiv@quotient+2)^0,f,c
  3346  0011E2  2247               	addwfc	(___aodiv@quotient+3)^0,f,c
  3347  0011E4  2248               	addwfc	(___aodiv@quotient+4)^0,f,c
  3348  0011E6  2249               	addwfc	(___aodiv@quotient+5)^0,f,c
  3349  0011E8  224A               	addwfc	(___aodiv@quotient+6)^0,f,c
  3350  0011EA  224B               	addwfc	(___aodiv@quotient+7)^0,f,c
  3351  0011EC                     i2l2085:
  3352  0011EC  FFFF               	dw	65535	; assembler added errata NOP
  3353  0011EE  C044  F032         	movff	___aodiv@quotient,?___aodiv
  3354  0011F2  C045  F033         	movff	___aodiv@quotient+1,?___aodiv+1
  3355  0011F6  C046  F034         	movff	___aodiv@quotient+2,?___aodiv+2
  3356  0011FA  C047  F035         	movff	___aodiv@quotient+3,?___aodiv+3
  3357  0011FE  C048  F036         	movff	___aodiv@quotient+4,?___aodiv+4
  3358  001202  C049  F037         	movff	___aodiv@quotient+5,?___aodiv+5
  3359  001206  C04A  F038         	movff	___aodiv@quotient+6,?___aodiv+6
  3360  00120A  C04B  F039         	movff	___aodiv@quotient+7,?___aodiv+7
  3361  00120E  0012               	return		;funcret
  3362  001210  FFFF               	dw	65535	; errata NOP
  3363  001212                     __end_of___aodiv:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _WriteRegister_2bytesAD7177 *****************
  3367 ;; Defined at:
  3368 ;;		line 88 in file "LIB18F_SPI.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3382 ;;      Params:         0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 1
  3389 ;; This function calls:
  3390 ;;		_TransferByte_SPI
  3391 ;; This function is called by:
  3392 ;;		_Interrups
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text10
  3397  0017CE                     __ptext10:
  3398                           	callstack 0
  3399  0017CE                     _WriteRegister_2bytesAD7177:
  3400                           	callstack 0
  3401  0017CE  FFFF               	dw	65535	; assembler added errata NOP
  3402  0017D0                     
  3403                           ;LIB18F_SPI.c: 90:     LATCbits.LATC2 = 0;
  3404  0017D0  948B               	bcf	139,2,c	;volatile
  3405  0017D2                     
  3406                           ;LIB18F_SPI.c: 91:     TransferByte_SPI(BufferSPI[0]);
  3407  0017D2  502D               	movf	_BufferSPI^0,w,c
  3408  0017D4  ECA4  F00B         	call	_TransferByte_SPI
  3409                           
  3410                           ;LIB18F_SPI.c: 92:     TransferByte_SPI(BufferSPI[1]);
  3411  0017D8  502E               	movf	(_BufferSPI+1)^0,w,c
  3412  0017DA  ECA4  F00B         	call	_TransferByte_SPI
  3413                           
  3414                           ;LIB18F_SPI.c: 93:     TransferByte_SPI(BufferSPI[2]);
  3415  0017DE  502F               	movf	(_BufferSPI+2)^0,w,c
  3416  0017E0  ECA4  F00B         	call	_TransferByte_SPI
  3417  0017E4                     
  3418                           ;LIB18F_SPI.c: 94:     LATCbits.LATC2 = 1;
  3419  0017E4  848B               	bsf	139,2,c	;volatile
  3420  0017E6  0012               	return		;funcret
  3421  0017E8  FFFF               	dw	65535	; errata NOP
  3422  0017EA                     __end_of_WriteRegister_2bytesAD7177:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _TransmitDAT_USART *****************
  3426 ;; Defined at:
  3427 ;;		line 148 in file "LIB18F_USART.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  DAT_ID          1    wreg     unsigned char 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  DAT_ID          1    3[COMRAM] unsigned char 
  3432 ;;  conta           1    4[COMRAM] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         0       0       0       0       0       0       0
  3443 ;;      Locals:         2       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0
  3445 ;;      Totals:         2       0       0       0       0       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 2
  3449 ;; This function calls:
  3450 ;;		_WriteByte_USART
  3451 ;;		_print_string
  3452 ;; This function is called by:
  3453 ;;		_Interrups
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text11
  3458  001602                     __ptext11:
  3459                           	callstack 0
  3460  001602                     _TransmitDAT_USART:
  3461                           	callstack 0
  3462  001602  FFFF               	dw	65535	; assembler added errata NOP
  3463                           
  3464                           ;incstack = 0
  3465                           ;TransmitDAT_USART@DAT_ID stored from wreg
  3466  001604  6E35               	movwf	TransmitDAT_USART@DAT_ID^0,c
  3467  001606                     
  3468                           ;LIB18F_USART.c: 149:     unsigned char conta;;LIB18F_USART.c: 151:     print_string("NN
      +                          NNJRODAT");
  3469  001606  0E46               	movlw	low STR_8
  3470  001608  6E33               	movwf	print_string@str^0,c
  3471  00160A  0E10               	movlw	high STR_8
  3472  00160C  6E34               	movwf	(print_string@str+1)^0,c
  3473  00160E  EC4E  F00B         	call	_print_string	;wreg free
  3474  001612                     
  3475                           ;LIB18F_USART.c: 152:     WriteByte_USART(DAT_ID);
  3476  001612  5035               	movf	TransmitDAT_USART@DAT_ID^0,w,c
  3477  001614  ECB6  F00B         	call	_WriteByte_USART
  3478  001618                     
  3479                           ;LIB18F_USART.c: 153:     for(conta=0; conta<12; conta++){
  3480  001618  0E00               	movlw	0
  3481  00161A  6E36               	movwf	TransmitDAT_USART@conta^0,c
  3482  00161C                     i2l1971:
  3483  00161C  FFFF               	dw	65535	; assembler added errata NOP
  3484                           
  3485                           ;LIB18F_USART.c: 154:         WriteByte_USART(BufferDAT[conta]);
  3486  00161E  0E75               	movlw	low _BufferDAT
  3487  001620  2436               	addwf	TransmitDAT_USART@conta^0,w,c
  3488  001622  6ED9               	movwf	fsr2l,c
  3489  001624  6ADA               	clrf	fsr2h,c
  3490  001626  0E00               	movlw	high _BufferDAT
  3491  001628  22DA               	addwfc	fsr2h,f,c
  3492  00162A  50DF               	movf	indf2,w,c
  3493  00162C  ECB6  F00B         	call	_WriteByte_USART
  3494  001630                     
  3495                           ;LIB18F_USART.c: 155:     }
  3496  001630  2A36               	incf	TransmitDAT_USART@conta^0,f,c
  3497  001632  0E0B               	movlw	11
  3498  001634  6436               	cpfsgt	TransmitDAT_USART@conta^0,c
  3499  001636  EF1F  F00B         	goto	i2u77_41
  3500  00163A  EF22  F00B         	goto	i2u77_40
  3501  00163E                     i2u77_41:
  3502  00163E  FFFF               	dw	65535	; assembler added errata NOP
  3503  001640  EF0E  F00B         	goto	i2l1971
  3504  001644                     i2u77_40:
  3505  001644  FFFF               	dw	65535	; assembler added errata NOP
  3506  001646                     
  3507                           ;LIB18F_USART.c: 156:     print_string("\n\r");
  3508  001646  0E5A               	movlw	low (STR_3+1)
  3509  001648  6E33               	movwf	print_string@str^0,c
  3510  00164A  0E10               	movlw	high (STR_3+1)
  3511  00164C  6E34               	movwf	(print_string@str+1)^0,c
  3512  00164E  EC4E  F00B         	call	_print_string	;wreg free
  3513  001652  0012               	return		;funcret
  3514  001654  FFFF               	dw	65535	; errata NOP
  3515  001656                     __end_of_TransmitDAT_USART:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _TransmitCMD_USART *****************
  3519 ;; Defined at:
  3520 ;;		line 140 in file "LIB18F_USART.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  CMD_ID          1    wreg     unsigned char 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  CMD_ID          1    3[COMRAM] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3534 ;;      Params:         0       0       0       0       0       0       0
  3535 ;;      Locals:         1       0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0
  3537 ;;      Totals:         1       0       0       0       0       0       0
  3538 ;;Total ram usage:        1 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 2
  3541 ;; This function calls:
  3542 ;;		_WriteByte_USART
  3543 ;;		_print_string
  3544 ;; This function is called by:
  3545 ;;		_Interrups
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text12
  3550  001722                     __ptext12:
  3551                           	callstack 0
  3552  001722                     _TransmitCMD_USART:
  3553                           	callstack 0
  3554  001722  FFFF               	dw	65535	; assembler added errata NOP
  3555                           
  3556                           ;incstack = 0
  3557                           ;TransmitCMD_USART@CMD_ID stored from wreg
  3558  001724  6E35               	movwf	TransmitCMD_USART@CMD_ID^0,c
  3559  001726                     
  3560                           ;LIB18F_USART.c: 142:     print_string("NNNNJROCMD");
  3561  001726  0E3B               	movlw	low STR_6
  3562  001728  6E33               	movwf	print_string@str^0,c
  3563  00172A  0E10               	movlw	high STR_6
  3564  00172C  6E34               	movwf	(print_string@str+1)^0,c
  3565  00172E  EC4E  F00B         	call	_print_string	;wreg free
  3566  001732                     
  3567                           ;LIB18F_USART.c: 143:     WriteByte_USART(CMD_ID);
  3568  001732  5035               	movf	TransmitCMD_USART@CMD_ID^0,w,c
  3569  001734  ECB6  F00B         	call	_WriteByte_USART
  3570  001738                     
  3571                           ;LIB18F_USART.c: 144:     print_string("\n\r");
  3572  001738  0E5A               	movlw	low (STR_3+1)
  3573  00173A  6E33               	movwf	print_string@str^0,c
  3574  00173C  0E10               	movlw	high (STR_3+1)
  3575  00173E  6E34               	movwf	(print_string@str+1)^0,c
  3576  001740  EC4E  F00B         	call	_print_string	;wreg free
  3577  001744  0012               	return		;funcret
  3578  001746  FFFF               	dw	65535	; errata NOP
  3579  001748                     __end_of_TransmitCMD_USART:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _print_string *****************
  3583 ;; Defined at:
  3584 ;;		line 67 in file "LIB18F_USART.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  str             2    1[COMRAM] PTR unsigned char 
  3587 ;;		 -> STR_9(3), STR_8(11), STR_7(3), STR_6(11), 
  3588 ;;		 -> STR_5(4), STR_4(8), STR_3(4), STR_2(8), 
  3589 ;;		 -> STR_1(24), 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3601 ;;      Params:         2       0       0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0
  3604 ;;      Totals:         2       0       0       0       0       0       0
  3605 ;;Total ram usage:        2 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 1
  3608 ;; This function calls:
  3609 ;;		_WriteByte_USART
  3610 ;; This function is called by:
  3611 ;;		_Interrups
  3612 ;;		_TransmitCMD_USART
  3613 ;;		_TransmitDAT_USART
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text13
  3618  00169C                     __ptext13:
  3619                           	callstack 0
  3620  00169C                     _print_string:
  3621                           	callstack 0
  3622  00169C  FFFF               	dw	65535	; assembler added errata NOP
  3623  00169E                     
  3624                           ;LIB18F_USART.c: 68:     while(*str != '\0'){
  3625  00169E  EF5D  F00B         	goto	i2l1845
  3626  0016A2                     i2l1841:
  3627  0016A2  FFFF               	dw	65535	; assembler added errata NOP
  3628                           
  3629                           ;LIB18F_USART.c: 69:         WriteByte_USART(*str);
  3630  0016A4  C033  FFF6         	movff	print_string@str,tblptrl
  3631  0016A8  C034  FFF7         	movff	print_string@str+1,tblptrh
  3632  0016AC                     	if	0	;tblptru may be non-zero
  3633  0016AC                     	endif
  3634  0016AC                     	if	0	;tblptru may be non-zero
  3635  0016AC                     	endif
  3636  0016AC  0008               	tblrd		*
  3637  0016AE  FFFF               	dw	65535	; errata NOP
  3638  0016B0  50F5               	movf	tablat,w,c
  3639  0016B2  ECB6  F00B         	call	_WriteByte_USART
  3640  0016B6                     
  3641                           ;LIB18F_USART.c: 70:         str++;
  3642  0016B6  4A33               	infsnz	print_string@str^0,f,c
  3643  0016B8  2A34               	incf	(print_string@str+1)^0,f,c
  3644  0016BA                     i2l1845:
  3645  0016BA  FFFF               	dw	65535	; assembler added errata NOP
  3646                           
  3647                           ;LIB18F_USART.c: 68:     while(*str != '\0'){
  3648  0016BC  C033  FFF6         	movff	print_string@str,tblptrl
  3649  0016C0  C034  FFF7         	movff	print_string@str+1,tblptrh
  3650  0016C4                     	if	0	;tblptru may be non-zero
  3651  0016C4                     	endif
  3652  0016C4                     	if	0	;tblptru may be non-zero
  3653  0016C4                     	endif
  3654  0016C4  0008               	tblrd		*
  3655  0016C6  FFFF               	dw	65535	; errata NOP
  3656  0016C8  50F5               	movf	tablat,w,c
  3657  0016CA  0900               	iorlw	0
  3658  0016CC  A4D8               	btfss	status,2,c
  3659  0016CE  EF6B  F00B         	goto	i2u63_41
  3660  0016D2  EF6E  F00B         	goto	i2u63_40
  3661  0016D6                     i2u63_41:
  3662  0016D6  FFFF               	dw	65535	; assembler added errata NOP
  3663  0016D8  EF51  F00B         	goto	i2l1841
  3664  0016DC                     i2u63_40:
  3665  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3666  0016DE  0012               	return		;funcret
  3667  0016E0  FFFF               	dw	65535	; errata NOP
  3668  0016E2                     __end_of_print_string:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _WriteByte_USART *****************
  3672 ;; Defined at:
  3673 ;;		line 58 in file "LIB18F_USART.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  byte            1    wreg     unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  byte            1    0[COMRAM] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3687 ;;      Params:         0       0       0       0       0       0       0
  3688 ;;      Locals:         1       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0
  3690 ;;      Totals:         1       0       0       0       0       0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_Interrups
  3697 ;;		_print_string
  3698 ;;		_TransmitCMD_USART
  3699 ;;		_TransmitDAT_USART
  3700 ;;		_print_value
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text14
  3705  00176C                     __ptext14:
  3706                           	callstack 0
  3707  00176C                     _WriteByte_USART:
  3708                           	callstack 0
  3709  00176C  FFFF               	dw	65535	; assembler added errata NOP
  3710                           
  3711                           ;incstack = 0
  3712                           ;WriteByte_USART@byte stored from wreg
  3713  00176E  6E32               	movwf	WriteByte_USART@byte^0,c
  3714  001770                     
  3715                           ;LIB18F_USART.c: 60:     TXREG = byte;
  3716  001770  C032  FFAD         	movff	WriteByte_USART@byte,4013	;volatile
  3717  001774                     
  3718                           ;LIB18F_USART.c: 61:     __nop();
  3719  001774  F000               	nop	
  3720  001776                     i2l280:
  3721  001776  FFFF               	dw	65535	; assembler added errata NOP
  3722  001778  A2AC               	btfss	172,1,c	;volatile
  3723  00177A  EFC1  F00B         	goto	i2u62_41
  3724  00177E  EFC4  F00B         	goto	i2u62_40
  3725  001782                     i2u62_41:
  3726  001782  FFFF               	dw	65535	; assembler added errata NOP
  3727  001784  EFBB  F00B         	goto	i2l280
  3728  001788                     i2u62_40:
  3729  001788  FFFF               	dw	65535	; assembler added errata NOP
  3730  00178A  0012               	return		;funcret
  3731  00178C  FFFF               	dw	65535	; errata NOP
  3732  00178E                     __end_of_WriteByte_USART:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _SelectChannelZ *****************
  3736 ;; Defined at:
  3737 ;;		line 30 in file "SelectChannels.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		None
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3751 ;;      Params:         0       0       0       0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0
  3754 ;;      Totals:         0       0       0       0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_Interrups
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text15
  3765  00181E                     __ptext15:
  3766                           	callstack 0
  3767  00181E                     _SelectChannelZ:
  3768                           	callstack 0
  3769  00181E  FFFF               	dw	65535	; assembler added errata NOP
  3770  001820                     
  3771                           ;SelectChannels.c: 32:     LATAbits.LA5 = 1;
  3772  001820  8A89               	bsf	137,5,c	;volatile
  3773                           
  3774                           ;SelectChannels.c: 33:     LATAbits.LA4 = 0;
  3775  001822  9889               	bcf	137,4,c	;volatile
  3776                           
  3777                           ;SelectChannels.c: 34:     LATCbits.LC0 = 0;
  3778  001824  908B               	bcf	139,0,c	;volatile
  3779                           
  3780                           ;SelectChannels.c: 35:     LATCbits.LC1 = 0;
  3781  001826  928B               	bcf	139,1,c	;volatile
  3782  001828  0012               	return		;funcret
  3783  00182A  FFFF               	dw	65535	; errata NOP
  3784  00182C                     __end_of_SelectChannelZ:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _SelectChannelY *****************
  3788 ;; Defined at:
  3789 ;;		line 21 in file "SelectChannels.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		None
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3803 ;;      Params:         0       0       0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_Interrups
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text16
  3817  00182C                     __ptext16:
  3818                           	callstack 0
  3819  00182C                     _SelectChannelY:
  3820                           	callstack 0
  3821  00182C  FFFF               	dw	65535	; assembler added errata NOP
  3822  00182E                     
  3823                           ;SelectChannels.c: 23:     LATAbits.LA5 = 0;
  3824  00182E  9A89               	bcf	137,5,c	;volatile
  3825                           
  3826                           ;SelectChannels.c: 24:     LATAbits.LA4 = 1;
  3827  001830  8889               	bsf	137,4,c	;volatile
  3828                           
  3829                           ;SelectChannels.c: 25:     LATCbits.LC0 = 1;
  3830  001832  808B               	bsf	139,0,c	;volatile
  3831                           
  3832                           ;SelectChannels.c: 26:     LATCbits.LC1 = 0;
  3833  001834  928B               	bcf	139,1,c	;volatile
  3834  001836  0012               	return		;funcret
  3835  001838  FFFF               	dw	65535	; errata NOP
  3836  00183A                     __end_of_SelectChannelY:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _SelectChannelX *****************
  3840 ;; Defined at:
  3841 ;;		line 12 in file "SelectChannels.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		None
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3855 ;;      Params:         0       0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_Interrups
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text17
  3869  00183A                     __ptext17:
  3870                           	callstack 0
  3871  00183A                     _SelectChannelX:
  3872                           	callstack 0
  3873  00183A  FFFF               	dw	65535	; assembler added errata NOP
  3874  00183C                     
  3875                           ;SelectChannels.c: 14:     LATAbits.LA5 = 0;
  3876  00183C  9A89               	bcf	137,5,c	;volatile
  3877                           
  3878                           ;SelectChannels.c: 15:     LATAbits.LA4 = 1;
  3879  00183E  8889               	bsf	137,4,c	;volatile
  3880                           
  3881                           ;SelectChannels.c: 16:     LATCbits.LC0 = 0;
  3882  001840  908B               	bcf	139,0,c	;volatile
  3883                           
  3884                           ;SelectChannels.c: 17:     LATCbits.LC1 = 0;
  3885  001842  928B               	bcf	139,1,c	;volatile
  3886  001844  0012               	return		;funcret
  3887  001846  FFFF               	dw	65535	; errata NOP
  3888  001848                     __end_of_SelectChannelX:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _SelectChannelS *****************
  3892 ;; Defined at:
  3893 ;;		line 48 in file "SelectChannels.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_Interrups
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text18
  3921  001848                     __ptext18:
  3922                           	callstack 0
  3923  001848                     _SelectChannelS:
  3924                           	callstack 0
  3925  001848  FFFF               	dw	65535	; assembler added errata NOP
  3926  00184A                     
  3927                           ;SelectChannels.c: 50:     LATAbits.LA5 = 1;
  3928  00184A  8A89               	bsf	137,5,c	;volatile
  3929                           
  3930                           ;SelectChannels.c: 51:     LATAbits.LA4 = 0;
  3931  00184C  9889               	bcf	137,4,c	;volatile
  3932                           
  3933                           ;SelectChannels.c: 52:     LATCbits.LC0 = 1;
  3934  00184E  808B               	bsf	139,0,c	;volatile
  3935                           
  3936                           ;SelectChannels.c: 53:     LATCbits.LC1 = 1;
  3937  001850  828B               	bsf	139,1,c	;volatile
  3938  001852  0012               	return		;funcret
  3939  001854  FFFF               	dw	65535	; errata NOP
  3940  001856                     __end_of_SelectChannelS:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _SelectChannelC *****************
  3944 ;; Defined at:
  3945 ;;		line 39 in file "SelectChannels.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		None
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3959 ;;      Params:         0       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_Interrups
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text19
  3973  001856                     __ptext19:
  3974                           	callstack 0
  3975  001856                     _SelectChannelC:
  3976                           	callstack 0
  3977  001856  FFFF               	dw	65535	; assembler added errata NOP
  3978  001858                     
  3979                           ;SelectChannels.c: 41:     LATAbits.LA5 = 1;
  3980  001858  8A89               	bsf	137,5,c	;volatile
  3981                           
  3982                           ;SelectChannels.c: 42:     LATAbits.LA4 = 0;
  3983  00185A  9889               	bcf	137,4,c	;volatile
  3984                           
  3985                           ;SelectChannels.c: 43:     LATCbits.LC0 = 1;
  3986  00185C  808B               	bsf	139,0,c	;volatile
  3987                           
  3988                           ;SelectChannels.c: 44:     LATCbits.LC1 = 0;
  3989  00185E  928B               	bcf	139,1,c	;volatile
  3990  001860  0012               	return		;funcret
  3991  001862  FFFF               	dw	65535	; errata NOP
  3992  001864                     __end_of_SelectChannelC:
  3993                           	callstack 0
  3994                           
  3995 ;; *************** function _ResetAD7177 *****************
  3996 ;; Defined at:
  3997 ;;		line 44 in file "LIB18F_SPI.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  conta           1    2[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4011 ;;      Params:         0       0       0       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0       0       0
  4013 ;;      Temps:          1       0       0       0       0       0       0
  4014 ;;      Totals:         2       0       0       0       0       0       0
  4015 ;;Total ram usage:        2 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 1
  4018 ;; This function calls:
  4019 ;;		_TransferByte_SPI
  4020 ;; This function is called by:
  4021 ;;		_Interrups
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text20
  4026  0016E2                     __ptext20:
  4027                           	callstack 0
  4028  0016E2                     _ResetAD7177:
  4029                           	callstack 0
  4030  0016E2  FFFF               	dw	65535	; assembler added errata NOP
  4031  0016E4                     
  4032                           ;LIB18F_SPI.c: 45:     unsigned char conta;;LIB18F_SPI.c: 47:     LATCbits.LATC2 = 0;
  4033  0016E4  948B               	bcf	139,2,c	;volatile
  4034  0016E6                     
  4035                           ;LIB18F_SPI.c: 48:     for(conta=0;conta<9;conta++){
  4036  0016E6  0E00               	movlw	0
  4037  0016E8  6E34               	movwf	ResetAD7177@conta^0,c
  4038  0016EA                     i2l1919:
  4039  0016EA  FFFF               	dw	65535	; assembler added errata NOP
  4040                           
  4041                           ;LIB18F_SPI.c: 49:         TransferByte_SPI(0xFF);
  4042  0016EC  0EFF               	movlw	255
  4043  0016EE  ECA4  F00B         	call	_TransferByte_SPI
  4044  0016F2                     
  4045                           ;LIB18F_SPI.c: 50:     }
  4046  0016F2  2A34               	incf	ResetAD7177@conta^0,f,c
  4047  0016F4  0E08               	movlw	8
  4048  0016F6  6434               	cpfsgt	ResetAD7177@conta^0,c
  4049  0016F8  EF80  F00B         	goto	i2u76_41
  4050  0016FC  EF83  F00B         	goto	i2u76_40
  4051  001700                     i2u76_41:
  4052  001700  FFFF               	dw	65535	; assembler added errata NOP
  4053  001702  EF75  F00B         	goto	i2l1919
  4054  001706                     i2u76_40:
  4055  001706  FFFF               	dw	65535	; assembler added errata NOP
  4056  001708                     
  4057                           ;LIB18F_SPI.c: 51:     LATCbits.LATC2 = 1;
  4058  001708  848B               	bsf	139,2,c	;volatile
  4059  00170A                     
  4060                           ;LIB18F_SPI.c: 52:     _delay((unsigned long)((3)*(39321600UL/4000.0)));
  4061  00170A  0E1D               	movlw	29
  4062  00170C  6E33               	movwf	??_ResetAD7177^0,c
  4063  00170E  0EBD               	movlw	189
  4064  001710                     i2u142_47:
  4065  001710  FFFF               	dw	65535	; errata NOP
  4066  001712  2EE8               	decfsz	wreg,f,c
  4067  001714  D7FD               	bra	i2u142_47
  4068  001716  2E33               	decfsz	??_ResetAD7177^0,f,c
  4069  001718  D7FB               	bra	i2u142_47
  4070  00171A  D000               	nop2	
  4071  00171C  F000               	nop	
  4072  00171E  0012               	return		;funcret
  4073  001720  FFFF               	dw	65535	; errata NOP
  4074  001722                     __end_of_ResetAD7177:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _ReceiveCMD_USART *****************
  4078 ;; Defined at:
  4079 ;;		line 75 in file "LIB18F_USART.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  data_byte       1    4[COMRAM] unsigned char 
  4084 ;;  conta_byte      1    3[COMRAM] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      unsigned char 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4094 ;;      Params:         0       0       0       0       0       0       0
  4095 ;;      Locals:         2       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0
  4097 ;;      Totals:         2       0       0       0       0       0       0
  4098 ;;Total ram usage:        2 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 1
  4101 ;; This function calls:
  4102 ;;		_ReadByte_USART
  4103 ;; This function is called by:
  4104 ;;		_Interrups
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text21
  4109  001446                     __ptext21:
  4110                           	callstack 0
  4111  001446                     _ReceiveCMD_USART:
  4112                           	callstack 0
  4113  001446  FFFF               	dw	65535	; assembler added errata NOP
  4114  001448                     
  4115                           ;LIB18F_USART.c: 76:     unsigned char conta_byte;;LIB18F_USART.c: 77:     char data_byt
      +                          e;;LIB18F_USART.c: 79:     for(conta_byte=0; conta_byte<10;conta_byte++){
  4116  001448  0E00               	movlw	0
  4117  00144A  6E35               	movwf	ReceiveCMD_USART@conta_byte^0,c
  4118  00144C                     i2l1877:
  4119  00144C  FFFF               	dw	65535	; assembler added errata NOP
  4120                           
  4121                           ;LIB18F_USART.c: 80:         data_byte = ReadByte_USART();
  4122  00144E  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4123  001452  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4124  001454                     
  4125                           ;LIB18F_USART.c: 81:         if(data_byte == 'J'){
  4126  001454  0E4A               	movlw	74
  4127  001456  1836               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4128  001458  A4D8               	btfss	status,2,c
  4129  00145A  EF31  F00A         	goto	i2u70_41
  4130  00145E  EF34  F00A         	goto	i2u70_40
  4131  001462                     i2u70_41:
  4132  001462  FFFF               	dw	65535	; assembler added errata NOP
  4133  001464  EF37  F00A         	goto	i2l1883
  4134  001468                     i2u70_40:
  4135  001468  FFFF               	dw	65535	; assembler added errata NOP
  4136  00146A  EF42  F00A         	goto	i2l1887
  4137  00146E                     i2l1883:
  4138  00146E  FFFF               	dw	65535	; assembler added errata NOP
  4139                           
  4140                           ;LIB18F_USART.c: 84:     }
  4141  001470  2A35               	incf	ReceiveCMD_USART@conta_byte^0,f,c
  4142  001472  0E09               	movlw	9
  4143  001474  6435               	cpfsgt	ReceiveCMD_USART@conta_byte^0,c
  4144  001476  EF3F  F00A         	goto	i2u71_41
  4145  00147A  EF42  F00A         	goto	i2u71_40
  4146  00147E                     i2u71_41:
  4147  00147E  FFFF               	dw	65535	; assembler added errata NOP
  4148  001480  EF26  F00A         	goto	i2l1877
  4149  001484                     i2u71_40:
  4150  001484                     i2l1887:
  4151  001484  FFFF               	dw	65535	; assembler added errata NOP
  4152                           
  4153                           ;LIB18F_USART.c: 85:     if(conta_byte < 10){
  4154  001486  0E0A               	movlw	10
  4155  001488  6035               	cpfslt	ReceiveCMD_USART@conta_byte^0,c
  4156  00148A  EF49  F00A         	goto	i2u72_41
  4157  00148E  EF4C  F00A         	goto	i2u72_40
  4158  001492                     i2u72_41:
  4159  001492  FFFF               	dw	65535	; assembler added errata NOP
  4160  001494  EF8B  F00A         	goto	i2l295
  4161  001498                     i2u72_40:
  4162  001498  FFFF               	dw	65535	; assembler added errata NOP
  4163  00149A                     
  4164                           ;LIB18F_USART.c: 86:         data_byte = ReadByte_USART();
  4165  00149A  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4166  00149E  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4167  0014A0                     
  4168                           ;LIB18F_USART.c: 87:         if(data_byte == 'R'){
  4169  0014A0  0E52               	movlw	82
  4170  0014A2  1836               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4171  0014A4  A4D8               	btfss	status,2,c
  4172  0014A6  EF57  F00A         	goto	i2u73_41
  4173  0014AA  EF5A  F00A         	goto	i2u73_40
  4174  0014AE                     i2u73_41:
  4175  0014AE  FFFF               	dw	65535	; assembler added errata NOP
  4176  0014B0  EF8B  F00A         	goto	i2l295
  4177  0014B4                     i2u73_40:
  4178  0014B4  FFFF               	dw	65535	; assembler added errata NOP
  4179  0014B6                     
  4180                           ;LIB18F_USART.c: 88:             data_byte = ReadByte_USART();
  4181  0014B6  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4182  0014BA  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4183  0014BC                     
  4184                           ;LIB18F_USART.c: 89:             if(data_byte == 'O'){
  4185  0014BC  0E4F               	movlw	79
  4186  0014BE  1836               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4187  0014C0  A4D8               	btfss	status,2,c
  4188  0014C2  EF65  F00A         	goto	i2u74_41
  4189  0014C6  EF68  F00A         	goto	i2u74_40
  4190  0014CA                     i2u74_41:
  4191  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  4192  0014CC  EF8B  F00A         	goto	i2l295
  4193  0014D0                     i2u74_40:
  4194  0014D0  FFFF               	dw	65535	; assembler added errata NOP
  4195  0014D2                     
  4196                           ;LIB18F_USART.c: 90:                 data_byte = ReadByte_USART();
  4197  0014D2  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4198  0014D6  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4199  0014D8                     
  4200                           ;LIB18F_USART.c: 91:                 if(data_byte == 'C'){
  4201  0014D8  0E43               	movlw	67
  4202  0014DA  1836               	xorwf	ReceiveCMD_USART@data_byte^0,w,c
  4203  0014DC  A4D8               	btfss	status,2,c
  4204  0014DE  EF73  F00A         	goto	i2u75_41
  4205  0014E2  EF76  F00A         	goto	i2u75_40
  4206  0014E6                     i2u75_41:
  4207  0014E6  FFFF               	dw	65535	; assembler added errata NOP
  4208  0014E8  EF8B  F00A         	goto	i2l295
  4209  0014EC                     i2u75_40:
  4210  0014EC  FFFF               	dw	65535	; assembler added errata NOP
  4211  0014EE                     
  4212                           ;LIB18F_USART.c: 92:                     data_byte = ReadByte_USART();
  4213  0014EE  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4214  0014F2  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4215                           
  4216                           ;LIB18F_USART.c: 93:                     data_byte = ReadByte_USART();
  4217  0014F4  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4218  0014F8  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4219                           
  4220                           ;LIB18F_USART.c: 94:                     BufferDAT[12] = ReadByte_USART();
  4221  0014FA  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4222  0014FE  0100               	movlb	0	; () banked
  4223  001500  6F81               	movwf	(_BufferDAT+12)& (0+255),b
  4224                           
  4225                           ;LIB18F_USART.c: 95:                     data_byte = ReadByte_USART();
  4226  001502  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4227  001506  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4228                           
  4229                           ;LIB18F_USART.c: 96:                     data_byte = ReadByte_USART();
  4230  001508  EC91  F00A         	call	_ReadByte_USART	;wreg free
  4231  00150C  6E36               	movwf	ReceiveCMD_USART@data_byte^0,c
  4232  00150E                     
  4233                           ;LIB18F_USART.c: 97:                     return BufferDAT[12];
  4234  00150E  0100               	movlb	0	; () banked
  4235  001510  5181               	movf	(_BufferDAT+12)& (0+255),w,b
  4236  001512  EF8E  F00A         	goto	i2l299
  4237  001516                     i2l295:
  4238  001516  FFFF               	dw	65535	; assembler added errata NOP
  4239                           
  4240                           ;LIB18F_USART.c: 102:     RCSTAbits.CREN = 0;
  4241  001518  98AB               	bcf	171,4,c	;volatile
  4242  00151A                     
  4243                           ;LIB18F_USART.c: 103:     return 'X';
  4244  00151A  0E58               	movlw	88
  4245  00151C                     i2l299:
  4246  00151C  FFFF               	dw	65535	; assembler added errata NOP
  4247  00151E  0012               	return		;funcret
  4248  001520  FFFF               	dw	65535	; errata NOP
  4249  001522                     __end_of_ReceiveCMD_USART:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _ReadByte_USART *****************
  4253 ;; Defined at:
  4254 ;;		line 35 in file "LIB18F_USART.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  Ready           1    2[COMRAM] unsigned char 
  4259 ;;  conta           1    1[COMRAM] unsigned char 
  4260 ;;  data            1    0[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      unsigned char 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4270 ;;      Params:         0       0       0       0       0       0       0
  4271 ;;      Locals:         3       0       0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0
  4273 ;;      Totals:         3       0       0       0       0       0       0
  4274 ;;Total ram usage:        3 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_ReceiveCMD_USART
  4280 ;;		_ReceiveDAT_USART
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text22
  4285  001522                     __ptext22:
  4286                           	callstack 0
  4287  001522                     _ReadByte_USART:
  4288                           	callstack 0
  4289  001522  FFFF               	dw	65535	; assembler added errata NOP
  4290  001524                     
  4291                           ;LIB18F_USART.c: 36:     unsigned char conta;;LIB18F_USART.c: 37:     unsigned char Read
      +                          y;;LIB18F_USART.c: 38:     char data;;LIB18F_USART.c: 40:     conta = 0;
  4292  001524  0E00               	movlw	0
  4293  001526  6E33               	movwf	ReadByte_USART@conta^0,c
  4294  001528                     
  4295                           ;LIB18F_USART.c: 41:     Ready = 255;
  4296  001528  6834               	setf	ReadByte_USART@Ready^0,c
  4297                           
  4298                           ;LIB18F_USART.c: 42:     TMR2 = 0x00;
  4299  00152A  0E00               	movlw	0
  4300  00152C  6ECC               	movwf	204,c	;volatile
  4301  00152E                     
  4302                           ;LIB18F_USART.c: 43:     T2CONbits.TMR2ON = 1;
  4303  00152E  84CA               	bsf	202,2,c	;volatile
  4304                           
  4305                           ;LIB18F_USART.c: 45:     while(Ready){
  4306  001530  EFC4  F00A         	goto	i2l266
  4307  001534                     i2l268:
  4308  001534  FFFF               	dw	65535	; assembler added errata NOP
  4309  001536  BA9E               	btfsc	158,5,c	;volatile
  4310  001538  EFA0  F00A         	goto	i2u65_41
  4311  00153C  EFA3  F00A         	goto	i2u65_40
  4312  001540                     i2u65_41:
  4313  001540  FFFF               	dw	65535	; assembler added errata NOP
  4314  001542  EFAC  F00A         	goto	i2l272
  4315  001546                     i2u65_40:
  4316  001546  FFFF               	dw	65535	; assembler added errata NOP
  4317  001548  A29E               	btfss	158,1,c	;volatile
  4318  00154A  EFA9  F00A         	goto	i2u66_41
  4319  00154E  EFAC  F00A         	goto	i2u66_40
  4320  001552                     i2u66_41:
  4321  001552  FFFF               	dw	65535	; assembler added errata NOP
  4322  001554  EF9A  F00A         	goto	i2l268
  4323  001558                     i2u66_40:
  4324  001558                     i2l272:
  4325  001558  FFFF               	dw	65535	; assembler added errata NOP
  4326                           
  4327                           ;LIB18F_USART.c: 47:         PIR1bits.TMR2IF = 0;
  4328  00155A  929E               	bcf	158,1,c	;volatile
  4329  00155C                     
  4330                           ;LIB18F_USART.c: 48:         conta++;
  4331  00155C  2A33               	incf	ReadByte_USART@conta^0,f,c
  4332  00155E                     
  4333                           ;LIB18F_USART.c: 49:         if((PIR1bits.RCIF == 1) || (conta>3)){
  4334  00155E  BA9E               	btfsc	158,5,c	;volatile
  4335  001560  EFB4  F00A         	goto	i2u67_41
  4336  001564  EFB7  F00A         	goto	i2u67_40
  4337  001568                     i2u67_41:
  4338  001568  FFFF               	dw	65535	; assembler added errata NOP
  4339  00156A  EFC1  F00A         	goto	i2l1865
  4340  00156E                     i2u67_40:
  4341  00156E  FFFF               	dw	65535	; assembler added errata NOP
  4342  001570  0E03               	movlw	3
  4343  001572  6433               	cpfsgt	ReadByte_USART@conta^0,c
  4344  001574  EFBE  F00A         	goto	i2u68_41
  4345  001578  EFC1  F00A         	goto	i2u68_40
  4346  00157C                     i2u68_41:
  4347  00157C  FFFF               	dw	65535	; assembler added errata NOP
  4348  00157E  EFC4  F00A         	goto	i2l266
  4349  001582                     i2u68_40:
  4350  001582                     i2l1865:
  4351  001582  FFFF               	dw	65535	; assembler added errata NOP
  4352                           
  4353                           ;LIB18F_USART.c: 50:             Ready = 0;
  4354  001584  0E00               	movlw	0
  4355  001586  6E34               	movwf	ReadByte_USART@Ready^0,c
  4356  001588                     i2l266:
  4357  001588  FFFF               	dw	65535	; assembler added errata NOP
  4358                           
  4359                           ;LIB18F_USART.c: 45:     while(Ready){
  4360  00158A  5034               	movf	ReadByte_USART@Ready^0,w,c
  4361  00158C  A4D8               	btfss	status,2,c
  4362  00158E  EFCB  F00A         	goto	i2u69_41
  4363  001592  EFCE  F00A         	goto	i2u69_40
  4364  001596                     i2u69_41:
  4365  001596  FFFF               	dw	65535	; assembler added errata NOP
  4366  001598  EF9A  F00A         	goto	i2l268
  4367  00159C                     i2u69_40:
  4368  00159C  FFFF               	dw	65535	; assembler added errata NOP
  4369  00159E                     
  4370                           ;LIB18F_USART.c: 53:     PIR1bits.TMR2IF = 0;
  4371  00159E  929E               	bcf	158,1,c	;volatile
  4372                           
  4373                           ;LIB18F_USART.c: 54:     T2CONbits.TMR2ON = 0;
  4374  0015A0  94CA               	bcf	202,2,c	;volatile
  4375                           
  4376                           ;LIB18F_USART.c: 55:     data = (char) RCREG;
  4377  0015A2  CFAE F032          	movff	4014,ReadByte_USART@data	;volatile
  4378  0015A6                     
  4379                           ;LIB18F_USART.c: 56:     return data;
  4380  0015A6  5032               	movf	ReadByte_USART@data^0,w,c
  4381  0015A8  0012               	return		;funcret
  4382  0015AA  FFFF               	dw	65535	; errata NOP
  4383  0015AC                     __end_of_ReadByte_USART:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function _ReadRegister_2bytesAD7177 *****************
  4387 ;; Defined at:
  4388 ;;		line 67 in file "LIB18F_SPI.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  command         1    wreg     unsigned char 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  command         1    1[COMRAM] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4402 ;;      Params:         0       0       0       0       0       0       0
  4403 ;;      Locals:         1       0       0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0
  4405 ;;      Totals:         1       0       0       0       0       0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; Hardware stack levels required when called: 1
  4409 ;; This function calls:
  4410 ;;		_TransferByte_SPI
  4411 ;; This function is called by:
  4412 ;;		_Interrups
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text23
  4417  00178E                     __ptext23:
  4418                           	callstack 0
  4419  00178E                     _ReadRegister_2bytesAD7177:
  4420                           	callstack 0
  4421  00178E  FFFF               	dw	65535	; assembler added errata NOP
  4422                           
  4423                           ;incstack = 0
  4424                           ;ReadRegister_2bytesAD7177@command stored from wreg
  4425  001790  6E33               	movwf	ReadRegister_2bytesAD7177@command^0,c
  4426  001792                     
  4427                           ;LIB18F_SPI.c: 69:     LATCbits.LATC2 = 0;
  4428  001792  948B               	bcf	139,2,c	;volatile
  4429  001794                     
  4430                           ;LIB18F_SPI.c: 70:     TransferByte_SPI(command);
  4431  001794  5033               	movf	ReadRegister_2bytesAD7177@command^0,w,c
  4432  001796  ECA4  F00B         	call	_TransferByte_SPI
  4433                           
  4434                           ;LIB18F_SPI.c: 71:     BufferSPI[0] = TransferByte_SPI(0x00);
  4435  00179A  0E00               	movlw	0
  4436  00179C  ECA4  F00B         	call	_TransferByte_SPI
  4437  0017A0  6E2D               	movwf	_BufferSPI^0,c
  4438                           
  4439                           ;LIB18F_SPI.c: 72:     BufferSPI[1] = TransferByte_SPI(0x00);
  4440  0017A2  0E00               	movlw	0
  4441  0017A4  ECA4  F00B         	call	_TransferByte_SPI
  4442  0017A8  6E2E               	movwf	(_BufferSPI+1)^0,c
  4443  0017AA                     
  4444                           ;LIB18F_SPI.c: 73:     LATCbits.LATC2 = 1;
  4445  0017AA  848B               	bsf	139,2,c	;volatile
  4446  0017AC  0012               	return		;funcret
  4447  0017AE  FFFF               	dw	65535	; errata NOP
  4448  0017B0                     __end_of_ReadRegister_2bytesAD7177:
  4449                           	callstack 0
  4450                           
  4451 ;; *************** function _ReadRegister_1bytesAD7177 *****************
  4452 ;; Defined at:
  4453 ;;		line 57 in file "LIB18F_SPI.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  command         1    wreg     unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  command         1    1[COMRAM] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4467 ;;      Params:         0       0       0       0       0       0       0
  4468 ;;      Locals:         1       0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0
  4470 ;;      Totals:         1       0       0       0       0       0       0
  4471 ;;Total ram usage:        1 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 1
  4474 ;; This function calls:
  4475 ;;		_TransferByte_SPI
  4476 ;; This function is called by:
  4477 ;;		_Interrups
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text24
  4482  001804                     __ptext24:
  4483                           	callstack 0
  4484  001804                     _ReadRegister_1bytesAD7177:
  4485                           	callstack 0
  4486  001804  FFFF               	dw	65535	; assembler added errata NOP
  4487                           
  4488                           ;incstack = 0
  4489                           ;ReadRegister_1bytesAD7177@command stored from wreg
  4490  001806  6E33               	movwf	ReadRegister_1bytesAD7177@command^0,c
  4491  001808                     
  4492                           ;LIB18F_SPI.c: 59:     LATCbits.LATC2 = 0;
  4493  001808  948B               	bcf	139,2,c	;volatile
  4494  00180A                     
  4495                           ;LIB18F_SPI.c: 60:     TransferByte_SPI(command);
  4496  00180A  5033               	movf	ReadRegister_1bytesAD7177@command^0,w,c
  4497  00180C  ECA4  F00B         	call	_TransferByte_SPI
  4498                           
  4499                           ;LIB18F_SPI.c: 61:     BufferSPI[0] = TransferByte_SPI(0x00);
  4500  001810  0E00               	movlw	0
  4501  001812  ECA4  F00B         	call	_TransferByte_SPI
  4502  001816  6E2D               	movwf	_BufferSPI^0,c
  4503  001818                     
  4504                           ;LIB18F_SPI.c: 62:     LATCbits.LATC2 = 1;
  4505  001818  848B               	bsf	139,2,c	;volatile
  4506  00181A  0012               	return		;funcret
  4507  00181C  FFFF               	dw	65535	; errata NOP
  4508  00181E                     __end_of_ReadRegister_1bytesAD7177:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _ReadADC32 *****************
  4512 ;; Defined at:
  4513 ;;		line 360 in file "Digitizer32bits_V0.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  data_ini        4   17[COMRAM] unsigned long 
  4518 ;;  DataADC         4    9[COMRAM] long 
  4519 ;;  byte0           1   16[COMRAM] unsigned char 
  4520 ;;  byte1           1   15[COMRAM] unsigned char 
  4521 ;;  byte2           1   14[COMRAM] unsigned char 
  4522 ;;  byte3           1   13[COMRAM] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  4    1[COMRAM] long 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4532 ;;      Params:         4       0       0       0       0       0       0
  4533 ;;      Locals:        12       0       0       0       0       0       0
  4534 ;;      Temps:          4       0       0       0       0       0       0
  4535 ;;      Totals:        20       0       0       0       0       0       0
  4536 ;;Total ram usage:       20 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; Hardware stack levels required when called: 1
  4539 ;; This function calls:
  4540 ;;		_TransferByte_SPI
  4541 ;; This function is called by:
  4542 ;;		_Interrups
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text25
  4547  001212                     __ptext25:
  4548                           	callstack 0
  4549  001212                     _ReadADC32:
  4550                           	callstack 0
  4551  001212  FFFF               	dw	65535	; assembler added errata NOP
  4552  001214                     i2l171:
  4553  001214  FFFF               	dw	65535	; assembler added errata NOP
  4554  001216  B882               	btfsc	130,4,c	;volatile
  4555  001218  EF10  F009         	goto	i2u78_41
  4556  00121C  EF13  F009         	goto	i2u78_40
  4557  001220                     i2u78_41:
  4558  001220  FFFF               	dw	65535	; assembler added errata NOP
  4559  001222  EF0A  F009         	goto	i2l171
  4560  001226                     i2u78_40:
  4561  001226  FFFF               	dw	65535	; assembler added errata NOP
  4562  001228                     
  4563                           ;Digitizer32bits_V0.c: 366:     TransferByte_SPI(0x44);
  4564  001228  0E44               	movlw	68
  4565  00122A  ECA4  F00B         	call	_TransferByte_SPI
  4566                           
  4567                           ;Digitizer32bits_V0.c: 367:     byte3 = TransferByte_SPI(0x00);
  4568  00122E  0E00               	movlw	0
  4569  001230  ECA4  F00B         	call	_TransferByte_SPI
  4570  001234  6E3F               	movwf	ReadADC32@byte3^0,c
  4571                           
  4572                           ;Digitizer32bits_V0.c: 368:     byte2 = TransferByte_SPI(0x00);
  4573  001236  0E00               	movlw	0
  4574  001238  ECA4  F00B         	call	_TransferByte_SPI
  4575  00123C  6E40               	movwf	ReadADC32@byte2^0,c
  4576                           
  4577                           ;Digitizer32bits_V0.c: 369:     byte1 = TransferByte_SPI(0x00);
  4578  00123E  0E00               	movlw	0
  4579  001240  ECA4  F00B         	call	_TransferByte_SPI
  4580  001244  6E41               	movwf	ReadADC32@byte1^0,c
  4581                           
  4582                           ;Digitizer32bits_V0.c: 370:     byte0 = TransferByte_SPI(0x00);
  4583  001246  0E00               	movlw	0
  4584  001248  ECA4  F00B         	call	_TransferByte_SPI
  4585  00124C  6E42               	movwf	ReadADC32@byte0^0,c
  4586  00124E                     
  4587                           ;Digitizer32bits_V0.c: 374:     data_ini = 0;
  4588  00124E  0E00               	movlw	0
  4589  001250  6E43               	movwf	ReadADC32@data_ini^0,c
  4590  001252  0E00               	movlw	0
  4591  001254  6E44               	movwf	(ReadADC32@data_ini+1)^0,c
  4592  001256  0E00               	movlw	0
  4593  001258  6E45               	movwf	(ReadADC32@data_ini+2)^0,c
  4594  00125A  0E00               	movlw	0
  4595  00125C  6E46               	movwf	(ReadADC32@data_ini+3)^0,c
  4596  00125E                     
  4597                           ;Digitizer32bits_V0.c: 375:     data_ini = data_ini | (unsigned long)byte3<<24;
  4598  00125E  C03F  F037         	movff	ReadADC32@byte3,??_ReadADC32
  4599  001262  6A38               	clrf	(??_ReadADC32+1)^0,c
  4600  001264  6A39               	clrf	(??_ReadADC32+2)^0,c
  4601  001266  6A3A               	clrf	(??_ReadADC32+3)^0,c
  4602  001268  C037  F03A         	movff	??_ReadADC32,??_ReadADC32+3
  4603  00126C  6A39               	clrf	(??_ReadADC32+2)^0,c
  4604  00126E  6A38               	clrf	(??_ReadADC32+1)^0,c
  4605  001270  6A37               	clrf	??_ReadADC32^0,c
  4606  001272  5043               	movf	ReadADC32@data_ini^0,w,c
  4607  001274  1037               	iorwf	??_ReadADC32^0,w,c
  4608  001276  6E43               	movwf	ReadADC32@data_ini^0,c
  4609  001278  5044               	movf	(ReadADC32@data_ini+1)^0,w,c
  4610  00127A  1038               	iorwf	(??_ReadADC32+1)^0,w,c
  4611  00127C  6E44               	movwf	(ReadADC32@data_ini+1)^0,c
  4612  00127E  5045               	movf	(ReadADC32@data_ini+2)^0,w,c
  4613  001280  1039               	iorwf	(??_ReadADC32+2)^0,w,c
  4614  001282  6E45               	movwf	(ReadADC32@data_ini+2)^0,c
  4615  001284  5046               	movf	(ReadADC32@data_ini+3)^0,w,c
  4616  001286  103A               	iorwf	(??_ReadADC32+3)^0,w,c
  4617  001288  6E46               	movwf	(ReadADC32@data_ini+3)^0,c
  4618  00128A                     
  4619                           ;Digitizer32bits_V0.c: 376:     data_ini = data_ini | (unsigned long)byte2<<16;
  4620  00128A  C040  F037         	movff	ReadADC32@byte2,??_ReadADC32
  4621  00128E  6A38               	clrf	(??_ReadADC32+1)^0,c
  4622  001290  6A39               	clrf	(??_ReadADC32+2)^0,c
  4623  001292  6A3A               	clrf	(??_ReadADC32+3)^0,c
  4624  001294  C038  F03A         	movff	??_ReadADC32+1,??_ReadADC32+3
  4625  001298  C037  F039         	movff	??_ReadADC32,??_ReadADC32+2
  4626  00129C  6A38               	clrf	(??_ReadADC32+1)^0,c
  4627  00129E  6A37               	clrf	??_ReadADC32^0,c
  4628  0012A0  5043               	movf	ReadADC32@data_ini^0,w,c
  4629  0012A2  1037               	iorwf	??_ReadADC32^0,w,c
  4630  0012A4  6E43               	movwf	ReadADC32@data_ini^0,c
  4631  0012A6  5044               	movf	(ReadADC32@data_ini+1)^0,w,c
  4632  0012A8  1038               	iorwf	(??_ReadADC32+1)^0,w,c
  4633  0012AA  6E44               	movwf	(ReadADC32@data_ini+1)^0,c
  4634  0012AC  5045               	movf	(ReadADC32@data_ini+2)^0,w,c
  4635  0012AE  1039               	iorwf	(??_ReadADC32+2)^0,w,c
  4636  0012B0  6E45               	movwf	(ReadADC32@data_ini+2)^0,c
  4637  0012B2  5046               	movf	(ReadADC32@data_ini+3)^0,w,c
  4638  0012B4  103A               	iorwf	(??_ReadADC32+3)^0,w,c
  4639  0012B6  6E46               	movwf	(ReadADC32@data_ini+3)^0,c
  4640  0012B8                     
  4641                           ;Digitizer32bits_V0.c: 377:     data_ini = data_ini | (unsigned long)byte1<<8;
  4642  0012B8  C041  F037         	movff	ReadADC32@byte1,??_ReadADC32
  4643  0012BC  6A38               	clrf	(??_ReadADC32+1)^0,c
  4644  0012BE  6A39               	clrf	(??_ReadADC32+2)^0,c
  4645  0012C0  6A3A               	clrf	(??_ReadADC32+3)^0,c
  4646  0012C2  C039  F03A         	movff	??_ReadADC32+2,??_ReadADC32+3
  4647  0012C6  C038  F039         	movff	??_ReadADC32+1,??_ReadADC32+2
  4648  0012CA  C037  F038         	movff	??_ReadADC32,??_ReadADC32+1
  4649  0012CE  6A37               	clrf	??_ReadADC32^0,c
  4650  0012D0  5043               	movf	ReadADC32@data_ini^0,w,c
  4651  0012D2  1037               	iorwf	??_ReadADC32^0,w,c
  4652  0012D4  6E43               	movwf	ReadADC32@data_ini^0,c
  4653  0012D6  5044               	movf	(ReadADC32@data_ini+1)^0,w,c
  4654  0012D8  1038               	iorwf	(??_ReadADC32+1)^0,w,c
  4655  0012DA  6E44               	movwf	(ReadADC32@data_ini+1)^0,c
  4656  0012DC  5045               	movf	(ReadADC32@data_ini+2)^0,w,c
  4657  0012DE  1039               	iorwf	(??_ReadADC32+2)^0,w,c
  4658  0012E0  6E45               	movwf	(ReadADC32@data_ini+2)^0,c
  4659  0012E2  5046               	movf	(ReadADC32@data_ini+3)^0,w,c
  4660  0012E4  103A               	iorwf	(??_ReadADC32+3)^0,w,c
  4661  0012E6  6E46               	movwf	(ReadADC32@data_ini+3)^0,c
  4662  0012E8                     
  4663                           ;Digitizer32bits_V0.c: 378:     data_ini = data_ini | (unsigned long)byte0;
  4664  0012E8  5043               	movf	ReadADC32@data_ini^0,w,c
  4665  0012EA  1042               	iorwf	ReadADC32@byte0^0,w,c
  4666  0012EC  6E43               	movwf	ReadADC32@data_ini^0,c
  4667  0012EE  5044               	movf	(ReadADC32@data_ini+1)^0,w,c
  4668  0012F0  6E44               	movwf	(ReadADC32@data_ini+1)^0,c
  4669  0012F2  5045               	movf	(ReadADC32@data_ini+2)^0,w,c
  4670  0012F4  6E45               	movwf	(ReadADC32@data_ini+2)^0,c
  4671  0012F6  5046               	movf	(ReadADC32@data_ini+3)^0,w,c
  4672  0012F8  6E46               	movwf	(ReadADC32@data_ini+3)^0,c
  4673  0012FA                     
  4674                           ;Digitizer32bits_V0.c: 379:     data_ini = data_ini ^ 0x80000000;
  4675  0012FA  0E00               	movlw	0
  4676  0012FC  1843               	xorwf	ReadADC32@data_ini^0,w,c
  4677  0012FE  6E43               	movwf	ReadADC32@data_ini^0,c
  4678  001300  0E00               	movlw	0
  4679  001302  1844               	xorwf	(ReadADC32@data_ini+1)^0,w,c
  4680  001304  6E44               	movwf	(ReadADC32@data_ini+1)^0,c
  4681  001306  0E00               	movlw	0
  4682  001308  1845               	xorwf	(ReadADC32@data_ini+2)^0,w,c
  4683  00130A  6E45               	movwf	(ReadADC32@data_ini+2)^0,c
  4684  00130C  0E80               	movlw	128
  4685  00130E  1846               	xorwf	(ReadADC32@data_ini+3)^0,w,c
  4686  001310  6E46               	movwf	(ReadADC32@data_ini+3)^0,c
  4687  001312                     
  4688                           ;Digitizer32bits_V0.c: 380:     DataADC = (signed long) data_ini;
  4689  001312  C043  F03B         	movff	ReadADC32@data_ini,ReadADC32@DataADC
  4690  001316  C044  F03C         	movff	ReadADC32@data_ini+1,ReadADC32@DataADC+1
  4691  00131A  C045  F03D         	movff	ReadADC32@data_ini+2,ReadADC32@DataADC+2
  4692  00131E  C046  F03E         	movff	ReadADC32@data_ini+3,ReadADC32@DataADC+3
  4693  001322                     
  4694                           ;Digitizer32bits_V0.c: 382:     return DataADC;
  4695  001322  C03B  F033         	movff	ReadADC32@DataADC,?_ReadADC32
  4696  001326  C03C  F034         	movff	ReadADC32@DataADC+1,?_ReadADC32+1
  4697  00132A  C03D  F035         	movff	ReadADC32@DataADC+2,?_ReadADC32+2
  4698  00132E  C03E  F036         	movff	ReadADC32@DataADC+3,?_ReadADC32+3
  4699  001332  0012               	return		;funcret
  4700  001334  FFFF               	dw	65535	; errata NOP
  4701  001336                     __end_of_ReadADC32:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function _TransferByte_SPI *****************
  4705 ;; Defined at:
  4706 ;;		line 34 in file "LIB18F_SPI.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  data            1    wreg     unsigned char 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  data            1    0[COMRAM] unsigned char 
  4711 ;;  valor           1    0        unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      unsigned char 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4721 ;;      Params:         0       0       0       0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0
  4724 ;;      Totals:         1       0       0       0       0       0       0
  4725 ;;Total ram usage:        1 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_ReadADC32
  4731 ;;		_ResetAD7177
  4732 ;;		_ReadRegister_1bytesAD7177
  4733 ;;		_ReadRegister_2bytesAD7177
  4734 ;;		_WriteRegister_2bytesAD7177
  4735 ;;		_ReadRegister_3bytesAD7177
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text26
  4740  001748                     __ptext26:
  4741                           	callstack 0
  4742  001748                     _TransferByte_SPI:
  4743                           	callstack 0
  4744  001748  FFFF               	dw	65535	; assembler added errata NOP
  4745                           
  4746                           ;incstack = 0
  4747                           ;TransferByte_SPI@data stored from wreg
  4748  00174A  6E32               	movwf	TransferByte_SPI@data^0,c
  4749  00174C  50C9               	movf	201,w,c	;volatile
  4750  00174E                     
  4751                           ;LIB18F_SPI.c: 38:     SSPBUF = data;
  4752  00174E  C032  FFC9         	movff	TransferByte_SPI@data,4041	;volatile
  4753  001752                     i2l202:
  4754  001752  FFFF               	dw	65535	; assembler added errata NOP
  4755  001754  A0C7               	btfss	199,0,c	;volatile
  4756  001756  EFAF  F00B         	goto	i2u64_41
  4757  00175A  EFB2  F00B         	goto	i2u64_40
  4758  00175E                     i2u64_41:
  4759  00175E  FFFF               	dw	65535	; assembler added errata NOP
  4760  001760  EFA9  F00B         	goto	i2l202
  4761  001764                     i2u64_40:
  4762  001764  FFFF               	dw	65535	; assembler added errata NOP
  4763  001766                     
  4764                           ;LIB18F_SPI.c: 40:     return SSPBUF;
  4765  001766  50C9               	movf	201,w,c	;volatile
  4766  001768  0012               	return		;funcret
  4767  00176A  FFFF               	dw	65535	; errata NOP
  4768  00176C                     __end_of_TransferByte_SPI:
  4769                           	callstack 0
  4770                           
  4771                           	psect	rparam
  4772  0000                     
  4773                           	psect	temp
  4774  00005E                     btemp:
  4775                           	callstack 0
  4776  00005E                     	ds	1
  4777  0000                     int$flags	set	btemp
  4778  0000                     wtemp8	set	btemp+1
  4779  0000                     ttemp5	set	btemp+1
  4780  0000                     ttemp6	set	btemp+4
  4781  0000                     ttemp7	set	btemp+8
  4782                           
  4783                           	psect	idloc
  4784                           
  4785                           ;Config register IDLOC0 @ 0x200000
  4786                           ;	unspecified, using default values
  4787  200000                     	org	2097152
  4788  200000  FF                 	db	255
  4789                           
  4790                           ;Config register IDLOC1 @ 0x200001
  4791                           ;	unspecified, using default values
  4792  200001                     	org	2097153
  4793  200001  FF                 	db	255
  4794                           
  4795                           ;Config register IDLOC2 @ 0x200002
  4796                           ;	unspecified, using default values
  4797  200002                     	org	2097154
  4798  200002  FF                 	db	255
  4799                           
  4800                           ;Config register IDLOC3 @ 0x200003
  4801                           ;	unspecified, using default values
  4802  200003                     	org	2097155
  4803  200003  FF                 	db	255
  4804                           
  4805                           ;Config register IDLOC4 @ 0x200004
  4806                           ;	unspecified, using default values
  4807  200004                     	org	2097156
  4808  200004  FF                 	db	255
  4809                           
  4810                           ;Config register IDLOC5 @ 0x200005
  4811                           ;	unspecified, using default values
  4812  200005                     	org	2097157
  4813  200005  FF                 	db	255
  4814                           
  4815                           ;Config register IDLOC6 @ 0x200006
  4816                           ;	unspecified, using default values
  4817  200006                     	org	2097158
  4818  200006  FF                 	db	255
  4819                           
  4820                           ;Config register IDLOC7 @ 0x200007
  4821                           ;	unspecified, using default values
  4822  200007                     	org	2097159
  4823  200007  FF                 	db	255
  4824                           
  4825                           	psect	config
  4826                           
  4827                           ; Padding undefined space
  4828  300000                     	org	3145728
  4829  300000  FF                 	db	255
  4830                           
  4831                           ;Config register CONFIG1H @ 0x300001
  4832                           ;	Oscillator Selection bits
  4833                           ;	OSC = HSPLL, HS oscillator with PLL enabled/Clock frequency = (4 x FOSC)
  4834                           ;	Oscillator System Clock Switch Enable bit
  4835                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4836  300001                     	org	3145729
  4837  300001  26                 	db	38
  4838                           
  4839                           ;Config register CONFIG2L @ 0x300002
  4840                           ;	Power-up Timer Enable bit
  4841                           ;	PWRT = ON, PWRT enabled
  4842                           ;	Brown-out Reset Enable bit
  4843                           ;	BOR = ON, Brown-out Reset enabled
  4844                           ;	Brown-out Reset Voltage bits
  4845                           ;	BORV = 25, VBOR set to 2.5V
  4846  300002                     	org	3145730
  4847  300002  0E                 	db	14
  4848                           
  4849                           ;Config register CONFIG2H @ 0x300003
  4850                           ;	Watchdog Timer Enable bit
  4851                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4852                           ;	Watchdog Timer Postscale Select bits
  4853                           ;	WDTPS = 128, 1:128
  4854  300003                     	org	3145731
  4855  300003  0E                 	db	14
  4856                           
  4857                           ;Config register CONFIG4L @ 0x300006
  4858                           ;	Stack Full/Underflow Reset Enable bit
  4859                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  4860                           ;	Low-Voltage ICSP Enable bit
  4861                           ;	LVP = OFF, Low-Voltage ICSP disabled
  4862                           ;	Background Debugger Enable bit
  4863                           ;	DEBUG = 0x1, unprogrammed default
  4864  300006                     	org	3145734
  4865  300006  80                 	db	128
  4866                           
  4867                           ; Padding undefined space
  4868  300007                     	org	3145735
  4869  300007  FF                 	db	255
  4870                           
  4871                           ;Config register CONFIG5L @ 0x300008
  4872                           ;	Code Protection bit
  4873                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4874                           ;	Code Protection bit
  4875                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4876                           ;	Code Protection bit
  4877                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4878                           ;	Code Protection bit
  4879                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4880  300008                     	org	3145736
  4881  300008  0F                 	db	15
  4882                           
  4883                           ;Config register CONFIG5H @ 0x300009
  4884                           ;	Boot Block Code Protection bit
  4885                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4886                           ;	Data EEPROM Code Protection bit
  4887                           ;	CPD = OFF, Data EEPROM not code protected
  4888  300009                     	org	3145737
  4889  300009  C0                 	db	192
  4890                           
  4891                           ;Config register CONFIG6L @ 0x30000A
  4892                           ;	Write Protection bit
  4893                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4894                           ;	Write Protection bit
  4895                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4896                           ;	Write Protection bit
  4897                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4898                           ;	Write Protection bit
  4899                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4900  30000A                     	org	3145738
  4901  30000A  0F                 	db	15
  4902                           
  4903                           ;Config register CONFIG6H @ 0x30000B
  4904                           ;	Configuration Register Write Protection bit
  4905                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4906                           ;	Boot Block Write Protection bit
  4907                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4908                           ;	Data EEPROM Write Protection bit
  4909                           ;	WRTD = OFF, Data EEPROM not write protected
  4910  30000B                     	org	3145739
  4911  30000B  E0                 	db	224
  4912                           
  4913                           ;Config register CONFIG7L @ 0x30000C
  4914                           ;	Table Read Protection bit
  4915                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4916                           ;	Table Read Protection bit
  4917                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4918                           ;	Table Read Protection bit
  4919                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4920                           ;	Table Read Protection bit
  4921                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4922  30000C                     	org	3145740
  4923  30000C  0F                 	db	15
  4924                           
  4925                           ;Config register CONFIG7H @ 0x30000D
  4926                           ;	Boot Block Table Read Protection bit
  4927                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4928  30000D                     	org	3145741
  4929  30000D  40                 	db	64
  4930                           tosu	equ	0xFFF
  4931                           tosh	equ	0xFFE
  4932                           tosl	equ	0xFFD
  4933                           stkptr	equ	0xFFC
  4934                           pclatu	equ	0xFFB
  4935                           pclath	equ	0xFFA
  4936                           pcl	equ	0xFF9
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           indf0	equ	0xFEF
  4944                           postinc0	equ	0xFEE
  4945                           postdec0	equ	0xFED
  4946                           preinc0	equ	0xFEC
  4947                           plusw0	equ	0xFEB
  4948                           fsr0h	equ	0xFEA
  4949                           fsr0l	equ	0xFE9
  4950                           wreg	equ	0xFE8
  4951                           indf1	equ	0xFE7
  4952                           postinc1	equ	0xFE6
  4953                           postdec1	equ	0xFE5
  4954                           preinc1	equ	0xFE4
  4955                           plusw1	equ	0xFE3
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           bsr	equ	0xFE0
  4959                           indf2	equ	0xFDF
  4960                           postinc2	equ	0xFDE
  4961                           postdec2	equ	0xFDD
  4962                           preinc2	equ	0xFDC
  4963                           plusw2	equ	0xFDB
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    0
    Data        13
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      93
    BANK0           160      0      34
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    print_string@str	PTR unsigned char  size(2) Largest target is 24
		 -> STR_9(CODE[3]), STR_8(CODE[11]), STR_7(CODE[3]), STR_6(CODE[11]), 
		 -> STR_5(CODE[4]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[8]), 
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrups in COMRAM

    _Interrups->___aodiv
    _print_value->_WriteByte_USART
    _WriteRegister_2bytesAD7177->_TransferByte_SPI
    _TransmitDAT_USART->_print_string
    _TransmitCMD_USART->_print_string
    _print_string->_WriteByte_USART
    _ResetAD7177->_TransferByte_SPI
    _ReceiveCMD_USART->_ReadByte_USART
    _ReadRegister_2bytesAD7177->_TransferByte_SPI
    _ReadRegister_1bytesAD7177->_TransferByte_SPI
    _ReadADC32->_TransferByte_SPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrups in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrups in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrups in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrups in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrups in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrups in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _ClosePort_SPI
                    _CloseSerialPort
                     _ConfigPort_SPI
                   _ConfigSerialPort
                       _OpenPort_SPI
                     _OpenSerialPort
 ---------------------------------------------------------------------------------
 (1) _OpenSerialPort                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenPort_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigSerialPort                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPort_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseSerialPort                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClosePort_SPI                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrups                                           18    18      0    6555
                                             26 COMRAM    18    18      0
                          _ReadADC32
          _ReadRegister_1bytesAD7177
          _ReadRegister_2bytesAD7177
                   _ReceiveCMD_USART
                        _ResetAD7177
                     _SelectChannelC
                     _SelectChannelS
                     _SelectChannelX
                     _SelectChannelY
                     _SelectChannelZ
                  _TransmitCMD_USART
                  _TransmitDAT_USART
                    _WriteByte_USART
         _WriteRegister_2bytesAD7177
                            ___aodiv
                       _print_string
                        _print_value
 ---------------------------------------------------------------------------------
 (3) _print_value                                         19    15      4    1127
                                              1 COMRAM    19    15      4
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (3) ___aodiv                                             26    10     16    1820
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _WriteRegister_2bytesAD7177                           0     0      0      23
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _TransmitDAT_USART                                    2     2      0     863
                                              3 COMRAM     2     2      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _TransmitCMD_USART                                    1     1      0     795
                                              3 COMRAM     1     1      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_string                                         2     0      2     751
                                              1 COMRAM     2     0      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (4) _WriteByte_USART                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelZ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelY                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelX                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ResetAD7177                                          2     2      0      69
                                              1 COMRAM     2     2      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _ReceiveCMD_USART                                     2     2      0     235
                                              3 COMRAM     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByte_USART                                       3     3      0      71
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ReadRegister_2bytesAD7177                            1     1      0      45
                                              1 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _ReadRegister_1bytesAD7177                            1     1      0      45
                                              1 COMRAM     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _ReadADC32                                           20    16      4     277
                                              1 COMRAM    20    16      4
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (4) _TransferByte_SPI                                     2     2      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClosePort_SPI
   _CloseSerialPort
   _ConfigPort_SPI
   _ConfigSerialPort
   _OpenPort_SPI
   _OpenSerialPort

 _Interrups (ROOT)
   _ReadADC32
     _TransferByte_SPI
   _ReadRegister_1bytesAD7177
     _TransferByte_SPI
   _ReadRegister_2bytesAD7177
     _TransferByte_SPI
   _ReceiveCMD_USART
     _ReadByte_USART
   _ResetAD7177
     _TransferByte_SPI
   _SelectChannelC
   _SelectChannelS
   _SelectChannelX
   _SelectChannelY
   _SelectChannelZ
   _TransmitCMD_USART
     _WriteByte_USART
     _print_string
       _WriteByte_USART
   _TransmitDAT_USART
     _WriteByte_USART
     _print_string
   _WriteByte_USART
   _WriteRegister_2bytesAD7177
     _TransferByte_SPI
   ___aodiv
   _print_string
   _print_value
     _WriteByte_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      22       5       21.2%
BITBIGSFRlll        82      0       0      27        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      5D       1       98.9%
BITBIGSFRhhl        1A      0       0      17        0.0%
BITBIGSFRhlhlh      11      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhll         C      0       0      23        0.0%
BITBIGSFRlhhh        8      0       0      24        0.0%
BITBIGSFRllh         6      0       0      26        0.0%
BITBIGSFRlhhl        6      0       0      25        0.0%
BITBIGSFRhlhhh       4      0       0      18        0.0%
BITBIGSFRhlhhll      4      0       0      21        0.0%
BITBIGSFRhlhhlh      3      0       0      19        0.0%
BITBIGSFRhlhhlh      1      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      28        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Oct 19 14:48:01 2022

                                                        ?_OpenSerialPort 0032  
                                              _ReadRegister_2bytesAD7177 178E  
                                                            _SSPSTATbits 000FC7  
                                                                    l260 1876  
                                                                    l165 15F8  
                                                                    l166 15FA  
                                                                    l263 1886  
                                                                    l193 1800  
                                                                    l257 17CA  
                                                                    l196 187E  
                                                                    l199 188E  
                                                                    _PR2 000FCB  
                                                TransmitDAT_USART@DAT_ID 0035  
                                                                    wreg 000FE8  
                                                 TransmitDAT_USART@conta 0036  
                                                                   l2601 17B2  
                                                                   l2603 17B6  
                                                                   l2611 1874  
                                                                   l2613 1882  
                                                                   l2605 17C2  
                                                                   l2621 15D0  
                                                                   l2615 188A  
                                                                   l2607 17C8  
                                                                   l2631 15EA  
                                                                   l2623 15D2  
                                                                   l2633 15EE  
                                                                   l2625 15DC  
                                                                   l2617 15AC  
                                                                   l2635 15F0  
                                                                   l2627 15DE  
                                                                   l2619 15CE  
                                                                   l2637 15F4  
                                                                   l2629 15E6  
                                                                   l2591 17EC  
                                                                   l2639 15F6  
                                                                   l2593 17F2  
                                                                   l2595 17F6  
                                                                   l2599 187C  
                                                                   STR_1 1023  
                                                                   STR_2 1051  
                                                                   STR_3 1059  
                                                                   STR_4 1051  
                                                                   STR_5 1059  
                                                                   STR_6 103B  
                                                                   STR_7 105A  
                                                                   STR_8 1046  
                                                                   STR_9 105A  
                                                                   _LATA 000F89  
                                                                   _LATB 000F8A  
                                                                   _LATC 000F8B  
                                                                   _TMR2 000FCC  
                                                         ReadADC32@byte0 0042  
                                                         ReadADC32@byte1 0041  
                                                         ReadADC32@byte2 0040  
                                                         ReadADC32@byte3 003F  
                                                                   _main 15AC  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   indf2 000FDF  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                __end_of_CloseSerialPort 188A  
                                                                   btemp 005E  
                                                                   start 101E  
                                                           ___param_bank 000000  
                                                        __end_of___aodiv 1212  
                                                                  ?_main 0032  
                                                                  _T0CON 000FD5  
                                                                  _T2CON 000FCA  
                                                                  i2l121 0924  
                                                                  i2l202 1752  
                                                                  i2l210 171E  
                                                                  i2l204 1766  
                                                                  i2l205 1768  
                                                                  i2l213 181A  
                                                                  i2l133 020C  
                                                                  i2l222 17E6  
                                                                  i2l216 17AC  
                                                                  i2l160 0FF6  
                                                                  i2l209 1708  
                                                                  i2l314 1744  
                                                                  i2l171 1214  
                                                                  i2l333 1844  
                                                                  i2l174 1332  
                                                                  i2l342 1860  
                                                                  i2l326 1442  
                                                                  i2l158 0FEE  
                                                                  i2l319 1652  
                                                                  i2l159 0FF2  
                                                                  i2l272 1558  
                                                                  i2l336 1836  
                                                                  i2l280 1776  
                                                                  i2l345 1852  
                                                                  i2l266 1588  
                                                                  i2l339 1828  
                                                                  i2l283 178A  
                                                                  i2l276 159E  
                                                                  i2l268 1534  
                                                                  i2l277 15A8  
                                                                  i2l295 1516  
                                                                  i2l289 16DE  
                                                                  i2l474 120E  
                                                                  i2l299 151C  
                                                                  _RCREG 000FAE  
                                                                  _RCSTA 000FAB  
                                                                  _TMR0H 000FD7  
                                                                  _TMR0L 000FD6  
                                                                  _SPBRG 000FAF  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TXREG 000FAD  
                                                                  _TXSTA 000FAC  
                                                                  tablat 000FF5  
                                                                  plusw1 000FE3  
                                                                  plusw2 000FDB  
                                                                  ttemp5 005F  
                                                                  ttemp6 0062  
                                                                  ttemp7 0066  
                                                                  status 000FD8  
                                                                  wtemp8 005F  
                                     __end_of_WriteRegister_2bytesAD7177 17EA  
                                             _WriteRegister_2bytesAD7177 17CE  
                                                        __initialization 1656  
                                                           __end_of_main 1602  
                                                             _ModeSample 0030  
                                                          ??_ResetAD7177 0033  
                                                       ReadADC32@DataADC 003B  
                                                                 ??_main 0000  
                                                          __activetblptr 000002  
                                                         _ReadByte_USART 1522  
                                                                 i2l2001 1312  
                                                                 i2l2003 1322  
                                                                 i2l2011 1858  
                                                                 i2l2013 184A  
                                                                 i2l2021 1392  
                                                                 i2l2101 0076  
                                                                 i2l2007 182E  
                                                                 i2l2031 1410  
                                                                 i2l2023 13D6  
                                                                 i2l2015 1338  
                                                                 i2l2111 0098  
                                                                 i2l2103 007A  
                                                                 i2l2009 1820  
                                                                 i2l2041 142C  
                                                                 i2l2033 1414  
                                                                 i2l2025 13DA  
                                                                 i2l2017 134A  
                                                                 i2l2201 01D8  
                                                                 i2l2121 00BA  
                                                                 i2l2113 009C  
                                                                 i2l2105 007E  
                                                                 i2l2051 1096  
                                                                 i2l2043 142E  
                                                                 i2l2027 13FC  
                                                                 i2l2019 138E  
                                                                 i2l2211 0210  
                                                                 i2l2203 01DE  
                                                                 i2l2131 00DC  
                                                                 i2l2123 00BE  
                                                                 i2l2115 00A0  
                                                                 i2l2107 0082  
                                                                 i2l2061 10E0  
                                                                 i2l2053 109A  
                                                                 i2l2045 1060  
                                                                 i2l2029 1400  
                                                                 i2l2301 0496  
                                                                 i2l2221 0230  
                                                                 i2l2213 021C  
                                                                 i2l2205 01E8  
                                                                 i2l2141 00FE  
                                                                 i2l2133 00E0  
                                                                 i2l2125 00C2  
                                                                 i2l2117 00A4  
                                                                 i2l2109 0094  
                                                                 i2l2071 1148  
                                                                 i2l2063 1102  
                                                                 i2l2055 10AE  
                                                                 i2l2047 1064  
                                                                 i2l2039 1418  
                                                                 i2l2311 04C4  
                                                                 i2l2303 04AA  
                                                                 i2l2231 026C  
                                                                 i2l2223 023C  
                                                                 i2l2215 021E  
                                                                 i2l2207 01F4  
                                                                 i2l2151 0120  
                                                                 i2l2143 010A  
                                                                 i2l2135 00E4  
                                                                 i2l2127 00C6  
                                                                 i2l2119 00B6  
                                                                 i2l2073 117A  
                                                                 i2l2065 110A  
                                                                 i2l2081 11B6  
                                                                 i2l2057 10CE  
                                                                 i2l2049 1076  
                                                                 i2l2401 0A2C  
                                                                 i2l2321 0544  
                                                                 i2l2313 0518  
                                                                 i2l2241 0292  
                                                                 i2l2233 0278  
                                                                 i2l2225 0248  
                                                                 i2l2217 0220  
                                                                 i2l2209 0200  
                                                                 i2l2161 014E  
                                                                 i2l2153 0130  
                                                                 i2l2145 0112  
                                                                 i2l2137 00E8  
                                                                 i2l2129 00D8  
                                                                 i2l2083 11CC  
                                                                 i2l2075 119A  
                                                                 i2l2067 1120  
                                                                 i2l2059 10D2  
                                                                 i2l2403 0A40  
                                                                 i2l2331 0572  
                                                                 i2l2323 0558  
                                                                 i2l2315 051A  
                                                                 i2l2251 02C0  
                                                                 i2l2243 02A6  
                                                                 i2l2235 027A  
                                                                 i2l2227 0254  
                                                                 i2l2219 022A  
                                                                 i2l2171 0172  
                                                                 i2l2163 0154  
                                                                 i2l2155 0136  
                                                                 i2l2147 0118  
                                                                 i2l2139 00F2  
                                                                 i2l2091 003E  
                                                                 i2l2085 11EC  
                                                                 i2l2077 119C  
                                                                 i2l2069 1134  
                                                                 i2l2501 0FBA  
                                                                 i2l2421 0AD8  
                                                                 i2l2405 0A44  
                                                                 i2l2341 082C  
                                                                 i2l2333 05C6  
                                                                 i2l2317 052E  
                                                                 i2l2309 04AE  
                                                                 i2l2261 033E  
                                                                 i2l2253 0312  
                                                                 i2l2237 027C  
                                                                 i2l2229 0260  
                                                                 i2l2181 0194  
                                                                 i2l2173 0176  
                                                                 i2l2165 0158  
                                                                 i2l2157 013A  
                                                                 i2l2149 011C  
                                                                 i2l2093 0050  
                                                                 i2l2079 11B0  
                                                                 i2l2503 0FBC  
                                                                 i2l2423 0AEC  
                                                                 i2l2415 0A6E  
                                                                 i2l2407 0A56  
                                                                 i2l2351 0882  
                                                                 i2l2343 0832  
                                                                 i2l2335 05C8  
                                                                 i2l2319 0532  
                                                                 i2l2271 036C  
                                                                 i2l2263 0352  
                                                                 i2l2255 0314  
                                                                 i2l2239 0280  
                                                                 i2l2191 01B6  
                                                                 i2l2183 0198  
                                                                 i2l2175 017A  
                                                                 i2l2167 015C  
                                                                 i2l2159 013E  
                                                                 i2l2095 005A  
                                                                 i2l2505 0FD0  
                                                                 i2l2441 0B84  
                                                                 i2l2425 0AF0  
                                                                 i2l2417 0A84  
                                                                 i2l2409 0A6A  
                                                                 i2l2353 0896  
                                                                 i2l2345 0846  
                                                                 i2l2337 05DC  
                                                                 i2l2329 055C  
                                                                 i2l2281 03EA  
                                                                 i2l2273 03BE  
                                                                 i2l2257 0328  
                                                                 i2l2249 02AA  
                                                                 i2l2193 01BA  
                                                                 i2l2185 01A8  
                                                                 i2l2177 018A  
                                                                 i2l2169 016C  
                                                                 i2l2097 0060  
                                                                 i2l2361 08B6  
                                                                 i2l2089 002C  
                                                                 i2l2507 0FD2  
                                                                 i2l2443 0B98  
                                                                 i2l2435 0B1A  
                                                                 i2l2427 0B02  
                                                                 i2l2419 0AD6  
                                                                 i2l2371 0956  
                                                                 i2l2363 0938  
                                                                 i2l2355 08A2  
                                                                 i2l2347 085A  
                                                                 i2l2339 0820  
                                                                 i2l2291 0418  
                                                                 i2l2283 03FE  
                                                                 i2l2275 03C0  
                                                                 i2l2259 032C  
                                                                 i2l2195 01BE  
                                                                 i2l2187 01AE  
                                                                 i2l2179 0190  
                                                                 i2l2099 0072  
                                                                 i2l1901 14EE  
                                                                 i2l2509 0FE6  
                                                                 i2l2461 0C32  
                                                                 i2l2445 0B9C  
                                                                 i2l2437 0B30  
                                                                 i2l2429 0B16  
                                                                 i2l2381 0992  
                                                                 i2l2373 0962  
                                                                 i2l2365 094A  
                                                                 i2l2357 08A8  
                                                                 i2l2349 086E  
                                                                 i2l2293 046A  
                                                                 i2l2277 03D4  
                                                                 i2l2269 0356  
                                                                 i2l2197 01C2  
                                                                 i2l2189 01B2  
                                                                 i2l1903 150E  
                                                                 i2l1911 16E4  
                                                                 i2l2463 0C46  
                                                                 i2l2455 0BC6  
                                                                 i2l2447 0BAE  
                                                                 i2l2439 0B82  
                                                                 i2l2383 0994  
                                                                 i2l2375 096E  
                                                                 i2l2367 094C  
                                                                 i2l2359 08B0  
                                                                 i2l2295 046C  
                                                                 i2l2279 03D8  
                                                                 i2l2199 01CC  
                                                                 i2l1921 16F2  
                                                                 i2l1913 16E6  
                                                                 i2l1841 16A2  
                                                                 i2l2481 0CE0  
                                                                 i2l2465 0C4A  
                                                                 i2l2457 0BDC  
                                                                 i2l2449 0BC2  
                                                                 i2l2385 0998  
                                                                 i2l2377 097A  
                                                                 i2l2369 0954  
                                                                 i2l2297 0480  
                                                                 i2l2289 0402  
                                                                 i2l1851 1524  
                                                                 i2l1907 151A  
                                                                 i2l1923 16F4  
                                                                 i2l1835 1770  
                                                                 i2l1843 16B6  
                                                                 i2l1931 17D2  
                                                                 i2l2491 0F5E  
                                                                 i2l2483 0CF4  
                                                                 i2l2475 0C74  
                                                                 i2l2467 0C5C  
                                                                 i2l2459 0C30  
                                                                 i2l2395 09C2  
                                                                 i2l2387 09AA  
                                                                 i2l2379 0986  
                                                                 i2l2299 0484  
                                                                 i2l1861 155E  
                                                                 i2l1853 1528  
                                                                 i2l1925 170A  
                                                                 i2l1837 1774  
                                                                 i2l1845 16BA  
                                                                 i2l1941 1738  
                                                                 i2l1933 17E4  
                                                                 i2l2493 0F72  
                                                                 i2l2485 0F38  
                                                                 i2l2477 0C8A  
                                                                 i2l2469 0C70  
                                                                 i2l2397 09D8  
                                                                 i2l2389 09BE  
                                                                 i2l1847 174C  
                                                                 i2l1863 1570  
                                                                 i2l1855 152E  
                                                                 i2l1871 1448  
                                                                 i2l1919 16EA  
                                                                 i2l1839 169E  
                                                                 i2l2495 0F86  
                                                                 i2l2487 0F44  
                                                                 i2l2479 0CDE  
                                                                 i2l2399 0A2A  
                                                                 i2l1849 174E  
                                                                 i2l1953 1808  
                                                                 i2l1945 1792  
                                                                 i2l1865 1582  
                                                                 i2l1857 1548  
                                                                 i2l1937 1726  
                                                                 i2l1961 1606  
                                                                 i2l1929 17D0  
                                                                 i2l2497 0F9A  
                                                                 i2l2489 0F4A  
                                                                 i2l2665 08CC  
                                                                 i2l1955 180A  
                                                                 i2l1947 1794  
                                                                 i2l1867 15A6  
                                                                 i2l1859 155C  
                                                                 i2l1891 14A0  
                                                                 i2l1883 146E  
                                                                 i2l1939 1732  
                                                                 i2l1971 161C  
                                                                 i2l1963 1612  
                                                                 i2l2499 0FAE  
                                                                 i2l1957 1818  
                                                                 i2l1949 17AA  
                                                                 i2l1893 14B6  
                                                                 i2l1885 1472  
                                                                 i2l1877 144C  
                                                                 i2l1981 183C  
                                                                 i2l1973 1630  
                                                                 i2l1965 1618  
                                                                 i2l1991 125E  
                                                                 i2l1983 1214  
                                                                 i2l1895 14BC  
                                                                 i2l1887 1484  
                                                                 i2l1879 1454  
                                                                 i2l1975 1632  
                                                                 i2l1993 128A  
                                                                 i2l1985 1228  
                                                                 i2l1897 14D2  
                                                                 i2l1889 149A  
                                                                 i2l1977 1646  
                                                                 i2l1995 12B8  
                                                                 i2l1987 124E  
                                                                 i2l1899 14D8  
                                                                 i2l1997 12E8  
                                                                 i2l1989 124E  
                                                                 i2l1999 12FA  
                                                                 _INTCON 000FF2  
                                                                 _SSPBUF 000FC9  
                                                       ?_CloseSerialPort 0032  
                                                                 _Data_X 0029  
                                                                 _Data_Y 0025  
                                                                 _Data_Z 0021  
                                                       print_value@F5258 0070  
                                               __end_of_ReceiveCMD_USART 1522  
                                               __end_of_ConfigSerialPort 17CE  
                                                            _ContaSample 0031  
                                                              ??___aodiv 0042  
                                                       print_value@Bytes 003C  
                                                       print_value@conta 0041  
                                                                 clear_0 167C  
                                                                 clear_1 1688  
                                                             _SumData_TC 0068  
                                                             _SumData_TS 0060  
                                                       print_value@value 0033  
                                                                 isa$std 000001  
                                                       _TransferByte_SPI 1748  
                                                            Interrups@ID 005C  
                                                 __end_of_ReadByte_USART 15AC  
                                                           __mediumconst 0000  
                                                    __end_of_ResetAD7177 1722  
                                                                 tblptrh 000FF7  
                                                                 tblptrl 000FF6  
                                                                 tblptru 000FF8  
                                       ReadRegister_2bytesAD7177@command 0033  
                                                       ??_SelectChannelC 0032  
                                                       ??_SelectChannelS 0032  
                                                       ??_SelectChannelX 0032  
                                                       ??_SelectChannelY 0032  
                                                       ??_SelectChannelZ 0032  
                                                             __accesstop 0060  
                                                __end_of__initialization 168E  
                                                           ?_print_value 0033  
                                                          ?_OpenPort_SPI 0032  
                                                          ___rparam_used 000001  
                                                       ??_OpenSerialPort 0000  
                                                  __end_of_ClosePort_SPI 1892  
                                                         __pcstackCOMRAM 0032  
                                                           __pidataBANK0 1864  
                                                      __end_of_ReadADC32 1336  
                                                        ?_ReadByte_USART 0032  
                                                      __end_of_Interrups 101E  
                                                             __pbssBANK0 0060  
                                                         ??_OpenPort_SPI 0000  
                                           ??_WriteRegister_2bytesAD7177 0033  
                                                            _ResetAD7177 16E2  
                                                                i2u70_40 1468  
                                                                i2u62_40 1788  
                                                                i2u70_41 1462  
                                                                i2u62_41 1782  
                                                                i2u71_40 1484  
                                                                i2u63_40 16DC  
                                                                i2u71_41 147E  
                                                                i2u63_41 16D6  
                                                                i2u64_40 1764  
                                                                i2u72_40 1498  
                                                                i2u64_41 175E  
                                                                i2u72_41 1492  
                                                                i2u80_45 135E  
                                                                i2u80_46 136A  
                                                                i2u80_47 137C  
                                                                i2u65_40 1546  
                                                                i2u73_40 14B4  
                                                                i2u65_41 1540  
                                                                i2u73_41 14AE  
                                                                i2u81_45 13A6  
                                                                i2u81_46 13B2  
                                                                i2u81_47 13C4  
                                                                i2u66_40 1558  
                                                                i2u74_40 14D0  
                                                                i2u82_40 1440  
                                                                i2u90_40 003C  
                                                                i2u66_41 1552  
                                                                i2u74_41 14CA  
                                                                i2u82_41 143A  
                                                                i2u90_41 0036  
                                                                i2u67_40 156E  
                                                                i2u75_40 14EC  
                                                                i2u83_40 1074  
                                                                i2u91_40 004E  
                                                                i2u67_41 1568  
                                                                i2u75_41 14E6  
                                                                i2u83_41 106E  
                                                                i2u91_41 0048  
                                                                i2u68_40 1582  
                                                                i2u76_40 1706  
                                                                i2u84_40 10AC  
                                                                i2u68_41 157C  
                                                                i2u76_41 1700  
                                                                i2u84_41 10A6  
                                                                i2u92_41 0242  
                                                                i2u69_40 159C  
                                                                i2u77_40 1644  
                                                                i2u69_41 1596  
                                                                i2u77_41 163E  
                                                                i2u85_41 10DA  
                                                                i2u93_41 024E  
                                                                i2u78_40 1226  
                                                                i2u86_40 1100  
                                                                i2u78_41 1220  
                                                                i2u86_41 10FA  
                                                                i2u94_41 025A  
                                                                i2u87_40 1132  
                                                                i2u87_41 112C  
                                                                i2u79_41 1342  
                                                                i2u95_41 0266  
                                                                i2u88_40 1178  
                                                                i2u88_41 1172  
                                                                i2u96_41 0272  
                                                                i2u89_40 11CA  
                                                                i2u97_40 0326  
                                                                i2u89_41 11C4  
                                                                i2u97_41 0320  
                                                                i2u98_40 03D2  
                                                                i2u98_41 03CC  
                                                                i2u99_40 047E  
                                                                i2u99_41 0478  
                                                                _SSPSTAT 000FC7  
                                                      ReadADC32@data_ini 0043  
                                                                _Data_TC 001D  
                                                                _Data_TS 0019  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                                ___aodiv 105E  
                                                           __psmallconst 1022  
                                                                __pcinit 1656  
                                                                __ramtop 0600  
                                                                __ptext0 15AC  
                                                                __ptext1 1872  
                                                                __ptext2 187A  
                                                                __ptext3 17B0  
                                                                __ptext4 17EA  
                                                                __ptext5 1882  
                                                                __ptext6 188A  
                                                                __ptext8 1336  
                                                                __ptext9 105E  
                                                              _T2CONbits 000FCA  
                                                   end_of_initialization 168E  
                                                    WriteByte_USART@byte 0032  
                                               __end_of_TransferByte_SPI 176C  
                                                          __Lmediumconst 0000  
                                                      ?_ReceiveCMD_USART 0032  
                                                      ?_ConfigSerialPort 0032  
                                                     ??_ReceiveCMD_USART 0035  
                                                              _RCSTAbits 000FAB  
                                                                postdec1 000FE5  
                                                                postinc0 000FEE  
                                                                postinc2 000FDE  
                                                     ??_ConfigSerialPort 0000  
                                                      ??_WriteByte_USART 0032  
                                                              _PORTCbits 000F82  
                                                   __end_of_OpenPort_SPI 1882  
                                                         _ConfigPort_SPI 17EA  
                                                              _TRISBbits 000F93  
                                                              _TRISCbits 000F94  
                                                          ?_print_string 0033  
                                                       ResetAD7177@conta 0034  
                                                   TransferByte_SPI@data 0032  
                                                              _TXSTAbits 000FAC  
                                                              _BufferDAT 0075  
                                                       ??_ReadByte_USART 0032  
                                                              _BufferSPI 002D  
                                                 __end_of_ConfigPort_SPI 1804  
                                                              _ReadADC32 1212  
                                                    start_initialization 1656  
                                       ReadRegister_1bytesAD7177@command 0033  
                                                         ??_print_string 0035  
                                                TransmitCMD_USART@CMD_ID 0035  
                                                              _Interrups 0008  
                                             ReceiveCMD_USART@conta_byte 0035  
                                                      _TransmitDAT_USART 1602  
                                                              _SumData_X 0011  
                                                              _SumData_Y 0009  
                                                              _SumData_Z 0001  
                                             ?_ReadRegister_1bytesAD7177 0032  
                                                      _TransmitCMD_USART 1722  
                                                            __pdataBANK0 0075  
                                                     ?_TransmitDAT_USART 0032  
                                                           ?_ResetAD7177 0032  
                                                     ?_TransmitCMD_USART 0032  
                                                        ?_ConfigPort_SPI 0032  
                                                             ?_ReadADC32 0033  
                                                            __pbssCOMRAM 0001  
                                                    ??_TransmitDAT_USART 0035  
                                                          __pcstackBANK0 0000  
                                                       ___aodiv@dividend 0032  
                                                    ??_TransmitCMD_USART 0035  
                                             ?_ReadRegister_2bytesAD7177 0032  
                                                             ?_Interrups 0032  
                                              __end_of_TransmitDAT_USART 1656  
                                              __end_of_TransmitCMD_USART 1748  
                                                              __pintcode 0008  
                                                        print_string@str 0033  
                                                               ?___aodiv 0032  
                                                       ___aodiv@quotient 0044  
                                      __end_of_ReadRegister_1bytesAD7177 181E  
                                                            __smallconst 1022  
                                                      ??_CloseSerialPort 0000  
                                      __end_of_ReadRegister_2bytesAD7177 17B0  
                                                               _LATAbits 000F89  
                                                               _LATCbits 000F8B  
                                                      ?_TransferByte_SPI 0032  
                                                        _WriteByte_USART 176C  
                                                           _OpenPort_SPI 187A  
                                                               _PIE1bits 000F9D  
                                                               i2u100_40 052C  
                                                               i2u100_41 0526  
                                                     ??_TransferByte_SPI 0032  
                                                               i2u101_40 05DA  
                                                               i2u101_41 05D4  
                                                               i2u110_40 0AEA  
                                                               i2u102_40 0936  
                                                               i2u110_41 0AE4  
                                                               i2u102_41 0930  
                                                               i2u111_40 0B96  
                                                               i2u103_40 0948  
                                                               i2u111_41 0B90  
                                                               i2u103_41 0942  
                                                               i2u112_40 0C44  
                                                               i2u112_41 0C3E  
                                                               i2u104_41 095C  
                                                               i2u113_40 0CF2  
                                                               i2u113_41 0CEC  
                                                               i2u105_41 0968  
                                                               i2u114_40 0FCE  
                                                               i2u114_41 0FC8  
                                                               i2u106_41 0974  
                                                               i2u130_47 0180  
                                                               i2u115_40 0FE4  
                                                               i2u115_41 0FDE  
                                                               i2u107_41 0980  
                                                               i2u131_47 019E  
                                                               i2u123_47 0066  
                                                               i2u108_41 098C  
                                                               i2u140_47 0BA2  
                                                               i2u132_47 0286  
                                                               i2u124_47 0088  
                                                               i2u109_40 0A3E  
                                                               i2u109_41 0A38  
                                                               i2u141_47 0C50  
                                                               i2u133_47 0332  
                                                               i2u125_47 00AA  
                                                               i2u142_47 1710  
                                                               i2u134_47 03DE  
                                                               i2u126_47 00CC  
                                                               i2u135_47 048A  
                                                               i2u127_47 0126  
                                                               i2u136_47 0538  
                                                               i2u128_47 0144  
                                                               i2u137_47 099E  
                                                               i2u129_47 0162  
                                                               i2u138_47 0A4A  
                                                               i2u139_47 0AF6  
                                                               _PIR1bits 000F9E  
                                                               _RCONbits 000FD0  
                                                          _ClosePort_SPI 188A  
                                                   __end_of_print_string 16E2  
                                                             _ADCON1bits 000FC1  
                                                            ??_ReadADC32 0037  
                                              ReceiveCMD_USART@data_byte 0036  
                                                              copy_data0 166A  
                                                         Interrups@conta 005D  
                                                            ??_Interrups 004C  
                                                          ??_print_value 0037  
                                                               __Hrparam 0000  
                                                               __Lrparam 0000  
                                            ?_WriteRegister_2bytesAD7177 0032  
                                                         ?_ClosePort_SPI 0032  
                                                        ___aodiv@divisor 003A  
                                                        ___aodiv@counter 0042  
                                                     print_value@RegTemp 0042  
                                                               __ptext10 17CE  
                                                               __ptext11 1602  
                                                               __ptext20 16E2  
                                                               __ptext12 1722  
                                                               __ptext21 1446  
                                                               __ptext13 169C  
                                                               __ptext22 1522  
                                                               __ptext14 176C  
                                                               __ptext23 178E  
                                                               __ptext15 181E  
                                                               __ptext24 1804  
                                                               __ptext16 182C  
                                                               __ptext25 1212  
                                                               __ptext17 183A  
                                                               __ptext26 1748  
                                                               __ptext18 1848  
                                                               __ptext19 1856  
                                                __end_of_WriteByte_USART 178E  
                                                         _SelectChannelC 1856  
                                                         _SelectChannelS 1848  
                                                         _SelectChannelX 183A  
                                                         _SelectChannelY 182C  
                                                         _SelectChannelZ 181E  
                                                    __end_of_print_value 1446  
                                                               isa$xinst 000000  
                                                       ??_ConfigPort_SPI 0000  
                                                               int$flags 005E  
                                            ??_ReadRegister_1bytesAD7177 0033  
                                                         _OpenSerialPort 1872  
                                                             _INTCONbits 000FF2  
                                            ??_ReadRegister_2bytesAD7177 0033  
                                                               intlevel2 1892  
                                                 __end_of_SelectChannelC 1864  
                                                 __end_of_SelectChannelS 1856  
                                                 __end_of_SelectChannelX 1848  
                                                 __end_of_SelectChannelY 183A  
                                                 __end_of_SelectChannelZ 182C  
                                                    ReadByte_USART@Ready 0034  
                                                        ??_ClosePort_SPI 0000  
                                                    ReadByte_USART@conta 0033  
                                                        _CloseSerialPort 1882  
                                                 __end_of_OpenSerialPort 187A  
                                                       _ReceiveCMD_USART 1446  
                                                       _ConfigSerialPort 17B0  
                                                     ReadByte_USART@data 0032  
                                                            _SSPCON1bits 000FC6  
                                              _ReadRegister_1bytesAD7177 1804  
                                                           _print_string 169C  
                                                       ?_WriteByte_USART 0032  
                                                           ___aodiv@sign 0043  
                                                            _print_value 1336  
                                                        ?_SelectChannelC 0032  
                                                        ?_SelectChannelS 0032  
                                                        ?_SelectChannelX 0032  
                                                        ?_SelectChannelY 0032  
                                                        ?_SelectChannelZ 0032  
