

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jul 04 17:31:06 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16LF876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	psect	text4_split_1,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16LF876A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  010C                     	;# 
   347  010D                     	;# 
   348  010E                     	;# 
   349  010F                     	;# 
   350  018C                     	;# 
   351  018D                     	;# 
   352  0019                     _TXREG	set	25
   353  001A                     _RCREG	set	26
   354  0012                     _T2CONbits	set	18
   355  0011                     _TMR2	set	17
   356  0012                     _T2CON	set	18
   357  0018                     _RCSTA	set	24
   358  0006                     _PORTBbits	set	6
   359  0007                     _PORTCbits	set	7
   360  0007                     _PORTC	set	7
   361  0005                     _PORTA	set	5
   362  0018                     _RCSTAbits	set	24
   363  0006                     _PORTB	set	6
   364  0005                     _PORTAbits	set	5
   365  000C                     _PIR1bits	set	12
   366  0010                     _T1CON	set	16
   367  000E                     _TMR1L	set	14
   368  000F                     _TMR1H	set	15
   369  000B                     _INTCONbits	set	11
   370  0092                     _PR2	set	146
   371  0099                     _SPBRG	set	153
   372  0098                     _TXSTA	set	152
   373  0087                     _TRISCbits	set	135
   374  0086                     _TRISBbits	set	134
   375  0087                     _TRISC	set	135
   376  0086                     _TRISB	set	134
   377  0085                     _TRISA	set	133
   378  009F                     _ADCON1	set	159
   379  0081                     _OPTION_REGbits	set	129
   380  008C                     _PIE1bits	set	140
   381                           
   382                           	psect	strings
   383  0800                     __pstrings:
   384  0800                     stringtab:
   385  0800                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388  0800  1BFF               	btfsc	btemp+1,7
   389  0801  280A               	ljmp	stringcode
   390  0802  1383               	bcf	3,7
   391  0803  187F               	btfsc	btemp+1,0
   392  0804  1783               	bsf	3,7
   393  0805  0800               	movf	0,w
   394  0806  0A84               	incf	4,f
   395  0807  1903               	skipnz
   396  0808  0AFF               	incf	btemp+1,f
   397  0809  0008               	return
   398  080A                     stringcode:
   399  080A                     stringdir:
   400  080A  3008               	movlw	high stringdir
   401  080B  008A               	movwf	10
   402  080C  0804               	movf	4,w
   403  080D  0A84               	incf	4,f
   404  080E  0782               	addwf	2,f
   405  080F                     __stringbase:
   406  080F  3400               	retlw	0
   407  0810                     __end_of__stringtab:
   408  0810                     STR_5:
   409  0810  3447               	retlw	71	;'G'
   410  0811  342D               	retlw	45	;'-'
   411  0812  344A               	retlw	74	;'J'
   412  0813  3452               	retlw	82	;'R'
   413  0814  344F               	retlw	79	;'O'
   414  0815  3444               	retlw	68	;'D'
   415  0816  3441               	retlw	65	;'A'
   416  0817  3454               	retlw	84	;'T'
   417  0818  3445               	retlw	69	;'E'
   418  0819  3458               	retlw	88	;'X'
   419  081A  3458               	retlw	88	;'X'
   420  081B  3458               	retlw	88	;'X'
   421  081C  3458               	retlw	88	;'X'
   422  081D  3458               	retlw	88	;'X'
   423  081E  3458               	retlw	88	;'X'
   424  081F  3458               	retlw	88	;'X'
   425  0820  3458               	retlw	88	;'X'
   426  0821  3458               	retlw	88	;'X'
   427  0822  3458               	retlw	88	;'X'
   428  0823  3458               	retlw	88	;'X'
   429  0824  3458               	retlw	88	;'X'
   430  0825  340A               	retlw	10
   431  0826  340D               	retlw	13
   432  0827  3400               	retlw	0
   433  0828                     STR_10:
   434  0828  344E               	retlw	78	;'N'
   435  0829  344E               	retlw	78	;'N'
   436  082A  344E               	retlw	78	;'N'
   437  082B  344E               	retlw	78	;'N'
   438  082C  344A               	retlw	74	;'J'
   439  082D  3452               	retlw	82	;'R'
   440  082E  344F               	retlw	79	;'O'
   441  082F  3443               	retlw	67	;'C'
   442  0830  344D               	retlw	77	;'M'
   443  0831  3444               	retlw	68	;'D'
   444  0832  3400               	retlw	0
   445  0833                     STR_12:
   446  0833  344E               	retlw	78	;'N'
   447  0834  344E               	retlw	78	;'N'
   448  0835  344E               	retlw	78	;'N'
   449  0836  344E               	retlw	78	;'N'
   450  0837  344A               	retlw	74	;'J'
   451  0838  3452               	retlw	82	;'R'
   452  0839  344F               	retlw	79	;'O'
   453  083A  3444               	retlw	68	;'D'
   454  083B  3441               	retlw	65	;'A'
   455  083C  3454               	retlw	84	;'T'
   456  083D  3400               	retlw	0
   457  083E                     STR_1:
   458  083E  3447               	retlw	71	;'G'
   459  083F  342D               	retlw	45	;'-'
   460  0840  344A               	retlw	74	;'J'
   461  0841  3452               	retlw	82	;'R'
   462  0842  344F               	retlw	79	;'O'
   463  0843  3444               	retlw	68	;'D'
   464  0844  3441               	retlw	65	;'A'
   465  0845  3454               	retlw	84	;'T'
   466  0846  3445               	retlw	69	;'E'
   467  0847  3400               	retlw	0
   468  0848                     STR_3:
   469  0848  344A               	retlw	74	;'J'
   470  0849  3452               	retlw	82	;'R'
   471  084A  344F               	retlw	79	;'O'
   472  084B  3441               	retlw	65	;'A'
   473  084C  3444               	retlw	68	;'D'
   474  084D  3451               	retlw	81	;'Q'
   475  084E  3400               	retlw	0
   476  0825                     
   477                           	psect	cinit
   478  0015                     start_initialization:	
   479                           ; #config settings
   480                           
   481  0015                     __initialization:
   482                           
   483                           ; Clear objects allocated to COMMON
   484  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   485  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   486  0017  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK0
   489  0018  1383               	bcf	3,7	;select IRP bank0
   490  0019  3020               	movlw	low __pbssBANK0
   491  001A  0084               	movwf	4
   492  001B  304E               	movlw	low (__pbssBANK0+46)
   493  001C  120A  158A  2195  120A  118A  	fcall	clear_ram0
   494  0021                     end_of_initialization:	
   495                           ;End of C runtime variable initialization code
   496                           
   497  0021                     __end_of__initialization:
   498  0021  0183               	clrf	3
   499  0022  120A  158A  2A5B   	ljmp	_main	;jump to C main() function
   500                           
   501                           	psect	bssCOMMON
   502  007B                     __pbssCOMMON:
   503  007B                     _ContaSample:
   504  007B                     	ds	1
   505  007C                     _ControlSample:
   506  007C                     	ds	1
   507  007D                     _RxBuffer:
   508  007D                     	ds	1
   509                           
   510                           	psect	bssBANK0
   511  0020                     __pbssBANK0:
   512  0020                     _SumData_TS:
   513  0020                     	ds	4
   514  0024                     _SumData_TC:
   515  0024                     	ds	4
   516  0028                     _SumData_Z:
   517  0028                     	ds	4
   518  002C                     _SumData_Y:
   519  002C                     	ds	4
   520  0030                     _SumData_X:
   521  0030                     	ds	4
   522  0034                     _Data_G:
   523  0034                     	ds	2
   524  0036                     _Data_TS:
   525  0036                     	ds	2
   526  0038                     _Data_TC:
   527  0038                     	ds	2
   528  003A                     _Data_Z:
   529  003A                     	ds	2
   530  003C                     _Data_Y:
   531  003C                     	ds	2
   532  003E                     _Data_X:
   533  003E                     	ds	2
   534  0040                     _CmdGPS:
   535  0040                     	ds	1
   536  0041                     _BufferDAT:
   537  0041                     	ds	13
   538                           
   539                           	psect	clrtext
   540  0995                     clear_ram0:	
   541                           ;	Called with FSR containing the base address, and
   542                           ;	W with the last address+1
   543                           
   544  0995  0064               	clrwdt	;clear the watchdog before getting into this loop
   545  0996                     clrloop0:
   546  0996  0180               	clrf	0	;clear RAM location pointed to by FSR
   547  0997  0A84               	incf	4,f	;increment pointer
   548  0998  0604               	xorwf	4,w	;XOR with final address
   549  0999  1903               	btfsc	3,2	;have we reached the end yet?
   550  099A  3400               	retlw	0	;all done for this memory range, return
   551  099B  0604               	xorwf	4,w	;XOR again to restore value
   552  099C  2996               	goto	clrloop0	;do the next byte
   553                           
   554                           	psect	cstackBANK1
   555  00A0                     __pcstackBANK1:
   556  00A0                     ??_ConfigPort_USART:
   557  00A0                     ??_OpenPort_USART:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  00A0                     ??_ClosePort_USART:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  00A0                     ??_main:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 1 bytes @ 0x0
   568  00A0                     	ds	3
   569                           
   570                           	psect	cstackCOMMON
   571  0070                     __pcstackCOMMON:
   572  0070                     ?_GPS_TIMEDATE:
   573  0070                     ?_WriteByte_USART:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ??_WriteByte_USART:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_GPS_LATITUDE:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_TransmitDAT_USART:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_GPS_LONGITUDE:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_GPS_STATUS:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_ReceiveCMD_USART:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ??_ReceiveCMD_USART:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_TransmitCMD_USART:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_ConfigPort_USART:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_OpenPort_USART:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_ClosePort_USART:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Interrups:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_main:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_ReadByteSW_USART:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_ReadByteSW_USART:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_ReadByte_USART:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_ReadByte_USART:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_ReadDataADC:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?___aldiv:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0070                     WriteByte_USART@byte:	
   634                           ; 4 bytes @ 0x0
   635                           
   636  0070                     ___aldiv@divisor:	
   637                           ; 1 bytes @ 0x0
   638                           
   639                           
   640                           ; 4 bytes @ 0x0
   641  0070                     	ds	1
   642  0071                     ?_print_string:
   643  0071                     ?_print_value:	
   644                           ; 1 bytes @ 0x1
   645                           
   646  0071                     ReadByteSW_USART@conta:	
   647                           ; 1 bytes @ 0x1
   648                           
   649  0071                     ReceiveCMD_USART@conta_byte:	
   650                           ; 1 bytes @ 0x1
   651                           
   652  0071                     print_string@str:	
   653                           ; 1 bytes @ 0x1
   654                           
   655  0071                     print_value@value:	
   656                           ; 2 bytes @ 0x1
   657                           
   658                           
   659                           ; 2 bytes @ 0x1
   660  0071                     	ds	1
   661  0072                     ??_GPS_TIMEDATE:
   662  0072                     ??_ReadDataADC:	
   663                           ; 1 bytes @ 0x2
   664                           
   665  0072                     ??_GPS_LATITUDE:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ??_GPS_LONGITUDE:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ??_GPS_STATUS:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ReceiveCMD_USART@data_byte:	
   675                           ; 1 bytes @ 0x2
   676                           
   677                           
   678                           ; 1 bytes @ 0x2
   679  0072                     	ds	1
   680  0073                     ??_print_string:
   681  0073                     ??_print_value:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ??_TransmitDAT_USART:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     ??_TransmitCMD_USART:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     GPS_LATITUDE@LimitConta:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     GPS_LONGITUDE@LimitConta:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     GPS_TIMEDATE@LimitConta:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     TransmitCMD_USART@CMD_ID:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ReadDataADC@i:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     GPS_STATUS@LimitConta:	
   706                           ; 1 bytes @ 0x3
   707                           
   708                           
   709                           ; 2 bytes @ 0x3
   710  0073                     	ds	1
   711  0074                     GPS_LATITUDE@conta:
   712  0074                     GPS_LONGITUDE@conta:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     GPS_TIMEDATE@conta:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     TransmitDAT_USART@DAT_ID:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     print_value@Bytes:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0074                     ReadDataADC@DataADC:	
   725                           ; 2 bytes @ 0x4
   726                           
   727  0074                     ___aldiv@dividend:	
   728                           ; 2 bytes @ 0x4
   729                           
   730                           
   731                           ; 4 bytes @ 0x4
   732  0074                     	ds	1
   733  0075                     GPS_STATUS@conta:
   734  0075                     TransmitDAT_USART@conta:	
   735                           ; 1 bytes @ 0x5
   736                           
   737                           
   738                           ; 1 bytes @ 0x5
   739  0075                     	ds	3
   740  0078                     ??___aldiv:
   741                           
   742                           ; 1 bytes @ 0x8
   743  0078                     	ds	1
   744  0079                     Interrups@ID:
   745                           
   746                           ; 1 bytes @ 0x9
   747  0079                     	ds	1
   748  007A                     Interrups@conta:
   749                           
   750                           ; 1 bytes @ 0xA
   751  007A                     	ds	1
   752                           
   753                           	psect	cstackBANK0
   754  004E                     __pcstackBANK0:
   755  004E                     ___aldiv@counter:
   756                           
   757                           ; 1 bytes @ 0x0
   758  004E                     	ds	1
   759  004F                     ___aldiv@sign:
   760                           
   761                           ; 1 bytes @ 0x1
   762  004F                     	ds	1
   763  0050                     ___aldiv@quotient:
   764                           
   765                           ; 4 bytes @ 0x2
   766  0050                     	ds	4
   767  0054                     ??_Interrups:
   768                           
   769                           ; 1 bytes @ 0x6
   770  0054                     	ds	12
   771                           
   772                           	psect	maintext
   773  0A5B                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 389 in file "Digitizer16bits.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  conta           1    0        unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : B00/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       0       3       0       0
   796 ;;      Totals:         0       0       3       0       0
   797 ;;Total ram usage:        3 bytes
   798 ;; Hardware stack levels required when called: 5
   799 ;; This function calls:
   800 ;;		_ClosePort_USART
   801 ;;		_ConfigPort_USART
   802 ;;		_OpenPort_USART
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808  0A5B                     _main:	
   809                           ;psect for function _main
   810                           
   811  0A5B                     l3069:	
   812                           ;incstack = 0
   813                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;Digitizer16bits.c: 390:     unsigned char conta;;Digitizer16bits.c: 393:     ADCON1 = 0
      +                          x06;
   817  0A5B  3006               	movlw	6
   818  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
   819  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
   820  0A5E  009F               	movwf	31	;volatile
   821  0A5F                     l3071:
   822                           
   823                           ;Digitizer16bits.c: 394:     PORTA = 0;
   824  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
   825  0A60  1303               	bcf	3,6	;RP1=0, select bank0
   826  0A61  0185               	clrf	5	;volatile
   827  0A62                     l3073:
   828                           
   829                           ;Digitizer16bits.c: 395:     PORTB = 0;
   830  0A62  0186               	clrf	6	;volatile
   831  0A63                     l3075:
   832                           
   833                           ;Digitizer16bits.c: 396:     PORTC = 0;
   834  0A63  0187               	clrf	7	;volatile
   835  0A64                     l3077:
   836                           
   837                           ;Digitizer16bits.c: 397:     TRISA = 0;
   838  0A64  1683               	bsf	3,5	;RP0=1, select bank1
   839  0A65  1303               	bcf	3,6	;RP1=0, select bank1
   840  0A66  0185               	clrf	5	;volatile
   841  0A67                     l3079:
   842                           
   843                           ;Digitizer16bits.c: 398:     TRISB = 0;
   844  0A67  0186               	clrf	6	;volatile
   845  0A68                     l3081:
   846                           
   847                           ;Digitizer16bits.c: 399:     TRISC = 0;
   848  0A68  0187               	clrf	7	;volatile
   849  0A69                     l3083:
   850                           
   851                           ;Digitizer16bits.c: 400:     PORTCbits.RC6 = 1;
   852  0A69  1283               	bcf	3,5	;RP0=0, select bank0
   853  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
   854  0A6B  1707               	bsf	7,6	;volatile
   855  0A6C                     l3085:
   856                           
   857                           ;Digitizer16bits.c: 401:     TRISBbits.TRISB0 = 1;
   858  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
   859  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
   860  0A6E  1406               	bsf	6,0	;volatile
   861  0A6F                     l3087:
   862                           
   863                           ;Digitizer16bits.c: 402:     TRISBbits.TRISB4 = 1;
   864  0A6F  1606               	bsf	6,4	;volatile
   865  0A70                     l3089:
   866                           
   867                           ;Digitizer16bits.c: 403:     TRISCbits.TRISC3 = 1;
   868  0A70  1587               	bsf	7,3	;volatile
   869  0A71                     l3091:
   870                           
   871                           ;Digitizer16bits.c: 404:     TRISCbits.TRISC5 = 1;
   872  0A71  1687               	bsf	7,5	;volatile
   873  0A72                     l3093:
   874                           
   875                           ;Digitizer16bits.c: 406:     PORTBbits.RB5 = 1;
   876  0A72  1283               	bcf	3,5	;RP0=0, select bank0
   877  0A73  1303               	bcf	3,6	;RP1=0, select bank0
   878  0A74  1686               	bsf	6,5	;volatile
   879  0A75                     l3095:
   880                           
   881                           ;Digitizer16bits.c: 407:     PORTAbits.RA1 = 1;
   882  0A75  1485               	bsf	5,1	;volatile
   883  0A76                     l3097:
   884                           
   885                           ;Digitizer16bits.c: 408:     PORTAbits.RA2 = 0;
   886  0A76  1105               	bcf	5,2	;volatile
   887                           
   888                           ;Digitizer16bits.c: 409:     _delay((unsigned long)((100)*(9830400UL/4000.0)));
   889  0A77  3002               	movlw	2
   890  0A78  1683               	bsf	3,5	;RP0=1, select bank1
   891  0A79  1303               	bcf	3,6	;RP1=0, select bank1
   892  0A7A  00A2               	movwf	(??_main^(0+128)+2)
   893  0A7B  3040               	movlw	64
   894  0A7C  00A1               	movwf	(??_main^(0+128)+1)
   895  0A7D  3027               	movlw	39
   896  0A7E  00A0               	movwf	??_main^(0+128)
   897  0A7F                     u1937:
   898  0A7F  0BA0               	decfsz	??_main^(0+128),f
   899  0A80  2A7F               	goto	u1937
   900  0A81  0BA1               	decfsz	(??_main^(0+128)+1),f
   901  0A82  2A7F               	goto	u1937
   902  0A83  0BA2               	decfsz	(??_main^(0+128)+2),f
   903  0A84  2A7F               	goto	u1937
   904  0A85                     l3099:
   905                           
   906                           ;Digitizer16bits.c: 412:     ConfigPort_USART();
   907  0A85  120A  158A  21E9  120A  158A  	fcall	_ConfigPort_USART
   908                           
   909                           ;Digitizer16bits.c: 413:     OpenPort_USART();
   910  0A8A  120A  158A  2191  120A  158A  	fcall	_OpenPort_USART
   911  0A8F                     l3101:
   912                           
   913                           ;Digitizer16bits.c: 416:     INTCONbits.PEIE = 1;
   914  0A8F  170B               	bsf	11,6	;volatile
   915  0A90                     l3103:
   916                           
   917                           ;Digitizer16bits.c: 417:     INTCONbits.GIE = 1;
   918  0A90  178B               	bsf	11,7	;volatile
   919  0A91                     l3105:
   920                           
   921                           ;Digitizer16bits.c: 420:     PORTAbits.RA0 = 0;
   922  0A91  1283               	bcf	3,5	;RP0=0, select bank0
   923  0A92  1303               	bcf	3,6	;RP1=0, select bank0
   924  0A93  1005               	bcf	5,0	;volatile
   925  0A94                     l174:	
   926                           ;Digitizer16bits.c: 422:     while(1);
   927                           
   928  0A94                     l175:
   929  0A94  2A94               	goto	l174
   930  0A95  120A  118A  2812   	ljmp	start
   931  0A98                     __end_of_main:
   932                           
   933                           	psect	text1
   934  0991                     __ptext1:	
   935 ;; *************** function _OpenPort_USART *****************
   936 ;; Defined at:
   937 ;;		line 23 in file "LIB16F_USART.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		None
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0
   954 ;;      Totals:         0       0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 4
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965  0991                     _OpenPort_USART:	
   966                           ;psect for function _OpenPort_USART
   967                           
   968  0991                     l3065:	
   969                           ;incstack = 0
   970                           ; Regs used in _OpenPort_USART: []
   971                           
   972                           
   973                           ;LIB16F_USART.c: 25:     RCSTAbits.SPEN = 1;
   974  0991  1283               	bcf	3,5	;RP0=0, select bank0
   975  0992  1303               	bcf	3,6	;RP1=0, select bank0
   976  0993  1798               	bsf	24,7	;volatile
   977  0994                     l354:	
   978                           ;LIB16F_USART.c: 26:     return;
   979                           
   980  0994  0008               	return
   981  0995                     __end_of_OpenPort_USART:
   982                           
   983                           	psect	text2
   984  09E9                     __ptext2:	
   985 ;; *************** function _ConfigPort_USART *****************
   986 ;; Defined at:
   987 ;;		line 6 in file "LIB16F_USART.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 4
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015  09E9                     _ConfigPort_USART:	
  1016                           ;psect for function _ConfigPort_USART
  1017                           
  1018  09E9                     l3055:	
  1019                           ;incstack = 0
  1020                           ; Regs used in _ConfigPort_USART: [wreg]
  1021                           
  1022                           
  1023                           ;LIB16F_USART.c: 8:     TRISCbits.TRISC6 = 0;
  1024  09E9  1683               	bsf	3,5	;RP0=1, select bank1
  1025  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  1026  09EB  1307               	bcf	7,6	;volatile
  1027                           
  1028                           ;LIB16F_USART.c: 9:     TRISCbits.TRISC7 = 1;
  1029  09EC  1787               	bsf	7,7	;volatile
  1030  09ED                     l3057:
  1031                           
  1032                           ;LIB16F_USART.c: 11:     TXSTA = 0x24;
  1033  09ED  3024               	movlw	36
  1034  09EE  0098               	movwf	24	;volatile
  1035                           
  1036                           ;LIB16F_USART.c: 12:     RCSTA = 0x10;
  1037  09EF  3010               	movlw	16
  1038  09F0  1283               	bcf	3,5	;RP0=0, select bank0
  1039  09F1  1303               	bcf	3,6	;RP1=0, select bank0
  1040  09F2  0098               	movwf	24	;volatile
  1041                           
  1042                           ;LIB16F_USART.c: 13:     SPBRG = 0x0F;
  1043  09F3  300F               	movlw	15
  1044  09F4  1683               	bsf	3,5	;RP0=1, select bank1
  1045  09F5  1303               	bcf	3,6	;RP1=0, select bank1
  1046  09F6  0099               	movwf	25	;volatile
  1047                           
  1048                           ;LIB16F_USART.c: 15:     T2CON = 0x7A;
  1049  09F7  307A               	movlw	122
  1050  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  1051  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  1052  09FA  0092               	movwf	18	;volatile
  1053                           
  1054                           ;LIB16F_USART.c: 16:     PR2 = 0xFF;
  1055  09FB  30FF               	movlw	255
  1056  09FC  1683               	bsf	3,5	;RP0=1, select bank1
  1057  09FD  1303               	bcf	3,6	;RP1=0, select bank1
  1058  09FE  0092               	movwf	18	;volatile
  1059  09FF                     l3059:
  1060                           
  1061                           ;LIB16F_USART.c: 17:     PIR1bits.TMR2IF = 0;
  1062  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0A01  108C               	bcf	12,1	;volatile
  1065  0A02                     l3061:
  1066                           
  1067                           ;LIB16F_USART.c: 19:     PIE1bits.RCIE = 1;
  1068  0A02  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0A03  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0A04  168C               	bsf	12,5	;volatile
  1071  0A05                     l351:
  1072  0A05  0008               	return
  1073  0A06                     __end_of_ConfigPort_USART:
  1074                           
  1075                           	psect	text3
  1076  098D                     __ptext3:	
  1077 ;; *************** function _ClosePort_USART *****************
  1078 ;; Defined at:
  1079 ;;		line 29 in file "LIB16F_USART.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		None
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 4
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107  098D                     _ClosePort_USART:	
  1108                           ;psect for function _ClosePort_USART
  1109                           
  1110  098D                     l3067:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _ClosePort_USART: []
  1113                           
  1114                           
  1115                           ;LIB16F_USART.c: 31:     RCSTAbits.SPEN = 0;
  1116  098D  1283               	bcf	3,5	;RP0=0, select bank0
  1117  098E  1303               	bcf	3,6	;RP1=0, select bank0
  1118  098F  1398               	bcf	24,7	;volatile
  1119  0990                     l357:	
  1120                           ;LIB16F_USART.c: 32:     return;
  1121                           
  1122  0990  0008               	return
  1123  0991                     __end_of_ClosePort_USART:
  1124                           
  1125                           	psect	text4
  1126  0CF5                     __ptext4:	
  1127 ;; *************** function _Interrups *****************
  1128 ;; Defined at:
  1129 ;;		line 10 in file "Digitizer16bits.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  conta           1   10[COMMON] unsigned char 
  1134 ;;  ID              1    9[COMMON] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0
  1146 ;;      Temps:          0      12       0       0       0
  1147 ;;      Totals:         2      12       0       0       0
  1148 ;;Total ram usage:       14 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 3
  1151 ;; This function calls:
  1152 ;;		_GPS_LATITUDE
  1153 ;;		_GPS_LONGITUDE
  1154 ;;		_GPS_STATUS
  1155 ;;		_GPS_TIMEDATE
  1156 ;;		_ReadDataADC
  1157 ;;		_ReceiveCMD_USART
  1158 ;;		_TransmitCMD_USART
  1159 ;;		_TransmitDAT_USART
  1160 ;;		_WriteByte_USART
  1161 ;;		___aldiv
  1162 ;;		_print_string
  1163 ;;		_print_value
  1164 ;; This function is called by:
  1165 ;;		Interrupt level 1
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169  0CF5                     _Interrups:	
  1170                           ;psect for function _Interrups
  1171                           
  1172  0CF5                     i1l2459:
  1173                           
  1174                           ;Digitizer16bits.c: 11:     unsigned char ID, conta;;Digitizer16bits.c: 13:     if((INTC
      +                          ONbits.INTF == 1) && (INTCONbits.INTE == 1)){
  1175  0CF5  1C8B               	btfss	11,1	;volatile
  1176  0CF6  2CF8               	goto	u153_21
  1177  0CF7  2CFB               	goto	u153_20
  1178  0CF8                     u153_21:
  1179  0CF8  120A  118A  286E   	goto	i1l109
  1180  0CFB                     u153_20:
  1181  0CFB                     i1l2461:
  1182  0CFB  1E0B               	btfss	11,4	;volatile
  1183  0CFC  2CFE               	goto	u154_21
  1184  0CFD  2CFF               	goto	u154_20
  1185  0CFE                     u154_21:
  1186  0CFE  2CF8               	goto	u153_21
  1187  0CFF                     u154_20:
  1188  0CFF                     i1l2463:
  1189                           
  1190                           ;Digitizer16bits.c: 15:         INTCONbits.INTF = 0;
  1191  0CFF  108B               	bcf	11,1	;volatile
  1192                           
  1193                           ;Digitizer16bits.c: 16:         INTCONbits.INTE = 0;
  1194  0D00  120B               	bcf	11,4	;volatile
  1195                           
  1196                           ;Digitizer16bits.c: 18:         switch(CmdGPS){
  1197  0D01  120A  118A  2858   	goto	i1l2613
  1198  0D04                     i1l2465:
  1199                           
  1200                           ;Digitizer16bits.c: 20:                 if(ControlSample == 1){
  1201  0D04  037C               	decf	_ControlSample,w
  1202  0D05  1D03               	btfss	3,2
  1203  0D06  2D08               	goto	u155_21
  1204  0D07  2D0B               	goto	u155_20
  1205  0D08                     u155_21:
  1206  0D08  120A  118A  2F05   	goto	i1l169
  1207  0D0B                     u155_20:
  1208  0D0B                     i1l2467:
  1209                           
  1210                           ;Digitizer16bits.c: 23:                     TMR1H = 0x10;
  1211  0D0B  3010               	movlw	16
  1212  0D0C  008F               	movwf	15	;volatile
  1213                           
  1214                           ;Digitizer16bits.c: 24:                     TMR1L = 0x06;
  1215  0D0D  3006               	movlw	6
  1216  0D0E  008E               	movwf	14	;volatile
  1217                           
  1218                           ;Digitizer16bits.c: 25:                     T1CON = 0x31;
  1219  0D0F  3031               	movlw	49
  1220  0D10  0090               	movwf	16	;volatile
  1221  0D11                     i1l2469:
  1222                           
  1223                           ;Digitizer16bits.c: 26:                     PIR1bits.TMR1IF = 0;
  1224  0D11  100C               	bcf	12,0	;volatile
  1225  0D12                     i1l2471:
  1226                           
  1227                           ;Digitizer16bits.c: 27:                     PIE1bits.TMR1IE = 1;
  1228  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0D13  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0D14  140C               	bsf	12,0	;volatile
  1231  0D15                     i1l2473:
  1232                           
  1233                           ;Digitizer16bits.c: 30:                     ContaSample = 0;
  1234  0D15  01FB               	clrf	_ContaSample
  1235  0D16                     i1l2475:
  1236                           
  1237                           ;Digitizer16bits.c: 33:                     GPS_TIMEDATE();
  1238  0D16  120A  158A  238E  120A  158A  	fcall	_GPS_TIMEDATE
  1239  0D1B                     i1l2477:
  1240                           
  1241                           ;Digitizer16bits.c: 35:                     print_string("G-JRODATE");
  1242  0D1B  302F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1243  0D1C  00F1               	movwf	print_string@str
  1244  0D1D  3080               	movlw	128
  1245  0D1E  00F2               	movwf	print_string@str+1
  1246  0D1F  120A  158A  2206  120A  158A  	fcall	_print_string
  1247  0D24                     i1l2479:
  1248                           
  1249                           ;Digitizer16bits.c: 36:                     print_string(BufferDAT);
  1250  0D24  3041               	movlw	(low (_BufferDAT| 0))& (0+255)
  1251  0D25  00F1               	movwf	print_string@str
  1252  0D26  3000               	movlw	0
  1253  0D27  00F2               	movwf	print_string@str+1
  1254  0D28  120A  158A  2206  120A  158A  	fcall	_print_string
  1255  0D2D                     i1l2481:
  1256                           
  1257                           ;Digitizer16bits.c: 37:                     print_string("\n\r");
  1258  0D2D  3016               	movlw	(low (((STR_5+21)-__stringbase)| (0+32768)))& (0+255)
  1259  0D2E  00F1               	movwf	print_string@str
  1260  0D2F  3080               	movlw	128
  1261  0D30  00F2               	movwf	print_string@str+1
  1262  0D31  120A  158A  2206  120A  158A  	fcall	_print_string
  1263  0D36                     i1l2483:
  1264                           
  1265                           ;Digitizer16bits.c: 39:                     PORTAbits.RA0 = 1;
  1266  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0D38  1405               	bsf	5,0	;volatile
  1269  0D39                     i1l2485:
  1270                           
  1271                           ;Digitizer16bits.c: 42:                     PORTB = 0x2E;
  1272  0D39  302E               	movlw	46
  1273  0D3A  0086               	movwf	6	;volatile
  1274  0D3B                     i1l2487:
  1275                           
  1276                           ;Digitizer16bits.c: 43:                     _delay((unsigned long)((5)*(9830400UL/4000.0
      +                          )));
  1277  0D3B  3010               	movlw	16
  1278  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0D3E  00D5               	movwf	??_Interrups+1
  1281  0D3F  30F3               	movlw	243
  1282  0D40  00D4               	movwf	??_Interrups
  1283  0D41                     u194_27:
  1284  0D41  0BD4               	decfsz	??_Interrups,f
  1285  0D42  2D41               	goto	u194_27
  1286  0D43  0BD5               	decfsz	??_Interrups+1,f
  1287  0D44  2D41               	goto	u194_27
  1288  0D45  2D46               	nop2
  1289  0D46                     i1l2489:
  1290                           
  1291                           ;Digitizer16bits.c: 45:                     SumData_X = 0;
  1292  0D46  3000               	movlw	0
  1293  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0D49  00B3               	movwf	_SumData_X+3
  1296  0D4A  3000               	movlw	0
  1297  0D4B  00B2               	movwf	_SumData_X+2
  1298  0D4C  3000               	movlw	0
  1299  0D4D  00B1               	movwf	_SumData_X+1
  1300  0D4E  3000               	movlw	0
  1301  0D4F  00B0               	movwf	_SumData_X
  1302  0D50                     i1l2491:
  1303                           
  1304                           ;Digitizer16bits.c: 46:                     Data_X = ReadDataADC();
  1305  0D50  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1306  0D55  0871               	movf	?_ReadDataADC+1,w
  1307  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0D58  00BF               	movwf	_Data_X+1
  1310  0D59  0870               	movf	?_ReadDataADC,w
  1311  0D5A  00BE               	movwf	_Data_X
  1312  0D5B                     i1l2493:
  1313                           
  1314                           ;Digitizer16bits.c: 47:                     for(conta = 0; conta<5; conta++){
  1315  0D5B  01FA               	clrf	Interrups@conta
  1316  0D5C                     i1l2499:
  1317                           
  1318                           ;Digitizer16bits.c: 48:                         Data_X = ReadDataADC();
  1319  0D5C  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1320  0D61  0871               	movf	?_ReadDataADC+1,w
  1321  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0D64  00BF               	movwf	_Data_X+1
  1324  0D65  0870               	movf	?_ReadDataADC,w
  1325  0D66  00BE               	movwf	_Data_X
  1326  0D67                     i1l2501:
  1327                           
  1328                           ;Digitizer16bits.c: 49:                         SumData_X = SumData_X + Data_X;
  1329  0D67  0830               	movf	_SumData_X,w
  1330  0D68  00D4               	movwf	??_Interrups
  1331  0D69  0831               	movf	_SumData_X+1,w
  1332  0D6A  00D5               	movwf	??_Interrups+1
  1333  0D6B  0832               	movf	_SumData_X+2,w
  1334  0D6C  00D6               	movwf	??_Interrups+2
  1335  0D6D  0833               	movf	_SumData_X+3,w
  1336  0D6E  00D7               	movwf	??_Interrups+3
  1337  0D6F  083E               	movf	_Data_X,w
  1338  0D70  00D8               	movwf	??_Interrups+4
  1339  0D71  083F               	movf	_Data_X+1,w
  1340  0D72  00D9               	movwf	??_Interrups+5
  1341  0D73  3000               	movlw	0
  1342  0D74  1BD9               	btfsc	??_Interrups+5,7
  1343  0D75  30FF               	movlw	255
  1344  0D76  00DA               	movwf	??_Interrups+6
  1345  0D77  00DB               	movwf	??_Interrups+7
  1346  0D78  0858               	movf	??_Interrups+4,w
  1347  0D79  07D4               	addwf	??_Interrups,f
  1348  0D7A  0859               	movf	??_Interrups+5,w
  1349  0D7B  1803               	skipnc
  1350  0D7C  0F59               	incfsz	??_Interrups+5,w
  1351  0D7D  2D7F               	goto	u156_20
  1352  0D7E  2D80               	goto	u156_21
  1353  0D7F                     u156_20:
  1354  0D7F  07D5               	addwf	??_Interrups+1,f
  1355  0D80                     u156_21:
  1356  0D80  085A               	movf	??_Interrups+6,w
  1357  0D81  1803               	skipnc
  1358  0D82  0F5A               	incfsz	??_Interrups+6,w
  1359  0D83  2D85               	goto	u156_22
  1360  0D84  2D86               	goto	u156_23
  1361  0D85                     u156_22:
  1362  0D85  07D6               	addwf	??_Interrups+2,f
  1363  0D86                     u156_23:
  1364  0D86  085B               	movf	??_Interrups+7,w
  1365  0D87  1803               	skipnc
  1366  0D88  0A5B               	incf	??_Interrups+7,w
  1367  0D89  07D7               	addwf	??_Interrups+3,f
  1368  0D8A  0857               	movf	??_Interrups+3,w
  1369  0D8B  00B3               	movwf	_SumData_X+3
  1370  0D8C  0856               	movf	??_Interrups+2,w
  1371  0D8D  00B2               	movwf	_SumData_X+2
  1372  0D8E  0855               	movf	??_Interrups+1,w
  1373  0D8F  00B1               	movwf	_SumData_X+1
  1374  0D90  0854               	movf	??_Interrups,w
  1375  0D91  00B0               	movwf	_SumData_X
  1376  0D92                     i1l2503:
  1377                           
  1378                           ;Digitizer16bits.c: 50:                     }
  1379  0D92  3001               	movlw	1
  1380  0D93  00D4               	movwf	??_Interrups
  1381  0D94  0854               	movf	??_Interrups,w
  1382  0D95  07FA               	addwf	Interrups@conta,f
  1383  0D96                     i1l2505:
  1384  0D96  3005               	movlw	5
  1385  0D97  027A               	subwf	Interrups@conta,w
  1386  0D98  1C03               	skipc
  1387  0D99  2D9B               	goto	u157_21
  1388  0D9A  2D9C               	goto	u157_20
  1389  0D9B                     u157_21:
  1390  0D9B  2D5C               	goto	i1l2499
  1391  0D9C                     u157_20:
  1392  0D9C                     i1l2507:
  1393                           
  1394                           ;Digitizer16bits.c: 52:                     PORTB = 0x2A;
  1395  0D9C  302A               	movlw	42
  1396  0D9D  0086               	movwf	6	;volatile
  1397                           
  1398                           ;Digitizer16bits.c: 53:                     _delay((unsigned long)((5)*(9830400UL/4000.0
      +                          )));
  1399  0D9E  3010               	movlw	16
  1400  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0DA1  00D5               	movwf	??_Interrups+1
  1403  0DA2  30F3               	movlw	243
  1404  0DA3  00D4               	movwf	??_Interrups
  1405  0DA4                     u195_27:
  1406  0DA4  0BD4               	decfsz	??_Interrups,f
  1407  0DA5  2DA4               	goto	u195_27
  1408  0DA6  0BD5               	decfsz	??_Interrups+1,f
  1409  0DA7  2DA4               	goto	u195_27
  1410  0DA8  2DA9               	nop2
  1411                           
  1412                           ;Digitizer16bits.c: 55:                     SumData_Y = 0;
  1413  0DA9  3000               	movlw	0
  1414  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0DAC  00AF               	movwf	_SumData_Y+3
  1417  0DAD  3000               	movlw	0
  1418  0DAE  00AE               	movwf	_SumData_Y+2
  1419  0DAF  3000               	movlw	0
  1420  0DB0  00AD               	movwf	_SumData_Y+1
  1421  0DB1  3000               	movlw	0
  1422  0DB2  00AC               	movwf	_SumData_Y
  1423  0DB3                     i1l2509:
  1424                           
  1425                           ;Digitizer16bits.c: 56:                     Data_Y = ReadDataADC();
  1426  0DB3  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1427  0DB8  0871               	movf	?_ReadDataADC+1,w
  1428  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0DBB  00BD               	movwf	_Data_Y+1
  1431  0DBC  0870               	movf	?_ReadDataADC,w
  1432  0DBD  00BC               	movwf	_Data_Y
  1433  0DBE                     i1l2511:
  1434                           
  1435                           ;Digitizer16bits.c: 57:                     for(conta = 0; conta<5; conta++){
  1436  0DBE  01FA               	clrf	Interrups@conta
  1437  0DBF                     i1l2517:
  1438                           
  1439                           ;Digitizer16bits.c: 58:                         Data_Y = ReadDataADC();
  1440  0DBF  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1441  0DC4  0871               	movf	?_ReadDataADC+1,w
  1442  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0DC7  00BD               	movwf	_Data_Y+1
  1445  0DC8  0870               	movf	?_ReadDataADC,w
  1446  0DC9  00BC               	movwf	_Data_Y
  1447  0DCA                     i1l2519:
  1448                           
  1449                           ;Digitizer16bits.c: 59:                         SumData_Y = SumData_Y + Data_Y;
  1450  0DCA  082C               	movf	_SumData_Y,w
  1451  0DCB  00D4               	movwf	??_Interrups
  1452  0DCC  082D               	movf	_SumData_Y+1,w
  1453  0DCD  00D5               	movwf	??_Interrups+1
  1454  0DCE  082E               	movf	_SumData_Y+2,w
  1455  0DCF  00D6               	movwf	??_Interrups+2
  1456  0DD0  082F               	movf	_SumData_Y+3,w
  1457  0DD1  00D7               	movwf	??_Interrups+3
  1458  0DD2  083C               	movf	_Data_Y,w
  1459  0DD3  00D8               	movwf	??_Interrups+4
  1460  0DD4  083D               	movf	_Data_Y+1,w
  1461  0DD5  00D9               	movwf	??_Interrups+5
  1462  0DD6  3000               	movlw	0
  1463  0DD7  1BD9               	btfsc	??_Interrups+5,7
  1464  0DD8  30FF               	movlw	255
  1465  0DD9  00DA               	movwf	??_Interrups+6
  1466  0DDA  00DB               	movwf	??_Interrups+7
  1467  0DDB  0858               	movf	??_Interrups+4,w
  1468  0DDC  07D4               	addwf	??_Interrups,f
  1469  0DDD  0859               	movf	??_Interrups+5,w
  1470  0DDE  1803               	skipnc
  1471  0DDF  0F59               	incfsz	??_Interrups+5,w
  1472  0DE0  2DE2               	goto	u158_20
  1473  0DE1  2DE3               	goto	u158_21
  1474  0DE2                     u158_20:
  1475  0DE2  07D5               	addwf	??_Interrups+1,f
  1476  0DE3                     u158_21:
  1477  0DE3  085A               	movf	??_Interrups+6,w
  1478  0DE4  1803               	skipnc
  1479  0DE5  0F5A               	incfsz	??_Interrups+6,w
  1480  0DE6  2DE8               	goto	u158_22
  1481  0DE7  2DE9               	goto	u158_23
  1482  0DE8                     u158_22:
  1483  0DE8  07D6               	addwf	??_Interrups+2,f
  1484  0DE9                     u158_23:
  1485  0DE9  085B               	movf	??_Interrups+7,w
  1486  0DEA  1803               	skipnc
  1487  0DEB  0A5B               	incf	??_Interrups+7,w
  1488  0DEC  07D7               	addwf	??_Interrups+3,f
  1489  0DED  0857               	movf	??_Interrups+3,w
  1490  0DEE  00AF               	movwf	_SumData_Y+3
  1491  0DEF  0856               	movf	??_Interrups+2,w
  1492  0DF0  00AE               	movwf	_SumData_Y+2
  1493  0DF1  0855               	movf	??_Interrups+1,w
  1494  0DF2  00AD               	movwf	_SumData_Y+1
  1495  0DF3  0854               	movf	??_Interrups,w
  1496  0DF4  00AC               	movwf	_SumData_Y
  1497  0DF5                     i1l2521:
  1498                           
  1499                           ;Digitizer16bits.c: 60:                     }
  1500  0DF5  3001               	movlw	1
  1501  0DF6  00D4               	movwf	??_Interrups
  1502  0DF7  0854               	movf	??_Interrups,w
  1503  0DF8  07FA               	addwf	Interrups@conta,f
  1504  0DF9                     i1l2523:
  1505  0DF9  3005               	movlw	5
  1506  0DFA  027A               	subwf	Interrups@conta,w
  1507  0DFB  1C03               	skipc
  1508  0DFC  2DFE               	goto	u159_21
  1509  0DFD  2DFF               	goto	u159_20
  1510  0DFE                     u159_21:
  1511  0DFE  2DBF               	goto	i1l2517
  1512  0DFF                     u159_20:
  1513  0DFF                     i1l2525:
  1514                           
  1515                           ;Digitizer16bits.c: 62:                     PORTB = 0x2C;
  1516  0DFF  302C               	movlw	44
  1517  0E00  0086               	movwf	6	;volatile
  1518                           
  1519                           ;Digitizer16bits.c: 63:                     _delay((unsigned long)((5)*(9830400UL/4000.0
      +                          )));
  1520  0E01  3010               	movlw	16
  1521  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0E04  00D5               	movwf	??_Interrups+1
  1524  0E05  30F3               	movlw	243
  1525  0E06  00D4               	movwf	??_Interrups
  1526  0E07                     u196_27:
  1527  0E07  0BD4               	decfsz	??_Interrups,f
  1528  0E08  2E07               	goto	u196_27
  1529  0E09  0BD5               	decfsz	??_Interrups+1,f
  1530  0E0A  2E07               	goto	u196_27
  1531  0E0B  2E0C               	nop2
  1532                           
  1533                           ;Digitizer16bits.c: 65:                     SumData_Z = 0;
  1534  0E0C  3000               	movlw	0
  1535  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0E0F  00AB               	movwf	_SumData_Z+3
  1538  0E10  3000               	movlw	0
  1539  0E11  00AA               	movwf	_SumData_Z+2
  1540  0E12  3000               	movlw	0
  1541  0E13  00A9               	movwf	_SumData_Z+1
  1542  0E14  3000               	movlw	0
  1543  0E15  00A8               	movwf	_SumData_Z
  1544  0E16                     i1l2527:
  1545                           
  1546                           ;Digitizer16bits.c: 66:                     Data_Z = ReadDataADC();
  1547  0E16  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1548  0E1B  0871               	movf	?_ReadDataADC+1,w
  1549  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0E1E  00BB               	movwf	_Data_Z+1
  1552  0E1F  0870               	movf	?_ReadDataADC,w
  1553  0E20  00BA               	movwf	_Data_Z
  1554  0E21                     i1l2529:
  1555                           
  1556                           ;Digitizer16bits.c: 67:                     for(conta = 0; conta<5; conta++){
  1557  0E21  01FA               	clrf	Interrups@conta
  1558  0E22                     i1l2535:
  1559                           
  1560                           ;Digitizer16bits.c: 68:                         Data_Z = ReadDataADC();
  1561  0E22  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1562  0E27  0871               	movf	?_ReadDataADC+1,w
  1563  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0E2A  00BB               	movwf	_Data_Z+1
  1566  0E2B  0870               	movf	?_ReadDataADC,w
  1567  0E2C  00BA               	movwf	_Data_Z
  1568  0E2D                     i1l2537:
  1569                           
  1570                           ;Digitizer16bits.c: 69:                         SumData_Z = SumData_Z + Data_Z;
  1571  0E2D  0828               	movf	_SumData_Z,w
  1572  0E2E  00D4               	movwf	??_Interrups
  1573  0E2F  0829               	movf	_SumData_Z+1,w
  1574  0E30  00D5               	movwf	??_Interrups+1
  1575  0E31  082A               	movf	_SumData_Z+2,w
  1576  0E32  00D6               	movwf	??_Interrups+2
  1577  0E33  082B               	movf	_SumData_Z+3,w
  1578  0E34  00D7               	movwf	??_Interrups+3
  1579  0E35  083A               	movf	_Data_Z,w
  1580  0E36  00D8               	movwf	??_Interrups+4
  1581  0E37  083B               	movf	_Data_Z+1,w
  1582  0E38  00D9               	movwf	??_Interrups+5
  1583  0E39  3000               	movlw	0
  1584  0E3A  1BD9               	btfsc	??_Interrups+5,7
  1585  0E3B  30FF               	movlw	255
  1586  0E3C  00DA               	movwf	??_Interrups+6
  1587  0E3D  00DB               	movwf	??_Interrups+7
  1588  0E3E  0858               	movf	??_Interrups+4,w
  1589  0E3F  07D4               	addwf	??_Interrups,f
  1590  0E40  0859               	movf	??_Interrups+5,w
  1591  0E41  1803               	skipnc
  1592  0E42  0F59               	incfsz	??_Interrups+5,w
  1593  0E43  2E45               	goto	u160_20
  1594  0E44  2E46               	goto	u160_21
  1595  0E45                     u160_20:
  1596  0E45  07D5               	addwf	??_Interrups+1,f
  1597  0E46                     u160_21:
  1598  0E46  085A               	movf	??_Interrups+6,w
  1599  0E47  1803               	skipnc
  1600  0E48  0F5A               	incfsz	??_Interrups+6,w
  1601  0E49  2E4B               	goto	u160_22
  1602  0E4A  2E4C               	goto	u160_23
  1603  0E4B                     u160_22:
  1604  0E4B  07D6               	addwf	??_Interrups+2,f
  1605  0E4C                     u160_23:
  1606  0E4C  085B               	movf	??_Interrups+7,w
  1607  0E4D  1803               	skipnc
  1608  0E4E  0A5B               	incf	??_Interrups+7,w
  1609  0E4F  07D7               	addwf	??_Interrups+3,f
  1610  0E50  0857               	movf	??_Interrups+3,w
  1611  0E51  00AB               	movwf	_SumData_Z+3
  1612  0E52  0856               	movf	??_Interrups+2,w
  1613  0E53  00AA               	movwf	_SumData_Z+2
  1614  0E54  0855               	movf	??_Interrups+1,w
  1615  0E55  00A9               	movwf	_SumData_Z+1
  1616  0E56  0854               	movf	??_Interrups,w
  1617  0E57  00A8               	movwf	_SumData_Z
  1618  0E58                     i1l2539:
  1619                           
  1620                           ;Digitizer16bits.c: 70:                     }
  1621  0E58  3001               	movlw	1
  1622  0E59  00D4               	movwf	??_Interrups
  1623  0E5A  0854               	movf	??_Interrups,w
  1624  0E5B  07FA               	addwf	Interrups@conta,f
  1625  0E5C                     i1l2541:
  1626  0E5C  3005               	movlw	5
  1627  0E5D  027A               	subwf	Interrups@conta,w
  1628  0E5E  1C03               	skipc
  1629  0E5F  2E61               	goto	u161_21
  1630  0E60  2E62               	goto	u161_20
  1631  0E61                     u161_21:
  1632  0E61  2E22               	goto	i1l2535
  1633  0E62                     u161_20:
  1634  0E62                     i1l2543:
  1635                           
  1636                           ;Digitizer16bits.c: 72:                     PORTB = 0x28;
  1637  0E62  3028               	movlw	40
  1638  0E63  0086               	movwf	6	;volatile
  1639                           
  1640                           ;Digitizer16bits.c: 73:                     _delay((unsigned long)((5)*(9830400UL/4000.0
      +                          )));
  1641  0E64  3010               	movlw	16
  1642  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0E67  00D5               	movwf	??_Interrups+1
  1645  0E68  30F3               	movlw	243
  1646  0E69  00D4               	movwf	??_Interrups
  1647  0E6A                     u197_27:
  1648  0E6A  0BD4               	decfsz	??_Interrups,f
  1649  0E6B  2E6A               	goto	u197_27
  1650  0E6C  0BD5               	decfsz	??_Interrups+1,f
  1651  0E6D  2E6A               	goto	u197_27
  1652  0E6E  2E6F               	nop2
  1653                           
  1654                           ;Digitizer16bits.c: 75:                     SumData_TC = 0;
  1655  0E6F  3000               	movlw	0
  1656  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0E72  00A7               	movwf	_SumData_TC+3
  1659  0E73  3000               	movlw	0
  1660  0E74  00A6               	movwf	_SumData_TC+2
  1661  0E75  3000               	movlw	0
  1662  0E76  00A5               	movwf	_SumData_TC+1
  1663  0E77  3000               	movlw	0
  1664  0E78  00A4               	movwf	_SumData_TC
  1665  0E79                     i1l2545:
  1666                           
  1667                           ;Digitizer16bits.c: 76:                     Data_TC = ReadDataADC();
  1668  0E79  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1669  0E7E  0871               	movf	?_ReadDataADC+1,w
  1670  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0E81  00B9               	movwf	_Data_TC+1
  1673  0E82  0870               	movf	?_ReadDataADC,w
  1674  0E83  00B8               	movwf	_Data_TC
  1675  0E84                     i1l2547:
  1676                           
  1677                           ;Digitizer16bits.c: 77:                     for(conta = 0; conta<5; conta++){
  1678  0E84  01FA               	clrf	Interrups@conta
  1679  0E85                     i1l2553:
  1680                           
  1681                           ;Digitizer16bits.c: 78:                         Data_TC = ReadDataADC();
  1682  0E85  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1683  0E8A  0871               	movf	?_ReadDataADC+1,w
  1684  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0E8D  00B9               	movwf	_Data_TC+1
  1687  0E8E  0870               	movf	?_ReadDataADC,w
  1688  0E8F  00B8               	movwf	_Data_TC
  1689  0E90                     i1l2555:
  1690                           
  1691                           ;Digitizer16bits.c: 79:                         SumData_TC = SumData_TC + Data_TC;
  1692  0E90  0824               	movf	_SumData_TC,w
  1693  0E91  00D4               	movwf	??_Interrups
  1694  0E92  0825               	movf	_SumData_TC+1,w
  1695  0E93  00D5               	movwf	??_Interrups+1
  1696  0E94  0826               	movf	_SumData_TC+2,w
  1697  0E95  00D6               	movwf	??_Interrups+2
  1698  0E96  0827               	movf	_SumData_TC+3,w
  1699  0E97  00D7               	movwf	??_Interrups+3
  1700  0E98  0838               	movf	_Data_TC,w
  1701  0E99  00D8               	movwf	??_Interrups+4
  1702  0E9A  0839               	movf	_Data_TC+1,w
  1703  0E9B  00D9               	movwf	??_Interrups+5
  1704  0E9C  3000               	movlw	0
  1705  0E9D  1BD9               	btfsc	??_Interrups+5,7
  1706  0E9E  30FF               	movlw	255
  1707  0E9F  00DA               	movwf	??_Interrups+6
  1708  0EA0  00DB               	movwf	??_Interrups+7
  1709  0EA1  0858               	movf	??_Interrups+4,w
  1710  0EA2  07D4               	addwf	??_Interrups,f
  1711  0EA3  0859               	movf	??_Interrups+5,w
  1712  0EA4  1803               	skipnc
  1713  0EA5  0F59               	incfsz	??_Interrups+5,w
  1714  0EA6  2EA8               	goto	u162_20
  1715  0EA7  2EA9               	goto	u162_21
  1716  0EA8                     u162_20:
  1717  0EA8  07D5               	addwf	??_Interrups+1,f
  1718  0EA9                     u162_21:
  1719  0EA9  085A               	movf	??_Interrups+6,w
  1720  0EAA  1803               	skipnc
  1721  0EAB  0F5A               	incfsz	??_Interrups+6,w
  1722  0EAC  2EAE               	goto	u162_22
  1723  0EAD  2EAF               	goto	u162_23
  1724  0EAE                     u162_22:
  1725  0EAE  07D6               	addwf	??_Interrups+2,f
  1726  0EAF                     u162_23:
  1727  0EAF  085B               	movf	??_Interrups+7,w
  1728  0EB0  1803               	skipnc
  1729  0EB1  0A5B               	incf	??_Interrups+7,w
  1730  0EB2  07D7               	addwf	??_Interrups+3,f
  1731  0EB3  0857               	movf	??_Interrups+3,w
  1732  0EB4  00A7               	movwf	_SumData_TC+3
  1733  0EB5  0856               	movf	??_Interrups+2,w
  1734  0EB6  00A6               	movwf	_SumData_TC+2
  1735  0EB7  0855               	movf	??_Interrups+1,w
  1736  0EB8  00A5               	movwf	_SumData_TC+1
  1737  0EB9  0854               	movf	??_Interrups,w
  1738  0EBA  00A4               	movwf	_SumData_TC
  1739  0EBB                     i1l2557:
  1740                           
  1741                           ;Digitizer16bits.c: 80:                     }
  1742  0EBB  3001               	movlw	1
  1743  0EBC  00D4               	movwf	??_Interrups
  1744  0EBD  0854               	movf	??_Interrups,w
  1745  0EBE  07FA               	addwf	Interrups@conta,f
  1746  0EBF                     i1l2559:
  1747  0EBF  3005               	movlw	5
  1748  0EC0  027A               	subwf	Interrups@conta,w
  1749  0EC1  1C03               	skipc
  1750  0EC2  2EC4               	goto	u163_21
  1751  0EC3  2EC5               	goto	u163_20
  1752  0EC4                     u163_21:
  1753  0EC4  2E85               	goto	i1l2553
  1754  0EC5                     u163_20:
  1755  0EC5                     i1l2561:
  1756                           
  1757                           ;Digitizer16bits.c: 82:                     PORTB = 0x20;
  1758  0EC5  3020               	movlw	32
  1759  0EC6  0086               	movwf	6	;volatile
  1760                           
  1761                           ;Digitizer16bits.c: 83:                     _delay((unsigned long)((5)*(9830400UL/4000.0
      +                          )));
  1762  0EC7  3010               	movlw	16
  1763  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0ECA  00D5               	movwf	??_Interrups+1
  1766  0ECB  30F3               	movlw	243
  1767  0ECC  00D4               	movwf	??_Interrups
  1768  0ECD                     u198_27:
  1769  0ECD  0BD4               	decfsz	??_Interrups,f
  1770  0ECE  2ECD               	goto	u198_27
  1771  0ECF  0BD5               	decfsz	??_Interrups+1,f
  1772  0ED0  2ECD               	goto	u198_27
  1773  0ED1  2ED2               	nop2
  1774                           
  1775                           ;Digitizer16bits.c: 85:                     SumData_TS = 0;
  1776  0ED2  3000               	movlw	0
  1777  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0ED5  00A3               	movwf	_SumData_TS+3
  1780  0ED6  3000               	movlw	0
  1781  0ED7  00A2               	movwf	_SumData_TS+2
  1782  0ED8  3000               	movlw	0
  1783  0ED9  00A1               	movwf	_SumData_TS+1
  1784  0EDA  3000               	movlw	0
  1785  0EDB  00A0               	movwf	_SumData_TS
  1786  0EDC                     i1l2563:
  1787                           
  1788                           ;Digitizer16bits.c: 86:                     Data_TS = ReadDataADC();
  1789  0EDC  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1790  0EE1  0871               	movf	?_ReadDataADC+1,w
  1791  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0EE4  00B7               	movwf	_Data_TS+1
  1794  0EE5  0870               	movf	?_ReadDataADC,w
  1795  0EE6  00B6               	movwf	_Data_TS
  1796  0EE7                     i1l2565:
  1797                           
  1798                           ;Digitizer16bits.c: 87:                     for(conta = 0; conta<5; conta++){
  1799  0EE7  01FA               	clrf	Interrups@conta
  1800  0EE8                     i1l2571:
  1801                           
  1802                           ;Digitizer16bits.c: 88:                         Data_TS = ReadDataADC();
  1803  0EE8  120A  158A  2334  120A  158A  	fcall	_ReadDataADC
  1804  0EED  0871               	movf	?_ReadDataADC+1,w
  1805  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0EF0  00B7               	movwf	_Data_TS+1
  1808  0EF1  0870               	movf	?_ReadDataADC,w
  1809  0EF2  00B6               	movwf	_Data_TS
  1810  0EF3                     i1l2573:
  1811                           
  1812                           ;Digitizer16bits.c: 89:                         SumData_TS = SumData_TS + Data_TS;
  1813  0EF3  0820               	movf	_SumData_TS,w
  1814  0EF4  00D4               	movwf	??_Interrups
  1815  0EF5  0821               	movf	_SumData_TS+1,w
  1816  0EF6  00D5               	movwf	??_Interrups+1
  1817  0EF7  0822               	movf	_SumData_TS+2,w
  1818  0EF8  00D6               	movwf	??_Interrups+2
  1819  0EF9  0823               	movf	_SumData_TS+3,w
  1820  0EFA  00D7               	movwf	??_Interrups+3
  1821  0EFB  0836               	movf	_Data_TS,w
  1822  0EFC  00D8               	movwf	??_Interrups+4
  1823  0EFD  0837               	movf	_Data_TS+1,w
  1824  0EFE  00D9               	movwf	??_Interrups+5
  1825  0EFF  3000               	movlw	0
  1826  0F00  1BD9               	btfsc	??_Interrups+5,7
  1827  0F01  30FF               	movlw	255
  1828  0F02  00DA               	movwf	??_Interrups+6
  1829  0F03  00DB               	movwf	??_Interrups+7
  1830  0F04  0858               	movf	??_Interrups+4,w
  1831  0F05  07D4               	addwf	??_Interrups,f
  1832  0F06  0859               	movf	??_Interrups+5,w
  1833  0F07  1803               	skipnc
  1834  0F08  0F59               	incfsz	??_Interrups+5,w
  1835  0F09  2F0B               	goto	u164_20
  1836  0F0A  2F0C               	goto	u164_21
  1837  0F0B                     u164_20:
  1838  0F0B  07D5               	addwf	??_Interrups+1,f
  1839  0F0C                     u164_21:
  1840  0F0C  085A               	movf	??_Interrups+6,w
  1841  0F0D  1803               	skipnc
  1842  0F0E  0F5A               	incfsz	??_Interrups+6,w
  1843  0F0F  2F11               	goto	u164_22
  1844  0F10  2F12               	goto	u164_23
  1845  0F11                     u164_22:
  1846  0F11  07D6               	addwf	??_Interrups+2,f
  1847  0F12                     u164_23:
  1848  0F12  085B               	movf	??_Interrups+7,w
  1849  0F13  1803               	skipnc
  1850  0F14  0A5B               	incf	??_Interrups+7,w
  1851  0F15  07D7               	addwf	??_Interrups+3,f
  1852  0F16  0857               	movf	??_Interrups+3,w
  1853  0F17  00A3               	movwf	_SumData_TS+3
  1854  0F18  0856               	movf	??_Interrups+2,w
  1855  0F19  00A2               	movwf	_SumData_TS+2
  1856  0F1A  0855               	movf	??_Interrups+1,w
  1857  0F1B  00A1               	movwf	_SumData_TS+1
  1858  0F1C  0854               	movf	??_Interrups,w
  1859  0F1D  00A0               	movwf	_SumData_TS
  1860  0F1E                     i1l2575:
  1861                           
  1862                           ;Digitizer16bits.c: 90:                     }
  1863  0F1E  3001               	movlw	1
  1864  0F1F  00D4               	movwf	??_Interrups
  1865  0F20  0854               	movf	??_Interrups,w
  1866  0F21  07FA               	addwf	Interrups@conta,f
  1867  0F22                     i1l2577:
  1868  0F22  3005               	movlw	5
  1869  0F23  027A               	subwf	Interrups@conta,w
  1870  0F24  1C03               	skipc
  1871  0F25  2F27               	goto	u165_21
  1872  0F26  2F28               	goto	u165_20
  1873  0F27                     u165_21:
  1874  0F27  2EE8               	goto	i1l2571
  1875  0F28                     u165_20:
  1876  0F28                     i1l122:
  1877                           
  1878                           ;Digitizer16bits.c: 92:                     PORTAbits.RA0 = 0;
  1879  0F28  1005               	bcf	5,0	;volatile
  1880  0F29                     i1l2579:
  1881                           
  1882                           ;Digitizer16bits.c: 95:                     Data_X = (signed short) (SumData_X/5);
  1883  0F29  3000               	movlw	0
  1884  0F2A  00F3               	movwf	___aldiv@divisor+3
  1885  0F2B  3000               	movlw	0
  1886  0F2C  00F2               	movwf	___aldiv@divisor+2
  1887  0F2D  3000               	movlw	0
  1888  0F2E  00F1               	movwf	___aldiv@divisor+1
  1889  0F2F  3005               	movlw	5
  1890  0F30  00F0               	movwf	___aldiv@divisor
  1891  0F31  0833               	movf	_SumData_X+3,w
  1892  0F32  00F7               	movwf	___aldiv@dividend+3
  1893  0F33  0832               	movf	_SumData_X+2,w
  1894  0F34  00F6               	movwf	___aldiv@dividend+2
  1895  0F35  0831               	movf	_SumData_X+1,w
  1896  0F36  00F5               	movwf	___aldiv@dividend+1
  1897  0F37  0830               	movf	_SumData_X,w
  1898  0F38  00F4               	movwf	___aldiv@dividend
  1899  0F39  120A  118A  2715  120A  158A  	fcall	___aldiv
  1900  0F3E  0871               	movf	?___aldiv+1,w
  1901  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0F41  00BF               	movwf	_Data_X+1
  1904  0F42  0870               	movf	?___aldiv,w
  1905  0F43  00BE               	movwf	_Data_X
  1906                           
  1907                           ;Digitizer16bits.c: 96:                     Data_Y = (signed short) (SumData_Y/5);
  1908  0F44  3000               	movlw	0
  1909  0F45  00F3               	movwf	___aldiv@divisor+3
  1910  0F46  3000               	movlw	0
  1911  0F47  00F2               	movwf	___aldiv@divisor+2
  1912  0F48  3000               	movlw	0
  1913  0F49  00F1               	movwf	___aldiv@divisor+1
  1914  0F4A  3005               	movlw	5
  1915  0F4B  00F0               	movwf	___aldiv@divisor
  1916  0F4C  082F               	movf	_SumData_Y+3,w
  1917  0F4D  00F7               	movwf	___aldiv@dividend+3
  1918  0F4E  082E               	movf	_SumData_Y+2,w
  1919  0F4F  00F6               	movwf	___aldiv@dividend+2
  1920  0F50  082D               	movf	_SumData_Y+1,w
  1921  0F51  00F5               	movwf	___aldiv@dividend+1
  1922  0F52  082C               	movf	_SumData_Y,w
  1923  0F53  00F4               	movwf	___aldiv@dividend
  1924  0F54  120A  118A  2715  120A  158A  	fcall	___aldiv
  1925  0F59  0871               	movf	?___aldiv+1,w
  1926  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0F5C  00BD               	movwf	_Data_Y+1
  1929  0F5D  0870               	movf	?___aldiv,w
  1930  0F5E  00BC               	movwf	_Data_Y
  1931                           
  1932                           ;Digitizer16bits.c: 97:                     Data_Z = (signed short) (SumData_Z/5);
  1933  0F5F  3000               	movlw	0
  1934  0F60  00F3               	movwf	___aldiv@divisor+3
  1935  0F61  3000               	movlw	0
  1936  0F62  00F2               	movwf	___aldiv@divisor+2
  1937  0F63  3000               	movlw	0
  1938  0F64  00F1               	movwf	___aldiv@divisor+1
  1939  0F65  3005               	movlw	5
  1940  0F66  00F0               	movwf	___aldiv@divisor
  1941  0F67  082B               	movf	_SumData_Z+3,w
  1942  0F68  00F7               	movwf	___aldiv@dividend+3
  1943  0F69  082A               	movf	_SumData_Z+2,w
  1944  0F6A  00F6               	movwf	___aldiv@dividend+2
  1945  0F6B  0829               	movf	_SumData_Z+1,w
  1946  0F6C  00F5               	movwf	___aldiv@dividend+1
  1947  0F6D  0828               	movf	_SumData_Z,w
  1948  0F6E  00F4               	movwf	___aldiv@dividend
  1949  0F6F  120A  118A  2715  120A  158A  	fcall	___aldiv
  1950  0F74  0871               	movf	?___aldiv+1,w
  1951  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0F77  00BB               	movwf	_Data_Z+1
  1954  0F78  0870               	movf	?___aldiv,w
  1955  0F79  00BA               	movwf	_Data_Z
  1956                           
  1957                           ;Digitizer16bits.c: 98:                     Data_TC = (signed short) (SumData_TC/5);
  1958  0F7A  3000               	movlw	0
  1959  0F7B  00F3               	movwf	___aldiv@divisor+3
  1960  0F7C  3000               	movlw	0
  1961  0F7D  00F2               	movwf	___aldiv@divisor+2
  1962  0F7E  3000               	movlw	0
  1963  0F7F  00F1               	movwf	___aldiv@divisor+1
  1964  0F80  3005               	movlw	5
  1965  0F81  00F0               	movwf	___aldiv@divisor
  1966  0F82  0827               	movf	_SumData_TC+3,w
  1967  0F83  00F7               	movwf	___aldiv@dividend+3
  1968  0F84  0826               	movf	_SumData_TC+2,w
  1969  0F85  00F6               	movwf	___aldiv@dividend+2
  1970  0F86  0825               	movf	_SumData_TC+1,w
  1971  0F87  00F5               	movwf	___aldiv@dividend+1
  1972  0F88  0824               	movf	_SumData_TC,w
  1973  0F89  00F4               	movwf	___aldiv@dividend
  1974  0F8A  120A  118A  2715  120A  158A  	fcall	___aldiv
  1975  0F8F  0871               	movf	?___aldiv+1,w
  1976  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0F92  00B9               	movwf	_Data_TC+1
  1979  0F93  0870               	movf	?___aldiv,w
  1980  0F94  00B8               	movwf	_Data_TC
  1981                           
  1982                           ;Digitizer16bits.c: 99:                     Data_TS = (signed short) (SumData_TS/5);
  1983  0F95  3000               	movlw	0
  1984  0F96  00F3               	movwf	___aldiv@divisor+3
  1985  0F97  3000               	movlw	0
  1986  0F98  00F2               	movwf	___aldiv@divisor+2
  1987  0F99  3000               	movlw	0
  1988  0F9A  00F1               	movwf	___aldiv@divisor+1
  1989  0F9B  3005               	movlw	5
  1990  0F9C  00F0               	movwf	___aldiv@divisor
  1991  0F9D  0823               	movf	_SumData_TS+3,w
  1992  0F9E  00F7               	movwf	___aldiv@dividend+3
  1993  0F9F  0822               	movf	_SumData_TS+2,w
  1994  0FA0  00F6               	movwf	___aldiv@dividend+2
  1995  0FA1  0821               	movf	_SumData_TS+1,w
  1996  0FA2  00F5               	movwf	___aldiv@dividend+1
  1997  0FA3  0820               	movf	_SumData_TS,w
  1998  0FA4  00F4               	movwf	___aldiv@dividend
  1999  0FA5  120A  118A  2715  120A  158A  	fcall	___aldiv
  2000  0FAA  0871               	movf	?___aldiv+1,w
  2001  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0FAD  00B7               	movwf	_Data_TS+1
  2004  0FAE  0870               	movf	?___aldiv,w
  2005  0FAF  00B6               	movwf	_Data_TS
  2006  0FB0                     i1l2581:
  2007                           
  2008                           ;Digitizer16bits.c: 102:                     print_string("JROADQ");
  2009  0FB0  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2010  0FB1  00F1               	movwf	print_string@str
  2011  0FB2  3080               	movlw	128
  2012  0FB3  00F2               	movwf	print_string@str+1
  2013  0FB4  120A  158A  2206  120A  158A  	fcall	_print_string
  2014  0FB9                     i1l2583:
  2015                           
  2016                           ;Digitizer16bits.c: 103:                     WriteByte_USART(ContaSample);
  2017  0FB9  087B               	movf	_ContaSample,w
  2018  0FBA  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2019  0FBF                     i1l2585:
  2020                           
  2021                           ;Digitizer16bits.c: 104:                     print_value(Data_X);
  2022  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0FC1  083F               	movf	_Data_X+1,w
  2025  0FC2  00F2               	movwf	print_value@value+1
  2026  0FC3  083E               	movf	_Data_X,w
  2027  0FC4  00F1               	movwf	print_value@value
  2028  0FC5  120A  158A  21BA  120A  158A  	fcall	_print_value
  2029  0FCA                     i1l2587:
  2030                           
  2031                           ;Digitizer16bits.c: 105:                     print_value(Data_Y);
  2032  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0FCC  083D               	movf	_Data_Y+1,w
  2035  0FCD  00F2               	movwf	print_value@value+1
  2036  0FCE  083C               	movf	_Data_Y,w
  2037  0FCF  00F1               	movwf	print_value@value
  2038  0FD0  120A  158A  21BA  120A  158A  	fcall	_print_value
  2039  0FD5                     i1l2589:
  2040                           
  2041                           ;Digitizer16bits.c: 106:                     print_value(Data_Z);
  2042  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0FD7  083B               	movf	_Data_Z+1,w
  2045  0FD8  00F2               	movwf	print_value@value+1
  2046  0FD9  083A               	movf	_Data_Z,w
  2047  0FDA  00F1               	movwf	print_value@value
  2048  0FDB  120A  158A  21BA  120A  158A  	fcall	_print_value
  2049  0FE0                     i1l2591:
  2050                           
  2051                           ;Digitizer16bits.c: 107:                     print_value(Data_TC);
  2052  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0FE2  0839               	movf	_Data_TC+1,w
  2055  0FE3  00F2               	movwf	print_value@value+1
  2056  0FE4  0838               	movf	_Data_TC,w
  2057  0FE5  00F1               	movwf	print_value@value
  2058  0FE6  120A  158A  21BA  120A  158A  	fcall	_print_value
  2059  0FEB                     i1l2593:
  2060                           
  2061                           ;Digitizer16bits.c: 108:                     print_value(Data_TS);
  2062  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0FED  0837               	movf	_Data_TS+1,w
  2065  0FEE  00F2               	movwf	print_value@value+1
  2066  0FEF  0836               	movf	_Data_TS,w
  2067  0FF0  00F1               	movwf	print_value@value
  2068  0FF1  120A  158A  21BA  120A  158A  	fcall	_print_value
  2069  0FF6                     i1l2595:
  2070                           
  2071                           ;Digitizer16bits.c: 109:                     print_string("\n\r");
  2072  0FF6  3016               	movlw	(low (((STR_5+21)-__stringbase)| (0+32768)))& (0+255)
  2073  0FF7  00F1               	movwf	print_string@str
  2074  0FF8  3080               	movlw	128
  2075  0FF9  00F2               	movwf	print_string@str+1
  2076  0FFA  120A  158A  2206  120A  158A  	fcall	_print_string
  2077  0FFF  2D08               	goto	u155_21
  2078                           
  2079                           	psect	intentry
  2080  0004                     __pintentry:	
  2081                           ;incstack = 0
  2082                           ; Regs used in _Interrups: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2083                           
  2084  0004                     interrupt_function:
  2085  007E                     saved_w	set	btemp
  2086  0004  00FE               	movwf	btemp
  2087  0005  0E03               	swapf	3,w
  2088  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0008  00DC               	movwf	??_Interrups+8
  2091  0009  0804               	movf	4,w
  2092  000A  00DD               	movwf	??_Interrups+9
  2093  000B  080A               	movf	10,w
  2094  000C  00DE               	movwf	??_Interrups+10
  2095  000D  087F               	movf	btemp+1,w
  2096  000E  00DF               	movwf	??_Interrups+11
  2097  000F  120A  158A  2CF5   	ljmp	_Interrups
  2098                           
  2099                           	psect	text5
  2100  09BA                     __ptext5:	
  2101 ;; *************** function _print_value *****************
  2102 ;; Defined at:
  2103 ;;		line 147 in file "LIB16F_USART.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  value           2    1[COMMON] short 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  Bytes           2    4[COMMON] unsigned char [2]
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, pclath, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         2       0       0       0       0
  2118 ;;      Locals:         2       0       0       0       0
  2119 ;;      Temps:          1       0       0       0       0
  2120 ;;      Totals:         5       0       0       0       0
  2121 ;;Total ram usage:        5 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 1
  2124 ;; This function calls:
  2125 ;;		_WriteByte_USART
  2126 ;; This function is called by:
  2127 ;;		_Interrups
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131  09BA                     _print_value:	
  2132                           ;psect for function _print_value
  2133                           
  2134  09BA                     i1l2189:	
  2135                           ;incstack = 0
  2136                           ; Regs used in _print_value: [wreg+status,2+status,0+pclath+cstack]
  2137                           
  2138                           
  2139                           ;LIB16F_USART.c: 149:     char Bytes[2];;LIB16F_USART.c: 152:     Bytes[1] = (char) (val
      +                          ue>>8);
  2140  09BA  0872               	movf	print_value@value+1,w
  2141  09BB  00F3               	movwf	??_print_value
  2142  09BC  0873               	movf	??_print_value,w
  2143  09BD  00F5               	movwf	print_value@Bytes+1
  2144  09BE                     i1l2191:
  2145                           
  2146                           ;LIB16F_USART.c: 154:     Bytes[0] = (char) (value);
  2147  09BE  0871               	movf	print_value@value,w
  2148  09BF  00F3               	movwf	??_print_value
  2149  09C0  0873               	movf	??_print_value,w
  2150  09C1  00F4               	movwf	print_value@Bytes
  2151  09C2                     i1l2193:
  2152                           
  2153                           ;LIB16F_USART.c: 156:     WriteByte_USART(Bytes[0]);
  2154  09C2  0874               	movf	print_value@Bytes,w
  2155  09C3  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2156  09C8                     i1l2195:
  2157                           
  2158                           ;LIB16F_USART.c: 157:     WriteByte_USART(Bytes[1]);
  2159  09C8  0875               	movf	print_value@Bytes+1,w
  2160  09C9  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2161  09CE                     i1l398:
  2162  09CE  0008               	return
  2163  09CF                     __end_of_print_value:
  2164                           
  2165                           	psect	text6
  2166  0715                     __ptext6:	
  2167 ;; *************** function ___aldiv *****************
  2168 ;; Defined at:
  2169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\aldiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  divisor         4    0[COMMON] long 
  2172 ;;  dividend        4    4[COMMON] long 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  quotient        4    2[BANK0 ] long 
  2175 ;;  sign            1    1[BANK0 ] unsigned char 
  2176 ;;  counter         1    0[BANK0 ] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  4    0[COMMON] long 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         8       0       0       0       0
  2187 ;;      Locals:         0       6       0       0       0
  2188 ;;      Temps:          1       0       0       0       0
  2189 ;;      Totals:         9       6       0       0       0
  2190 ;;Total ram usage:       15 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_Interrups
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199  0715                     ___aldiv:	
  2200                           ;psect for function ___aldiv
  2201                           
  2202  0715                     i1l2419:	
  2203                           ;incstack = 0
  2204                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2205                           
  2206  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0716  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0717  01CF               	clrf	___aldiv@sign
  2209  0718                     i1l2421:
  2210  0718  1FF3               	btfss	___aldiv@divisor+3,7
  2211  0719  2F1B               	goto	u143_21
  2212  071A  2F1C               	goto	u143_20
  2213  071B                     u143_21:
  2214  071B  2F29               	goto	i1l610
  2215  071C                     u143_20:
  2216  071C                     i1l2423:
  2217  071C  09F0               	comf	___aldiv@divisor,f
  2218  071D  09F1               	comf	___aldiv@divisor+1,f
  2219  071E  09F2               	comf	___aldiv@divisor+2,f
  2220  071F  09F3               	comf	___aldiv@divisor+3,f
  2221  0720  0AF0               	incf	___aldiv@divisor,f
  2222  0721  1903               	skipnz
  2223  0722  0AF1               	incf	___aldiv@divisor+1,f
  2224  0723  1903               	skipnz
  2225  0724  0AF2               	incf	___aldiv@divisor+2,f
  2226  0725  1903               	skipnz
  2227  0726  0AF3               	incf	___aldiv@divisor+3,f
  2228  0727  01CF               	clrf	___aldiv@sign
  2229  0728  0ACF               	incf	___aldiv@sign,f
  2230  0729                     i1l610:
  2231  0729  1FF7               	btfss	___aldiv@dividend+3,7
  2232  072A  2F2C               	goto	u144_21
  2233  072B  2F2D               	goto	u144_20
  2234  072C                     u144_21:
  2235  072C  2F3C               	goto	i1l2429
  2236  072D                     u144_20:
  2237  072D                     i1l2425:
  2238  072D  09F4               	comf	___aldiv@dividend,f
  2239  072E  09F5               	comf	___aldiv@dividend+1,f
  2240  072F  09F6               	comf	___aldiv@dividend+2,f
  2241  0730  09F7               	comf	___aldiv@dividend+3,f
  2242  0731  0AF4               	incf	___aldiv@dividend,f
  2243  0732  1903               	skipnz
  2244  0733  0AF5               	incf	___aldiv@dividend+1,f
  2245  0734  1903               	skipnz
  2246  0735  0AF6               	incf	___aldiv@dividend+2,f
  2247  0736  1903               	skipnz
  2248  0737  0AF7               	incf	___aldiv@dividend+3,f
  2249  0738                     i1l2427:
  2250  0738  3001               	movlw	1
  2251  0739  00F8               	movwf	??___aldiv
  2252  073A  0878               	movf	??___aldiv,w
  2253  073B  06CF               	xorwf	___aldiv@sign,f
  2254  073C                     i1l2429:
  2255  073C  3000               	movlw	0
  2256  073D  00D3               	movwf	___aldiv@quotient+3
  2257  073E  3000               	movlw	0
  2258  073F  00D2               	movwf	___aldiv@quotient+2
  2259  0740  3000               	movlw	0
  2260  0741  00D1               	movwf	___aldiv@quotient+1
  2261  0742  3000               	movlw	0
  2262  0743  00D0               	movwf	___aldiv@quotient
  2263  0744                     i1l2431:
  2264  0744  0873               	movf	___aldiv@divisor+3,w
  2265  0745  0472               	iorwf	___aldiv@divisor+2,w
  2266  0746  0471               	iorwf	___aldiv@divisor+1,w
  2267  0747  0470               	iorwf	___aldiv@divisor,w
  2268  0748  1903               	skipnz
  2269  0749  2F4B               	goto	u145_21
  2270  074A  2F4C               	goto	u145_20
  2271  074B                     u145_21:
  2272  074B  2F99               	goto	i1l2451
  2273  074C                     u145_20:
  2274  074C                     i1l2433:
  2275  074C  01CE               	clrf	___aldiv@counter
  2276  074D  0ACE               	incf	___aldiv@counter,f
  2277  074E  2F5C               	goto	i1l2437
  2278  074F                     i1l2435:
  2279  074F  3001               	movlw	1
  2280  0750  00F8               	movwf	??___aldiv
  2281  0751                     u146_25:
  2282  0751  1003               	clrc
  2283  0752  0DF0               	rlf	___aldiv@divisor,f
  2284  0753  0DF1               	rlf	___aldiv@divisor+1,f
  2285  0754  0DF2               	rlf	___aldiv@divisor+2,f
  2286  0755  0DF3               	rlf	___aldiv@divisor+3,f
  2287  0756  0BF8               	decfsz	??___aldiv,f
  2288  0757  2F51               	goto	u146_25
  2289  0758  3001               	movlw	1
  2290  0759  00F8               	movwf	??___aldiv
  2291  075A  0878               	movf	??___aldiv,w
  2292  075B  07CE               	addwf	___aldiv@counter,f
  2293  075C                     i1l2437:
  2294  075C  1FF3               	btfss	___aldiv@divisor+3,7
  2295  075D  2F5F               	goto	u147_21
  2296  075E  2F60               	goto	u147_20
  2297  075F                     u147_21:
  2298  075F  2F4F               	goto	i1l2435
  2299  0760                     u147_20:
  2300  0760                     i1l2439:
  2301  0760  3001               	movlw	1
  2302  0761  00F8               	movwf	??___aldiv
  2303  0762                     u148_25:
  2304  0762  1003               	clrc
  2305  0763  0DD0               	rlf	___aldiv@quotient,f
  2306  0764  0DD1               	rlf	___aldiv@quotient+1,f
  2307  0765  0DD2               	rlf	___aldiv@quotient+2,f
  2308  0766  0DD3               	rlf	___aldiv@quotient+3,f
  2309  0767  0BF8               	decfsz	??___aldiv,f
  2310  0768  2F62               	goto	u148_25
  2311  0769                     i1l2441:
  2312  0769  0873               	movf	___aldiv@divisor+3,w
  2313  076A  0277               	subwf	___aldiv@dividend+3,w
  2314  076B  1D03               	skipz
  2315  076C  2F77               	goto	u149_25
  2316  076D  0872               	movf	___aldiv@divisor+2,w
  2317  076E  0276               	subwf	___aldiv@dividend+2,w
  2318  076F  1D03               	skipz
  2319  0770  2F77               	goto	u149_25
  2320  0771  0871               	movf	___aldiv@divisor+1,w
  2321  0772  0275               	subwf	___aldiv@dividend+1,w
  2322  0773  1D03               	skipz
  2323  0774  2F77               	goto	u149_25
  2324  0775  0870               	movf	___aldiv@divisor,w
  2325  0776  0274               	subwf	___aldiv@dividend,w
  2326  0777                     u149_25:
  2327  0777  1C03               	skipc
  2328  0778  2F7A               	goto	u149_21
  2329  0779  2F7B               	goto	u149_20
  2330  077A                     u149_21:
  2331  077A  2F8A               	goto	i1l2447
  2332  077B                     u149_20:
  2333  077B                     i1l2443:
  2334  077B  0870               	movf	___aldiv@divisor,w
  2335  077C  02F4               	subwf	___aldiv@dividend,f
  2336  077D  0871               	movf	___aldiv@divisor+1,w
  2337  077E  1C03               	skipc
  2338  077F  0F71               	incfsz	___aldiv@divisor+1,w
  2339  0780  02F5               	subwf	___aldiv@dividend+1,f
  2340  0781  0872               	movf	___aldiv@divisor+2,w
  2341  0782  1C03               	skipc
  2342  0783  0F72               	incfsz	___aldiv@divisor+2,w
  2343  0784  02F6               	subwf	___aldiv@dividend+2,f
  2344  0785  0873               	movf	___aldiv@divisor+3,w
  2345  0786  1C03               	skipc
  2346  0787  0F73               	incfsz	___aldiv@divisor+3,w
  2347  0788  02F7               	subwf	___aldiv@dividend+3,f
  2348  0789                     i1l2445:
  2349  0789  1450               	bsf	___aldiv@quotient,0
  2350  078A                     i1l2447:
  2351  078A  3001               	movlw	1
  2352  078B                     u150_25:
  2353  078B  1003               	clrc
  2354  078C  0CF3               	rrf	___aldiv@divisor+3,f
  2355  078D  0CF2               	rrf	___aldiv@divisor+2,f
  2356  078E  0CF1               	rrf	___aldiv@divisor+1,f
  2357  078F  0CF0               	rrf	___aldiv@divisor,f
  2358  0790  3EFF               	addlw	-1
  2359  0791  1D03               	skipz
  2360  0792  2F8B               	goto	u150_25
  2361  0793                     i1l2449:
  2362  0793  3001               	movlw	1
  2363  0794  02CE               	subwf	___aldiv@counter,f
  2364  0795  1D03               	btfss	3,2
  2365  0796  2F98               	goto	u151_21
  2366  0797  2F99               	goto	u151_20
  2367  0798                     u151_21:
  2368  0798  2F60               	goto	i1l2439
  2369  0799                     u151_20:
  2370  0799                     i1l2451:
  2371  0799  084F               	movf	___aldiv@sign,w
  2372  079A  1903               	btfsc	3,2
  2373  079B  2F9D               	goto	u152_21
  2374  079C  2F9E               	goto	u152_20
  2375  079D                     u152_21:
  2376  079D  2FA9               	goto	i1l2455
  2377  079E                     u152_20:
  2378  079E                     i1l2453:
  2379  079E  09D0               	comf	___aldiv@quotient,f
  2380  079F  09D1               	comf	___aldiv@quotient+1,f
  2381  07A0  09D2               	comf	___aldiv@quotient+2,f
  2382  07A1  09D3               	comf	___aldiv@quotient+3,f
  2383  07A2  0AD0               	incf	___aldiv@quotient,f
  2384  07A3  1903               	skipnz
  2385  07A4  0AD1               	incf	___aldiv@quotient+1,f
  2386  07A5  1903               	skipnz
  2387  07A6  0AD2               	incf	___aldiv@quotient+2,f
  2388  07A7  1903               	skipnz
  2389  07A8  0AD3               	incf	___aldiv@quotient+3,f
  2390  07A9                     i1l2455:
  2391  07A9  0853               	movf	___aldiv@quotient+3,w
  2392  07AA  00F3               	movwf	?___aldiv+3
  2393  07AB  0852               	movf	___aldiv@quotient+2,w
  2394  07AC  00F2               	movwf	?___aldiv+2
  2395  07AD  0851               	movf	___aldiv@quotient+1,w
  2396  07AE  00F1               	movwf	?___aldiv+1
  2397  07AF  0850               	movf	___aldiv@quotient,w
  2398  07B0  00F0               	movwf	?___aldiv
  2399  07B1                     i1l620:
  2400  07B1  0008               	return
  2401  07B2                     __end_of___aldiv:
  2402                           
  2403                           	psect	text7
  2404  0A2C                     __ptext7:	
  2405 ;; *************** function _TransmitDAT_USART *****************
  2406 ;; Defined at:
  2407 ;;		line 135 in file "LIB16F_USART.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  DAT_ID          1    wreg     unsigned char 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  DAT_ID          1    4[COMMON] unsigned char 
  2412 ;;  conta           1    5[COMMON] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         0       0       0       0       0
  2423 ;;      Locals:         2       0       0       0       0
  2424 ;;      Temps:          1       0       0       0       0
  2425 ;;      Totals:         3       0       0       0       0
  2426 ;;Total ram usage:        3 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 2
  2429 ;; This function calls:
  2430 ;;		_WriteByte_USART
  2431 ;;		_print_string
  2432 ;; This function is called by:
  2433 ;;		_Interrups
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437  0A2C                     _TransmitDAT_USART:	
  2438                           ;psect for function _TransmitDAT_USART
  2439                           
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _TransmitDAT_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2443                           ;TransmitDAT_USART@DAT_ID stored from wreg
  2444  0A2C  00F4               	movwf	TransmitDAT_USART@DAT_ID
  2445  0A2D                     i1l2239:
  2446                           
  2447                           ;LIB16F_USART.c: 136:     unsigned char conta;;LIB16F_USART.c: 138:     print_string("NN
      +                          NNJRODAT");
  2448  0A2D  3024               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2449  0A2E  00F1               	movwf	print_string@str
  2450  0A2F  3080               	movlw	128
  2451  0A30  00F2               	movwf	print_string@str+1
  2452  0A31  120A  158A  2206  120A  158A  	fcall	_print_string
  2453  0A36                     i1l2241:
  2454                           
  2455                           ;LIB16F_USART.c: 139:     WriteByte_USART(DAT_ID);
  2456  0A36  0874               	movf	TransmitDAT_USART@DAT_ID,w
  2457  0A37  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2458  0A3C                     i1l2243:
  2459                           
  2460                           ;LIB16F_USART.c: 140:     for(conta=0; conta<12; conta++){
  2461  0A3C  01F5               	clrf	TransmitDAT_USART@conta
  2462  0A3D                     i1l2249:
  2463                           
  2464                           ;LIB16F_USART.c: 141:         WriteByte_USART(BufferDAT[conta]);
  2465  0A3D  0875               	movf	TransmitDAT_USART@conta,w
  2466  0A3E  3E41               	addlw	(low (_BufferDAT| 0))& (0+255)
  2467  0A3F  0084               	movwf	4
  2468  0A40  1383               	bcf	3,7	;select IRP bank0
  2469  0A41  0800               	movf	0,w
  2470  0A42  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2471  0A47                     i1l2251:
  2472                           
  2473                           ;LIB16F_USART.c: 142:     }
  2474  0A47  3001               	movlw	1
  2475  0A48  00F3               	movwf	??_TransmitDAT_USART
  2476  0A49  0873               	movf	??_TransmitDAT_USART,w
  2477  0A4A  07F5               	addwf	TransmitDAT_USART@conta,f
  2478  0A4B                     i1l2253:
  2479  0A4B  300C               	movlw	12
  2480  0A4C  0275               	subwf	TransmitDAT_USART@conta,w
  2481  0A4D  1C03               	skipc
  2482  0A4E  2A50               	goto	u124_21
  2483  0A4F  2A51               	goto	u124_20
  2484  0A50                     u124_21:
  2485  0A50  2A3D               	goto	i1l2249
  2486  0A51                     u124_20:
  2487  0A51                     i1l2255:
  2488                           
  2489                           ;LIB16F_USART.c: 143:     print_string("\n\r");
  2490  0A51  3016               	movlw	(low (((STR_5+21)-__stringbase)| (0+32768)))& (0+255)
  2491  0A52  00F1               	movwf	print_string@str
  2492  0A53  3080               	movlw	128
  2493  0A54  00F2               	movwf	print_string@str+1
  2494  0A55  120A  158A  2206  120A  158A  	fcall	_print_string
  2495  0A5A                     i1l395:
  2496  0A5A  0008               	return
  2497  0A5B                     __end_of_TransmitDAT_USART:
  2498                           
  2499                           	psect	text8
  2500  09CF                     __ptext8:	
  2501 ;; *************** function _TransmitCMD_USART *****************
  2502 ;; Defined at:
  2503 ;;		line 127 in file "LIB16F_USART.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  CMD_ID          1    wreg     unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  CMD_ID          1    3[COMMON] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0
  2520 ;;      Totals:         1       0       0       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 2
  2524 ;; This function calls:
  2525 ;;		_WriteByte_USART
  2526 ;;		_print_string
  2527 ;; This function is called by:
  2528 ;;		_Interrups
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532  09CF                     _TransmitCMD_USART:	
  2533                           ;psect for function _TransmitCMD_USART
  2534                           
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _TransmitCMD_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2538                           ;TransmitCMD_USART@CMD_ID stored from wreg
  2539  09CF  00F3               	movwf	TransmitCMD_USART@CMD_ID
  2540  09D0                     i1l2397:
  2541                           
  2542                           ;LIB16F_USART.c: 129:     print_string("NNNNJROCMD");
  2543  09D0  3019               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2544  09D1  00F1               	movwf	print_string@str
  2545  09D2  3080               	movlw	128
  2546  09D3  00F2               	movwf	print_string@str+1
  2547  09D4  120A  158A  2206  120A  158A  	fcall	_print_string
  2548  09D9                     i1l2399:
  2549                           
  2550                           ;LIB16F_USART.c: 130:     WriteByte_USART(CMD_ID);
  2551  09D9  0873               	movf	TransmitCMD_USART@CMD_ID,w
  2552  09DA  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2553  09DF                     i1l2401:
  2554                           
  2555                           ;LIB16F_USART.c: 131:     print_string("\n\r");
  2556  09DF  3016               	movlw	(low (((STR_5+21)-__stringbase)| (0+32768)))& (0+255)
  2557  09E0  00F1               	movwf	print_string@str
  2558  09E1  3080               	movlw	128
  2559  09E2  00F2               	movwf	print_string@str+1
  2560  09E3  120A  158A  2206  120A  158A  	fcall	_print_string
  2561  09E8                     i1l390:
  2562  09E8  0008               	return
  2563  09E9                     __end_of_TransmitCMD_USART:
  2564                           
  2565                           	psect	text9
  2566  0A06                     __ptext9:	
  2567 ;; *************** function _print_string *****************
  2568 ;; Defined at:
  2569 ;;		line 54 in file "LIB16F_USART.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  str             2    1[COMMON] PTR unsigned char 
  2572 ;;		 -> STR_13(3), STR_12(11), STR_11(3), STR_10(11), 
  2573 ;;		 -> STR_9(3), STR_8(7), STR_7(3), STR_6(7), 
  2574 ;;		 -> STR_5(24), STR_4(3), STR_3(7), STR_2(3), 
  2575 ;;		 -> BufferDAT(13), STR_1(10), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         2       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0
  2590 ;;      Totals:         2       0       0       0       0
  2591 ;;Total ram usage:        2 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 1
  2594 ;; This function calls:
  2595 ;;		_WriteByte_USART
  2596 ;; This function is called by:
  2597 ;;		_Interrups
  2598 ;;		_TransmitCMD_USART
  2599 ;;		_TransmitDAT_USART
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603  0A06                     _print_string:	
  2604                           ;psect for function _print_string
  2605                           
  2606  0A06                     i1l2045:	
  2607                           ;incstack = 0
  2608                           ; Regs used in _print_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2609                           
  2610                           
  2611                           ;LIB16F_USART.c: 56:     while(*str != '\0'){
  2612  0A06  2A1B               	goto	i1l2051
  2613  0A07                     i1l2047:
  2614                           
  2615                           ;LIB16F_USART.c: 57:         WriteByte_USART(*str);
  2616  0A07  0872               	movf	print_string@str+1,w
  2617  0A08  00FF               	movwf	btemp+1
  2618  0A09  0871               	movf	print_string@str,w
  2619  0A0A  0084               	movwf	4
  2620  0A0B  120A  158A  2000  120A  158A  	fcall	stringtab
  2621  0A10  120A  158A  219D  120A  158A  	fcall	_WriteByte_USART
  2622  0A15                     i1l2049:
  2623                           
  2624                           ;LIB16F_USART.c: 58:         str++;
  2625  0A15  3001               	movlw	1
  2626  0A16  07F1               	addwf	print_string@str,f
  2627  0A17  1803               	skipnc
  2628  0A18  0AF2               	incf	print_string@str+1,f
  2629  0A19  3000               	movlw	0
  2630  0A1A  07F2               	addwf	print_string@str+1,f
  2631  0A1B                     i1l2051:
  2632                           
  2633                           ;LIB16F_USART.c: 56:     while(*str != '\0'){
  2634  0A1B  0872               	movf	print_string@str+1,w
  2635  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0A1D  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0A1E  00FF               	movwf	btemp+1
  2638  0A1F  0871               	movf	print_string@str,w
  2639  0A20  0084               	movwf	4
  2640  0A21  120A  158A  2000  120A  158A  	fcall	stringtab
  2641  0A26  3A00               	xorlw	0
  2642  0A27  1D03               	skipz
  2643  0A28  2A2A               	goto	u98_21
  2644  0A29  2A2B               	goto	u98_20
  2645  0A2A                     u98_21:
  2646  0A2A  2A07               	goto	i1l2047
  2647  0A2B                     u98_20:
  2648  0A2B                     i1l377:
  2649  0A2B  0008               	return
  2650  0A2C                     __end_of_print_string:
  2651                           
  2652                           	psect	text10
  2653  099D                     __ptext10:	
  2654 ;; *************** function _WriteByte_USART *****************
  2655 ;; Defined at:
  2656 ;;		line 46 in file "LIB16F_USART.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  byte            1    wreg     unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  byte            1    0[COMMON] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       0       0       0
  2671 ;;      Locals:         1       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0
  2673 ;;      Totals:         1       0       0       0       0
  2674 ;;Total ram usage:        1 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_Interrups
  2680 ;;		_print_string
  2681 ;;		_TransmitCMD_USART
  2682 ;;		_TransmitDAT_USART
  2683 ;;		_print_value
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687  099D                     _WriteByte_USART:	
  2688                           ;psect for function _WriteByte_USART
  2689                           
  2690                           
  2691                           ;incstack = 0
  2692                           ; Regs used in _WriteByte_USART: [wreg]
  2693                           ;WriteByte_USART@byte stored from wreg
  2694  099D  00F0               	movwf	WriteByte_USART@byte
  2695  099E                     i1l2041:
  2696                           
  2697                           ;LIB16F_USART.c: 48:     TXREG = byte;
  2698  099E  0870               	movf	WriteByte_USART@byte,w
  2699  099F  1283               	bcf	3,5	;RP0=0, select bank0
  2700  09A0  1303               	bcf	3,6	;RP1=0, select bank0
  2701  09A1  0099               	movwf	25	;volatile
  2702  09A2                     i1l2043:
  2703                           
  2704                           ;LIB16F_USART.c: 49:     __nop();
  2705  09A2  0000               	nop
  2706  09A3                     i1l368:	
  2707                           ;LIB16F_USART.c: 50:     while(!PIR1bits.TXIF);
  2708                           
  2709  09A3  1283               	bcf	3,5	;RP0=0, select bank0
  2710  09A4  1303               	bcf	3,6	;RP1=0, select bank0
  2711  09A5  1E0C               	btfss	12,4	;volatile
  2712  09A6  29A8               	goto	u97_21
  2713  09A7  29A9               	goto	u97_20
  2714  09A8                     u97_21:
  2715  09A8  29A3               	goto	i1l368
  2716  09A9                     u97_20:
  2717  09A9                     i1l371:
  2718  09A9  0008               	return
  2719  09AA                     __end_of_WriteByte_USART:
  2720                           
  2721                           	psect	text11
  2722  0BF6                     __ptext11:	
  2723 ;; *************** function _ReceiveCMD_USART *****************
  2724 ;; Defined at:
  2725 ;;		line 62 in file "LIB16F_USART.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  data_byte       1    2[COMMON] unsigned char 
  2730 ;;  conta_byte      1    1[COMMON] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      unsigned char 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         2       0       0       0       0
  2742 ;;      Temps:          1       0       0       0       0
  2743 ;;      Totals:         3       0       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 1
  2747 ;; This function calls:
  2748 ;;		_ReadByte_USART
  2749 ;; This function is called by:
  2750 ;;		_Interrups
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754  0BF6                     _ReceiveCMD_USART:	
  2755                           ;psect for function _ReceiveCMD_USART
  2756                           
  2757  0BF6                     i1l2357:	
  2758                           ;incstack = 0
  2759                           ; Regs used in _ReceiveCMD_USART: [wreg+status,2+status,0+pclath+cstack]
  2760                           
  2761                           
  2762                           ;LIB16F_USART.c: 63:     unsigned char conta_byte;;LIB16F_USART.c: 64:     unsigned char
      +                           data_byte;;LIB16F_USART.c: 66:     for(conta_byte=0; conta_byte<10; conta_byte++){
  2763  0BF6  01F1               	clrf	ReceiveCMD_USART@conta_byte
  2764  0BF7                     i1l2363:
  2765                           
  2766                           ;LIB16F_USART.c: 67:         data_byte = ReadByte_USART();
  2767  0BF7  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2768  0BFC  00F0               	movwf	??_ReceiveCMD_USART
  2769  0BFD  0870               	movf	??_ReceiveCMD_USART,w
  2770  0BFE  00F2               	movwf	ReceiveCMD_USART@data_byte
  2771  0BFF                     i1l2365:
  2772                           
  2773                           ;LIB16F_USART.c: 68:         if(data_byte == 'J'){
  2774  0BFF  304A               	movlw	74
  2775  0C00  0672               	xorwf	ReceiveCMD_USART@data_byte,w
  2776  0C01  1D03               	btfss	3,2
  2777  0C02  2C04               	goto	u137_21
  2778  0C03  2C05               	goto	u137_20
  2779  0C04                     u137_21:
  2780  0C04  2C06               	goto	i1l2369
  2781  0C05                     u137_20:
  2782  0C05  2C10               	goto	i1l2373
  2783  0C06                     i1l2369:
  2784                           
  2785                           ;LIB16F_USART.c: 71:     }
  2786  0C06  3001               	movlw	1
  2787  0C07  00F0               	movwf	??_ReceiveCMD_USART
  2788  0C08  0870               	movf	??_ReceiveCMD_USART,w
  2789  0C09  07F1               	addwf	ReceiveCMD_USART@conta_byte,f
  2790  0C0A                     i1l2371:
  2791  0C0A  300A               	movlw	10
  2792  0C0B  0271               	subwf	ReceiveCMD_USART@conta_byte,w
  2793  0C0C  1C03               	skipc
  2794  0C0D  2C0F               	goto	u138_21
  2795  0C0E  2C10               	goto	u138_20
  2796  0C0F                     u138_21:
  2797  0C0F  2BF7               	goto	i1l2363
  2798  0C10                     u138_20:
  2799  0C10                     i1l2373:
  2800                           
  2801                           ;LIB16F_USART.c: 72:     if(conta_byte < 10){
  2802  0C10  300A               	movlw	10
  2803  0C11  0271               	subwf	ReceiveCMD_USART@conta_byte,w
  2804  0C12  1803               	skipnc
  2805  0C13  2C15               	goto	u139_21
  2806  0C14  2C16               	goto	u139_20
  2807  0C15                     u139_21:
  2808  0C15  2C6E               	goto	i1l383
  2809  0C16                     u139_20:
  2810  0C16                     i1l2375:
  2811                           
  2812                           ;LIB16F_USART.c: 73:         data_byte = ReadByte_USART();
  2813  0C16  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2814  0C1B  00F0               	movwf	??_ReceiveCMD_USART
  2815  0C1C  0870               	movf	??_ReceiveCMD_USART,w
  2816  0C1D  00F2               	movwf	ReceiveCMD_USART@data_byte
  2817  0C1E                     i1l2377:
  2818                           
  2819                           ;LIB16F_USART.c: 74:         if(data_byte == 'R'){
  2820  0C1E  3052               	movlw	82
  2821  0C1F  0672               	xorwf	ReceiveCMD_USART@data_byte,w
  2822  0C20  1D03               	btfss	3,2
  2823  0C21  2C23               	goto	u140_21
  2824  0C22  2C24               	goto	u140_20
  2825  0C23                     u140_21:
  2826  0C23  2C6E               	goto	i1l383
  2827  0C24                     u140_20:
  2828  0C24                     i1l2379:
  2829                           
  2830                           ;LIB16F_USART.c: 75:             data_byte = ReadByte_USART();
  2831  0C24  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2832  0C29  00F0               	movwf	??_ReceiveCMD_USART
  2833  0C2A  0870               	movf	??_ReceiveCMD_USART,w
  2834  0C2B  00F2               	movwf	ReceiveCMD_USART@data_byte
  2835  0C2C                     i1l2381:
  2836                           
  2837                           ;LIB16F_USART.c: 76:             if(data_byte == 'O'){
  2838  0C2C  304F               	movlw	79
  2839  0C2D  0672               	xorwf	ReceiveCMD_USART@data_byte,w
  2840  0C2E  1D03               	btfss	3,2
  2841  0C2F  2C31               	goto	u141_21
  2842  0C30  2C32               	goto	u141_20
  2843  0C31                     u141_21:
  2844  0C31  2C6E               	goto	i1l383
  2845  0C32                     u141_20:
  2846  0C32                     i1l2383:
  2847                           
  2848                           ;LIB16F_USART.c: 77:                 data_byte = ReadByte_USART();
  2849  0C32  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2850  0C37  00F0               	movwf	??_ReceiveCMD_USART
  2851  0C38  0870               	movf	??_ReceiveCMD_USART,w
  2852  0C39  00F2               	movwf	ReceiveCMD_USART@data_byte
  2853  0C3A                     i1l2385:
  2854                           
  2855                           ;LIB16F_USART.c: 78:                 if(data_byte == 'C'){
  2856  0C3A  3043               	movlw	67
  2857  0C3B  0672               	xorwf	ReceiveCMD_USART@data_byte,w
  2858  0C3C  1D03               	btfss	3,2
  2859  0C3D  2C3F               	goto	u142_21
  2860  0C3E  2C40               	goto	u142_20
  2861  0C3F                     u142_21:
  2862  0C3F  2C6E               	goto	i1l383
  2863  0C40                     u142_20:
  2864  0C40                     i1l2387:
  2865                           
  2866                           ;LIB16F_USART.c: 79:                     data_byte = ReadByte_USART();
  2867  0C40  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2868  0C45  00F0               	movwf	??_ReceiveCMD_USART
  2869  0C46  0870               	movf	??_ReceiveCMD_USART,w
  2870  0C47  00F2               	movwf	ReceiveCMD_USART@data_byte
  2871                           
  2872                           ;LIB16F_USART.c: 80:                     data_byte = ReadByte_USART();
  2873  0C48  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2874  0C4D  00F0               	movwf	??_ReceiveCMD_USART
  2875  0C4E  0870               	movf	??_ReceiveCMD_USART,w
  2876  0C4F  00F2               	movwf	ReceiveCMD_USART@data_byte
  2877                           
  2878                           ;LIB16F_USART.c: 81:                     BufferDAT[12] = ReadByte_USART();
  2879  0C50  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2880  0C55  00F0               	movwf	??_ReceiveCMD_USART
  2881  0C56  0870               	movf	??_ReceiveCMD_USART,w
  2882  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0C59  00CD               	movwf	_BufferDAT+12
  2885                           
  2886                           ;LIB16F_USART.c: 82:                     data_byte = ReadByte_USART();
  2887  0C5A  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2888  0C5F  00F0               	movwf	??_ReceiveCMD_USART
  2889  0C60  0870               	movf	??_ReceiveCMD_USART,w
  2890  0C61  00F2               	movwf	ReceiveCMD_USART@data_byte
  2891                           
  2892                           ;LIB16F_USART.c: 83:                     data_byte = ReadByte_USART();
  2893  0C62  120A  158A  21AA  120A  158A  	fcall	_ReadByte_USART
  2894  0C67  00F0               	movwf	??_ReceiveCMD_USART
  2895  0C68  0870               	movf	??_ReceiveCMD_USART,w
  2896  0C69  00F2               	movwf	ReceiveCMD_USART@data_byte
  2897  0C6A                     i1l2389:
  2898                           
  2899                           ;LIB16F_USART.c: 84:                     return BufferDAT[12];
  2900  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0C6C  084D               	movf	_BufferDAT+12,w
  2903  0C6D  2C72               	goto	i1l387
  2904  0C6E                     i1l383:	
  2905                           ;LIB16F_USART.c: 88:     }
  2906                           
  2907                           
  2908                           ;LIB16F_USART.c: 89:     RCSTAbits.CREN = 0;
  2909  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0C70  1218               	bcf	24,4	;volatile
  2912  0C71                     i1l2393:
  2913                           
  2914                           ;LIB16F_USART.c: 90:     return 'X';
  2915  0C71  3058               	movlw	88
  2916  0C72                     i1l387:
  2917  0C72  0008               	return
  2918  0C73                     __end_of_ReceiveCMD_USART:
  2919                           
  2920                           	psect	text12
  2921  09AA                     __ptext12:	
  2922 ;; *************** function _ReadByte_USART *****************
  2923 ;; Defined at:
  2924 ;;		line 35 in file "LIB16F_USART.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      unsigned char 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2938 ;;      Params:         0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0
  2941 ;;      Totals:         0       0       0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_ReceiveCMD_USART
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951  09AA                     _ReadByte_USART:	
  2952                           ;psect for function _ReadByte_USART
  2953                           
  2954  09AA                     i1l2095:	
  2955                           ;incstack = 0
  2956                           ; Regs used in _ReadByte_USART: [wreg+status,2]
  2957                           
  2958                           
  2959                           ;LIB16F_USART.c: 37:     TMR2 = 0x00;
  2960  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  2961  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  2962  09AC  0191               	clrf	17	;volatile
  2963  09AD                     i1l2097:
  2964                           
  2965                           ;LIB16F_USART.c: 38:     T2CONbits.TMR2ON = 1;
  2966  09AD  1512               	bsf	18,2	;volatile
  2967  09AE                     i1l360:	
  2968                           ;LIB16F_USART.c: 39:     while((!PIR1bits.RCIF) && (!PIR1bits.TMR2IF));
  2969                           
  2970  09AE  1A8C               	btfsc	12,5	;volatile
  2971  09AF  29B1               	goto	u103_21
  2972  09B0  29B2               	goto	u103_20
  2973  09B1                     u103_21:
  2974  09B1  29B6               	goto	i1l364
  2975  09B2                     u103_20:
  2976  09B2                     i1l2099:
  2977  09B2  1C8C               	btfss	12,1	;volatile
  2978  09B3  29B5               	goto	u104_21
  2979  09B4  29B6               	goto	u104_20
  2980  09B5                     u104_21:
  2981  09B5  29AE               	goto	i1l360
  2982  09B6                     u104_20:
  2983  09B6                     i1l364:
  2984                           
  2985                           ;LIB16F_USART.c: 41:     T2CONbits.TMR2ON = 0;
  2986  09B6  1112               	bcf	18,2	;volatile
  2987                           
  2988                           ;LIB16F_USART.c: 42:     PIR1bits.TMR2IF = 0;
  2989  09B7  108C               	bcf	12,1	;volatile
  2990  09B8                     i1l2101:
  2991                           
  2992                           ;LIB16F_USART.c: 43:     return RCREG;
  2993  09B8  081A               	movf	26,w	;volatile
  2994  09B9                     i1l365:
  2995  09B9  0008               	return
  2996  09BA                     __end_of_ReadByte_USART:
  2997                           
  2998                           	psect	text13
  2999  0B34                     __ptext13:	
  3000 ;; *************** function _ReadDataADC *****************
  3001 ;; Defined at:
  3002 ;;		line 10 in file "LIB_ADS7825.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  DataADC         2    4[COMMON] short 
  3007 ;;  i               1    3[COMMON] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2    0[COMMON] short 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         2       0       0       0       0
  3018 ;;      Locals:         3       0       0       0       0
  3019 ;;      Temps:          1       0       0       0       0
  3020 ;;      Totals:         6       0       0       0       0
  3021 ;;Total ram usage:        6 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_Interrups
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030  0B34                     _ReadDataADC:	
  3031                           ;psect for function _ReadDataADC
  3032                           
  3033  0B34                     i1l2161:	
  3034                           ;incstack = 0
  3035                           ; Regs used in _ReadDataADC: [wreg+status,2+status,0]
  3036                           
  3037                           
  3038                           ;LIB_ADS7825.c: 11:     unsigned char i;;LIB_ADS7825.c: 12:     signed short DataADC;;LI
      +                          B_ADS7825.c: 14:     PORTBbits.RB5 = 1;
  3039  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0B36  1686               	bsf	6,5	;volatile
  3042                           
  3043                           ;LIB_ADS7825.c: 15:     PORTAbits.RA1 = 1;
  3044  0B37  1485               	bsf	5,1	;volatile
  3045                           
  3046                           ;LIB_ADS7825.c: 16:     PORTAbits.RA2 = 0;
  3047  0B38  1105               	bcf	5,2	;volatile
  3048  0B39                     i1l2163:
  3049                           
  3050                           ;LIB_ADS7825.c: 17:     _delay((unsigned long)((25)*(9830400UL/4000000.0)));
  3051  0B39  3014               	movlw	20
  3052  0B3A  00F2               	movwf	??_ReadDataADC
  3053  0B3B                     u209_27:
  3054  0B3B  0BF2               	decfsz	??_ReadDataADC,f
  3055  0B3C  2B3B               	goto	u209_27
  3056  0B3D                     i1l2165:
  3057                           
  3058                           ;LIB_ADS7825.c: 20:     PORTAbits.RA1 = 0;
  3059  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0B3F  1085               	bcf	5,1	;volatile
  3062  0B40                     i1l2167:
  3063                           
  3064                           ;LIB_ADS7825.c: 21:     PORTBbits.RB5 = 0;
  3065  0B40  1286               	bcf	6,5	;volatile
  3066  0B41                     i1l443:	
  3067                           ;LIB_ADS7825.c: 22:     while(PORTBbits.RB4);
  3068                           
  3069  0B41  1A06               	btfsc	6,4	;volatile
  3070  0B42  2B44               	goto	u111_21
  3071  0B43  2B45               	goto	u111_20
  3072  0B44                     u111_21:
  3073  0B44  2B41               	goto	i1l443
  3074  0B45                     u111_20:
  3075  0B45                     i1l445:
  3076                           
  3077                           ;LIB_ADS7825.c: 23:     PORTBbits.RB5 = 1;
  3078  0B45  1686               	bsf	6,5	;volatile
  3079                           
  3080                           ;LIB_ADS7825.c: 24:     PORTAbits.RA1 = 1;
  3081  0B46  1485               	bsf	5,1	;volatile
  3082  0B47                     i1l446:	
  3083                           ;LIB_ADS7825.c: 25:     while(!PORTBbits.RB4);
  3084                           
  3085  0B47  1E06               	btfss	6,4	;volatile
  3086  0B48  2B4A               	goto	u112_21
  3087  0B49  2B4B               	goto	u112_20
  3088  0B4A                     u112_21:
  3089  0B4A  2B47               	goto	i1l446
  3090  0B4B                     u112_20:
  3091  0B4B                     i1l448:
  3092                           
  3093                           ;LIB_ADS7825.c: 28:     PORTBbits.RB5 = 0;
  3094  0B4B  1286               	bcf	6,5	;volatile
  3095                           
  3096                           ;LIB_ADS7825.c: 29:     PORTAbits.RA2 = 1;
  3097  0B4C  1505               	bsf	5,2	;volatile
  3098  0B4D                     i1l449:	
  3099                           ;LIB_ADS7825.c: 30:     while(PORTBbits.RB4);
  3100                           
  3101  0B4D  1A06               	btfsc	6,4	;volatile
  3102  0B4E  2B50               	goto	u113_21
  3103  0B4F  2B51               	goto	u113_20
  3104  0B50                     u113_21:
  3105  0B50  2B4D               	goto	i1l449
  3106  0B51                     u113_20:
  3107  0B51                     i1l451:
  3108                           
  3109                           ;LIB_ADS7825.c: 31:     PORTAbits.RA2 = 0;
  3110  0B51  1105               	bcf	5,2	;volatile
  3111                           
  3112                           ;LIB_ADS7825.c: 32:     PORTAbits.RA2 = 1;
  3113  0B52  1505               	bsf	5,2	;volatile
  3114  0B53                     i1l452:	
  3115                           ;LIB_ADS7825.c: 33:     while(!PORTBbits.RB4);
  3116                           
  3117  0B53  1E06               	btfss	6,4	;volatile
  3118  0B54  2B56               	goto	u114_21
  3119  0B55  2B57               	goto	u114_20
  3120  0B56                     u114_21:
  3121  0B56  2B53               	goto	i1l452
  3122  0B57                     u114_20:
  3123  0B57                     i1l2169:
  3124                           
  3125                           ;LIB_ADS7825.c: 36:     DataADC = 0;
  3126  0B57  01F4               	clrf	ReadDataADC@DataADC
  3127  0B58  01F5               	clrf	ReadDataADC@DataADC+1
  3128                           
  3129                           ;LIB_ADS7825.c: 37:     for (i = 0;i < 15; i++){
  3130  0B59  01F3               	clrf	ReadDataADC@i
  3131  0B5A                     i1l455:
  3132                           
  3133                           ;LIB_ADS7825.c: 38:         PORTAbits.RA2 = 0;
  3134  0B5A  1105               	bcf	5,2	;volatile
  3135                           
  3136                           ;LIB_ADS7825.c: 39:         __nop();
  3137  0B5B  0000               	nop
  3138                           
  3139                           ;LIB_ADS7825.c: 40:         if (PORTCbits.RC5 == 1){
  3140  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0B5E  1E87               	btfss	7,5	;volatile
  3143  0B5F  2B61               	goto	u115_21
  3144  0B60  2B62               	goto	u115_20
  3145  0B61                     u115_21:
  3146  0B61  2B68               	goto	i1l2177
  3147  0B62                     u115_20:
  3148  0B62                     i1l2175:
  3149                           
  3150                           ;LIB_ADS7825.c: 41:             DataADC = DataADC | 0x0001;
  3151  0B62  3001               	movlw	1
  3152  0B63  0474               	iorwf	ReadDataADC@DataADC,w
  3153  0B64  00F4               	movwf	ReadDataADC@DataADC
  3154  0B65  3000               	movlw	0
  3155  0B66  0475               	iorwf	ReadDataADC@DataADC+1,w
  3156  0B67  00F5               	movwf	ReadDataADC@DataADC+1
  3157  0B68                     i1l2177:
  3158                           
  3159                           ;LIB_ADS7825.c: 43:         PORTAbits.RA2 = 1;
  3160  0B68  1505               	bsf	5,2	;volatile
  3161                           
  3162                           ;LIB_ADS7825.c: 44:         DataADC <<= 1;
  3163  0B69  3001               	movlw	1
  3164  0B6A                     u116_25:
  3165  0B6A  1003               	clrc
  3166  0B6B  0DF4               	rlf	ReadDataADC@DataADC,f
  3167  0B6C  0DF5               	rlf	ReadDataADC@DataADC+1,f
  3168  0B6D  3EFF               	addlw	-1
  3169  0B6E  1D03               	skipz
  3170  0B6F  2B6A               	goto	u116_25
  3171  0B70                     i1l2179:
  3172                           
  3173                           ;LIB_ADS7825.c: 45:     }
  3174  0B70  3001               	movlw	1
  3175  0B71  00F2               	movwf	??_ReadDataADC
  3176  0B72  0872               	movf	??_ReadDataADC,w
  3177  0B73  07F3               	addwf	ReadDataADC@i,f
  3178  0B74                     i1l2181:
  3179  0B74  300F               	movlw	15
  3180  0B75  0273               	subwf	ReadDataADC@i,w
  3181  0B76  1C03               	skipc
  3182  0B77  2B79               	goto	u117_21
  3183  0B78  2B7A               	goto	u117_20
  3184  0B79                     u117_21:
  3185  0B79  2B5A               	goto	i1l455
  3186  0B7A                     u117_20:
  3187  0B7A                     i1l456:
  3188                           
  3189                           ;LIB_ADS7825.c: 46:     PORTAbits.RA2 = 0;
  3190  0B7A  1105               	bcf	5,2	;volatile
  3191                           
  3192                           ;LIB_ADS7825.c: 47:     __nop();
  3193  0B7B  0000               	nop
  3194                           
  3195                           ;LIB_ADS7825.c: 48:     if (PORTCbits.RC5 == 1){
  3196  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0B7E  1E87               	btfss	7,5	;volatile
  3199  0B7F  2B81               	goto	u118_21
  3200  0B80  2B82               	goto	u118_20
  3201  0B81                     u118_21:
  3202  0B81  2B88               	goto	i1l2185
  3203  0B82                     u118_20:
  3204  0B82                     i1l2183:
  3205                           
  3206                           ;LIB_ADS7825.c: 49:         DataADC = DataADC | 0x0001;
  3207  0B82  3001               	movlw	1
  3208  0B83  0474               	iorwf	ReadDataADC@DataADC,w
  3209  0B84  00F4               	movwf	ReadDataADC@DataADC
  3210  0B85  3000               	movlw	0
  3211  0B86  0475               	iorwf	ReadDataADC@DataADC+1,w
  3212  0B87  00F5               	movwf	ReadDataADC@DataADC+1
  3213  0B88                     i1l2185:
  3214                           
  3215                           ;LIB_ADS7825.c: 52:     PORTBbits.RB5 = 1;
  3216  0B88  1686               	bsf	6,5	;volatile
  3217                           
  3218                           ;LIB_ADS7825.c: 53:     return DataADC;
  3219  0B89  0875               	movf	ReadDataADC@DataADC+1,w
  3220  0B8A  00F1               	movwf	?_ReadDataADC+1
  3221  0B8B  0874               	movf	ReadDataADC@DataADC,w
  3222  0B8C  00F0               	movwf	?_ReadDataADC
  3223  0B8D                     i1l459:
  3224  0B8D  0008               	return
  3225  0B8E                     __end_of_ReadDataADC:
  3226                           
  3227                           	psect	text14
  3228  0B8E                     __ptext14:	
  3229 ;; *************** function _GPS_TIMEDATE *****************
  3230 ;; Defined at:
  3231 ;;		line 176 in file "LIB16F_GPS38400.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  conta           1    4[COMMON] unsigned char 
  3236 ;;  LimitConta      1    3[COMMON] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       0       0       0
  3247 ;;      Locals:         2       0       0       0       0
  3248 ;;      Temps:          1       0       0       0       0
  3249 ;;      Totals:         3       0       0       0       0
  3250 ;;Total ram usage:        3 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 1
  3253 ;; This function calls:
  3254 ;;		_ReadByteSW_USART
  3255 ;; This function is called by:
  3256 ;;		_Interrups
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260  0B8E                     _GPS_TIMEDATE:	
  3261                           ;psect for function _GPS_TIMEDATE
  3262                           
  3263  0B8E                     i1l2105:	
  3264                           ;incstack = 0
  3265                           ; Regs used in _GPS_TIMEDATE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3266                           
  3267                           
  3268                           ;LIB16F_GPS38400.c: 181:     unsigned char LimitConta = 0;
  3269  0B8E  01F3               	clrf	GPS_TIMEDATE@LimitConta
  3270                           
  3271                           ;LIB16F_GPS38400.c: 185:     while(LimitConta < 150){
  3272  0B8F  2BEF               	goto	i1l2159
  3273  0B90                     i1l2107:
  3274                           
  3275                           ;LIB16F_GPS38400.c: 186:         ReadByteSW_USART();
  3276  0B90  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3277  0B95                     i1l2109:
  3278                           
  3279                           ;LIB16F_GPS38400.c: 187:         if(RxBuffer == 'C'){
  3280  0B95  3043               	movlw	67
  3281  0B96  067D               	xorwf	_RxBuffer,w
  3282  0B97  1D03               	btfss	3,2
  3283  0B98  2B9A               	goto	u105_21
  3284  0B99  2B9B               	goto	u105_20
  3285  0B9A                     u105_21:
  3286  0B9A  2BEB               	goto	i1l2157
  3287  0B9B                     u105_20:
  3288  0B9B                     i1l2111:
  3289                           
  3290                           ;LIB16F_GPS38400.c: 189:             ReadByteSW_USART();
  3291  0B9B  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3292  0BA0                     i1l2113:
  3293                           
  3294                           ;LIB16F_GPS38400.c: 191:             for(conta=0; conta<6; conta++){
  3295  0BA0  01F4               	clrf	GPS_TIMEDATE@conta
  3296  0BA1                     i1l2119:
  3297                           
  3298                           ;LIB16F_GPS38400.c: 192:                 ReadByteSW_USART();
  3299  0BA1  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3300  0BA6                     i1l2121:
  3301                           
  3302                           ;LIB16F_GPS38400.c: 193:                 BufferDAT[conta] = RxBuffer;
  3303  0BA6  087D               	movf	_RxBuffer,w
  3304  0BA7  00F2               	movwf	??_GPS_TIMEDATE
  3305  0BA8  0874               	movf	GPS_TIMEDATE@conta,w
  3306  0BA9  3E41               	addlw	(low (_BufferDAT| 0))& (0+255)
  3307  0BAA  0084               	movwf	4
  3308  0BAB  0872               	movf	??_GPS_TIMEDATE,w
  3309  0BAC  1383               	bcf	3,7	;select IRP bank0
  3310  0BAD  0080               	movwf	0
  3311  0BAE                     i1l2123:
  3312                           
  3313                           ;LIB16F_GPS38400.c: 194:             }
  3314  0BAE  3001               	movlw	1
  3315  0BAF  00F2               	movwf	??_GPS_TIMEDATE
  3316  0BB0  0872               	movf	??_GPS_TIMEDATE,w
  3317  0BB1  07F4               	addwf	GPS_TIMEDATE@conta,f
  3318  0BB2                     i1l2125:
  3319  0BB2  3006               	movlw	6
  3320  0BB3  0274               	subwf	GPS_TIMEDATE@conta,w
  3321  0BB4  1C03               	skipc
  3322  0BB5  2BB7               	goto	u106_21
  3323  0BB6  2BB8               	goto	u106_20
  3324  0BB7                     u106_21:
  3325  0BB7  2BA1               	goto	i1l2119
  3326  0BB8                     u106_20:
  3327  0BB8                     i1l2127:
  3328                           
  3329                           ;LIB16F_GPS38400.c: 196:             conta = 0;
  3330  0BB8  01F4               	clrf	GPS_TIMEDATE@conta
  3331                           
  3332                           ;LIB16F_GPS38400.c: 197:             while(conta<8){
  3333  0BB9  2BC9               	goto	i1l2135
  3334  0BBA                     i1l2129:
  3335                           
  3336                           ;LIB16F_GPS38400.c: 198:                 ReadByteSW_USART();
  3337  0BBA  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3338  0BBF                     i1l2131:
  3339                           
  3340                           ;LIB16F_GPS38400.c: 199:                 if(RxBuffer == ','){
  3341  0BBF  302C               	movlw	44
  3342  0BC0  067D               	xorwf	_RxBuffer,w
  3343  0BC1  1D03               	btfss	3,2
  3344  0BC2  2BC4               	goto	u107_21
  3345  0BC3  2BC5               	goto	u107_20
  3346  0BC4                     u107_21:
  3347  0BC4  2BC9               	goto	i1l2135
  3348  0BC5                     u107_20:
  3349  0BC5                     i1l2133:
  3350                           
  3351                           ;LIB16F_GPS38400.c: 200:                     conta++;
  3352  0BC5  3001               	movlw	1
  3353  0BC6  00F2               	movwf	??_GPS_TIMEDATE
  3354  0BC7  0872               	movf	??_GPS_TIMEDATE,w
  3355  0BC8  07F4               	addwf	GPS_TIMEDATE@conta,f
  3356  0BC9                     i1l2135:
  3357                           
  3358                           ;LIB16F_GPS38400.c: 197:             while(conta<8){
  3359  0BC9  3008               	movlw	8
  3360  0BCA  0274               	subwf	GPS_TIMEDATE@conta,w
  3361  0BCB  1C03               	skipc
  3362  0BCC  2BCE               	goto	u108_21
  3363  0BCD  2BCF               	goto	u108_20
  3364  0BCE                     u108_21:
  3365  0BCE  2BBA               	goto	i1l2129
  3366  0BCF                     u108_20:
  3367  0BCF                     i1l2137:
  3368                           
  3369                           ;LIB16F_GPS38400.c: 204:             for(conta=0; conta<6; conta++){
  3370  0BCF  01F4               	clrf	GPS_TIMEDATE@conta
  3371  0BD0                     i1l2143:
  3372                           
  3373                           ;LIB16F_GPS38400.c: 205:                 ReadByteSW_USART();
  3374  0BD0  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3375  0BD5                     i1l2145:
  3376                           
  3377                           ;LIB16F_GPS38400.c: 206:                 BufferDAT[conta + 6] = RxBuffer;
  3378  0BD5  087D               	movf	_RxBuffer,w
  3379  0BD6  00F2               	movwf	??_GPS_TIMEDATE
  3380  0BD7  0874               	movf	GPS_TIMEDATE@conta,w
  3381  0BD8  3E47               	addlw	(low ((_BufferDAT| 0+6)))& (0+255)
  3382  0BD9  0084               	movwf	4
  3383  0BDA  0872               	movf	??_GPS_TIMEDATE,w
  3384  0BDB  1383               	bcf	3,7	;select IRP bank0
  3385  0BDC  0080               	movwf	0
  3386  0BDD                     i1l2147:
  3387                           
  3388                           ;LIB16F_GPS38400.c: 207:             }
  3389  0BDD  3001               	movlw	1
  3390  0BDE  00F2               	movwf	??_GPS_TIMEDATE
  3391  0BDF  0872               	movf	??_GPS_TIMEDATE,w
  3392  0BE0  07F4               	addwf	GPS_TIMEDATE@conta,f
  3393  0BE1                     i1l2149:
  3394  0BE1  3006               	movlw	6
  3395  0BE2  0274               	subwf	GPS_TIMEDATE@conta,w
  3396  0BE3  1C03               	skipc
  3397  0BE4  2BE6               	goto	u109_21
  3398  0BE5  2BE7               	goto	u109_20
  3399  0BE6                     u109_21:
  3400  0BE6  2BD0               	goto	i1l2143
  3401  0BE7                     u109_20:
  3402  0BE7                     i1l2151:
  3403                           
  3404                           ;LIB16F_GPS38400.c: 208:             BufferDAT[12] = '\0';
  3405  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0BE9  01CD               	clrf	_BufferDAT+12
  3408  0BEA                     i1l2153:
  3409                           
  3410                           ;LIB16F_GPS38400.c: 210:             break;
  3411  0BEA  2BF5               	goto	i1l288
  3412  0BEB                     i1l2157:
  3413                           
  3414                           ;LIB16F_GPS38400.c: 212:             LimitConta++;
  3415  0BEB  3001               	movlw	1
  3416  0BEC  00F2               	movwf	??_GPS_TIMEDATE
  3417  0BED  0872               	movf	??_GPS_TIMEDATE,w
  3418  0BEE  07F3               	addwf	GPS_TIMEDATE@LimitConta,f
  3419  0BEF                     i1l2159:
  3420                           
  3421                           ;LIB16F_GPS38400.c: 185:     while(LimitConta < 150){
  3422  0BEF  3096               	movlw	150
  3423  0BF0  0273               	subwf	GPS_TIMEDATE@LimitConta,w
  3424  0BF1  1C03               	skipc
  3425  0BF2  2BF4               	goto	u110_21
  3426  0BF3  2BF5               	goto	u110_20
  3427  0BF4                     u110_21:
  3428  0BF4  2B90               	goto	i1l2107
  3429  0BF5                     u110_20:
  3430  0BF5                     i1l288:
  3431  0BF5  0008               	return
  3432  0BF6                     __end_of_GPS_TIMEDATE:
  3433                           
  3434                           	psect	text15
  3435  0C73                     __ptext15:	
  3436 ;; *************** function _GPS_STATUS *****************
  3437 ;; Defined at:
  3438 ;;		line 49 in file "LIB16F_GPS38400.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  LimitConta      2    3[COMMON] unsigned short 
  3443 ;;  conta           1    5[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         3       0       0       0       0
  3455 ;;      Temps:          1       0       0       0       0
  3456 ;;      Totals:         4       0       0       0       0
  3457 ;;Total ram usage:        4 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 1
  3460 ;; This function calls:
  3461 ;;		_ReadByteSW_USART
  3462 ;; This function is called by:
  3463 ;;		_Interrups
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467  0C73                     _GPS_STATUS:	
  3468                           ;psect for function _GPS_STATUS
  3469                           
  3470  0C73                     i1l2299:	
  3471                           ;incstack = 0
  3472                           ; Regs used in _GPS_STATUS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3473                           
  3474                           
  3475                           ;LIB16F_GPS38400.c: 56:     unsigned short LimitConta = 0;
  3476  0C73  01F3               	clrf	GPS_STATUS@LimitConta
  3477  0C74  01F4               	clrf	GPS_STATUS@LimitConta+1
  3478                           
  3479                           ;LIB16F_GPS38400.c: 59:     while(LimitConta < 4200){
  3480  0C75  2CEB               	goto	i1l230
  3481  0C76                     i1l2301:
  3482                           
  3483                           ;LIB16F_GPS38400.c: 60:         ReadByteSW_USART();
  3484  0C76  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3485  0C7B                     i1l2303:
  3486                           
  3487                           ;LIB16F_GPS38400.c: 61:         if(RxBuffer == 'C'){
  3488  0C7B  3043               	movlw	67
  3489  0C7C  067D               	xorwf	_RxBuffer,w
  3490  0C7D  1D03               	btfss	3,2
  3491  0C7E  2C80               	goto	u130_21
  3492  0C7F  2C81               	goto	u130_20
  3493  0C80                     u130_21:
  3494  0C80  2CE5               	goto	i1l2355
  3495  0C81                     u130_20:
  3496  0C81                     i1l2305:
  3497                           
  3498                           ;LIB16F_GPS38400.c: 63:             ReadByteSW_USART();
  3499  0C81  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3500  0C86                     i1l2307:
  3501                           
  3502                           ;LIB16F_GPS38400.c: 65:             for(conta=0; conta<6; conta++){
  3503  0C86  01F5               	clrf	GPS_STATUS@conta
  3504  0C87                     i1l2313:
  3505                           
  3506                           ;LIB16F_GPS38400.c: 66:                 ReadByteSW_USART();
  3507  0C87  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3508  0C8C                     i1l2315:
  3509                           
  3510                           ;LIB16F_GPS38400.c: 67:                 BufferDAT[conta] = RxBuffer;
  3511  0C8C  087D               	movf	_RxBuffer,w
  3512  0C8D  00F2               	movwf	??_GPS_STATUS
  3513  0C8E  0875               	movf	GPS_STATUS@conta,w
  3514  0C8F  3E41               	addlw	(low (_BufferDAT| 0))& (0+255)
  3515  0C90  0084               	movwf	4
  3516  0C91  0872               	movf	??_GPS_STATUS,w
  3517  0C92  1383               	bcf	3,7	;select IRP bank0
  3518  0C93  0080               	movwf	0
  3519  0C94                     i1l2317:
  3520                           
  3521                           ;LIB16F_GPS38400.c: 68:             }
  3522  0C94  3001               	movlw	1
  3523  0C95  00F2               	movwf	??_GPS_STATUS
  3524  0C96  0872               	movf	??_GPS_STATUS,w
  3525  0C97  07F5               	addwf	GPS_STATUS@conta,f
  3526  0C98                     i1l2319:
  3527  0C98  3006               	movlw	6
  3528  0C99  0275               	subwf	GPS_STATUS@conta,w
  3529  0C9A  1C03               	skipc
  3530  0C9B  2C9D               	goto	u131_21
  3531  0C9C  2C9E               	goto	u131_20
  3532  0C9D                     u131_21:
  3533  0C9D  2C87               	goto	i1l2313
  3534  0C9E                     u131_20:
  3535  0C9E                     i1l2321:
  3536                           
  3537                           ;LIB16F_GPS38400.c: 70:             ReadByteSW_USART();
  3538  0C9E  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3539                           
  3540                           ;LIB16F_GPS38400.c: 72:             ReadByteSW_USART();
  3541  0CA3  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3542  0CA8                     i1l2323:
  3543                           
  3544                           ;LIB16F_GPS38400.c: 73:             if(RxBuffer == 'A'){
  3545  0CA8  3041               	movlw	65
  3546  0CA9  067D               	xorwf	_RxBuffer,w
  3547  0CAA  1D03               	btfss	3,2
  3548  0CAB  2CAD               	goto	u132_21
  3549  0CAC  2CAE               	goto	u132_20
  3550  0CAD                     u132_21:
  3551  0CAD  2CEB               	goto	i1l230
  3552  0CAE                     u132_20:
  3553  0CAE                     i1l2325:
  3554                           
  3555                           ;LIB16F_GPS38400.c: 75:                 conta = 0;
  3556  0CAE  01F5               	clrf	GPS_STATUS@conta
  3557                           
  3558                           ;LIB16F_GPS38400.c: 76:                 while(conta<7){
  3559  0CAF  2CBF               	goto	i1l2333
  3560  0CB0                     i1l2327:
  3561                           
  3562                           ;LIB16F_GPS38400.c: 77:                     ReadByteSW_USART();
  3563  0CB0  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3564  0CB5                     i1l2329:
  3565                           
  3566                           ;LIB16F_GPS38400.c: 78:                     if(RxBuffer == ','){
  3567  0CB5  302C               	movlw	44
  3568  0CB6  067D               	xorwf	_RxBuffer,w
  3569  0CB7  1D03               	btfss	3,2
  3570  0CB8  2CBA               	goto	u133_21
  3571  0CB9  2CBB               	goto	u133_20
  3572  0CBA                     u133_21:
  3573  0CBA  2CBF               	goto	i1l2333
  3574  0CBB                     u133_20:
  3575  0CBB                     i1l2331:
  3576                           
  3577                           ;LIB16F_GPS38400.c: 79:                         conta++;
  3578  0CBB  3001               	movlw	1
  3579  0CBC  00F2               	movwf	??_GPS_STATUS
  3580  0CBD  0872               	movf	??_GPS_STATUS,w
  3581  0CBE  07F5               	addwf	GPS_STATUS@conta,f
  3582  0CBF                     i1l2333:
  3583                           
  3584                           ;LIB16F_GPS38400.c: 76:                 while(conta<7){
  3585  0CBF  3007               	movlw	7
  3586  0CC0  0275               	subwf	GPS_STATUS@conta,w
  3587  0CC1  1C03               	skipc
  3588  0CC2  2CC4               	goto	u134_21
  3589  0CC3  2CC5               	goto	u134_20
  3590  0CC4                     u134_21:
  3591  0CC4  2CB0               	goto	i1l2327
  3592  0CC5                     u134_20:
  3593  0CC5                     i1l2335:
  3594                           
  3595                           ;LIB16F_GPS38400.c: 83:                 for(conta=0; conta<6; conta++){
  3596  0CC5  01F5               	clrf	GPS_STATUS@conta
  3597  0CC6                     i1l2341:
  3598                           
  3599                           ;LIB16F_GPS38400.c: 84:                     ReadByteSW_USART();
  3600  0CC6  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3601  0CCB                     i1l2343:
  3602                           
  3603                           ;LIB16F_GPS38400.c: 85:                     BufferDAT[conta + 6] = RxBuffer;
  3604  0CCB  087D               	movf	_RxBuffer,w
  3605  0CCC  00F2               	movwf	??_GPS_STATUS
  3606  0CCD  0875               	movf	GPS_STATUS@conta,w
  3607  0CCE  3E47               	addlw	(low ((_BufferDAT| 0+6)))& (0+255)
  3608  0CCF  0084               	movwf	4
  3609  0CD0  0872               	movf	??_GPS_STATUS,w
  3610  0CD1  1383               	bcf	3,7	;select IRP bank0
  3611  0CD2  0080               	movwf	0
  3612  0CD3                     i1l2345:
  3613                           
  3614                           ;LIB16F_GPS38400.c: 86:                 }
  3615  0CD3  3001               	movlw	1
  3616  0CD4  00F2               	movwf	??_GPS_STATUS
  3617  0CD5  0872               	movf	??_GPS_STATUS,w
  3618  0CD6  07F5               	addwf	GPS_STATUS@conta,f
  3619  0CD7                     i1l2347:
  3620  0CD7  3006               	movlw	6
  3621  0CD8  0275               	subwf	GPS_STATUS@conta,w
  3622  0CD9  1C03               	skipc
  3623  0CDA  2CDC               	goto	u135_21
  3624  0CDB  2CDD               	goto	u135_20
  3625  0CDC                     u135_21:
  3626  0CDC  2CC6               	goto	i1l2341
  3627  0CDD                     u135_20:
  3628  0CDD                     i1l2349:
  3629                           
  3630                           ;LIB16F_GPS38400.c: 87:                 BufferDAT[12] = '\0';
  3631  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0CDF  01CD               	clrf	_BufferDAT+12
  3634  0CE0                     i1l2351:
  3635                           
  3636                           ;LIB16F_GPS38400.c: 88:                 RxBuffer = 'A';
  3637  0CE0  3041               	movlw	65
  3638  0CE1  00F2               	movwf	??_GPS_STATUS
  3639  0CE2  0872               	movf	??_GPS_STATUS,w
  3640  0CE3  00FD               	movwf	_RxBuffer
  3641  0CE4                     i1l2353:
  3642                           
  3643                           ;LIB16F_GPS38400.c: 90:                 break;
  3644  0CE4  2CF4               	goto	i1l244
  3645  0CE5                     i1l2355:
  3646                           
  3647                           ;LIB16F_GPS38400.c: 93:             LimitConta++;
  3648  0CE5  3001               	movlw	1
  3649  0CE6  07F3               	addwf	GPS_STATUS@LimitConta,f
  3650  0CE7  1803               	skipnc
  3651  0CE8  0AF4               	incf	GPS_STATUS@LimitConta+1,f
  3652  0CE9  3000               	movlw	0
  3653  0CEA  07F4               	addwf	GPS_STATUS@LimitConta+1,f
  3654  0CEB                     i1l230:	
  3655                           ;LIB16F_GPS38400.c: 95:     }
  3656                           
  3657                           
  3658                           ;LIB16F_GPS38400.c: 59:     while(LimitConta < 4200){
  3659  0CEB  3010               	movlw	16
  3660  0CEC  0274               	subwf	GPS_STATUS@LimitConta+1,w
  3661  0CED  3068               	movlw	104
  3662  0CEE  1903               	skipnz
  3663  0CEF  0273               	subwf	GPS_STATUS@LimitConta,w
  3664  0CF0  1C03               	skipc
  3665  0CF1  2CF3               	goto	u136_21
  3666  0CF2  2CF4               	goto	u136_20
  3667  0CF3                     u136_21:
  3668  0CF3  2C76               	goto	i1l2301
  3669  0CF4                     u136_20:
  3670  0CF4                     i1l244:
  3671  0CF4  0008               	return
  3672  0CF5                     __end_of_GPS_STATUS:
  3673                           
  3674                           	psect	text16
  3675  0A98                     __ptext16:	
  3676 ;; *************** function _GPS_LONGITUDE *****************
  3677 ;; Defined at:
  3678 ;;		line 139 in file "LIB16F_GPS38400.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  conta           1    4[COMMON] unsigned char 
  3683 ;;  LimitConta      1    3[COMMON] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0
  3695 ;;      Temps:          1       0       0       0       0
  3696 ;;      Totals:         3       0       0       0       0
  3697 ;;Total ram usage:        3 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 1
  3700 ;; This function calls:
  3701 ;;		_ReadByteSW_USART
  3702 ;; This function is called by:
  3703 ;;		_Interrups
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707  0A98                     _GPS_LONGITUDE:	
  3708                           ;psect for function _GPS_LONGITUDE
  3709                           
  3710  0A98                     i1l2259:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _GPS_LONGITUDE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3713                           
  3714                           
  3715                           ;LIB16F_GPS38400.c: 144:     unsigned char LimitConta = 0;
  3716  0A98  01F3               	clrf	GPS_LONGITUDE@LimitConta
  3717                           
  3718                           ;LIB16F_GPS38400.c: 148:     while(LimitConta < 150){
  3719  0A99  2ADC               	goto	i1l2297
  3720  0A9A                     i1l2261:
  3721                           
  3722                           ;LIB16F_GPS38400.c: 149:         ReadByteSW_USART();
  3723  0A9A  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3724  0A9F                     i1l2263:
  3725                           
  3726                           ;LIB16F_GPS38400.c: 150:         if(RxBuffer == 'C'){
  3727  0A9F  3043               	movlw	67
  3728  0AA0  067D               	xorwf	_RxBuffer,w
  3729  0AA1  1D03               	btfss	3,2
  3730  0AA2  2AA4               	goto	u125_21
  3731  0AA3  2AA5               	goto	u125_20
  3732  0AA4                     u125_21:
  3733  0AA4  2AD8               	goto	i1l2295
  3734  0AA5                     u125_20:
  3735  0AA5                     i1l2265:
  3736                           
  3737                           ;LIB16F_GPS38400.c: 152:             conta = 0;
  3738  0AA5  01F4               	clrf	GPS_LONGITUDE@conta
  3739                           
  3740                           ;LIB16F_GPS38400.c: 153:             while(conta<5){
  3741  0AA6  2AB6               	goto	i1l2273
  3742  0AA7                     i1l2267:
  3743                           
  3744                           ;LIB16F_GPS38400.c: 154:                 ReadByteSW_USART();
  3745  0AA7  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3746  0AAC                     i1l2269:
  3747                           
  3748                           ;LIB16F_GPS38400.c: 155:                 if(RxBuffer == ','){
  3749  0AAC  302C               	movlw	44
  3750  0AAD  067D               	xorwf	_RxBuffer,w
  3751  0AAE  1D03               	btfss	3,2
  3752  0AAF  2AB1               	goto	u126_21
  3753  0AB0  2AB2               	goto	u126_20
  3754  0AB1                     u126_21:
  3755  0AB1  2AB6               	goto	i1l2273
  3756  0AB2                     u126_20:
  3757  0AB2                     i1l2271:
  3758                           
  3759                           ;LIB16F_GPS38400.c: 156:                     conta++;
  3760  0AB2  3001               	movlw	1
  3761  0AB3  00F2               	movwf	??_GPS_LONGITUDE
  3762  0AB4  0872               	movf	??_GPS_LONGITUDE,w
  3763  0AB5  07F4               	addwf	GPS_LONGITUDE@conta,f
  3764  0AB6                     i1l2273:
  3765                           
  3766                           ;LIB16F_GPS38400.c: 153:             while(conta<5){
  3767  0AB6  3005               	movlw	5
  3768  0AB7  0274               	subwf	GPS_LONGITUDE@conta,w
  3769  0AB8  1C03               	skipc
  3770  0AB9  2ABB               	goto	u127_21
  3771  0ABA  2ABC               	goto	u127_20
  3772  0ABB                     u127_21:
  3773  0ABB  2AA7               	goto	i1l2267
  3774  0ABC                     u127_20:
  3775  0ABC                     i1l2275:
  3776                           
  3777                           ;LIB16F_GPS38400.c: 160:             for(conta=0; conta<12; conta++){
  3778  0ABC  01F4               	clrf	GPS_LONGITUDE@conta
  3779  0ABD                     i1l2281:
  3780                           
  3781                           ;LIB16F_GPS38400.c: 161:                 ReadByteSW_USART();
  3782  0ABD  120A  158A  22E3  120A  158A  	fcall	_ReadByteSW_USART
  3783  0AC2                     i1l2283:
  3784                           
  3785                           ;LIB16F_GPS38400.c: 162:                 BufferDAT[conta] = RxBuffer;
  3786  0AC2  087D               	movf	_RxBuffer,w
  3787  0AC3  00F2               	movwf	??_GPS_LONGITUDE
  3788  0AC4  0874               	movf	GPS_LONGITUDE@conta,w
  3789  0AC5  3E41               	addlw	(low (_BufferDAT| 0))& (0+255)
  3790  0AC6  0084               	movwf	4
  3791  0AC7  0872               	movf	??_GPS_LONGITUDE,w
  3792  0AC8  1383               	bcf	3,7	;select IRP bank0
  3793  0AC9  0080               	movwf	0
  3794  0ACA                     i1l2285:
  3795                           
  3796                           ;LIB16F_GPS38400.c: 163:             }
  3797  0ACA  3001               	movlw	1
  3798  0ACB  00F2               	movwf	??_GPS_LONGITUDE
  3799  0ACC  0872               	movf	??_GPS_LONGITUDE,w
  3800  0ACD  07F4               	addwf	GPS_LONGITUDE@conta,f
  3801  0ACE                     i1l2287:
  3802  0ACE  300C               	movlw	12
  3803  0ACF  0274               	subwf	GPS_LONGITUDE@conta,w
  3804  0AD0  1C03               	skipc
  3805  0AD1  2AD3               	goto	u128_21
  3806  0AD2  2AD4               	goto	u128_20
  3807  0AD3                     u128_21:
  3808  0AD3  2ABD               	goto	i1l2281
  3809  0AD4                     u128_20:
  3810  0AD4                     i1l2289:
  3811                           
  3812                           ;LIB16F_GPS38400.c: 164:             BufferDAT[12] = '\0';
  3813  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0AD6  01CD               	clrf	_BufferDAT+12
  3816  0AD7                     i1l2291:
  3817                           
  3818                           ;LIB16F_GPS38400.c: 166:             break;
  3819  0AD7  2AE2               	goto	i1l272
  3820  0AD8                     i1l2295:
  3821                           
  3822                           ;LIB16F_GPS38400.c: 168:             LimitConta++;
  3823  0AD8  3001               	movlw	1
  3824  0AD9  00F2               	movwf	??_GPS_LONGITUDE
  3825  0ADA  0872               	movf	??_GPS_LONGITUDE,w
  3826  0ADB  07F3               	addwf	GPS_LONGITUDE@LimitConta,f
  3827  0ADC                     i1l2297:
  3828                           
  3829                           ;LIB16F_GPS38400.c: 148:     while(LimitConta < 150){
  3830  0ADC  3096               	movlw	150
  3831  0ADD  0273               	subwf	GPS_LONGITUDE@LimitConta,w
  3832  0ADE  1C03               	skipc
  3833  0ADF  2AE1               	goto	u129_21
  3834  0AE0  2AE2               	goto	u129_20
  3835  0AE1                     u129_21:
  3836  0AE1  2A9A               	goto	i1l2261
  3837  0AE2                     u129_20:
  3838  0AE2                     i1l272:
  3839  0AE2  0008               	return
  3840  0AE3                     __end_of_GPS_LONGITUDE:
  3841                           
  3842                           	psect	text17
  3843  07B2                     __ptext17:	
  3844 ;; *************** function _GPS_LATITUDE *****************
  3845 ;; Defined at:
  3846 ;;		line 101 in file "LIB16F_GPS38400.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  conta           1    4[COMMON] unsigned char 
  3851 ;;  LimitConta      1    3[COMMON] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         2       0       0       0       0
  3863 ;;      Temps:          1       0       0       0       0
  3864 ;;      Totals:         3       0       0       0       0
  3865 ;;Total ram usage:        3 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 1
  3868 ;; This function calls:
  3869 ;;		_ReadByteSW_USART
  3870 ;; This function is called by:
  3871 ;;		_Interrups
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875  07B2                     _GPS_LATITUDE:	
  3876                           ;psect for function _GPS_LATITUDE
  3877                           
  3878  07B2                     i1l2199:	
  3879                           ;incstack = 0
  3880                           ; Regs used in _GPS_LATITUDE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3881                           
  3882                           
  3883                           ;LIB16F_GPS38400.c: 106:     unsigned char LimitConta = 0;
  3884  07B2  01F3               	clrf	GPS_LATITUDE@LimitConta
  3885                           
  3886                           ;LIB16F_GPS38400.c: 110:     while(LimitConta < 150){
  3887  07B3  2FF7               	goto	i1l2237
  3888  07B4                     i1l2201:
  3889                           
  3890                           ;LIB16F_GPS38400.c: 111:         ReadByteSW_USART();
  3891  07B4  120A  158A  22E3  120A  118A  	fcall	_ReadByteSW_USART
  3892  07B9                     i1l2203:
  3893                           
  3894                           ;LIB16F_GPS38400.c: 112:         if(RxBuffer == 'C'){
  3895  07B9  3043               	movlw	67
  3896  07BA  067D               	xorwf	_RxBuffer,w
  3897  07BB  1D03               	btfss	3,2
  3898  07BC  2FBE               	goto	u119_21
  3899  07BD  2FBF               	goto	u119_20
  3900  07BE                     u119_21:
  3901  07BE  2FF3               	goto	i1l2235
  3902  07BF                     u119_20:
  3903  07BF                     i1l2205:
  3904                           
  3905                           ;LIB16F_GPS38400.c: 114:             conta = 0;
  3906  07BF  01F4               	clrf	GPS_LATITUDE@conta
  3907                           
  3908                           ;LIB16F_GPS38400.c: 115:             while(conta<3){
  3909  07C0  2FD0               	goto	i1l2213
  3910  07C1                     i1l2207:
  3911                           
  3912                           ;LIB16F_GPS38400.c: 116:                 ReadByteSW_USART();
  3913  07C1  120A  158A  22E3  120A  118A  	fcall	_ReadByteSW_USART
  3914  07C6                     i1l2209:
  3915                           
  3916                           ;LIB16F_GPS38400.c: 117:                 if(RxBuffer == ','){
  3917  07C6  302C               	movlw	44
  3918  07C7  067D               	xorwf	_RxBuffer,w
  3919  07C8  1D03               	btfss	3,2
  3920  07C9  2FCB               	goto	u120_21
  3921  07CA  2FCC               	goto	u120_20
  3922  07CB                     u120_21:
  3923  07CB  2FD0               	goto	i1l2213
  3924  07CC                     u120_20:
  3925  07CC                     i1l2211:
  3926                           
  3927                           ;LIB16F_GPS38400.c: 118:                     conta++;
  3928  07CC  3001               	movlw	1
  3929  07CD  00F2               	movwf	??_GPS_LATITUDE
  3930  07CE  0872               	movf	??_GPS_LATITUDE,w
  3931  07CF  07F4               	addwf	GPS_LATITUDE@conta,f
  3932  07D0                     i1l2213:
  3933                           
  3934                           ;LIB16F_GPS38400.c: 115:             while(conta<3){
  3935  07D0  3003               	movlw	3
  3936  07D1  0274               	subwf	GPS_LATITUDE@conta,w
  3937  07D2  1C03               	skipc
  3938  07D3  2FD5               	goto	u121_21
  3939  07D4  2FD6               	goto	u121_20
  3940  07D5                     u121_21:
  3941  07D5  2FC1               	goto	i1l2207
  3942  07D6                     u121_20:
  3943  07D6                     i1l2215:
  3944                           
  3945                           ;LIB16F_GPS38400.c: 122:             for(conta=0; conta<11; conta++){
  3946  07D6  01F4               	clrf	GPS_LATITUDE@conta
  3947  07D7                     i1l2221:
  3948                           
  3949                           ;LIB16F_GPS38400.c: 123:                 ReadByteSW_USART();
  3950  07D7  120A  158A  22E3  120A  118A  	fcall	_ReadByteSW_USART
  3951  07DC                     i1l2223:
  3952                           
  3953                           ;LIB16F_GPS38400.c: 124:                 BufferDAT[conta] = RxBuffer;
  3954  07DC  087D               	movf	_RxBuffer,w
  3955  07DD  00F2               	movwf	??_GPS_LATITUDE
  3956  07DE  0874               	movf	GPS_LATITUDE@conta,w
  3957  07DF  3E41               	addlw	(low (_BufferDAT| 0))& (0+255)
  3958  07E0  0084               	movwf	4
  3959  07E1  0872               	movf	??_GPS_LATITUDE,w
  3960  07E2  1383               	bcf	3,7	;select IRP bank0
  3961  07E3  0080               	movwf	0
  3962  07E4                     i1l2225:
  3963                           
  3964                           ;LIB16F_GPS38400.c: 125:             }
  3965  07E4  3001               	movlw	1
  3966  07E5  00F2               	movwf	??_GPS_LATITUDE
  3967  07E6  0872               	movf	??_GPS_LATITUDE,w
  3968  07E7  07F4               	addwf	GPS_LATITUDE@conta,f
  3969  07E8                     i1l2227:
  3970  07E8  300B               	movlw	11
  3971  07E9  0274               	subwf	GPS_LATITUDE@conta,w
  3972  07EA  1C03               	skipc
  3973  07EB  2FED               	goto	u122_21
  3974  07EC  2FEE               	goto	u122_20
  3975  07ED                     u122_21:
  3976  07ED  2FD7               	goto	i1l2221
  3977  07EE                     u122_20:
  3978  07EE                     i1l2229:
  3979                           
  3980                           ;LIB16F_GPS38400.c: 126:             BufferDAT[11] = '\0';
  3981  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3982  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3983  07F0  01CC               	clrf	_BufferDAT+11
  3984                           
  3985                           ;LIB16F_GPS38400.c: 127:             BufferDAT[12] = '\0';
  3986  07F1  01CD               	clrf	_BufferDAT+12
  3987  07F2                     i1l2231:
  3988                           
  3989                           ;LIB16F_GPS38400.c: 129:             break;
  3990  07F2  2FFD               	goto	i1l258
  3991  07F3                     i1l2235:
  3992                           
  3993                           ;LIB16F_GPS38400.c: 131:             LimitConta++;
  3994  07F3  3001               	movlw	1
  3995  07F4  00F2               	movwf	??_GPS_LATITUDE
  3996  07F5  0872               	movf	??_GPS_LATITUDE,w
  3997  07F6  07F3               	addwf	GPS_LATITUDE@LimitConta,f
  3998  07F7                     i1l2237:
  3999                           
  4000                           ;LIB16F_GPS38400.c: 110:     while(LimitConta < 150){
  4001  07F7  3096               	movlw	150
  4002  07F8  0273               	subwf	GPS_LATITUDE@LimitConta,w
  4003  07F9  1C03               	skipc
  4004  07FA  2FFC               	goto	u123_21
  4005  07FB  2FFD               	goto	u123_20
  4006  07FC                     u123_21:
  4007  07FC  2FB4               	goto	i1l2201
  4008  07FD                     u123_20:
  4009  07FD                     i1l258:
  4010  07FD  0008               	return
  4011  07FE                     __end_of_GPS_LATITUDE:
  4012                           
  4013                           	psect	text18
  4014  0AE3                     __ptext18:	
  4015 ;; *************** function _ReadByteSW_USART *****************
  4016 ;; Defined at:
  4017 ;;		line 7 in file "LIB16F_GPS38400.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  conta           1    1[COMMON] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         1       0       0       0       0
  4033 ;;      Temps:          1       0       0       0       0
  4034 ;;      Totals:         2       0       0       0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_GPS_STATUS
  4041 ;;		_GPS_LATITUDE
  4042 ;;		_GPS_LONGITUDE
  4043 ;;		_GPS_TIMEDATE
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047  0AE3                     _ReadByteSW_USART:	
  4048                           ;psect for function _ReadByteSW_USART
  4049                           
  4050  0AE3                     i1l2053:	
  4051                           ;incstack = 0
  4052                           ; Regs used in _ReadByteSW_USART: [wreg+status,2+status,0]
  4053                           
  4054                           
  4055                           ;LIB16F_GPS38400.c: 8:     unsigned char conta;;LIB16F_GPS38400.c: 10:     RxBuffer = 0;
  4056  0AE3  01FD               	clrf	_RxBuffer
  4057  0AE4                     i1l218:	
  4058                           ;LIB16F_GPS38400.c: 11:     while(PORTBbits.RB0);
  4059                           
  4060  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0AE6  1806               	btfsc	6,0	;volatile
  4063  0AE7  2AE9               	goto	u99_21
  4064  0AE8  2AEA               	goto	u99_20
  4065  0AE9                     u99_21:
  4066  0AE9  2AE4               	goto	i1l218
  4067  0AEA                     u99_20:
  4068  0AEA                     i1l2055:
  4069                           
  4070                           ;LIB16F_GPS38400.c: 12:     _delay((unsigned long)((15)*(9830400UL/4000000.0)));
  4071  0AEA  300B               	movlw	11
  4072  0AEB  00F0               	movwf	??_ReadByteSW_USART
  4073  0AEC                     u210_27:
  4074  0AEC  0BF0               	decfsz	??_ReadByteSW_USART,f
  4075  0AED  2AEC               	goto	u210_27
  4076  0AEE  2AEF               	nop2
  4077  0AEF                     i1l2057:
  4078                           
  4079                           ;LIB16F_GPS38400.c: 13:     for(conta=0; conta<7; conta++){
  4080  0AEF  01F1               	clrf	ReadByteSW_USART@conta
  4081  0AF0                     i1l2063:
  4082                           
  4083                           ;LIB16F_GPS38400.c: 14:         _delay((unsigned long)((15)*(9830400UL/4000000.0)));
  4084  0AF0  300B               	movlw	11
  4085  0AF1  00F0               	movwf	??_ReadByteSW_USART
  4086  0AF2                     u211_27:
  4087  0AF2  0BF0               	decfsz	??_ReadByteSW_USART,f
  4088  0AF3  2AF2               	goto	u211_27
  4089  0AF4  2AF5               	nop2
  4090  0AF5                     i1l2065:
  4091                           
  4092                           ;LIB16F_GPS38400.c: 15:         __nop();
  4093  0AF5  0000               	nop
  4094  0AF6                     i1l2067:
  4095                           
  4096                           ;LIB16F_GPS38400.c: 16:         __nop();
  4097  0AF6  0000               	nop
  4098  0AF7                     i1l2069:
  4099                           
  4100                           ;LIB16F_GPS38400.c: 17:         if(PORTBbits.RB0 == 1){
  4101  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0AF9  1C06               	btfss	6,0	;volatile
  4104  0AFA  2AFC               	goto	u100_21
  4105  0AFB  2AFD               	goto	u100_20
  4106  0AFC                     u100_21:
  4107  0AFC  2B03               	goto	i1l223
  4108  0AFD                     u100_20:
  4109  0AFD                     i1l2071:
  4110                           
  4111                           ;LIB16F_GPS38400.c: 18:             RxBuffer = RxBuffer | 0x80;
  4112  0AFD  087D               	movf	_RxBuffer,w
  4113  0AFE  3880               	iorlw	128
  4114  0AFF  00F0               	movwf	??_ReadByteSW_USART
  4115  0B00  0870               	movf	??_ReadByteSW_USART,w
  4116  0B01  00FD               	movwf	_RxBuffer
  4117                           
  4118                           ;LIB16F_GPS38400.c: 19:         }else{
  4119  0B02  2B09               	goto	i1l2073
  4120  0B03                     i1l223:
  4121                           
  4122                           ;LIB16F_GPS38400.c: 20:             __nop();
  4123  0B03  0000               	nop
  4124                           
  4125                           ;LIB16F_GPS38400.c: 21:             __nop();
  4126  0B04  0000               	nop
  4127                           
  4128                           ;LIB16F_GPS38400.c: 22:             __nop();
  4129  0B05  0000               	nop
  4130                           
  4131                           ;LIB16F_GPS38400.c: 23:             __nop();
  4132  0B06  0000               	nop
  4133                           
  4134                           ;LIB16F_GPS38400.c: 24:             __nop();
  4135  0B07  0000               	nop
  4136                           
  4137                           ;LIB16F_GPS38400.c: 25:             __nop();
  4138  0B08  0000               	nop
  4139  0B09                     i1l2073:
  4140                           
  4141                           ;LIB16F_GPS38400.c: 27:         RxBuffer >>= 1;
  4142  0B09  1003               	clrc
  4143  0B0A  0CFD               	rrf	_RxBuffer,f
  4144  0B0B                     i1l2075:
  4145                           
  4146                           ;LIB16F_GPS38400.c: 28:     }
  4147  0B0B  3001               	movlw	1
  4148  0B0C  00F0               	movwf	??_ReadByteSW_USART
  4149  0B0D  0870               	movf	??_ReadByteSW_USART,w
  4150  0B0E  07F1               	addwf	ReadByteSW_USART@conta,f
  4151  0B0F                     i1l2077:
  4152  0B0F  3007               	movlw	7
  4153  0B10  0271               	subwf	ReadByteSW_USART@conta,w
  4154  0B11  1C03               	skipc
  4155  0B12  2B14               	goto	u101_21
  4156  0B13  2B15               	goto	u101_20
  4157  0B14                     u101_21:
  4158  0B14  2AF0               	goto	i1l2063
  4159  0B15                     u101_20:
  4160  0B15                     i1l2079:
  4161                           
  4162                           ;LIB16F_GPS38400.c: 29:     _delay((unsigned long)((15)*(9830400UL/4000000.0)));
  4163  0B15  300B               	movlw	11
  4164  0B16  00F0               	movwf	??_ReadByteSW_USART
  4165  0B17                     u212_27:
  4166  0B17  0BF0               	decfsz	??_ReadByteSW_USART,f
  4167  0B18  2B17               	goto	u212_27
  4168  0B19  2B1A               	nop2
  4169  0B1A                     i1l2081:
  4170                           
  4171                           ;LIB16F_GPS38400.c: 30:     __nop();
  4172  0B1A  0000               	nop
  4173  0B1B                     i1l2083:
  4174                           
  4175                           ;LIB16F_GPS38400.c: 31:     __nop();
  4176  0B1B  0000               	nop
  4177  0B1C                     i1l2085:
  4178                           
  4179                           ;LIB16F_GPS38400.c: 32:     __nop();
  4180  0B1C  0000               	nop
  4181  0B1D                     i1l2087:
  4182                           
  4183                           ;LIB16F_GPS38400.c: 33:     if(PORTBbits.RB0 == 1){
  4184  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0B1F  1C06               	btfss	6,0	;volatile
  4187  0B20  2B22               	goto	u102_21
  4188  0B21  2B23               	goto	u102_20
  4189  0B22                     u102_21:
  4190  0B22  2B29               	goto	i1l225
  4191  0B23                     u102_20:
  4192  0B23                     i1l2089:
  4193                           
  4194                           ;LIB16F_GPS38400.c: 34:         RxBuffer = RxBuffer | 0x80;
  4195  0B23  087D               	movf	_RxBuffer,w
  4196  0B24  3880               	iorlw	128
  4197  0B25  00F0               	movwf	??_ReadByteSW_USART
  4198  0B26  0870               	movf	??_ReadByteSW_USART,w
  4199  0B27  00FD               	movwf	_RxBuffer
  4200                           
  4201                           ;LIB16F_GPS38400.c: 35:     }else{
  4202  0B28  2B2F               	goto	i1l2091
  4203  0B29                     i1l225:
  4204                           
  4205                           ;LIB16F_GPS38400.c: 36:         __nop();
  4206  0B29  0000               	nop
  4207                           
  4208                           ;LIB16F_GPS38400.c: 37:         __nop();
  4209  0B2A  0000               	nop
  4210                           
  4211                           ;LIB16F_GPS38400.c: 38:         __nop();
  4212  0B2B  0000               	nop
  4213                           
  4214                           ;LIB16F_GPS38400.c: 39:         __nop();
  4215  0B2C  0000               	nop
  4216                           
  4217                           ;LIB16F_GPS38400.c: 40:         __nop();
  4218  0B2D  0000               	nop
  4219                           
  4220                           ;LIB16F_GPS38400.c: 41:         __nop();
  4221  0B2E  0000               	nop
  4222  0B2F                     i1l2091:
  4223                           
  4224                           ;LIB16F_GPS38400.c: 43:     _delay((unsigned long)((14)*(9830400UL/4000000.0)));
  4225  0B2F  300B               	movlw	11
  4226  0B30  00F0               	movwf	??_ReadByteSW_USART
  4227  0B31                     u213_27:
  4228  0B31  0BF0               	decfsz	??_ReadByteSW_USART,f
  4229  0B32  2B31               	goto	u213_27
  4230  0B33                     i1l227:
  4231  0B33  0008               	return
  4232  0B34                     __end_of_ReadByteSW_USART:
  4233  007E                     btemp	set	126	;btemp
  4234  007E                     wtemp0	set	126
  4235                           
  4236                           	psect	idloc
  4237                           
  4238                           ;Config register IDLOC0 @ 0x2000
  4239                           ;	unspecified, using default values
  4240  2000                     	org	8192
  4241  2000  3FFF               	dw	16383
  4242                           
  4243                           ;Config register IDLOC1 @ 0x2001
  4244                           ;	unspecified, using default values
  4245  2001                     	org	8193
  4246  2001  3FFF               	dw	16383
  4247                           
  4248                           ;Config register IDLOC2 @ 0x2002
  4249                           ;	unspecified, using default values
  4250  2002                     	org	8194
  4251  2002  3FFF               	dw	16383
  4252                           
  4253                           ;Config register IDLOC3 @ 0x2003
  4254                           ;	unspecified, using default values
  4255  2003                     	org	8195
  4256  2003  3FFF               	dw	16383
  4257                           
  4258                           	psect	config
  4259                           
  4260                           ;Config register CONFIG @ 0x2007
  4261                           ;	Oscillator Selection bits
  4262                           ;	FOSC = HS, HS oscillator
  4263                           ;	Watchdog Timer Enable bit
  4264                           ;	WDTE = OFF, WDT disabled
  4265                           ;	Power-up Timer Enable bit
  4266                           ;	PWRTE = ON, PWRT enabled
  4267                           ;	Brown-out Reset Enable bit
  4268                           ;	BOREN = OFF, BOR disabled
  4269                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4270                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4271                           ;	Data EEPROM Memory Code Protection bit
  4272                           ;	CPD = OFF, Data EEPROM code protection off
  4273                           ;	Flash Program Memory Write Enable bits
  4274                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4275                           ;	In-Circuit Debugger Mode bit
  4276                           ;	DEBUG = 0x1, unprogrammed default
  4277                           ;	Flash Program Memory Code Protection bit
  4278                           ;	CP = OFF, Code protection off
  4279  2007                     	org	8199
  4280  2007  3F32               	dw	16178
  4281                           
  4282                           	psect	text4_split_1
  4283  0025                     i1l2597:
  4284                           
  4285                           ;Digitizer16bits.c: 114:                 GPS_LATITUDE();
  4286  0025  120A  118A  27B2  120A  118A  	fcall	_GPS_LATITUDE
  4287  002A                     i1l2599:
  4288                           
  4289                           ;Digitizer16bits.c: 115:                 TransmitDAT_USART('1');
  4290  002A  3031               	movlw	49
  4291  002B  120A  158A  222C  120A  118A  	fcall	_TransmitDAT_USART
  4292                           
  4293                           ;Digitizer16bits.c: 116:                 break;
  4294  0030  2F05               	goto	i1l169
  4295  0031                     i1l2601:
  4296                           
  4297                           ;Digitizer16bits.c: 118:                 GPS_LONGITUDE();
  4298  0031  120A  158A  2298  120A  118A  	fcall	_GPS_LONGITUDE
  4299  0036                     i1l2603:
  4300                           
  4301                           ;Digitizer16bits.c: 119:                 TransmitDAT_USART('2');
  4302  0036  3032               	movlw	50
  4303  0037  120A  158A  222C  120A  118A  	fcall	_TransmitDAT_USART
  4304                           
  4305                           ;Digitizer16bits.c: 120:                 break;
  4306  003C  2F05               	goto	i1l169
  4307  003D                     i1l2605:
  4308                           
  4309                           ;Digitizer16bits.c: 122:                 GPS_STATUS();
  4310  003D  120A  158A  2473  120A  118A  	fcall	_GPS_STATUS
  4311  0042                     i1l2607:
  4312                           
  4313                           ;Digitizer16bits.c: 123:                 if(RxBuffer=='A'){
  4314  0042  3041               	movlw	65
  4315  0043  067D               	xorwf	_RxBuffer,w
  4316  0044  1D03               	btfss	3,2
  4317  0045  2847               	goto	u166_21
  4318  0046  2848               	goto	u166_20
  4319  0047                     u166_21:
  4320  0047  284F               	goto	i1l2611
  4321  0048                     u166_20:
  4322  0048                     i1l2609:
  4323                           
  4324                           ;Digitizer16bits.c: 124:                     TransmitDAT_USART('8');
  4325  0048  3038               	movlw	56
  4326  0049  120A  158A  222C  120A  118A  	fcall	_TransmitDAT_USART
  4327                           
  4328                           ;Digitizer16bits.c: 125:                 }else{
  4329  004E  2F05               	goto	i1l169
  4330  004F                     i1l2611:
  4331                           
  4332                           ;Digitizer16bits.c: 126:                     TransmitDAT_USART('0');
  4333  004F  3030               	movlw	48
  4334  0050  120A  158A  222C  120A  118A  	fcall	_TransmitDAT_USART
  4335  0055  2F05               	goto	i1l169
  4336  0056                     i1l129:	
  4337                           ;Digitizer16bits.c: 129:             default:
  4338                           
  4339                           
  4340                           ;Digitizer16bits.c: 130:                 __nop();
  4341  0056  0000               	nop
  4342                           
  4343                           ;Digitizer16bits.c: 131:         }
  4344  0057  2F05               	goto	i1l169
  4345  0058                     i1l2613:
  4346  0058  0840               	movf	_CmdGPS,w
  4347  0059  00D4               	movwf	??_Interrups
  4348  005A  01D5               	clrf	??_Interrups+1
  4349                           
  4350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4351                           ; Switch size 1, requested type "simple"
  4352                           ; Number of cases is 1, Range of values is 0 to 0
  4353                           ; switch strategies available:
  4354                           ; Name         Instructions Cycles
  4355                           ; simple_byte            4     3 (average)
  4356                           ; direct_byte           11     8 (fixed)
  4357                           ; jumptable            260     6 (fixed)
  4358                           ;	Chosen strategy is simple_byte
  4359  005B  0855               	movf	??_Interrups+1,w
  4360  005C  3A00               	xorlw	0	; case 0
  4361  005D  1903               	skipnz
  4362  005E  2860               	goto	i1l3171
  4363  005F  2856               	goto	i1l129
  4364  0060                     i1l3171:
  4365                           
  4366                           ; Switch size 1, requested type "simple"
  4367                           ; Number of cases is 4, Range of values is 0 to 3
  4368                           ; switch strategies available:
  4369                           ; Name         Instructions Cycles
  4370                           ; simple_byte           13     7 (average)
  4371                           ; direct_byte           20     8 (fixed)
  4372                           ; jumptable            260     6 (fixed)
  4373                           ;	Chosen strategy is simple_byte
  4374  0060  0854               	movf	??_Interrups,w
  4375  0061  3A00               	xorlw	0	; case 0
  4376  0062  1903               	skipnz
  4377  0063  2F12               	goto	L1
  4378  0064  3A01               	xorlw	1	; case 1
  4379  0065  1903               	skipnz
  4380  0066  2825               	goto	i1l2597
  4381  0067  3A03               	xorlw	3	; case 2
  4382  0068  1903               	skipnz
  4383  0069  2831               	goto	i1l2601
  4384  006A  3A01               	xorlw	1	; case 3
  4385  006B  1903               	skipnz
  4386  006C  283D               	goto	i1l2605
  4387  006D  2856               	goto	i1l129
  4388  006E                     i1l109:
  4389  006E  1E8C               	btfss	12,5	;volatile
  4390  006F  2871               	goto	u167_21
  4391  0070  2872               	goto	u167_20
  4392  0071                     u167_21:
  4393  0071  2C18               	goto	i1l131
  4394  0072                     u167_20:
  4395  0072                     i1l2615:
  4396  0072  1683               	bsf	3,5	;RP0=1, select bank1
  4397  0073  1303               	bcf	3,6	;RP1=0, select bank1
  4398  0074  1E8C               	btfss	12,5	;volatile
  4399  0075  2877               	goto	u168_21
  4400  0076  2878               	goto	u168_20
  4401  0077                     u168_21:
  4402  0077  2C18               	goto	i1l131
  4403  0078                     u168_20:
  4404  0078                     i1l2617:
  4405                           
  4406                           ;Digitizer16bits.c: 133:         ID = ReceiveCMD_USART();
  4407  0078  120A  158A  23F6  120A  118A  	fcall	_ReceiveCMD_USART
  4408  007D  1283               	bcf	3,5	;RP0=0, select bank0
  4409  007E  1303               	bcf	3,6	;RP1=0, select bank0
  4410  007F  00D4               	movwf	??_Interrups
  4411  0080  0854               	movf	??_Interrups,w
  4412  0081  00F9               	movwf	Interrups@ID
  4413                           
  4414                           ;Digitizer16bits.c: 134:         switch(ID){
  4415  0082  2BF0               	goto	i1l2809
  4416  0083                     i1l2619:
  4417                           
  4418                           ;Digitizer16bits.c: 136:                 TransmitCMD_USART('5');
  4419  0083  3035               	movlw	53
  4420  0084  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4421  0089                     i1l2621:
  4422                           
  4423                           ;Digitizer16bits.c: 137:                 ControlSample = 0;
  4424  0089  01FC               	clrf	_ControlSample
  4425                           
  4426                           ;Digitizer16bits.c: 138:                 break;
  4427  008A  2F05               	goto	i1l169
  4428  008B                     i1l2623:
  4429                           
  4430                           ;Digitizer16bits.c: 140:                 TransmitCMD_USART('0');
  4431  008B  3030               	movlw	48
  4432  008C  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4433  0091                     i1l2625:
  4434                           
  4435                           ;Digitizer16bits.c: 141:                 BufferDAT[0] = 'V';
  4436  0091  3056               	movlw	86
  4437  0092  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0093  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0094  00D4               	movwf	??_Interrups
  4440  0095  0854               	movf	??_Interrups,w
  4441  0096  00C1               	movwf	_BufferDAT
  4442  0097                     i1l2627:
  4443                           
  4444                           ;Digitizer16bits.c: 142:                 BufferDAT[1] = '2';
  4445  0097  3032               	movlw	50
  4446  0098  00D4               	movwf	??_Interrups
  4447  0099  0854               	movf	??_Interrups,w
  4448  009A  00C2               	movwf	_BufferDAT+1
  4449  009B                     i1l2629:
  4450                           
  4451                           ;Digitizer16bits.c: 143:                 BufferDAT[2] = '0';
  4452  009B  3030               	movlw	48
  4453  009C  00D4               	movwf	??_Interrups
  4454  009D  0854               	movf	??_Interrups,w
  4455  009E  00C3               	movwf	_BufferDAT+2
  4456  009F                     i1l2631:
  4457                           
  4458                           ;Digitizer16bits.c: 144:                 BufferDAT[12] = '\0';
  4459  009F  01CD               	clrf	_BufferDAT+12
  4460  00A0                     i1l2633:
  4461                           
  4462                           ;Digitizer16bits.c: 145:                 TransmitDAT_USART('0');
  4463  00A0  3030               	movlw	48
  4464  00A1  120A  158A  222C  120A  118A  	fcall	_TransmitDAT_USART
  4465                           
  4466                           ;Digitizer16bits.c: 146:                 break;
  4467  00A6  2F05               	goto	i1l169
  4468  00A7                     i1l2635:
  4469                           
  4470                           ;Digitizer16bits.c: 148:                 TransmitCMD_USART('1');
  4471  00A7  3031               	movlw	49
  4472  00A8  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4473  00AD                     i1l2637:
  4474                           
  4475                           ;Digitizer16bits.c: 151:                 CmdGPS = 1;
  4476  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  4477  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  4478  00AF  01C0               	clrf	_CmdGPS
  4479  00B0  0AC0               	incf	_CmdGPS,f
  4480  00B1                     i1l2639:
  4481                           
  4482                           ;Digitizer16bits.c: 152:                 OPTION_REGbits.INTEDG = 0;
  4483  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  4484  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  4485  00B3  1301               	bcf	1,6	;volatile
  4486  00B4                     i1l2641:
  4487                           
  4488                           ;Digitizer16bits.c: 153:                 INTCONbits.INTF = 0;
  4489  00B4  108B               	bcf	11,1	;volatile
  4490  00B5                     i1l2643:
  4491                           
  4492                           ;Digitizer16bits.c: 154:                 INTCONbits.INTE = 1;
  4493  00B5  160B               	bsf	11,4	;volatile
  4494                           
  4495                           ;Digitizer16bits.c: 156:                 break;
  4496  00B6  2F05               	goto	i1l169
  4497  00B7                     i1l2645:
  4498                           
  4499                           ;Digitizer16bits.c: 158:                 TransmitCMD_USART('2');
  4500  00B7  3032               	movlw	50
  4501  00B8  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4502  00BD                     i1l2647:
  4503                           
  4504                           ;Digitizer16bits.c: 161:                 CmdGPS = 2;
  4505  00BD  3002               	movlw	2
  4506  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  4507  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  4508  00C0  00D4               	movwf	??_Interrups
  4509  00C1  0854               	movf	??_Interrups,w
  4510  00C2  00C0               	movwf	_CmdGPS
  4511  00C3                     i1l2649:
  4512                           
  4513                           ;Digitizer16bits.c: 162:                 OPTION_REGbits.INTEDG = 0;
  4514  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  4515  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  4516  00C5  1301               	bcf	1,6	;volatile
  4517  00C6                     i1l2651:
  4518                           
  4519                           ;Digitizer16bits.c: 163:                 INTCONbits.INTF = 0;
  4520  00C6  108B               	bcf	11,1	;volatile
  4521  00C7                     i1l2653:
  4522                           
  4523                           ;Digitizer16bits.c: 164:                 INTCONbits.INTE = 1;
  4524  00C7  160B               	bsf	11,4	;volatile
  4525                           
  4526                           ;Digitizer16bits.c: 166:                 break;
  4527  00C8  2F05               	goto	i1l169
  4528  00C9                     i1l2655:
  4529                           
  4530                           ;Digitizer16bits.c: 168:                 TransmitCMD_USART('3');
  4531  00C9  3033               	movlw	51
  4532  00CA  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4533                           
  4534                           ;Digitizer16bits.c: 171:                 break;
  4535  00CF  2F05               	goto	i1l169
  4536  00D0                     i1l2657:
  4537                           
  4538                           ;Digitizer16bits.c: 173:                 TransmitCMD_USART('4');
  4539  00D0  3034               	movlw	52
  4540  00D1  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4541  00D6                     i1l2659:
  4542                           
  4543                           ;Digitizer16bits.c: 175:                 CmdGPS = 0;
  4544  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4545  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4546  00D8  01C0               	clrf	_CmdGPS
  4547  00D9                     i1l2661:
  4548                           
  4549                           ;Digitizer16bits.c: 176:                 ControlSample = 1;
  4550  00D9  01FC               	clrf	_ControlSample
  4551  00DA  0AFC               	incf	_ControlSample,f
  4552  00DB                     i1l2663:
  4553                           
  4554                           ;Digitizer16bits.c: 180:                 OPTION_REGbits.INTEDG = 0;
  4555  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  4556  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  4557  00DD  1301               	bcf	1,6	;volatile
  4558  00DE                     i1l2665:
  4559                           
  4560                           ;Digitizer16bits.c: 181:                 INTCONbits.INTF = 0;
  4561  00DE  108B               	bcf	11,1	;volatile
  4562  00DF                     i1l2667:
  4563                           
  4564                           ;Digitizer16bits.c: 182:                 INTCONbits.INTE = 1;
  4565  00DF  160B               	bsf	11,4	;volatile
  4566                           
  4567                           ;Digitizer16bits.c: 184:                 break;
  4568  00E0  2F05               	goto	i1l169
  4569  00E1                     i1l2669:
  4570                           
  4571                           ;Digitizer16bits.c: 186:                 TransmitCMD_USART('6');
  4572  00E1  3036               	movlw	54
  4573  00E2  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4574                           
  4575                           ;Digitizer16bits.c: 187:                 break;
  4576  00E7  2F05               	goto	i1l169
  4577  00E8                     i1l2671:
  4578                           
  4579                           ;Digitizer16bits.c: 189:                 TransmitCMD_USART('7');
  4580  00E8  3037               	movlw	55
  4581  00E9  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4582                           
  4583                           ;Digitizer16bits.c: 190:                 break;
  4584  00EE  2F05               	goto	i1l169
  4585  00EF                     i1l2673:
  4586                           
  4587                           ;Digitizer16bits.c: 192:                 TransmitCMD_USART('8');
  4588  00EF  3038               	movlw	56
  4589  00F0  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4590  00F5                     i1l2675:
  4591                           
  4592                           ;Digitizer16bits.c: 195:                 CmdGPS = 3;
  4593  00F5  3003               	movlw	3
  4594  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4595  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4596  00F8  00D4               	movwf	??_Interrups
  4597  00F9  0854               	movf	??_Interrups,w
  4598  00FA  00C0               	movwf	_CmdGPS
  4599  00FB                     i1l2677:
  4600                           
  4601                           ;Digitizer16bits.c: 196:                 OPTION_REGbits.INTEDG = 0;
  4602  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  4603  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  4604  00FD  1301               	bcf	1,6	;volatile
  4605  00FE                     i1l2679:
  4606                           
  4607                           ;Digitizer16bits.c: 197:                 INTCONbits.INTF = 0;
  4608  00FE  108B               	bcf	11,1	;volatile
  4609  00FF                     i1l2681:
  4610                           
  4611                           ;Digitizer16bits.c: 198:                 INTCONbits.INTE = 1;
  4612  00FF  160B               	bsf	11,4	;volatile
  4613                           
  4614                           ;Digitizer16bits.c: 200:                 break;
  4615  0100  2F05               	goto	i1l169
  4616  0101                     i1l2683:
  4617                           
  4618                           ;Digitizer16bits.c: 204:                 TMR1H = 0x10;
  4619  0101  3010               	movlw	16
  4620  0102  008F               	movwf	15	;volatile
  4621                           
  4622                           ;Digitizer16bits.c: 205:                 TMR1L = 0x06;
  4623  0103  3006               	movlw	6
  4624  0104  008E               	movwf	14	;volatile
  4625                           
  4626                           ;Digitizer16bits.c: 206:                 T1CON = 0x31;
  4627  0105  3031               	movlw	49
  4628  0106  0090               	movwf	16	;volatile
  4629  0107                     i1l2685:
  4630                           
  4631                           ;Digitizer16bits.c: 207:                 PIR1bits.TMR1IF = 0;
  4632  0107  100C               	bcf	12,0	;volatile
  4633  0108                     i1l2687:
  4634                           
  4635                           ;Digitizer16bits.c: 208:                 PIE1bits.TMR1IE = 1;
  4636  0108  1683               	bsf	3,5	;RP0=1, select bank1
  4637  0109  1303               	bcf	3,6	;RP1=0, select bank1
  4638  010A  140C               	bsf	12,0	;volatile
  4639  010B                     i1l2689:
  4640                           
  4641                           ;Digitizer16bits.c: 210:                 TransmitCMD_USART('9');
  4642  010B  3039               	movlw	57
  4643  010C  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  4644  0111                     i1l2691:
  4645                           
  4646                           ;Digitizer16bits.c: 214:                 ContaSample = 0;
  4647  0111  01FB               	clrf	_ContaSample
  4648  0112                     i1l2693:
  4649                           
  4650                           ;Digitizer16bits.c: 215:                 ControlSample = 0;
  4651  0112  01FC               	clrf	_ControlSample
  4652  0113                     i1l2695:
  4653                           
  4654                           ;Digitizer16bits.c: 218:                 print_string("G-JRODATEXXXXXXXXXXXX\n\r");
  4655  0113  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4656  0114  00F1               	movwf	print_string@str
  4657  0115  3080               	movlw	128
  4658  0116  00F2               	movwf	print_string@str+1
  4659  0117  120A  158A  2206  120A  118A  	fcall	_print_string
  4660  011C                     i1l2697:
  4661                           
  4662                           ;Digitizer16bits.c: 220:                 PORTAbits.RA0 = 1;
  4663  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4664  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4665  011E  1405               	bsf	5,0	;volatile
  4666                           
  4667                           ;Digitizer16bits.c: 223:                 PORTB = 0x2E;
  4668  011F  302E               	movlw	46
  4669  0120  0086               	movwf	6	;volatile
  4670                           
  4671                           ;Digitizer16bits.c: 224:                 _delay((unsigned long)((5)*(9830400UL/4000.0)))
      +                          ;
  4672  0121  3010               	movlw	16
  4673  0122  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0123  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0124  00D5               	movwf	??_Interrups+1
  4676  0125  30F3               	movlw	243
  4677  0126  00D4               	movwf	??_Interrups
  4678  0127                     u199_27:
  4679  0127  0BD4               	decfsz	??_Interrups,f
  4680  0128  2927               	goto	u199_27
  4681  0129  0BD5               	decfsz	??_Interrups+1,f
  4682  012A  2927               	goto	u199_27
  4683  012B  292C               	nop2
  4684                           
  4685                           ;Digitizer16bits.c: 226:                 SumData_X = 0;
  4686  012C  3000               	movlw	0
  4687  012D  1283               	bcf	3,5	;RP0=0, select bank0
  4688  012E  1303               	bcf	3,6	;RP1=0, select bank0
  4689  012F  00B3               	movwf	_SumData_X+3
  4690  0130  3000               	movlw	0
  4691  0131  00B2               	movwf	_SumData_X+2
  4692  0132  3000               	movlw	0
  4693  0133  00B1               	movwf	_SumData_X+1
  4694  0134  3000               	movlw	0
  4695  0135  00B0               	movwf	_SumData_X
  4696  0136                     i1l2699:
  4697                           
  4698                           ;Digitizer16bits.c: 227:                 Data_X = ReadDataADC();
  4699  0136  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  4700  013B  0871               	movf	?_ReadDataADC+1,w
  4701  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4702  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4703  013E  00BF               	movwf	_Data_X+1
  4704  013F  0870               	movf	?_ReadDataADC,w
  4705  0140  00BE               	movwf	_Data_X
  4706  0141                     i1l2701:
  4707                           
  4708                           ;Digitizer16bits.c: 228:                 for(conta = 0; conta<5; conta++){
  4709  0141  01FA               	clrf	Interrups@conta
  4710  0142                     i1l2707:
  4711                           
  4712                           ;Digitizer16bits.c: 229:                    Data_X = ReadDataADC();
  4713  0142  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  4714  0147  0871               	movf	?_ReadDataADC+1,w
  4715  0148  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0149  1303               	bcf	3,6	;RP1=0, select bank0
  4717  014A  00BF               	movwf	_Data_X+1
  4718  014B  0870               	movf	?_ReadDataADC,w
  4719  014C  00BE               	movwf	_Data_X
  4720  014D                     i1l2709:
  4721                           
  4722                           ;Digitizer16bits.c: 230:                    SumData_X = SumData_X + Data_X;
  4723  014D  0830               	movf	_SumData_X,w
  4724  014E  00D4               	movwf	??_Interrups
  4725  014F  0831               	movf	_SumData_X+1,w
  4726  0150  00D5               	movwf	??_Interrups+1
  4727  0151  0832               	movf	_SumData_X+2,w
  4728  0152  00D6               	movwf	??_Interrups+2
  4729  0153  0833               	movf	_SumData_X+3,w
  4730  0154  00D7               	movwf	??_Interrups+3
  4731  0155  083E               	movf	_Data_X,w
  4732  0156  00D8               	movwf	??_Interrups+4
  4733  0157  083F               	movf	_Data_X+1,w
  4734  0158  00D9               	movwf	??_Interrups+5
  4735  0159  3000               	movlw	0
  4736  015A  1BD9               	btfsc	??_Interrups+5,7
  4737  015B  30FF               	movlw	255
  4738  015C  00DA               	movwf	??_Interrups+6
  4739  015D  00DB               	movwf	??_Interrups+7
  4740  015E  0858               	movf	??_Interrups+4,w
  4741  015F  07D4               	addwf	??_Interrups,f
  4742  0160  0859               	movf	??_Interrups+5,w
  4743  0161  1803               	skipnc
  4744  0162  0F59               	incfsz	??_Interrups+5,w
  4745  0163  2965               	goto	u169_20
  4746  0164  2966               	goto	u169_21
  4747  0165                     u169_20:
  4748  0165  07D5               	addwf	??_Interrups+1,f
  4749  0166                     u169_21:
  4750  0166  085A               	movf	??_Interrups+6,w
  4751  0167  1803               	skipnc
  4752  0168  0F5A               	incfsz	??_Interrups+6,w
  4753  0169  296B               	goto	u169_22
  4754  016A  296C               	goto	u169_23
  4755  016B                     u169_22:
  4756  016B  07D6               	addwf	??_Interrups+2,f
  4757  016C                     u169_23:
  4758  016C  085B               	movf	??_Interrups+7,w
  4759  016D  1803               	skipnc
  4760  016E  0A5B               	incf	??_Interrups+7,w
  4761  016F  07D7               	addwf	??_Interrups+3,f
  4762  0170  0857               	movf	??_Interrups+3,w
  4763  0171  00B3               	movwf	_SumData_X+3
  4764  0172  0856               	movf	??_Interrups+2,w
  4765  0173  00B2               	movwf	_SumData_X+2
  4766  0174  0855               	movf	??_Interrups+1,w
  4767  0175  00B1               	movwf	_SumData_X+1
  4768  0176  0854               	movf	??_Interrups,w
  4769  0177  00B0               	movwf	_SumData_X
  4770  0178                     i1l2711:
  4771                           
  4772                           ;Digitizer16bits.c: 231:                 }
  4773  0178  3001               	movlw	1
  4774  0179  00D4               	movwf	??_Interrups
  4775  017A  0854               	movf	??_Interrups,w
  4776  017B  07FA               	addwf	Interrups@conta,f
  4777  017C                     i1l2713:
  4778  017C  3005               	movlw	5
  4779  017D  027A               	subwf	Interrups@conta,w
  4780  017E  1C03               	skipc
  4781  017F  2981               	goto	u170_21
  4782  0180  2982               	goto	u170_20
  4783  0181                     u170_21:
  4784  0181  2942               	goto	i1l2707
  4785  0182                     u170_20:
  4786  0182                     i1l2715:
  4787                           
  4788                           ;Digitizer16bits.c: 233:                 PORTB = 0x2A;
  4789  0182  302A               	movlw	42
  4790  0183  0086               	movwf	6	;volatile
  4791                           
  4792                           ;Digitizer16bits.c: 234:                 _delay((unsigned long)((5)*(9830400UL/4000.0)))
      +                          ;
  4793  0184  3010               	movlw	16
  4794  0185  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0186  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0187  00D5               	movwf	??_Interrups+1
  4797  0188  30F3               	movlw	243
  4798  0189  00D4               	movwf	??_Interrups
  4799  018A                     u200_27:
  4800  018A  0BD4               	decfsz	??_Interrups,f
  4801  018B  298A               	goto	u200_27
  4802  018C  0BD5               	decfsz	??_Interrups+1,f
  4803  018D  298A               	goto	u200_27
  4804  018E  298F               	nop2
  4805                           
  4806                           ;Digitizer16bits.c: 236:                 SumData_Y = 0;
  4807  018F  3000               	movlw	0
  4808  0190  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0191  1303               	bcf	3,6	;RP1=0, select bank0
  4810  0192  00AF               	movwf	_SumData_Y+3
  4811  0193  3000               	movlw	0
  4812  0194  00AE               	movwf	_SumData_Y+2
  4813  0195  3000               	movlw	0
  4814  0196  00AD               	movwf	_SumData_Y+1
  4815  0197  3000               	movlw	0
  4816  0198  00AC               	movwf	_SumData_Y
  4817  0199                     i1l2717:
  4818                           
  4819                           ;Digitizer16bits.c: 237:                 Data_Y = ReadDataADC();
  4820  0199  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  4821  019E  0871               	movf	?_ReadDataADC+1,w
  4822  019F  1283               	bcf	3,5	;RP0=0, select bank0
  4823  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  4824  01A1  00BD               	movwf	_Data_Y+1
  4825  01A2  0870               	movf	?_ReadDataADC,w
  4826  01A3  00BC               	movwf	_Data_Y
  4827  01A4                     i1l2719:
  4828                           
  4829                           ;Digitizer16bits.c: 238:                 for(conta = 0; conta<5; conta++){
  4830  01A4  01FA               	clrf	Interrups@conta
  4831  01A5                     i1l2725:
  4832                           
  4833                           ;Digitizer16bits.c: 239:                     Data_Y = ReadDataADC();
  4834  01A5  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  4835  01AA  0871               	movf	?_ReadDataADC+1,w
  4836  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  4837  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  4838  01AD  00BD               	movwf	_Data_Y+1
  4839  01AE  0870               	movf	?_ReadDataADC,w
  4840  01AF  00BC               	movwf	_Data_Y
  4841  01B0                     i1l2727:
  4842                           
  4843                           ;Digitizer16bits.c: 240:                     SumData_Y = SumData_Y + Data_Y;
  4844  01B0  082C               	movf	_SumData_Y,w
  4845  01B1  00D4               	movwf	??_Interrups
  4846  01B2  082D               	movf	_SumData_Y+1,w
  4847  01B3  00D5               	movwf	??_Interrups+1
  4848  01B4  082E               	movf	_SumData_Y+2,w
  4849  01B5  00D6               	movwf	??_Interrups+2
  4850  01B6  082F               	movf	_SumData_Y+3,w
  4851  01B7  00D7               	movwf	??_Interrups+3
  4852  01B8  083C               	movf	_Data_Y,w
  4853  01B9  00D8               	movwf	??_Interrups+4
  4854  01BA  083D               	movf	_Data_Y+1,w
  4855  01BB  00D9               	movwf	??_Interrups+5
  4856  01BC  3000               	movlw	0
  4857  01BD  1BD9               	btfsc	??_Interrups+5,7
  4858  01BE  30FF               	movlw	255
  4859  01BF  00DA               	movwf	??_Interrups+6
  4860  01C0  00DB               	movwf	??_Interrups+7
  4861  01C1  0858               	movf	??_Interrups+4,w
  4862  01C2  07D4               	addwf	??_Interrups,f
  4863  01C3  0859               	movf	??_Interrups+5,w
  4864  01C4  1803               	skipnc
  4865  01C5  0F59               	incfsz	??_Interrups+5,w
  4866  01C6  29C8               	goto	u171_20
  4867  01C7  29C9               	goto	u171_21
  4868  01C8                     u171_20:
  4869  01C8  07D5               	addwf	??_Interrups+1,f
  4870  01C9                     u171_21:
  4871  01C9  085A               	movf	??_Interrups+6,w
  4872  01CA  1803               	skipnc
  4873  01CB  0F5A               	incfsz	??_Interrups+6,w
  4874  01CC  29CE               	goto	u171_22
  4875  01CD  29CF               	goto	u171_23
  4876  01CE                     u171_22:
  4877  01CE  07D6               	addwf	??_Interrups+2,f
  4878  01CF                     u171_23:
  4879  01CF  085B               	movf	??_Interrups+7,w
  4880  01D0  1803               	skipnc
  4881  01D1  0A5B               	incf	??_Interrups+7,w
  4882  01D2  07D7               	addwf	??_Interrups+3,f
  4883  01D3  0857               	movf	??_Interrups+3,w
  4884  01D4  00AF               	movwf	_SumData_Y+3
  4885  01D5  0856               	movf	??_Interrups+2,w
  4886  01D6  00AE               	movwf	_SumData_Y+2
  4887  01D7  0855               	movf	??_Interrups+1,w
  4888  01D8  00AD               	movwf	_SumData_Y+1
  4889  01D9  0854               	movf	??_Interrups,w
  4890  01DA  00AC               	movwf	_SumData_Y
  4891  01DB                     i1l2729:
  4892                           
  4893                           ;Digitizer16bits.c: 241:                 }
  4894  01DB  3001               	movlw	1
  4895  01DC  00D4               	movwf	??_Interrups
  4896  01DD  0854               	movf	??_Interrups,w
  4897  01DE  07FA               	addwf	Interrups@conta,f
  4898  01DF                     i1l2731:
  4899  01DF  3005               	movlw	5
  4900  01E0  027A               	subwf	Interrups@conta,w
  4901  01E1  1C03               	skipc
  4902  01E2  29E4               	goto	u172_21
  4903  01E3  29E5               	goto	u172_20
  4904  01E4                     u172_21:
  4905  01E4  29A5               	goto	i1l2725
  4906  01E5                     u172_20:
  4907  01E5                     i1l2733:
  4908                           
  4909                           ;Digitizer16bits.c: 243:                 PORTB = 0x2C;
  4910  01E5  302C               	movlw	44
  4911  01E6  0086               	movwf	6	;volatile
  4912                           
  4913                           ;Digitizer16bits.c: 244:                 _delay((unsigned long)((5)*(9830400UL/4000.0)))
      +                          ;
  4914  01E7  3010               	movlw	16
  4915  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  4916  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  4917  01EA  00D5               	movwf	??_Interrups+1
  4918  01EB  30F3               	movlw	243
  4919  01EC  00D4               	movwf	??_Interrups
  4920  01ED                     u201_27:
  4921  01ED  0BD4               	decfsz	??_Interrups,f
  4922  01EE  29ED               	goto	u201_27
  4923  01EF  0BD5               	decfsz	??_Interrups+1,f
  4924  01F0  29ED               	goto	u201_27
  4925  01F1  29F2               	nop2
  4926                           
  4927                           ;Digitizer16bits.c: 246:                 SumData_Z = 0;
  4928  01F2  3000               	movlw	0
  4929  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  4930  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  4931  01F5  00AB               	movwf	_SumData_Z+3
  4932  01F6  3000               	movlw	0
  4933  01F7  00AA               	movwf	_SumData_Z+2
  4934  01F8  3000               	movlw	0
  4935  01F9  00A9               	movwf	_SumData_Z+1
  4936  01FA  3000               	movlw	0
  4937  01FB  00A8               	movwf	_SumData_Z
  4938  01FC                     i1l2735:
  4939                           
  4940                           ;Digitizer16bits.c: 247:                 Data_Z = ReadDataADC();
  4941  01FC  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  4942  0201  0871               	movf	?_ReadDataADC+1,w
  4943  0202  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0203  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0204  00BB               	movwf	_Data_Z+1
  4946  0205  0870               	movf	?_ReadDataADC,w
  4947  0206  00BA               	movwf	_Data_Z
  4948  0207                     i1l2737:
  4949                           
  4950                           ;Digitizer16bits.c: 248:                 for(conta = 0; conta<5; conta++){
  4951  0207  01FA               	clrf	Interrups@conta
  4952  0208                     i1l2743:
  4953                           
  4954                           ;Digitizer16bits.c: 249:                     Data_Z = ReadDataADC();
  4955  0208  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  4956  020D  0871               	movf	?_ReadDataADC+1,w
  4957  020E  1283               	bcf	3,5	;RP0=0, select bank0
  4958  020F  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0210  00BB               	movwf	_Data_Z+1
  4960  0211  0870               	movf	?_ReadDataADC,w
  4961  0212  00BA               	movwf	_Data_Z
  4962  0213                     i1l2745:
  4963                           
  4964                           ;Digitizer16bits.c: 250:                     SumData_Z = SumData_Z + Data_Z;
  4965  0213  0828               	movf	_SumData_Z,w
  4966  0214  00D4               	movwf	??_Interrups
  4967  0215  0829               	movf	_SumData_Z+1,w
  4968  0216  00D5               	movwf	??_Interrups+1
  4969  0217  082A               	movf	_SumData_Z+2,w
  4970  0218  00D6               	movwf	??_Interrups+2
  4971  0219  082B               	movf	_SumData_Z+3,w
  4972  021A  00D7               	movwf	??_Interrups+3
  4973  021B  083A               	movf	_Data_Z,w
  4974  021C  00D8               	movwf	??_Interrups+4
  4975  021D  083B               	movf	_Data_Z+1,w
  4976  021E  00D9               	movwf	??_Interrups+5
  4977  021F  3000               	movlw	0
  4978  0220  1BD9               	btfsc	??_Interrups+5,7
  4979  0221  30FF               	movlw	255
  4980  0222  00DA               	movwf	??_Interrups+6
  4981  0223  00DB               	movwf	??_Interrups+7
  4982  0224  0858               	movf	??_Interrups+4,w
  4983  0225  07D4               	addwf	??_Interrups,f
  4984  0226  0859               	movf	??_Interrups+5,w
  4985  0227  1803               	skipnc
  4986  0228  0F59               	incfsz	??_Interrups+5,w
  4987  0229  2A2B               	goto	u173_20
  4988  022A  2A2C               	goto	u173_21
  4989  022B                     u173_20:
  4990  022B  07D5               	addwf	??_Interrups+1,f
  4991  022C                     u173_21:
  4992  022C  085A               	movf	??_Interrups+6,w
  4993  022D  1803               	skipnc
  4994  022E  0F5A               	incfsz	??_Interrups+6,w
  4995  022F  2A31               	goto	u173_22
  4996  0230  2A32               	goto	u173_23
  4997  0231                     u173_22:
  4998  0231  07D6               	addwf	??_Interrups+2,f
  4999  0232                     u173_23:
  5000  0232  085B               	movf	??_Interrups+7,w
  5001  0233  1803               	skipnc
  5002  0234  0A5B               	incf	??_Interrups+7,w
  5003  0235  07D7               	addwf	??_Interrups+3,f
  5004  0236  0857               	movf	??_Interrups+3,w
  5005  0237  00AB               	movwf	_SumData_Z+3
  5006  0238  0856               	movf	??_Interrups+2,w
  5007  0239  00AA               	movwf	_SumData_Z+2
  5008  023A  0855               	movf	??_Interrups+1,w
  5009  023B  00A9               	movwf	_SumData_Z+1
  5010  023C  0854               	movf	??_Interrups,w
  5011  023D  00A8               	movwf	_SumData_Z
  5012  023E                     i1l2747:
  5013                           
  5014                           ;Digitizer16bits.c: 251:                 }
  5015  023E  3001               	movlw	1
  5016  023F  00D4               	movwf	??_Interrups
  5017  0240  0854               	movf	??_Interrups,w
  5018  0241  07FA               	addwf	Interrups@conta,f
  5019  0242                     i1l2749:
  5020  0242  3005               	movlw	5
  5021  0243  027A               	subwf	Interrups@conta,w
  5022  0244  1C03               	skipc
  5023  0245  2A47               	goto	u174_21
  5024  0246  2A48               	goto	u174_20
  5025  0247                     u174_21:
  5026  0247  2A08               	goto	i1l2743
  5027  0248                     u174_20:
  5028  0248                     i1l2751:
  5029                           
  5030                           ;Digitizer16bits.c: 253:                 PORTB = 0x28;
  5031  0248  3028               	movlw	40
  5032  0249  0086               	movwf	6	;volatile
  5033                           
  5034                           ;Digitizer16bits.c: 254:                 _delay((unsigned long)((5)*(9830400UL/4000.0)))
      +                          ;
  5035  024A  3010               	movlw	16
  5036  024B  1283               	bcf	3,5	;RP0=0, select bank0
  5037  024C  1303               	bcf	3,6	;RP1=0, select bank0
  5038  024D  00D5               	movwf	??_Interrups+1
  5039  024E  30F3               	movlw	243
  5040  024F  00D4               	movwf	??_Interrups
  5041  0250                     u202_27:
  5042  0250  0BD4               	decfsz	??_Interrups,f
  5043  0251  2A50               	goto	u202_27
  5044  0252  0BD5               	decfsz	??_Interrups+1,f
  5045  0253  2A50               	goto	u202_27
  5046  0254  2A55               	nop2
  5047                           
  5048                           ;Digitizer16bits.c: 256:                 SumData_TC = 0;
  5049  0255  3000               	movlw	0
  5050  0256  1283               	bcf	3,5	;RP0=0, select bank0
  5051  0257  1303               	bcf	3,6	;RP1=0, select bank0
  5052  0258  00A7               	movwf	_SumData_TC+3
  5053  0259  3000               	movlw	0
  5054  025A  00A6               	movwf	_SumData_TC+2
  5055  025B  3000               	movlw	0
  5056  025C  00A5               	movwf	_SumData_TC+1
  5057  025D  3000               	movlw	0
  5058  025E  00A4               	movwf	_SumData_TC
  5059  025F                     i1l2753:
  5060                           
  5061                           ;Digitizer16bits.c: 257:                 Data_TC = ReadDataADC();
  5062  025F  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5063  0264  0871               	movf	?_ReadDataADC+1,w
  5064  0265  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0266  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0267  00B9               	movwf	_Data_TC+1
  5067  0268  0870               	movf	?_ReadDataADC,w
  5068  0269  00B8               	movwf	_Data_TC
  5069  026A                     i1l2755:
  5070                           
  5071                           ;Digitizer16bits.c: 258:                 for(conta = 0; conta<5; conta++){
  5072  026A  01FA               	clrf	Interrups@conta
  5073  026B                     i1l2761:
  5074                           
  5075                           ;Digitizer16bits.c: 259:                     Data_TC = ReadDataADC();
  5076  026B  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5077  0270  0871               	movf	?_ReadDataADC+1,w
  5078  0271  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0272  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0273  00B9               	movwf	_Data_TC+1
  5081  0274  0870               	movf	?_ReadDataADC,w
  5082  0275  00B8               	movwf	_Data_TC
  5083  0276                     i1l2763:
  5084                           
  5085                           ;Digitizer16bits.c: 260:                     SumData_TC = SumData_TC + Data_TC;
  5086  0276  0824               	movf	_SumData_TC,w
  5087  0277  00D4               	movwf	??_Interrups
  5088  0278  0825               	movf	_SumData_TC+1,w
  5089  0279  00D5               	movwf	??_Interrups+1
  5090  027A  0826               	movf	_SumData_TC+2,w
  5091  027B  00D6               	movwf	??_Interrups+2
  5092  027C  0827               	movf	_SumData_TC+3,w
  5093  027D  00D7               	movwf	??_Interrups+3
  5094  027E  0838               	movf	_Data_TC,w
  5095  027F  00D8               	movwf	??_Interrups+4
  5096  0280  0839               	movf	_Data_TC+1,w
  5097  0281  00D9               	movwf	??_Interrups+5
  5098  0282  3000               	movlw	0
  5099  0283  1BD9               	btfsc	??_Interrups+5,7
  5100  0284  30FF               	movlw	255
  5101  0285  00DA               	movwf	??_Interrups+6
  5102  0286  00DB               	movwf	??_Interrups+7
  5103  0287  0858               	movf	??_Interrups+4,w
  5104  0288  07D4               	addwf	??_Interrups,f
  5105  0289  0859               	movf	??_Interrups+5,w
  5106  028A  1803               	skipnc
  5107  028B  0F59               	incfsz	??_Interrups+5,w
  5108  028C  2A8E               	goto	u175_20
  5109  028D  2A8F               	goto	u175_21
  5110  028E                     u175_20:
  5111  028E  07D5               	addwf	??_Interrups+1,f
  5112  028F                     u175_21:
  5113  028F  085A               	movf	??_Interrups+6,w
  5114  0290  1803               	skipnc
  5115  0291  0F5A               	incfsz	??_Interrups+6,w
  5116  0292  2A94               	goto	u175_22
  5117  0293  2A95               	goto	u175_23
  5118  0294                     u175_22:
  5119  0294  07D6               	addwf	??_Interrups+2,f
  5120  0295                     u175_23:
  5121  0295  085B               	movf	??_Interrups+7,w
  5122  0296  1803               	skipnc
  5123  0297  0A5B               	incf	??_Interrups+7,w
  5124  0298  07D7               	addwf	??_Interrups+3,f
  5125  0299  0857               	movf	??_Interrups+3,w
  5126  029A  00A7               	movwf	_SumData_TC+3
  5127  029B  0856               	movf	??_Interrups+2,w
  5128  029C  00A6               	movwf	_SumData_TC+2
  5129  029D  0855               	movf	??_Interrups+1,w
  5130  029E  00A5               	movwf	_SumData_TC+1
  5131  029F  0854               	movf	??_Interrups,w
  5132  02A0  00A4               	movwf	_SumData_TC
  5133  02A1                     i1l2765:
  5134                           
  5135                           ;Digitizer16bits.c: 261:                 }
  5136  02A1  3001               	movlw	1
  5137  02A2  00D4               	movwf	??_Interrups
  5138  02A3  0854               	movf	??_Interrups,w
  5139  02A4  07FA               	addwf	Interrups@conta,f
  5140  02A5                     i1l2767:
  5141  02A5  3005               	movlw	5
  5142  02A6  027A               	subwf	Interrups@conta,w
  5143  02A7  1C03               	skipc
  5144  02A8  2AAA               	goto	u176_21
  5145  02A9  2AAB               	goto	u176_20
  5146  02AA                     u176_21:
  5147  02AA  2A6B               	goto	i1l2761
  5148  02AB                     u176_20:
  5149  02AB                     i1l2769:
  5150                           
  5151                           ;Digitizer16bits.c: 263:                 PORTB = 0x20;
  5152  02AB  3020               	movlw	32
  5153  02AC  0086               	movwf	6	;volatile
  5154                           
  5155                           ;Digitizer16bits.c: 264:                 _delay((unsigned long)((5)*(9830400UL/4000.0)))
      +                          ;
  5156  02AD  3010               	movlw	16
  5157  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  5158  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  5159  02B0  00D5               	movwf	??_Interrups+1
  5160  02B1  30F3               	movlw	243
  5161  02B2  00D4               	movwf	??_Interrups
  5162  02B3                     u203_27:
  5163  02B3  0BD4               	decfsz	??_Interrups,f
  5164  02B4  2AB3               	goto	u203_27
  5165  02B5  0BD5               	decfsz	??_Interrups+1,f
  5166  02B6  2AB3               	goto	u203_27
  5167  02B7  2AB8               	nop2
  5168                           
  5169                           ;Digitizer16bits.c: 266:                 SumData_TS = 0;
  5170  02B8  3000               	movlw	0
  5171  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  5172  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  5173  02BB  00A3               	movwf	_SumData_TS+3
  5174  02BC  3000               	movlw	0
  5175  02BD  00A2               	movwf	_SumData_TS+2
  5176  02BE  3000               	movlw	0
  5177  02BF  00A1               	movwf	_SumData_TS+1
  5178  02C0  3000               	movlw	0
  5179  02C1  00A0               	movwf	_SumData_TS
  5180  02C2                     i1l2771:
  5181                           
  5182                           ;Digitizer16bits.c: 267:                 Data_TS = ReadDataADC();
  5183  02C2  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5184  02C7  0871               	movf	?_ReadDataADC+1,w
  5185  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  5186  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  5187  02CA  00B7               	movwf	_Data_TS+1
  5188  02CB  0870               	movf	?_ReadDataADC,w
  5189  02CC  00B6               	movwf	_Data_TS
  5190  02CD                     i1l2773:
  5191                           
  5192                           ;Digitizer16bits.c: 268:                 for(conta = 0; conta<5; conta++){
  5193  02CD  01FA               	clrf	Interrups@conta
  5194  02CE                     i1l2779:
  5195                           
  5196                           ;Digitizer16bits.c: 269:                     Data_TS = ReadDataADC();
  5197  02CE  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5198  02D3  0871               	movf	?_ReadDataADC+1,w
  5199  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  5200  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  5201  02D6  00B7               	movwf	_Data_TS+1
  5202  02D7  0870               	movf	?_ReadDataADC,w
  5203  02D8  00B6               	movwf	_Data_TS
  5204  02D9                     i1l2781:
  5205                           
  5206                           ;Digitizer16bits.c: 270:                     SumData_TS = SumData_TS + Data_TS;
  5207  02D9  0820               	movf	_SumData_TS,w
  5208  02DA  00D4               	movwf	??_Interrups
  5209  02DB  0821               	movf	_SumData_TS+1,w
  5210  02DC  00D5               	movwf	??_Interrups+1
  5211  02DD  0822               	movf	_SumData_TS+2,w
  5212  02DE  00D6               	movwf	??_Interrups+2
  5213  02DF  0823               	movf	_SumData_TS+3,w
  5214  02E0  00D7               	movwf	??_Interrups+3
  5215  02E1  0836               	movf	_Data_TS,w
  5216  02E2  00D8               	movwf	??_Interrups+4
  5217  02E3  0837               	movf	_Data_TS+1,w
  5218  02E4  00D9               	movwf	??_Interrups+5
  5219  02E5  3000               	movlw	0
  5220  02E6  1BD9               	btfsc	??_Interrups+5,7
  5221  02E7  30FF               	movlw	255
  5222  02E8  00DA               	movwf	??_Interrups+6
  5223  02E9  00DB               	movwf	??_Interrups+7
  5224  02EA  0858               	movf	??_Interrups+4,w
  5225  02EB  07D4               	addwf	??_Interrups,f
  5226  02EC  0859               	movf	??_Interrups+5,w
  5227  02ED  1803               	skipnc
  5228  02EE  0F59               	incfsz	??_Interrups+5,w
  5229  02EF  2AF1               	goto	u177_20
  5230  02F0  2AF2               	goto	u177_21
  5231  02F1                     u177_20:
  5232  02F1  07D5               	addwf	??_Interrups+1,f
  5233  02F2                     u177_21:
  5234  02F2  085A               	movf	??_Interrups+6,w
  5235  02F3  1803               	skipnc
  5236  02F4  0F5A               	incfsz	??_Interrups+6,w
  5237  02F5  2AF7               	goto	u177_22
  5238  02F6  2AF8               	goto	u177_23
  5239  02F7                     u177_22:
  5240  02F7  07D6               	addwf	??_Interrups+2,f
  5241  02F8                     u177_23:
  5242  02F8  085B               	movf	??_Interrups+7,w
  5243  02F9  1803               	skipnc
  5244  02FA  0A5B               	incf	??_Interrups+7,w
  5245  02FB  07D7               	addwf	??_Interrups+3,f
  5246  02FC  0857               	movf	??_Interrups+3,w
  5247  02FD  00A3               	movwf	_SumData_TS+3
  5248  02FE  0856               	movf	??_Interrups+2,w
  5249  02FF  00A2               	movwf	_SumData_TS+2
  5250  0300  0855               	movf	??_Interrups+1,w
  5251  0301  00A1               	movwf	_SumData_TS+1
  5252  0302  0854               	movf	??_Interrups,w
  5253  0303  00A0               	movwf	_SumData_TS
  5254  0304                     i1l2783:
  5255                           
  5256                           ;Digitizer16bits.c: 271:                 }
  5257  0304  3001               	movlw	1
  5258  0305  00D4               	movwf	??_Interrups
  5259  0306  0854               	movf	??_Interrups,w
  5260  0307  07FA               	addwf	Interrups@conta,f
  5261  0308                     i1l2785:
  5262  0308  3005               	movlw	5
  5263  0309  027A               	subwf	Interrups@conta,w
  5264  030A  1C03               	skipc
  5265  030B  2B0D               	goto	u178_21
  5266  030C  2B0E               	goto	u178_20
  5267  030D                     u178_21:
  5268  030D  2ACE               	goto	i1l2779
  5269  030E                     u178_20:
  5270  030E                     i1l153:
  5271                           
  5272                           ;Digitizer16bits.c: 273:                 PORTAbits.RA0 = 0;
  5273  030E  1005               	bcf	5,0	;volatile
  5274  030F                     i1l2787:
  5275                           
  5276                           ;Digitizer16bits.c: 276:                 Data_X = (signed short) (SumData_X/5);
  5277  030F  3000               	movlw	0
  5278  0310  00F3               	movwf	___aldiv@divisor+3
  5279  0311  3000               	movlw	0
  5280  0312  00F2               	movwf	___aldiv@divisor+2
  5281  0313  3000               	movlw	0
  5282  0314  00F1               	movwf	___aldiv@divisor+1
  5283  0315  3005               	movlw	5
  5284  0316  00F0               	movwf	___aldiv@divisor
  5285  0317  0833               	movf	_SumData_X+3,w
  5286  0318  00F7               	movwf	___aldiv@dividend+3
  5287  0319  0832               	movf	_SumData_X+2,w
  5288  031A  00F6               	movwf	___aldiv@dividend+2
  5289  031B  0831               	movf	_SumData_X+1,w
  5290  031C  00F5               	movwf	___aldiv@dividend+1
  5291  031D  0830               	movf	_SumData_X,w
  5292  031E  00F4               	movwf	___aldiv@dividend
  5293  031F  120A  118A  2715  120A  118A  	fcall	___aldiv
  5294  0324  0871               	movf	?___aldiv+1,w
  5295  0325  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0326  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0327  00BF               	movwf	_Data_X+1
  5298  0328  0870               	movf	?___aldiv,w
  5299  0329  00BE               	movwf	_Data_X
  5300                           
  5301                           ;Digitizer16bits.c: 277:                 Data_Y = (signed short) (SumData_Y/5);
  5302  032A  3000               	movlw	0
  5303  032B  00F3               	movwf	___aldiv@divisor+3
  5304  032C  3000               	movlw	0
  5305  032D  00F2               	movwf	___aldiv@divisor+2
  5306  032E  3000               	movlw	0
  5307  032F  00F1               	movwf	___aldiv@divisor+1
  5308  0330  3005               	movlw	5
  5309  0331  00F0               	movwf	___aldiv@divisor
  5310  0332  082F               	movf	_SumData_Y+3,w
  5311  0333  00F7               	movwf	___aldiv@dividend+3
  5312  0334  082E               	movf	_SumData_Y+2,w
  5313  0335  00F6               	movwf	___aldiv@dividend+2
  5314  0336  082D               	movf	_SumData_Y+1,w
  5315  0337  00F5               	movwf	___aldiv@dividend+1
  5316  0338  082C               	movf	_SumData_Y,w
  5317  0339  00F4               	movwf	___aldiv@dividend
  5318  033A  120A  118A  2715  120A  118A  	fcall	___aldiv
  5319  033F  0871               	movf	?___aldiv+1,w
  5320  0340  1283               	bcf	3,5	;RP0=0, select bank0
  5321  0341  1303               	bcf	3,6	;RP1=0, select bank0
  5322  0342  00BD               	movwf	_Data_Y+1
  5323  0343  0870               	movf	?___aldiv,w
  5324  0344  00BC               	movwf	_Data_Y
  5325                           
  5326                           ;Digitizer16bits.c: 278:                 Data_Z = (signed short) (SumData_Z/5);
  5327  0345  3000               	movlw	0
  5328  0346  00F3               	movwf	___aldiv@divisor+3
  5329  0347  3000               	movlw	0
  5330  0348  00F2               	movwf	___aldiv@divisor+2
  5331  0349  3000               	movlw	0
  5332  034A  00F1               	movwf	___aldiv@divisor+1
  5333  034B  3005               	movlw	5
  5334  034C  00F0               	movwf	___aldiv@divisor
  5335  034D  082B               	movf	_SumData_Z+3,w
  5336  034E  00F7               	movwf	___aldiv@dividend+3
  5337  034F  082A               	movf	_SumData_Z+2,w
  5338  0350  00F6               	movwf	___aldiv@dividend+2
  5339  0351  0829               	movf	_SumData_Z+1,w
  5340  0352  00F5               	movwf	___aldiv@dividend+1
  5341  0353  0828               	movf	_SumData_Z,w
  5342  0354  00F4               	movwf	___aldiv@dividend
  5343  0355  120A  118A  2715  120A  118A  	fcall	___aldiv
  5344  035A  0871               	movf	?___aldiv+1,w
  5345  035B  1283               	bcf	3,5	;RP0=0, select bank0
  5346  035C  1303               	bcf	3,6	;RP1=0, select bank0
  5347  035D  00BB               	movwf	_Data_Z+1
  5348  035E  0870               	movf	?___aldiv,w
  5349  035F  00BA               	movwf	_Data_Z
  5350                           
  5351                           ;Digitizer16bits.c: 279:                 Data_TC = (signed short) (SumData_TC/5);
  5352  0360  3000               	movlw	0
  5353  0361  00F3               	movwf	___aldiv@divisor+3
  5354  0362  3000               	movlw	0
  5355  0363  00F2               	movwf	___aldiv@divisor+2
  5356  0364  3000               	movlw	0
  5357  0365  00F1               	movwf	___aldiv@divisor+1
  5358  0366  3005               	movlw	5
  5359  0367  00F0               	movwf	___aldiv@divisor
  5360  0368  0827               	movf	_SumData_TC+3,w
  5361  0369  00F7               	movwf	___aldiv@dividend+3
  5362  036A  0826               	movf	_SumData_TC+2,w
  5363  036B  00F6               	movwf	___aldiv@dividend+2
  5364  036C  0825               	movf	_SumData_TC+1,w
  5365  036D  00F5               	movwf	___aldiv@dividend+1
  5366  036E  0824               	movf	_SumData_TC,w
  5367  036F  00F4               	movwf	___aldiv@dividend
  5368  0370  120A  118A  2715  120A  118A  	fcall	___aldiv
  5369  0375  0871               	movf	?___aldiv+1,w
  5370  0376  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0377  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0378  00B9               	movwf	_Data_TC+1
  5373  0379  0870               	movf	?___aldiv,w
  5374  037A  00B8               	movwf	_Data_TC
  5375                           
  5376                           ;Digitizer16bits.c: 280:                 Data_TS = (signed short) (SumData_TS/5);
  5377  037B  3000               	movlw	0
  5378  037C  00F3               	movwf	___aldiv@divisor+3
  5379  037D  3000               	movlw	0
  5380  037E  00F2               	movwf	___aldiv@divisor+2
  5381  037F  3000               	movlw	0
  5382  0380  00F1               	movwf	___aldiv@divisor+1
  5383  0381  3005               	movlw	5
  5384  0382  00F0               	movwf	___aldiv@divisor
  5385  0383  0823               	movf	_SumData_TS+3,w
  5386  0384  00F7               	movwf	___aldiv@dividend+3
  5387  0385  0822               	movf	_SumData_TS+2,w
  5388  0386  00F6               	movwf	___aldiv@dividend+2
  5389  0387  0821               	movf	_SumData_TS+1,w
  5390  0388  00F5               	movwf	___aldiv@dividend+1
  5391  0389  0820               	movf	_SumData_TS,w
  5392  038A  00F4               	movwf	___aldiv@dividend
  5393  038B  120A  118A  2715  120A  118A  	fcall	___aldiv
  5394  0390  0871               	movf	?___aldiv+1,w
  5395  0391  1283               	bcf	3,5	;RP0=0, select bank0
  5396  0392  1303               	bcf	3,6	;RP1=0, select bank0
  5397  0393  00B7               	movwf	_Data_TS+1
  5398  0394  0870               	movf	?___aldiv,w
  5399  0395  00B6               	movwf	_Data_TS
  5400  0396                     i1l2789:
  5401                           
  5402                           ;Digitizer16bits.c: 283:                 print_string("JROADQ");
  5403  0396  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5404  0397  00F1               	movwf	print_string@str
  5405  0398  3080               	movlw	128
  5406  0399  00F2               	movwf	print_string@str+1
  5407  039A  120A  158A  2206  120A  118A  	fcall	_print_string
  5408  039F                     i1l2791:
  5409                           
  5410                           ;Digitizer16bits.c: 284:                 WriteByte_USART(ContaSample);
  5411  039F  087B               	movf	_ContaSample,w
  5412  03A0  120A  158A  219D  120A  118A  	fcall	_WriteByte_USART
  5413  03A5                     i1l2793:
  5414                           
  5415                           ;Digitizer16bits.c: 285:                 print_value(Data_X);
  5416  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  5417  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  5418  03A7  083F               	movf	_Data_X+1,w
  5419  03A8  00F2               	movwf	print_value@value+1
  5420  03A9  083E               	movf	_Data_X,w
  5421  03AA  00F1               	movwf	print_value@value
  5422  03AB  120A  158A  21BA  120A  118A  	fcall	_print_value
  5423  03B0                     i1l2795:
  5424                           
  5425                           ;Digitizer16bits.c: 286:                 print_value(Data_Y);
  5426  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  5427  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  5428  03B2  083D               	movf	_Data_Y+1,w
  5429  03B3  00F2               	movwf	print_value@value+1
  5430  03B4  083C               	movf	_Data_Y,w
  5431  03B5  00F1               	movwf	print_value@value
  5432  03B6  120A  158A  21BA  120A  118A  	fcall	_print_value
  5433  03BB                     i1l2797:
  5434                           
  5435                           ;Digitizer16bits.c: 287:                 print_value(Data_Z);
  5436  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  5437  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  5438  03BD  083B               	movf	_Data_Z+1,w
  5439  03BE  00F2               	movwf	print_value@value+1
  5440  03BF  083A               	movf	_Data_Z,w
  5441  03C0  00F1               	movwf	print_value@value
  5442  03C1  120A  158A  21BA  120A  118A  	fcall	_print_value
  5443  03C6                     i1l2799:
  5444                           
  5445                           ;Digitizer16bits.c: 288:                 print_value(Data_TC);
  5446  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  5447  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  5448  03C8  0839               	movf	_Data_TC+1,w
  5449  03C9  00F2               	movwf	print_value@value+1
  5450  03CA  0838               	movf	_Data_TC,w
  5451  03CB  00F1               	movwf	print_value@value
  5452  03CC  120A  158A  21BA  120A  118A  	fcall	_print_value
  5453  03D1                     i1l2801:
  5454                           
  5455                           ;Digitizer16bits.c: 289:                 print_value(Data_TS);
  5456  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  5457  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  5458  03D3  0837               	movf	_Data_TS+1,w
  5459  03D4  00F2               	movwf	print_value@value+1
  5460  03D5  0836               	movf	_Data_TS,w
  5461  03D6  00F1               	movwf	print_value@value
  5462  03D7  120A  158A  21BA  120A  118A  	fcall	_print_value
  5463  03DC                     i1l2803:
  5464                           
  5465                           ;Digitizer16bits.c: 290:                 print_string("\n\r");
  5466  03DC  3016               	movlw	(low (((STR_5+21)-__stringbase)| (0+32768)))& (0+255)
  5467  03DD  00F1               	movwf	print_string@str
  5468  03DE  3080               	movlw	128
  5469  03DF  00F2               	movwf	print_string@str+1
  5470  03E0  120A  158A  2206  120A  118A  	fcall	_print_string
  5471                           
  5472                           ;Digitizer16bits.c: 291:                 break;
  5473  03E5  2F05               	goto	i1l169
  5474  03E6                     i1l2805:
  5475                           
  5476                           ;Digitizer16bits.c: 293:                 TransmitCMD_USART('X');
  5477  03E6  3058               	movlw	88
  5478  03E7  120A  158A  21CF  120A  118A  	fcall	_TransmitCMD_USART
  5479  03EC                     i1l2807:
  5480                           
  5481                           ;Digitizer16bits.c: 294:                 RCSTAbits.CREN = 1;
  5482  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  5483  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  5484  03EE  1618               	bsf	24,4	;volatile
  5485                           
  5486                           ;Digitizer16bits.c: 295:         }
  5487  03EF  2F05               	goto	i1l169
  5488  03F0                     i1l2809:
  5489  03F0  0879               	movf	Interrups@ID,w
  5490  03F1  00D4               	movwf	??_Interrups
  5491  03F2  01D5               	clrf	??_Interrups+1
  5492                           
  5493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5494                           ; Switch size 1, requested type "simple"
  5495                           ; Number of cases is 1, Range of values is 0 to 0
  5496                           ; switch strategies available:
  5497                           ; Name         Instructions Cycles
  5498                           ; simple_byte            4     3 (average)
  5499                           ; direct_byte           11     8 (fixed)
  5500                           ; jumptable            260     6 (fixed)
  5501                           ;	Chosen strategy is simple_byte
  5502  03F3  0855               	movf	??_Interrups+1,w
  5503  03F4  3A00               	xorlw	0	; case 0
  5504  03F5  1903               	skipnz
  5505  03F6  2BF8               	goto	i1l3173
  5506  03F7  2BE6               	goto	i1l2805
  5507  03F8                     i1l3173:
  5508                           
  5509                           ; Switch size 1, requested type "simple"
  5510                           ; Number of cases is 10, Range of values is 48 to 57
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte           31    16 (average)
  5514                           ; direct_byte           41    11 (fixed)
  5515                           ; jumptable            263     9 (fixed)
  5516                           ;	Chosen strategy is simple_byte
  5517  03F8  0854               	movf	??_Interrups,w
  5518  03F9  3A30               	xorlw	48	; case 48
  5519  03FA  1903               	skipnz
  5520  03FB  288B               	goto	i1l2623
  5521  03FC  3A01               	xorlw	1	; case 49
  5522  03FD  1903               	skipnz
  5523  03FE  28A7               	goto	i1l2635
  5524  03FF  3A03               	xorlw	3	; case 50
  5525  0400  1903               	skipnz
  5526  0401  28B7               	goto	i1l2645
  5527  0402  3A01               	xorlw	1	; case 51
  5528  0403  1903               	skipnz
  5529  0404  28C9               	goto	i1l2655
  5530  0405  3A07               	xorlw	7	; case 52
  5531  0406  1903               	skipnz
  5532  0407  28D0               	goto	i1l2657
  5533  0408  3A01               	xorlw	1	; case 53
  5534  0409  1903               	skipnz
  5535  040A  2883               	goto	i1l2619
  5536  040B  3A03               	xorlw	3	; case 54
  5537  040C  1903               	skipnz
  5538  040D  28E1               	goto	i1l2669
  5539  040E  3A01               	xorlw	1	; case 55
  5540  040F  1903               	skipnz
  5541  0410  28E8               	goto	i1l2671
  5542  0411  3A0F               	xorlw	15	; case 56
  5543  0412  1903               	skipnz
  5544  0413  28EF               	goto	i1l2673
  5545  0414  3A01               	xorlw	1	; case 57
  5546  0415  1903               	skipnz
  5547  0416  2901               	goto	i1l2683
  5548  0417  2BE6               	goto	i1l2805
  5549  0418                     i1l131:
  5550  0418  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0419  1C0C               	btfss	12,0	;volatile
  5552  041A  2C1C               	goto	u179_21
  5553  041B  2C1D               	goto	u179_20
  5554  041C                     u179_21:
  5555  041C  2F05               	goto	i1l169
  5556  041D                     u179_20:
  5557  041D                     i1l2811:
  5558  041D  1683               	bsf	3,5	;RP0=1, select bank1
  5559  041E  1303               	bcf	3,6	;RP1=0, select bank1
  5560  041F  1C0C               	btfss	12,0	;volatile
  5561  0420  2C22               	goto	u180_21
  5562  0421  2C23               	goto	u180_20
  5563  0422                     u180_21:
  5564  0422  2F05               	goto	i1l169
  5565  0423                     u180_20:
  5566  0423                     i1l2813:
  5567                           
  5568                           ;Digitizer16bits.c: 297:         PIR1bits.TMR1IF = 0;
  5569  0423  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0424  1303               	bcf	3,6	;RP1=0, select bank0
  5571  0425  100C               	bcf	12,0	;volatile
  5572  0426                     i1l2815:
  5573                           
  5574                           ;Digitizer16bits.c: 298:         TMR1H = 0x10;
  5575  0426  3010               	movlw	16
  5576  0427  008F               	movwf	15	;volatile
  5577                           
  5578                           ;Digitizer16bits.c: 299:         TMR1L = 0x06;
  5579  0428  3006               	movlw	6
  5580  0429  008E               	movwf	14	;volatile
  5581  042A                     i1l2817:
  5582                           
  5583                           ;Digitizer16bits.c: 300:         ContaSample++;
  5584  042A  3001               	movlw	1
  5585  042B  00D4               	movwf	??_Interrups
  5586  042C  0854               	movf	??_Interrups,w
  5587  042D  07FB               	addwf	_ContaSample,f
  5588  042E                     i1l2819:
  5589                           
  5590                           ;Digitizer16bits.c: 304:         PORTAbits.RA0 = 1;
  5591  042E  1405               	bsf	5,0	;volatile
  5592  042F                     i1l2821:
  5593                           
  5594                           ;Digitizer16bits.c: 307:         PORTB = 0x2E;
  5595  042F  302E               	movlw	46
  5596  0430  0086               	movwf	6	;volatile
  5597  0431                     i1l2823:
  5598                           
  5599                           ;Digitizer16bits.c: 308:         _delay((unsigned long)((5)*(9830400UL/4000.0)));
  5600  0431  3010               	movlw	16
  5601  0432  1283               	bcf	3,5	;RP0=0, select bank0
  5602  0433  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0434  00D5               	movwf	??_Interrups+1
  5604  0435  30F3               	movlw	243
  5605  0436  00D4               	movwf	??_Interrups
  5606  0437                     u204_27:
  5607  0437  0BD4               	decfsz	??_Interrups,f
  5608  0438  2C37               	goto	u204_27
  5609  0439  0BD5               	decfsz	??_Interrups+1,f
  5610  043A  2C37               	goto	u204_27
  5611  043B  2C3C               	nop2
  5612  043C                     i1l2825:
  5613                           
  5614                           ;Digitizer16bits.c: 310:         SumData_X = 0;
  5615  043C  3000               	movlw	0
  5616  043D  1283               	bcf	3,5	;RP0=0, select bank0
  5617  043E  1303               	bcf	3,6	;RP1=0, select bank0
  5618  043F  00B3               	movwf	_SumData_X+3
  5619  0440  3000               	movlw	0
  5620  0441  00B2               	movwf	_SumData_X+2
  5621  0442  3000               	movlw	0
  5622  0443  00B1               	movwf	_SumData_X+1
  5623  0444  3000               	movlw	0
  5624  0445  00B0               	movwf	_SumData_X
  5625  0446                     i1l2827:
  5626                           
  5627                           ;Digitizer16bits.c: 311:         Data_X = ReadDataADC();
  5628  0446  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5629  044B  0871               	movf	?_ReadDataADC+1,w
  5630  044C  1283               	bcf	3,5	;RP0=0, select bank0
  5631  044D  1303               	bcf	3,6	;RP1=0, select bank0
  5632  044E  00BF               	movwf	_Data_X+1
  5633  044F  0870               	movf	?_ReadDataADC,w
  5634  0450  00BE               	movwf	_Data_X
  5635  0451                     i1l2829:
  5636                           
  5637                           ;Digitizer16bits.c: 312:         for(conta = 0; conta<5; conta++){
  5638  0451  01FA               	clrf	Interrups@conta
  5639  0452                     i1l2835:
  5640                           
  5641                           ;Digitizer16bits.c: 313:             Data_X = ReadDataADC();
  5642  0452  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5643  0457  0871               	movf	?_ReadDataADC+1,w
  5644  0458  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0459  1303               	bcf	3,6	;RP1=0, select bank0
  5646  045A  00BF               	movwf	_Data_X+1
  5647  045B  0870               	movf	?_ReadDataADC,w
  5648  045C  00BE               	movwf	_Data_X
  5649  045D                     i1l2837:
  5650                           
  5651                           ;Digitizer16bits.c: 314:             SumData_X = SumData_X + Data_X;
  5652  045D  0830               	movf	_SumData_X,w
  5653  045E  00D4               	movwf	??_Interrups
  5654  045F  0831               	movf	_SumData_X+1,w
  5655  0460  00D5               	movwf	??_Interrups+1
  5656  0461  0832               	movf	_SumData_X+2,w
  5657  0462  00D6               	movwf	??_Interrups+2
  5658  0463  0833               	movf	_SumData_X+3,w
  5659  0464  00D7               	movwf	??_Interrups+3
  5660  0465  083E               	movf	_Data_X,w
  5661  0466  00D8               	movwf	??_Interrups+4
  5662  0467  083F               	movf	_Data_X+1,w
  5663  0468  00D9               	movwf	??_Interrups+5
  5664  0469  3000               	movlw	0
  5665  046A  1BD9               	btfsc	??_Interrups+5,7
  5666  046B  30FF               	movlw	255
  5667  046C  00DA               	movwf	??_Interrups+6
  5668  046D  00DB               	movwf	??_Interrups+7
  5669  046E  0858               	movf	??_Interrups+4,w
  5670  046F  07D4               	addwf	??_Interrups,f
  5671  0470  0859               	movf	??_Interrups+5,w
  5672  0471  1803               	skipnc
  5673  0472  0F59               	incfsz	??_Interrups+5,w
  5674  0473  2C75               	goto	u181_20
  5675  0474  2C76               	goto	u181_21
  5676  0475                     u181_20:
  5677  0475  07D5               	addwf	??_Interrups+1,f
  5678  0476                     u181_21:
  5679  0476  085A               	movf	??_Interrups+6,w
  5680  0477  1803               	skipnc
  5681  0478  0F5A               	incfsz	??_Interrups+6,w
  5682  0479  2C7B               	goto	u181_22
  5683  047A  2C7C               	goto	u181_23
  5684  047B                     u181_22:
  5685  047B  07D6               	addwf	??_Interrups+2,f
  5686  047C                     u181_23:
  5687  047C  085B               	movf	??_Interrups+7,w
  5688  047D  1803               	skipnc
  5689  047E  0A5B               	incf	??_Interrups+7,w
  5690  047F  07D7               	addwf	??_Interrups+3,f
  5691  0480  0857               	movf	??_Interrups+3,w
  5692  0481  00B3               	movwf	_SumData_X+3
  5693  0482  0856               	movf	??_Interrups+2,w
  5694  0483  00B2               	movwf	_SumData_X+2
  5695  0484  0855               	movf	??_Interrups+1,w
  5696  0485  00B1               	movwf	_SumData_X+1
  5697  0486  0854               	movf	??_Interrups,w
  5698  0487  00B0               	movwf	_SumData_X
  5699  0488                     i1l2839:
  5700                           
  5701                           ;Digitizer16bits.c: 315:         }
  5702  0488  3001               	movlw	1
  5703  0489  00D4               	movwf	??_Interrups
  5704  048A  0854               	movf	??_Interrups,w
  5705  048B  07FA               	addwf	Interrups@conta,f
  5706  048C                     i1l2841:
  5707  048C  3005               	movlw	5
  5708  048D  027A               	subwf	Interrups@conta,w
  5709  048E  1C03               	skipc
  5710  048F  2C91               	goto	u182_21
  5711  0490  2C92               	goto	u182_20
  5712  0491                     u182_21:
  5713  0491  2C52               	goto	i1l2835
  5714  0492                     u182_20:
  5715  0492                     i1l2843:
  5716                           
  5717                           ;Digitizer16bits.c: 317:         PORTB = 0x2A;
  5718  0492  302A               	movlw	42
  5719  0493  0086               	movwf	6	;volatile
  5720                           
  5721                           ;Digitizer16bits.c: 318:         _delay((unsigned long)((5)*(9830400UL/4000.0)));
  5722  0494  3010               	movlw	16
  5723  0495  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0496  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0497  00D5               	movwf	??_Interrups+1
  5726  0498  30F3               	movlw	243
  5727  0499  00D4               	movwf	??_Interrups
  5728  049A                     u205_27:
  5729  049A  0BD4               	decfsz	??_Interrups,f
  5730  049B  2C9A               	goto	u205_27
  5731  049C  0BD5               	decfsz	??_Interrups+1,f
  5732  049D  2C9A               	goto	u205_27
  5733  049E  2C9F               	nop2
  5734                           
  5735                           ;Digitizer16bits.c: 320:         SumData_Y = 0;
  5736  049F  3000               	movlw	0
  5737  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  5738  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  5739  04A2  00AF               	movwf	_SumData_Y+3
  5740  04A3  3000               	movlw	0
  5741  04A4  00AE               	movwf	_SumData_Y+2
  5742  04A5  3000               	movlw	0
  5743  04A6  00AD               	movwf	_SumData_Y+1
  5744  04A7  3000               	movlw	0
  5745  04A8  00AC               	movwf	_SumData_Y
  5746  04A9                     i1l2845:
  5747                           
  5748                           ;Digitizer16bits.c: 321:         Data_Y = ReadDataADC();
  5749  04A9  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5750  04AE  0871               	movf	?_ReadDataADC+1,w
  5751  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  5752  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  5753  04B1  00BD               	movwf	_Data_Y+1
  5754  04B2  0870               	movf	?_ReadDataADC,w
  5755  04B3  00BC               	movwf	_Data_Y
  5756  04B4                     i1l2847:
  5757                           
  5758                           ;Digitizer16bits.c: 322:         for(conta = 0; conta<5; conta++){
  5759  04B4  01FA               	clrf	Interrups@conta
  5760  04B5                     i1l2853:
  5761                           
  5762                           ;Digitizer16bits.c: 323:             Data_Y = ReadDataADC();
  5763  04B5  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5764  04BA  0871               	movf	?_ReadDataADC+1,w
  5765  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  5766  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  5767  04BD  00BD               	movwf	_Data_Y+1
  5768  04BE  0870               	movf	?_ReadDataADC,w
  5769  04BF  00BC               	movwf	_Data_Y
  5770  04C0                     i1l2855:
  5771                           
  5772                           ;Digitizer16bits.c: 324:             SumData_Y = SumData_Y + Data_Y;
  5773  04C0  082C               	movf	_SumData_Y,w
  5774  04C1  00D4               	movwf	??_Interrups
  5775  04C2  082D               	movf	_SumData_Y+1,w
  5776  04C3  00D5               	movwf	??_Interrups+1
  5777  04C4  082E               	movf	_SumData_Y+2,w
  5778  04C5  00D6               	movwf	??_Interrups+2
  5779  04C6  082F               	movf	_SumData_Y+3,w
  5780  04C7  00D7               	movwf	??_Interrups+3
  5781  04C8  083C               	movf	_Data_Y,w
  5782  04C9  00D8               	movwf	??_Interrups+4
  5783  04CA  083D               	movf	_Data_Y+1,w
  5784  04CB  00D9               	movwf	??_Interrups+5
  5785  04CC  3000               	movlw	0
  5786  04CD  1BD9               	btfsc	??_Interrups+5,7
  5787  04CE  30FF               	movlw	255
  5788  04CF  00DA               	movwf	??_Interrups+6
  5789  04D0  00DB               	movwf	??_Interrups+7
  5790  04D1  0858               	movf	??_Interrups+4,w
  5791  04D2  07D4               	addwf	??_Interrups,f
  5792  04D3  0859               	movf	??_Interrups+5,w
  5793  04D4  1803               	skipnc
  5794  04D5  0F59               	incfsz	??_Interrups+5,w
  5795  04D6  2CD8               	goto	u183_20
  5796  04D7  2CD9               	goto	u183_21
  5797  04D8                     u183_20:
  5798  04D8  07D5               	addwf	??_Interrups+1,f
  5799  04D9                     u183_21:
  5800  04D9  085A               	movf	??_Interrups+6,w
  5801  04DA  1803               	skipnc
  5802  04DB  0F5A               	incfsz	??_Interrups+6,w
  5803  04DC  2CDE               	goto	u183_22
  5804  04DD  2CDF               	goto	u183_23
  5805  04DE                     u183_22:
  5806  04DE  07D6               	addwf	??_Interrups+2,f
  5807  04DF                     u183_23:
  5808  04DF  085B               	movf	??_Interrups+7,w
  5809  04E0  1803               	skipnc
  5810  04E1  0A5B               	incf	??_Interrups+7,w
  5811  04E2  07D7               	addwf	??_Interrups+3,f
  5812  04E3  0857               	movf	??_Interrups+3,w
  5813  04E4  00AF               	movwf	_SumData_Y+3
  5814  04E5  0856               	movf	??_Interrups+2,w
  5815  04E6  00AE               	movwf	_SumData_Y+2
  5816  04E7  0855               	movf	??_Interrups+1,w
  5817  04E8  00AD               	movwf	_SumData_Y+1
  5818  04E9  0854               	movf	??_Interrups,w
  5819  04EA  00AC               	movwf	_SumData_Y
  5820  04EB                     i1l2857:
  5821                           
  5822                           ;Digitizer16bits.c: 325:         }
  5823  04EB  3001               	movlw	1
  5824  04EC  00D4               	movwf	??_Interrups
  5825  04ED  0854               	movf	??_Interrups,w
  5826  04EE  07FA               	addwf	Interrups@conta,f
  5827  04EF                     i1l2859:
  5828  04EF  3005               	movlw	5
  5829  04F0  027A               	subwf	Interrups@conta,w
  5830  04F1  1C03               	skipc
  5831  04F2  2CF4               	goto	u184_21
  5832  04F3  2CF5               	goto	u184_20
  5833  04F4                     u184_21:
  5834  04F4  2CB5               	goto	i1l2853
  5835  04F5                     u184_20:
  5836  04F5                     i1l2861:
  5837                           
  5838                           ;Digitizer16bits.c: 327:         PORTB = 0x2C;
  5839  04F5  302C               	movlw	44
  5840  04F6  0086               	movwf	6	;volatile
  5841                           
  5842                           ;Digitizer16bits.c: 328:         _delay((unsigned long)((5)*(9830400UL/4000.0)));
  5843  04F7  3010               	movlw	16
  5844  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  5845  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  5846  04FA  00D5               	movwf	??_Interrups+1
  5847  04FB  30F3               	movlw	243
  5848  04FC  00D4               	movwf	??_Interrups
  5849  04FD                     u206_27:
  5850  04FD  0BD4               	decfsz	??_Interrups,f
  5851  04FE  2CFD               	goto	u206_27
  5852  04FF  0BD5               	decfsz	??_Interrups+1,f
  5853  0500  2CFD               	goto	u206_27
  5854  0501  2D02               	nop2
  5855                           
  5856                           ;Digitizer16bits.c: 330:         SumData_Z = 0;
  5857  0502  3000               	movlw	0
  5858  0503  1283               	bcf	3,5	;RP0=0, select bank0
  5859  0504  1303               	bcf	3,6	;RP1=0, select bank0
  5860  0505  00AB               	movwf	_SumData_Z+3
  5861  0506  3000               	movlw	0
  5862  0507  00AA               	movwf	_SumData_Z+2
  5863  0508  3000               	movlw	0
  5864  0509  00A9               	movwf	_SumData_Z+1
  5865  050A  3000               	movlw	0
  5866  050B  00A8               	movwf	_SumData_Z
  5867  050C                     i1l2863:
  5868                           
  5869                           ;Digitizer16bits.c: 331:         Data_Z = ReadDataADC();
  5870  050C  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5871  0511  0871               	movf	?_ReadDataADC+1,w
  5872  0512  1283               	bcf	3,5	;RP0=0, select bank0
  5873  0513  1303               	bcf	3,6	;RP1=0, select bank0
  5874  0514  00BB               	movwf	_Data_Z+1
  5875  0515  0870               	movf	?_ReadDataADC,w
  5876  0516  00BA               	movwf	_Data_Z
  5877  0517                     i1l2865:
  5878                           
  5879                           ;Digitizer16bits.c: 332:         for(conta = 0; conta<5; conta++){
  5880  0517  01FA               	clrf	Interrups@conta
  5881  0518                     i1l2871:
  5882                           
  5883                           ;Digitizer16bits.c: 333:             Data_Z = ReadDataADC();
  5884  0518  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5885  051D  0871               	movf	?_ReadDataADC+1,w
  5886  051E  1283               	bcf	3,5	;RP0=0, select bank0
  5887  051F  1303               	bcf	3,6	;RP1=0, select bank0
  5888  0520  00BB               	movwf	_Data_Z+1
  5889  0521  0870               	movf	?_ReadDataADC,w
  5890  0522  00BA               	movwf	_Data_Z
  5891  0523                     i1l2873:
  5892                           
  5893                           ;Digitizer16bits.c: 334:             SumData_Z = SumData_Z + Data_Z;
  5894  0523  0828               	movf	_SumData_Z,w
  5895  0524  00D4               	movwf	??_Interrups
  5896  0525  0829               	movf	_SumData_Z+1,w
  5897  0526  00D5               	movwf	??_Interrups+1
  5898  0527  082A               	movf	_SumData_Z+2,w
  5899  0528  00D6               	movwf	??_Interrups+2
  5900  0529  082B               	movf	_SumData_Z+3,w
  5901  052A  00D7               	movwf	??_Interrups+3
  5902  052B  083A               	movf	_Data_Z,w
  5903  052C  00D8               	movwf	??_Interrups+4
  5904  052D  083B               	movf	_Data_Z+1,w
  5905  052E  00D9               	movwf	??_Interrups+5
  5906  052F  3000               	movlw	0
  5907  0530  1BD9               	btfsc	??_Interrups+5,7
  5908  0531  30FF               	movlw	255
  5909  0532  00DA               	movwf	??_Interrups+6
  5910  0533  00DB               	movwf	??_Interrups+7
  5911  0534  0858               	movf	??_Interrups+4,w
  5912  0535  07D4               	addwf	??_Interrups,f
  5913  0536  0859               	movf	??_Interrups+5,w
  5914  0537  1803               	skipnc
  5915  0538  0F59               	incfsz	??_Interrups+5,w
  5916  0539  2D3B               	goto	u185_20
  5917  053A  2D3C               	goto	u185_21
  5918  053B                     u185_20:
  5919  053B  07D5               	addwf	??_Interrups+1,f
  5920  053C                     u185_21:
  5921  053C  085A               	movf	??_Interrups+6,w
  5922  053D  1803               	skipnc
  5923  053E  0F5A               	incfsz	??_Interrups+6,w
  5924  053F  2D41               	goto	u185_22
  5925  0540  2D42               	goto	u185_23
  5926  0541                     u185_22:
  5927  0541  07D6               	addwf	??_Interrups+2,f
  5928  0542                     u185_23:
  5929  0542  085B               	movf	??_Interrups+7,w
  5930  0543  1803               	skipnc
  5931  0544  0A5B               	incf	??_Interrups+7,w
  5932  0545  07D7               	addwf	??_Interrups+3,f
  5933  0546  0857               	movf	??_Interrups+3,w
  5934  0547  00AB               	movwf	_SumData_Z+3
  5935  0548  0856               	movf	??_Interrups+2,w
  5936  0549  00AA               	movwf	_SumData_Z+2
  5937  054A  0855               	movf	??_Interrups+1,w
  5938  054B  00A9               	movwf	_SumData_Z+1
  5939  054C  0854               	movf	??_Interrups,w
  5940  054D  00A8               	movwf	_SumData_Z
  5941  054E                     i1l2875:
  5942                           
  5943                           ;Digitizer16bits.c: 335:         }
  5944  054E  3001               	movlw	1
  5945  054F  00D4               	movwf	??_Interrups
  5946  0550  0854               	movf	??_Interrups,w
  5947  0551  07FA               	addwf	Interrups@conta,f
  5948  0552                     i1l2877:
  5949  0552  3005               	movlw	5
  5950  0553  027A               	subwf	Interrups@conta,w
  5951  0554  1C03               	skipc
  5952  0555  2D57               	goto	u186_21
  5953  0556  2D58               	goto	u186_20
  5954  0557                     u186_21:
  5955  0557  2D18               	goto	i1l2871
  5956  0558                     u186_20:
  5957  0558                     i1l2879:
  5958                           
  5959                           ;Digitizer16bits.c: 337:         PORTB = 0x28;
  5960  0558  3028               	movlw	40
  5961  0559  0086               	movwf	6	;volatile
  5962                           
  5963                           ;Digitizer16bits.c: 338:         _delay((unsigned long)((5)*(9830400UL/4000.0)));
  5964  055A  3010               	movlw	16
  5965  055B  1283               	bcf	3,5	;RP0=0, select bank0
  5966  055C  1303               	bcf	3,6	;RP1=0, select bank0
  5967  055D  00D5               	movwf	??_Interrups+1
  5968  055E  30F3               	movlw	243
  5969  055F  00D4               	movwf	??_Interrups
  5970  0560                     u207_27:
  5971  0560  0BD4               	decfsz	??_Interrups,f
  5972  0561  2D60               	goto	u207_27
  5973  0562  0BD5               	decfsz	??_Interrups+1,f
  5974  0563  2D60               	goto	u207_27
  5975  0564  2D65               	nop2
  5976                           
  5977                           ;Digitizer16bits.c: 340:         SumData_TC = 0;
  5978  0565  3000               	movlw	0
  5979  0566  1283               	bcf	3,5	;RP0=0, select bank0
  5980  0567  1303               	bcf	3,6	;RP1=0, select bank0
  5981  0568  00A7               	movwf	_SumData_TC+3
  5982  0569  3000               	movlw	0
  5983  056A  00A6               	movwf	_SumData_TC+2
  5984  056B  3000               	movlw	0
  5985  056C  00A5               	movwf	_SumData_TC+1
  5986  056D  3000               	movlw	0
  5987  056E  00A4               	movwf	_SumData_TC
  5988  056F                     i1l2881:
  5989                           
  5990                           ;Digitizer16bits.c: 341:         Data_TC = ReadDataADC();
  5991  056F  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  5992  0574  0871               	movf	?_ReadDataADC+1,w
  5993  0575  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0576  1303               	bcf	3,6	;RP1=0, select bank0
  5995  0577  00B9               	movwf	_Data_TC+1
  5996  0578  0870               	movf	?_ReadDataADC,w
  5997  0579  00B8               	movwf	_Data_TC
  5998  057A                     i1l2883:
  5999                           
  6000                           ;Digitizer16bits.c: 342:         for(conta = 0; conta<5; conta++){
  6001  057A  01FA               	clrf	Interrups@conta
  6002  057B                     i1l2889:
  6003                           
  6004                           ;Digitizer16bits.c: 343:             Data_TC = ReadDataADC();
  6005  057B  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  6006  0580  0871               	movf	?_ReadDataADC+1,w
  6007  0581  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0582  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0583  00B9               	movwf	_Data_TC+1
  6010  0584  0870               	movf	?_ReadDataADC,w
  6011  0585  00B8               	movwf	_Data_TC
  6012  0586                     i1l2891:
  6013                           
  6014                           ;Digitizer16bits.c: 344:             SumData_TC = SumData_TC + Data_TC;
  6015  0586  0824               	movf	_SumData_TC,w
  6016  0587  00D4               	movwf	??_Interrups
  6017  0588  0825               	movf	_SumData_TC+1,w
  6018  0589  00D5               	movwf	??_Interrups+1
  6019  058A  0826               	movf	_SumData_TC+2,w
  6020  058B  00D6               	movwf	??_Interrups+2
  6021  058C  0827               	movf	_SumData_TC+3,w
  6022  058D  00D7               	movwf	??_Interrups+3
  6023  058E  0838               	movf	_Data_TC,w
  6024  058F  00D8               	movwf	??_Interrups+4
  6025  0590  0839               	movf	_Data_TC+1,w
  6026  0591  00D9               	movwf	??_Interrups+5
  6027  0592  3000               	movlw	0
  6028  0593  1BD9               	btfsc	??_Interrups+5,7
  6029  0594  30FF               	movlw	255
  6030  0595  00DA               	movwf	??_Interrups+6
  6031  0596  00DB               	movwf	??_Interrups+7
  6032  0597  0858               	movf	??_Interrups+4,w
  6033  0598  07D4               	addwf	??_Interrups,f
  6034  0599  0859               	movf	??_Interrups+5,w
  6035  059A  1803               	skipnc
  6036  059B  0F59               	incfsz	??_Interrups+5,w
  6037  059C  2D9E               	goto	u187_20
  6038  059D  2D9F               	goto	u187_21
  6039  059E                     u187_20:
  6040  059E  07D5               	addwf	??_Interrups+1,f
  6041  059F                     u187_21:
  6042  059F  085A               	movf	??_Interrups+6,w
  6043  05A0  1803               	skipnc
  6044  05A1  0F5A               	incfsz	??_Interrups+6,w
  6045  05A2  2DA4               	goto	u187_22
  6046  05A3  2DA5               	goto	u187_23
  6047  05A4                     u187_22:
  6048  05A4  07D6               	addwf	??_Interrups+2,f
  6049  05A5                     u187_23:
  6050  05A5  085B               	movf	??_Interrups+7,w
  6051  05A6  1803               	skipnc
  6052  05A7  0A5B               	incf	??_Interrups+7,w
  6053  05A8  07D7               	addwf	??_Interrups+3,f
  6054  05A9  0857               	movf	??_Interrups+3,w
  6055  05AA  00A7               	movwf	_SumData_TC+3
  6056  05AB  0856               	movf	??_Interrups+2,w
  6057  05AC  00A6               	movwf	_SumData_TC+2
  6058  05AD  0855               	movf	??_Interrups+1,w
  6059  05AE  00A5               	movwf	_SumData_TC+1
  6060  05AF  0854               	movf	??_Interrups,w
  6061  05B0  00A4               	movwf	_SumData_TC
  6062  05B1                     i1l2893:
  6063                           
  6064                           ;Digitizer16bits.c: 345:         }
  6065  05B1  3001               	movlw	1
  6066  05B2  00D4               	movwf	??_Interrups
  6067  05B3  0854               	movf	??_Interrups,w
  6068  05B4  07FA               	addwf	Interrups@conta,f
  6069  05B5                     i1l2895:
  6070  05B5  3005               	movlw	5
  6071  05B6  027A               	subwf	Interrups@conta,w
  6072  05B7  1C03               	skipc
  6073  05B8  2DBA               	goto	u188_21
  6074  05B9  2DBB               	goto	u188_20
  6075  05BA                     u188_21:
  6076  05BA  2D7B               	goto	i1l2889
  6077  05BB                     u188_20:
  6078  05BB                     i1l2897:
  6079                           
  6080                           ;Digitizer16bits.c: 347:         PORTB = 0x20;
  6081  05BB  3020               	movlw	32
  6082  05BC  0086               	movwf	6	;volatile
  6083                           
  6084                           ;Digitizer16bits.c: 348:         _delay((unsigned long)((5)*(9830400UL/4000.0)));
  6085  05BD  3010               	movlw	16
  6086  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  6087  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  6088  05C0  00D5               	movwf	??_Interrups+1
  6089  05C1  30F3               	movlw	243
  6090  05C2  00D4               	movwf	??_Interrups
  6091  05C3                     u208_27:
  6092  05C3  0BD4               	decfsz	??_Interrups,f
  6093  05C4  2DC3               	goto	u208_27
  6094  05C5  0BD5               	decfsz	??_Interrups+1,f
  6095  05C6  2DC3               	goto	u208_27
  6096  05C7  2DC8               	nop2
  6097                           
  6098                           ;Digitizer16bits.c: 350:         SumData_TS = 0;
  6099  05C8  3000               	movlw	0
  6100  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  6101  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  6102  05CB  00A3               	movwf	_SumData_TS+3
  6103  05CC  3000               	movlw	0
  6104  05CD  00A2               	movwf	_SumData_TS+2
  6105  05CE  3000               	movlw	0
  6106  05CF  00A1               	movwf	_SumData_TS+1
  6107  05D0  3000               	movlw	0
  6108  05D1  00A0               	movwf	_SumData_TS
  6109  05D2                     i1l2899:
  6110                           
  6111                           ;Digitizer16bits.c: 351:         Data_TS = ReadDataADC();
  6112  05D2  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  6113  05D7  0871               	movf	?_ReadDataADC+1,w
  6114  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  6115  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  6116  05DA  00B7               	movwf	_Data_TS+1
  6117  05DB  0870               	movf	?_ReadDataADC,w
  6118  05DC  00B6               	movwf	_Data_TS
  6119  05DD                     i1l2901:
  6120                           
  6121                           ;Digitizer16bits.c: 352:         for(conta = 0; conta<5; conta++){
  6122  05DD  01FA               	clrf	Interrups@conta
  6123  05DE                     i1l2907:
  6124                           
  6125                           ;Digitizer16bits.c: 353:             Data_TS = ReadDataADC();
  6126  05DE  120A  158A  2334  120A  118A  	fcall	_ReadDataADC
  6127  05E3  0871               	movf	?_ReadDataADC+1,w
  6128  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  6129  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  6130  05E6  00B7               	movwf	_Data_TS+1
  6131  05E7  0870               	movf	?_ReadDataADC,w
  6132  05E8  00B6               	movwf	_Data_TS
  6133  05E9                     i1l2909:
  6134                           
  6135                           ;Digitizer16bits.c: 354:             SumData_TS = SumData_TS + Data_TS;
  6136  05E9  0820               	movf	_SumData_TS,w
  6137  05EA  00D4               	movwf	??_Interrups
  6138  05EB  0821               	movf	_SumData_TS+1,w
  6139  05EC  00D5               	movwf	??_Interrups+1
  6140  05ED  0822               	movf	_SumData_TS+2,w
  6141  05EE  00D6               	movwf	??_Interrups+2
  6142  05EF  0823               	movf	_SumData_TS+3,w
  6143  05F0  00D7               	movwf	??_Interrups+3
  6144  05F1  0836               	movf	_Data_TS,w
  6145  05F2  00D8               	movwf	??_Interrups+4
  6146  05F3  0837               	movf	_Data_TS+1,w
  6147  05F4  00D9               	movwf	??_Interrups+5
  6148  05F5  3000               	movlw	0
  6149  05F6  1BD9               	btfsc	??_Interrups+5,7
  6150  05F7  30FF               	movlw	255
  6151  05F8  00DA               	movwf	??_Interrups+6
  6152  05F9  00DB               	movwf	??_Interrups+7
  6153  05FA  0858               	movf	??_Interrups+4,w
  6154  05FB  07D4               	addwf	??_Interrups,f
  6155  05FC  0859               	movf	??_Interrups+5,w
  6156  05FD  1803               	skipnc
  6157  05FE  0F59               	incfsz	??_Interrups+5,w
  6158  05FF  2E01               	goto	u189_20
  6159  0600  2E02               	goto	u189_21
  6160  0601                     u189_20:
  6161  0601  07D5               	addwf	??_Interrups+1,f
  6162  0602                     u189_21:
  6163  0602  085A               	movf	??_Interrups+6,w
  6164  0603  1803               	skipnc
  6165  0604  0F5A               	incfsz	??_Interrups+6,w
  6166  0605  2E07               	goto	u189_22
  6167  0606  2E08               	goto	u189_23
  6168  0607                     u189_22:
  6169  0607  07D6               	addwf	??_Interrups+2,f
  6170  0608                     u189_23:
  6171  0608  085B               	movf	??_Interrups+7,w
  6172  0609  1803               	skipnc
  6173  060A  0A5B               	incf	??_Interrups+7,w
  6174  060B  07D7               	addwf	??_Interrups+3,f
  6175  060C  0857               	movf	??_Interrups+3,w
  6176  060D  00A3               	movwf	_SumData_TS+3
  6177  060E  0856               	movf	??_Interrups+2,w
  6178  060F  00A2               	movwf	_SumData_TS+2
  6179  0610  0855               	movf	??_Interrups+1,w
  6180  0611  00A1               	movwf	_SumData_TS+1
  6181  0612  0854               	movf	??_Interrups,w
  6182  0613  00A0               	movwf	_SumData_TS
  6183  0614                     i1l2911:
  6184                           
  6185                           ;Digitizer16bits.c: 355:         }
  6186  0614  3001               	movlw	1
  6187  0615  00D4               	movwf	??_Interrups
  6188  0616  0854               	movf	??_Interrups,w
  6189  0617  07FA               	addwf	Interrups@conta,f
  6190  0618                     i1l2913:
  6191  0618  3005               	movlw	5
  6192  0619  027A               	subwf	Interrups@conta,w
  6193  061A  1C03               	skipc
  6194  061B  2E1D               	goto	u190_21
  6195  061C  2E1E               	goto	u190_20
  6196  061D                     u190_21:
  6197  061D  2DDE               	goto	i1l2907
  6198  061E                     u190_20:
  6199  061E                     i1l166:
  6200                           
  6201                           ;Digitizer16bits.c: 357:         PORTAbits.RA0 = 0;
  6202  061E  1005               	bcf	5,0	;volatile
  6203  061F                     i1l2915:
  6204                           
  6205                           ;Digitizer16bits.c: 360:         Data_X = (signed short) (SumData_X/5);
  6206  061F  3000               	movlw	0
  6207  0620  00F3               	movwf	___aldiv@divisor+3
  6208  0621  3000               	movlw	0
  6209  0622  00F2               	movwf	___aldiv@divisor+2
  6210  0623  3000               	movlw	0
  6211  0624  00F1               	movwf	___aldiv@divisor+1
  6212  0625  3005               	movlw	5
  6213  0626  00F0               	movwf	___aldiv@divisor
  6214  0627  0833               	movf	_SumData_X+3,w
  6215  0628  00F7               	movwf	___aldiv@dividend+3
  6216  0629  0832               	movf	_SumData_X+2,w
  6217  062A  00F6               	movwf	___aldiv@dividend+2
  6218  062B  0831               	movf	_SumData_X+1,w
  6219  062C  00F5               	movwf	___aldiv@dividend+1
  6220  062D  0830               	movf	_SumData_X,w
  6221  062E  00F4               	movwf	___aldiv@dividend
  6222  062F  120A  118A  2715  120A  118A  	fcall	___aldiv
  6223  0634  0871               	movf	?___aldiv+1,w
  6224  0635  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0636  1303               	bcf	3,6	;RP1=0, select bank0
  6226  0637  00BF               	movwf	_Data_X+1
  6227  0638  0870               	movf	?___aldiv,w
  6228  0639  00BE               	movwf	_Data_X
  6229                           
  6230                           ;Digitizer16bits.c: 361:         Data_Y = (signed short) (SumData_Y/5);
  6231  063A  3000               	movlw	0
  6232  063B  00F3               	movwf	___aldiv@divisor+3
  6233  063C  3000               	movlw	0
  6234  063D  00F2               	movwf	___aldiv@divisor+2
  6235  063E  3000               	movlw	0
  6236  063F  00F1               	movwf	___aldiv@divisor+1
  6237  0640  3005               	movlw	5
  6238  0641  00F0               	movwf	___aldiv@divisor
  6239  0642  082F               	movf	_SumData_Y+3,w
  6240  0643  00F7               	movwf	___aldiv@dividend+3
  6241  0644  082E               	movf	_SumData_Y+2,w
  6242  0645  00F6               	movwf	___aldiv@dividend+2
  6243  0646  082D               	movf	_SumData_Y+1,w
  6244  0647  00F5               	movwf	___aldiv@dividend+1
  6245  0648  082C               	movf	_SumData_Y,w
  6246  0649  00F4               	movwf	___aldiv@dividend
  6247  064A  120A  118A  2715  120A  118A  	fcall	___aldiv
  6248  064F  0871               	movf	?___aldiv+1,w
  6249  0650  1283               	bcf	3,5	;RP0=0, select bank0
  6250  0651  1303               	bcf	3,6	;RP1=0, select bank0
  6251  0652  00BD               	movwf	_Data_Y+1
  6252  0653  0870               	movf	?___aldiv,w
  6253  0654  00BC               	movwf	_Data_Y
  6254                           
  6255                           ;Digitizer16bits.c: 362:         Data_Z = (signed short) (SumData_Z/5);
  6256  0655  3000               	movlw	0
  6257  0656  00F3               	movwf	___aldiv@divisor+3
  6258  0657  3000               	movlw	0
  6259  0658  00F2               	movwf	___aldiv@divisor+2
  6260  0659  3000               	movlw	0
  6261  065A  00F1               	movwf	___aldiv@divisor+1
  6262  065B  3005               	movlw	5
  6263  065C  00F0               	movwf	___aldiv@divisor
  6264  065D  082B               	movf	_SumData_Z+3,w
  6265  065E  00F7               	movwf	___aldiv@dividend+3
  6266  065F  082A               	movf	_SumData_Z+2,w
  6267  0660  00F6               	movwf	___aldiv@dividend+2
  6268  0661  0829               	movf	_SumData_Z+1,w
  6269  0662  00F5               	movwf	___aldiv@dividend+1
  6270  0663  0828               	movf	_SumData_Z,w
  6271  0664  00F4               	movwf	___aldiv@dividend
  6272  0665  120A  118A  2715  120A  118A  	fcall	___aldiv
  6273  066A  0871               	movf	?___aldiv+1,w
  6274  066B  1283               	bcf	3,5	;RP0=0, select bank0
  6275  066C  1303               	bcf	3,6	;RP1=0, select bank0
  6276  066D  00BB               	movwf	_Data_Z+1
  6277  066E  0870               	movf	?___aldiv,w
  6278  066F  00BA               	movwf	_Data_Z
  6279                           
  6280                           ;Digitizer16bits.c: 363:         Data_TC = (signed short) (SumData_TC/5);
  6281  0670  3000               	movlw	0
  6282  0671  00F3               	movwf	___aldiv@divisor+3
  6283  0672  3000               	movlw	0
  6284  0673  00F2               	movwf	___aldiv@divisor+2
  6285  0674  3000               	movlw	0
  6286  0675  00F1               	movwf	___aldiv@divisor+1
  6287  0676  3005               	movlw	5
  6288  0677  00F0               	movwf	___aldiv@divisor
  6289  0678  0827               	movf	_SumData_TC+3,w
  6290  0679  00F7               	movwf	___aldiv@dividend+3
  6291  067A  0826               	movf	_SumData_TC+2,w
  6292  067B  00F6               	movwf	___aldiv@dividend+2
  6293  067C  0825               	movf	_SumData_TC+1,w
  6294  067D  00F5               	movwf	___aldiv@dividend+1
  6295  067E  0824               	movf	_SumData_TC,w
  6296  067F  00F4               	movwf	___aldiv@dividend
  6297  0680  120A  118A  2715  120A  118A  	fcall	___aldiv
  6298  0685  0871               	movf	?___aldiv+1,w
  6299  0686  1283               	bcf	3,5	;RP0=0, select bank0
  6300  0687  1303               	bcf	3,6	;RP1=0, select bank0
  6301  0688  00B9               	movwf	_Data_TC+1
  6302  0689  0870               	movf	?___aldiv,w
  6303  068A  00B8               	movwf	_Data_TC
  6304                           
  6305                           ;Digitizer16bits.c: 364:         Data_TS = (signed short) (SumData_TS/5);
  6306  068B  3000               	movlw	0
  6307  068C  00F3               	movwf	___aldiv@divisor+3
  6308  068D  3000               	movlw	0
  6309  068E  00F2               	movwf	___aldiv@divisor+2
  6310  068F  3000               	movlw	0
  6311  0690  00F1               	movwf	___aldiv@divisor+1
  6312  0691  3005               	movlw	5
  6313  0692  00F0               	movwf	___aldiv@divisor
  6314  0693  0823               	movf	_SumData_TS+3,w
  6315  0694  00F7               	movwf	___aldiv@dividend+3
  6316  0695  0822               	movf	_SumData_TS+2,w
  6317  0696  00F6               	movwf	___aldiv@dividend+2
  6318  0697  0821               	movf	_SumData_TS+1,w
  6319  0698  00F5               	movwf	___aldiv@dividend+1
  6320  0699  0820               	movf	_SumData_TS,w
  6321  069A  00F4               	movwf	___aldiv@dividend
  6322  069B  120A  118A  2715  120A  118A  	fcall	___aldiv
  6323  06A0  0871               	movf	?___aldiv+1,w
  6324  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  6325  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  6326  06A3  00B7               	movwf	_Data_TS+1
  6327  06A4  0870               	movf	?___aldiv,w
  6328  06A5  00B6               	movwf	_Data_TS
  6329  06A6                     i1l2917:
  6330                           
  6331                           ;Digitizer16bits.c: 367:         print_string("JROADQ");
  6332  06A6  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  6333  06A7  00F1               	movwf	print_string@str
  6334  06A8  3080               	movlw	128
  6335  06A9  00F2               	movwf	print_string@str+1
  6336  06AA  120A  158A  2206  120A  118A  	fcall	_print_string
  6337  06AF                     i1l2919:
  6338                           
  6339                           ;Digitizer16bits.c: 368:         WriteByte_USART(ContaSample);
  6340  06AF  087B               	movf	_ContaSample,w
  6341  06B0  120A  158A  219D  120A  118A  	fcall	_WriteByte_USART
  6342  06B5                     i1l2921:
  6343                           
  6344                           ;Digitizer16bits.c: 369:         print_value(Data_X);
  6345  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  6346  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  6347  06B7  083F               	movf	_Data_X+1,w
  6348  06B8  00F2               	movwf	print_value@value+1
  6349  06B9  083E               	movf	_Data_X,w
  6350  06BA  00F1               	movwf	print_value@value
  6351  06BB  120A  158A  21BA  120A  118A  	fcall	_print_value
  6352  06C0                     i1l2923:
  6353                           
  6354                           ;Digitizer16bits.c: 370:         print_value(Data_Y);
  6355  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  6356  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  6357  06C2  083D               	movf	_Data_Y+1,w
  6358  06C3  00F2               	movwf	print_value@value+1
  6359  06C4  083C               	movf	_Data_Y,w
  6360  06C5  00F1               	movwf	print_value@value
  6361  06C6  120A  158A  21BA  120A  118A  	fcall	_print_value
  6362  06CB                     i1l2925:
  6363                           
  6364                           ;Digitizer16bits.c: 371:         print_value(Data_Z);
  6365  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  6366  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  6367  06CD  083B               	movf	_Data_Z+1,w
  6368  06CE  00F2               	movwf	print_value@value+1
  6369  06CF  083A               	movf	_Data_Z,w
  6370  06D0  00F1               	movwf	print_value@value
  6371  06D1  120A  158A  21BA  120A  118A  	fcall	_print_value
  6372  06D6                     i1l2927:
  6373                           
  6374                           ;Digitizer16bits.c: 372:         print_value(Data_TC);
  6375  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  6376  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  6377  06D8  0839               	movf	_Data_TC+1,w
  6378  06D9  00F2               	movwf	print_value@value+1
  6379  06DA  0838               	movf	_Data_TC,w
  6380  06DB  00F1               	movwf	print_value@value
  6381  06DC  120A  158A  21BA  120A  118A  	fcall	_print_value
  6382  06E1                     i1l2929:
  6383                           
  6384                           ;Digitizer16bits.c: 373:         print_value(Data_TS);
  6385  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  6386  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  6387  06E3  0837               	movf	_Data_TS+1,w
  6388  06E4  00F2               	movwf	print_value@value+1
  6389  06E5  0836               	movf	_Data_TS,w
  6390  06E6  00F1               	movwf	print_value@value
  6391  06E7  120A  158A  21BA  120A  118A  	fcall	_print_value
  6392  06EC                     i1l2931:
  6393                           
  6394                           ;Digitizer16bits.c: 374:         print_string("\n\r");
  6395  06EC  3016               	movlw	(low (((STR_5+21)-__stringbase)| (0+32768)))& (0+255)
  6396  06ED  00F1               	movwf	print_string@str
  6397  06EE  3080               	movlw	128
  6398  06EF  00F2               	movwf	print_string@str+1
  6399  06F0  120A  158A  2206  120A  118A  	fcall	_print_string
  6400  06F5                     i1l2933:
  6401                           
  6402                           ;Digitizer16bits.c: 376:         if(ContaSample == 4){
  6403  06F5  3004               	movlw	4
  6404  06F6  067B               	xorwf	_ContaSample,w
  6405  06F7  1D03               	btfss	3,2
  6406  06F8  2EFA               	goto	u191_21
  6407  06F9  2EFB               	goto	u191_20
  6408  06FA                     u191_21:
  6409  06FA  2F05               	goto	i1l169
  6410  06FB                     u191_20:
  6411  06FB                     i1l2935:
  6412                           
  6413                           ;Digitizer16bits.c: 377:             PIE1bits.TMR1IE = 0;
  6414  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  6415  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  6416  06FD  100C               	bcf	12,0	;volatile
  6417  06FE                     i1l2937:
  6418                           
  6419                           ;Digitizer16bits.c: 378:             if(ControlSample == 1){
  6420  06FE  037C               	decf	_ControlSample,w
  6421  06FF  1D03               	btfss	3,2
  6422  0700  2F02               	goto	u192_21
  6423  0701  2F03               	goto	u192_20
  6424  0702                     u192_21:
  6425  0702  2F05               	goto	i1l169
  6426  0703                     u192_20:
  6427  0703                     i1l2939:
  6428                           
  6429                           ;Digitizer16bits.c: 379:                 INTCONbits.INTF = 0;
  6430  0703  108B               	bcf	11,1	;volatile
  6431                           
  6432                           ;Digitizer16bits.c: 380:                 INTCONbits.INTE = 1;
  6433  0704  160B               	bsf	11,4	;volatile
  6434  0705                     i1l169:
  6435  0705  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0706  1303               	bcf	3,6	;RP1=0, select bank0
  6437  0707  085F               	movf	??_Interrups+11,w
  6438  0708  00FF               	movwf	btemp+1
  6439  0709  085E               	movf	??_Interrups+10,w
  6440  070A  008A               	movwf	10
  6441  070B  085D               	movf	??_Interrups+9,w
  6442  070C  0084               	movwf	4
  6443  070D  0E5C               	swapf	??_Interrups+8,w
  6444  070E  0083               	movwf	3
  6445  070F  0EFE               	swapf	btemp,f
  6446  0710  0E7E               	swapf	btemp,w
  6447  0711  0009               	retfie
  6448  0712                     L1:
  6449  0712                     __end_of_Interrups:
  6450  0712  120A  158A  2D04   	ljmp	i1l2465

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     18      64
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print_string@str	PTR unsigned char  size(2) Largest target is 24
		 -> STR_13(CODE[3]), STR_12(CODE[11]), STR_11(CODE[3]), STR_10(CODE[11]), 
		 -> STR_9(CODE[3]), STR_8(CODE[7]), STR_7(CODE[3]), STR_6(CODE[7]), 
		 -> STR_5(CODE[24]), STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[3]), 
		 -> BufferDAT(BANK0[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrups in COMMON

    _Interrups->___aldiv
    _print_value->_WriteByte_USART
    _TransmitDAT_USART->_print_string
    _TransmitCMD_USART->_print_string
    _print_string->_WriteByte_USART
    _GPS_TIMEDATE->_ReadByteSW_USART
    _GPS_STATUS->_ReadByteSW_USART
    _GPS_LONGITUDE->_ReadByteSW_USART
    _GPS_LATITUDE->_ReadByteSW_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrups in BANK0

    _Interrups->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrups in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrups in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrups in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              0 BANK1      3     3      0
                    _ClosePort_USART
                   _ConfigPort_USART
                     _OpenPort_USART
 ---------------------------------------------------------------------------------
 (1) _OpenPort_USART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPort_USART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClosePort_USART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrups                                           14    14      0    9212
                                              9 COMMON     2     2      0
                                              6 BANK0     12    12      0
                       _GPS_LATITUDE
                      _GPS_LONGITUDE
                         _GPS_STATUS
                       _GPS_TIMEDATE
                        _ReadDataADC
                   _ReceiveCMD_USART
                  _TransmitCMD_USART
                  _TransmitDAT_USART
                    _WriteByte_USART
                            ___aldiv
                       _print_string
                        _print_value
 ---------------------------------------------------------------------------------
 (3) _print_value                                          5     3      2    1276
                                              1 COMMON     5     3      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    2580
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _TransmitDAT_USART                                    3     3      0    1243
                                              3 COMMON     3     3      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _TransmitCMD_USART                                    1     1      0    1175
                                              3 COMMON     1     1      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_string                                         2     0      2    1131
                                              1 COMMON     2     0      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (4) _WriteByte_USART                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReceiveCMD_USART                                     3     3      0     164
                                              0 COMMON     3     3      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByte_USART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadDataADC                                          6     4      2     116
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _GPS_TIMEDATE                                         3     3      0     232
                                              2 COMMON     3     3      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (3) _GPS_STATUS                                           4     4      0     232
                                              2 COMMON     4     4      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (3) _GPS_LONGITUDE                                        3     3      0     164
                                              2 COMMON     3     3      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (3) _GPS_LATITUDE                                         3     3      0     164
                                              2 COMMON     3     3      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByteSW_USART                                     2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClosePort_USART
   _ConfigPort_USART
   _OpenPort_USART

 _Interrups (ROOT)
   _GPS_LATITUDE
     _ReadByteSW_USART
   _GPS_LONGITUDE
     _ReadByteSW_USART
   _GPS_STATUS
     _ReadByteSW_USART
   _GPS_TIMEDATE
     _ReadByteSW_USART
   _ReadDataADC
   _ReceiveCMD_USART
     _ReadByte_USART
   _TransmitCMD_USART
     _WriteByte_USART
     _print_string
       _WriteByte_USART
   _TransmitDAT_USART
     _WriteByte_USART
     _print_string
   _WriteByte_USART
   ___aldiv
   _print_string
   _print_value
     _WriteByte_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      51       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3       3       7        3.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      51      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jul 04 17:31:06 2023

                         pc 0002                          fsr 0004                         l174 0A94  
                       l351 0A05                         l175 0A94                         l354 0994  
                       l357 0990                         _PR2 0092             ?_OpenPort_USART 0070  
   TransmitDAT_USART@DAT_ID 0074                         fsr0 0004                         indf 0000  
    TransmitDAT_USART@conta 0075                        l3101 0A8F                        l3103 0A90  
                      l3105 0A91                 ?_GPS_STATUS 0070                        l3061 0A02  
                      l3055 09E9                        l3071 0A5F                        l3057 09ED  
                      l3065 0991                        l3081 0A68                        l3073 0A62  
                      l3067 098D                        l3059 09FF                        l3091 0A71  
                      l3083 0A69                        l3075 0A63                        l3093 0A72  
                      l3085 0A6C                        l3077 0A64                        l3069 0A5B  
                      l3095 0A75                        l3087 0A6F                        l3079 0A67  
                      l3097 0A76                        l3089 0A70                        l3099 0A85  
                      STR_1 083E                        STR_2 0825                        STR_3 0848  
                      STR_4 0825                        STR_5 0810                        STR_6 0848  
                      STR_7 0825                        STR_8 0848                        STR_9 0825  
                      u1937 0A7F                        _TMR2 0011                        _main 0A5B  
             ??_ReadDataADC 0072                        btemp 007E                        start 0012  
   __end_of_ClosePort_USART 0991             __end_of___aldiv 07B2                       ?_main 0070  
                     STR_10 0828                       STR_11 0825                       STR_12 0833  
                     STR_13 0825                       _T1CON 0010                       _T2CON 0012  
                     i1l122 0F28                       i1l131 0418                       i1l109 006E  
                     i1l230 0CEB                       i1l223 0B03                       i1l225 0B29  
                     i1l153 030E                       i1l129 0056                       i1l218 0AE4  
                     i1l227 0B33                       i1l244 0CF4                       i1l166 061E  
                     i1l272 0AE2                       i1l360 09AE                       i1l169 0705  
                     i1l258 07FD                       i1l610 0729                       i1l451 0B51  
                     i1l443 0B41                       i1l371 09A9                       i1l452 0B53  
                     i1l364 09B6                       i1l620 07B1                       i1l445 0B45  
                     i1l365 09B9                       i1l446 0B47                       i1l390 09E8  
                     i1l455 0B5A                       i1l383 0C6E                       i1l288 0BF5  
                     i1l456 0B7A                       i1l448 0B4B                       i1l368 09A3  
                     i1l449 0B4D                       i1l377 0A2B                       i1l459 0B8D  
                     i1l387 0C72                       i1l395 0A5A                       i1l398 09CE  
                     _RCREG 001A                       _RCSTA 0018                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       u97_20 09A9  
                     u97_21 09A8                       _TXREG 0019                       u98_20 0A2B  
                     u98_21 0A2A                       u99_20 0AEA                       u99_21 0AE9  
                     _TXSTA 0098                       pclath 000A                       status 0003  
                     wtemp0 007E      GPS_TIMEDATE@LimitConta 0073             __initialization 0015  
              __end_of_main 0A98         __end_of_ReadDataADC 0B8E               ?_GPS_LATITUDE 0070  
                    ??_main 00A0           ?_ReadByteSW_USART 0070               ?_GPS_TIMEDATE 0070  
      GPS_STATUS@LimitConta 0073                ReadDataADC@i 0073          ??_ReadByteSW_USART 0070  
            _ReadByte_USART 09AA                      _ADCON1 009F                      u100_20 0AFD  
                    u100_21 0AFC                      u101_20 0B15                      u101_21 0B14  
                    u102_20 0B23                      u110_20 0BF5                      u102_21 0B22  
                    u110_21 0BF4                      i1l2101 09B8                      i1l2111 0B9B  
                    u111_20 0B45                      u103_20 09B2                      i1l2201 07B4  
                    i1l2121 0BA6                      i1l2113 0BA0                      i1l2105 0B8E  
                    u111_21 0B44                      u103_21 09B1                      i1l2041 099E  
                    i1l2211 07CC                      i1l2203 07B9                      i1l2131 0BBF  
                    i1l2123 0BAE                      i1l2107 0B90                      i1l2043 09A2  
                    i1l2051 0A1B                      i1l2053 0AE3                      i1l2221 07D7  
                    i1l2213 07D0                      i1l2205 07BF                      i1l2301 0C76  
                    i1l2133 0BC5                      i1l2125 0BB2                      i1l2109 0B95  
                    i1l2045 0A06                      i1l2071 0AFD                      i1l2063 0AF0  
                    i1l2055 0AEA                      i1l2231 07F2                      i1l2223 07DC  
                    i1l2215 07D6                      i1l2207 07C1                      i1l2303 0C7B  
                    i1l2151 0BE7                      i1l2143 0BD0                      i1l2135 0BC9  
                    i1l2127 0BB8                      i1l2119 0BA1                      i1l2047 0A07  
                    u120_20 07CC                      u112_20 0B4B                      u104_20 09B6  
                    i1l2081 0B1A                      i1l2073 0B09                      i1l2065 0AF5  
                    i1l2057 0AEF                      i1l2225 07E4                      u120_21 07CB  
                    i1l2209 07C6                      i1l2321 0C9E                      i1l2313 0C87  
                    i1l2305 0C81                      i1l2153 0BEA                      i1l2145 0BD5  
                    i1l2137 0BCF                      i1l2129 0BBA                      u112_21 0B4A  
                    i1l2161 0B34                      u104_21 09B5                      i1l2049 0A15  
                    i1l2401 09DF                      i1l2241 0A36                      i1l2091 0B2F  
                    i1l2083 0B1B                      i1l2075 0B0B                      i1l2067 0AF6  
                    i1l2227 07E8                      i1l2235 07F3                      i1l2331 0CBB  
                    i1l2323 0CA8                      i1l2315 0C8C                      i1l2307 0C86  
                    i1l2147 0BDD                      i1l2163 0B39                      i1l2251 0A47  
                    i1l2243 0A3C                      i1l2085 0B1C                      i1l2077 0B0F  
                    i1l2069 0AF7                      i1l2229 07EE                      i1l2237 07F7  
                    i1l2261 0A9A                      i1l2341 0CC6                      i1l2333 0CBF  
                    i1l2325 0CAE                      i1l2317 0C94                      i1l2149 0BE1  
                    i1l2157 0BEB                      i1l2181 0B74                      i1l2165 0B3D  
                    i1l2253 0A4B                      i1l2421 0718                      i1l2501 0D67  
                    i1l2087 0B1D                      i1l2079 0B15                      i1l2271 0AB2  
                    i1l2263 0A9F                      i1l2351 0CE0                      i1l2343 0CCB  
                    i1l2335 0CC5                      i1l2327 0CB0                      i1l2319 0C98  
                    i1l2159 0BEF                      i1l2183 0B82                      i1l2175 0B62  
                    i1l2167 0B40                      i1l2095 09AA                      i1l2255 0A51  
                    i1l2239 0A2D                      i1l2431 0744                      i1l2423 071C  
                    i1l2191 09BE                      u200_27 018A                      i1l2511 0DBE  
                    i1l2503 0D92                      u121_20 07D6                      u105_20 0B9B  
                    u113_20 0B51                      i1l2089 0B23                      u121_21 07D5  
                    i1l2281 0ABD                      i1l2273 0AB6                      i1l2265 0AA5  
                    i1l2353 0CE4                      i1l2345 0CD3                      i1l2329 0CB5  
                    u105_21 0B9A                      i1l2185 0B88                      i1l2177 0B68  
                    i1l2169 0B57                      u113_21 0B50                      i1l2097 09AD  
                    i1l2249 0A3D                      i1l2441 0769                      i1l2433 074C  
                    i1l2425 072D                      i1l2193 09C2                      i1l2601 0031  
                    i1l2521 0DF5                      i1l2505 0D96                      i1l2291 0AD7  
                    i1l2283 0AC2                      i1l2275 0ABC                      i1l2267 0AA7  
                    i1l2259 0A98                      i1l2347 0CD7                      i1l2355 0CE5  
                    i1l2179 0B70                      i1l2099 09B2                      i1l2371 0C0A  
                    i1l2363 0BF7                      i1l2443 077B                      i1l2435 074F  
                    i1l2451 0799                      i1l2427 0738                      i1l2419 0715  
                    i1l2195 09C8                      i1l3171 0060                      i1l2611 004F  
                    i1l2603 0036                      i1l2523 0DF9                      i1l2507 0D9C  
                    i1l2285 0ACA                      i1l2269 0AAC                      i1l2349 0CDD  
                    i1l2381 0C2C                      i1l2373 0C10                      i1l2365 0BFF  
                    i1l2357 0BF6                      i1l2453 079E                      i1l2445 0789  
                    i1l2437 075C                      i1l2429 073C                      i1l2189 09BA  
                    i1l3173 03F8                      i1l2701 0141                      i1l2621 0089  
                    i1l2605 003D                      i1l2541 0E5C                      i1l2525 0DFF  
                    i1l2517 0DBF                      i1l2509 0DB3                      i1l2613 0058  
                    i1l2461 0CFB                      i1l2199 07B2                      i1l2287 0ACE  
                    i1l2295 0AD8                      i1l2383 0C32                      i1l2375 0C16  
                    i1l2455 07A9                      i1l2447 078A                      i1l2439 0760  
                    u201_27 01ED                      i1l2711 0178                      i1l2631 009F  
                    i1l2623 008B                      i1l2615 0072                      i1l2607 0042  
                    i1l2543 0E62                      i1l2535 0E22                      i1l2527 0E16  
                    i1l2519 0DCA                      i1l2471 0D12                      i1l2463 0CFF  
                    u122_20 07EE                      u130_20 0C81                      u106_20 0BB8  
                    u114_20 0B57                      u122_21 07ED                      i1l2289 0AD4  
                    i1l2297 0ADC                      u130_21 0C80                      u106_21 0BB7  
                    u114_21 0B56                      i1l2393 0C71                      i1l2385 0C3A  
                    i1l2377 0C1E                      i1l2369 0C06                      i1l2449 0793  
                    i1l2801 03D1                      i1l2713 017C                      i1l2641 00B4  
                    i1l2633 00A0                      i1l2625 0091                      i1l2617 0078  
                    i1l2609 0048                      i1l2561 0EC5                      i1l2553 0E85  
                    i1l2545 0E79                      i1l2537 0E2D                      i1l2529 0E21  
                    i1l2481 0D2D                      i1l2473 0D15                      i1l2465 0D04  
                    i1l2299 0C73                      i1l2387 0C40                      i1l2379 0C24  
                    i1l2811 041D                      i1l2803 03DC                      i1l2731 01DF  
                    i1l2715 0182                      i1l2707 0142                      i1l2651 00C6  
                    i1l2643 00B5                      i1l2635 00A7                      i1l2627 0097  
                    i1l2619 0083                      i1l2571 0EE8                      i1l2563 0EDC  
                    i1l2555 0E90                      i1l2547 0E84                      i1l2539 0E58  
                    i1l2491 0D50                      i1l2483 0D36                      i1l2475 0D16  
                    i1l2467 0D0B                      i1l2459 0CF5                      i1l2389 0C6A  
                    i1l2397 09D0                      i1l2901 05DD                      i1l2821 042F  
                    i1l2813 0423                      i1l2805 03E6                      i1l2733 01E5  
                    i1l2725 01A5                      i1l2717 0199                      i1l2709 014D  
                    i1l2661 00D9                      i1l2653 00C7                      i1l2645 00B7  
                    i1l2637 00AD                      i1l2629 009B                      i1l2581 0FB0  
                    i1l2573 0EF3                      i1l2565 0EE7                      i1l2557 0EBB  
                    i1l2493 0D5B                      i1l2485 0D39                      i1l2477 0D1B  
                    i1l2469 0D11                      u210_27 0AEC                      i1l2399 09D9  
                    i1l2911 0614                      i1l2823 0431                      i1l2815 0426  
                    i1l2807 03EC                      u202_27 0250                      i1l2751 0248  
                    i1l2743 0208                      i1l2735 01FC                      i1l2727 01B0  
                    i1l2719 01A4                      i1l2671 00E8                      i1l2663 00DB  
                    i1l2655 00C9                      i1l2647 00BD                      i1l2639 00B1  
                    i1l2591 0FE0                      i1l2583 0FB9                      i1l2575 0F1E  
                    i1l2559 0EBF                      i1l2487 0D3B                      i1l2479 0D24  
                    u123_20 07FD                      u131_20 0C9E                      u107_20 0BC5  
                    u115_20 0B62                      u123_21 07FC                      u131_21 0C9D  
                    u107_21 0BC4                      u115_21 0B61                      i1l2921 06B5  
                    i1l2913 0618                      i1l2841 048C                      i1l2825 043C  
                    i1l2817 042A                      i1l2761 026B                      i1l2753 025F  
                    i1l2745 0213                      i1l2737 0207                      i1l2729 01DB  
                    i1l2681 00FF                      i1l2673 00EF                      i1l2665 00DE  
                    i1l2657 00D0                      i1l2649 00C3                      i1l2809 03F0  
                    i1l2593 0FEB                      i1l2585 0FBF                      i1l2577 0F22  
                    i1l2489 0D46                      i1l2931 06EC                      i1l2923 06C0  
                    i1l2915 061F                      i1l2907 05DE                      i1l2843 0492  
                    i1l2835 0452                      i1l2827 0446                      i1l2819 042E  
                    i1l2771 02C2                      i1l2763 0276                      i1l2755 026A  
                    i1l2747 023E                      i1l2691 0111                      i1l2683 0101  
                    i1l2675 00F5                      i1l2667 00DF                      i1l2659 00D6  
                    i1l2595 0FF6                      i1l2587 0FCA                      i1l2579 0F29  
                    i1l2499 0D5C                      i1l2933 06F5                      i1l2925 06CB  
                    i1l2917 06A6                      i1l2909 05E9                      i1l2861 04F5  
                    i1l2853 04B5                      i1l2845 04A9                      i1l2837 045D  
                    i1l2829 0451                      i1l2781 02D9                      i1l2773 02CD  
                    i1l2765 02A1                      i1l2749 0242                      i1l2693 0112  
                    i1l2685 0107                      i1l2677 00FB                      i1l2669 00E1  
                    i1l2597 0025                      i1l2589 0FD5                      u211_27 0AF2  
                    i1l2935 06FB                      i1l2927 06D6                      i1l2919 06AF  
                    i1l2871 0518                      i1l2863 050C                      i1l2855 04C0  
                    i1l2847 04B4                      i1l2839 0488                      i1l2791 039F  
                    i1l2783 0304                      u203_27 02B3                      i1l2767 02A5  
                    i1l2695 0113                      i1l2687 0108                      i1l2679 00FE  
                    i1l2599 002A                      u132_20 0CAE                      u108_20 0BCF  
                    u140_20 0C24                      u124_20 0A51                      u132_21 0CAD  
                    u108_21 0BCE                      u140_21 0C23                      u124_21 0A50  
                    i1l2937 06FE                      i1l2929 06E1                      i1l2881 056F  
                    i1l2873 0523                      i1l2865 0517                      i1l2857 04EB  
                    i1l2793 03A5                      i1l2785 0308                      i1l2769 02AB  
                    i1l2697 011C                      i1l2689 010B                      i1l2939 0703  
                    i1l2891 0586                      i1l2883 057A                      i1l2875 054E  
                    i1l2859 04EF                      i1l2795 03B0                      i1l2787 030F  
                    i1l2779 02CE                      i1l2699 0136                      u116_25 0B6A  
                    i1l2893 05B1                      i1l2877 0552                      i1l2797 03BB  
                    i1l2789 0396                      u212_27 0B17                      i1l2895 05B5  
                    i1l2879 0558                      u204_27 0437                      i1l2799 03C6  
                    u125_20 0AA5                      u133_20 0CBB                      u109_20 0BE7  
                    u117_20 0B7A                      u141_20 0C32                      u125_21 0AA4  
                    u133_21 0CBA                      u109_21 0BE6                      u117_21 0B79  
                    u141_21 0C31                      i1l2897 05BB                      i1l2889 057B  
                    i1l2899 05D2                      u213_27 0B31                      u205_27 049A  
                    u126_20 0AB2                      u134_20 0CC5                      u118_20 0B82  
                    u142_20 0C40                      u126_21 0AB1                      u134_21 0CC4  
                    u118_21 0B81                      u142_21 0C3F                      u150_25 078B  
                    u206_27 04FD                      u119_20 07BF                      u127_20 0ABC  
                    u135_20 0CDD                      u151_20 0799                      u143_20 071C  
                    u119_21 07BE                      u127_21 0ABB                      u135_21 0CDC  
                    u151_21 0798                      u143_21 071B                      u207_27 0560  
                    u128_20 0AD4                      u136_20 0CF4                      u152_20 079E  
                    u144_20 072D                      u160_20 0E45                      u128_21 0AD3  
                    u136_21 0CF3                      u152_21 079D                      u144_21 072C  
                    u160_21 0E46                      u160_22 0E4B                      u160_23 0E4C  
                    u208_27 05C3                      u129_20 0AE2                      u137_20 0C05  
                    u145_20 074C                      u161_20 0E62                      u153_20 0CFB  
                    u129_21 0AE1                      u137_21 0C04                      u145_21 074B  
                    u161_21 0E61                      u153_21 0CF8                      u209_27 0B3B  
                    u138_20 0C10                      u170_20 0182                      u162_20 0EA8  
                    u154_20 0CFF                      u138_21 0C0F                      u170_21 0181  
                    u162_21 0EA9                      u154_21 0CFE                      u162_22 0EAE  
                    u162_23 0EAF                      u146_25 0751                      u139_20 0C16  
                    u147_20 0760                      u171_20 01C8                      u163_20 0EC5  
                    u155_20 0D0B                      u139_21 0C15                      u147_21 075F  
                    u171_21 01C9                      u163_21 0EC4                      u155_21 0D08  
                    u171_22 01CE                      u171_23 01CF                      u180_20 0423  
                    u172_20 01E5                      u164_20 0F0B                      u156_20 0D7F  
                    u180_21 0422                      u172_21 01E4                      u164_21 0F0C  
                    u156_21 0D80                      u164_22 0F11                      u156_22 0D85  
                    u164_23 0F12                      u156_23 0D86                      u148_25 0762  
                    u149_20 077B                      u181_20 0475                      u173_20 022B  
                    u165_20 0F28                      u157_20 0D9C                      u149_21 077A  
                    u181_21 0476                      u173_21 022C                      u165_21 0F27  
                    u157_21 0D9B                      u181_22 047B                      u173_22 0231  
                    u181_23 047C                      u173_23 0232                      u149_25 0777  
                    u190_20 061E                      u182_20 0492                      u174_20 0248  
                    u166_20 0048                      u158_20 0DE2                      u190_21 061D  
                    u182_21 0491                      u174_21 0247                      u166_21 0047  
                    u158_21 0DE3                      u158_22 0DE8                      u158_23 0DE9  
                    u191_20 06FB                      u183_20 04D8                      u175_20 028E  
                    u167_20 0072                      u159_20 0DFF                      u191_21 06FA  
                    u183_21 04D9                      u175_21 028F                      u167_21 0071  
                    u159_21 0DFE                      u183_22 04DE                      u175_22 0294  
                    u183_23 04DF                      u175_23 0295                      u192_20 0703  
                    u184_20 04F5                      u176_20 02AB                      u168_20 0078  
                    u192_21 0702                      u184_21 04F4                      u176_21 02AA  
                    u168_21 0077                      u185_20 053B                      u177_20 02F1  
                    u169_20 0165                      u185_21 053C                      u177_21 02F2  
                    u169_21 0166                      u185_22 0541                      u177_22 02F7  
                    u169_22 016B                      u185_23 0542                      u177_23 02F8  
                    u169_23 016C                      u186_20 0558                      u178_20 030E  
                    u186_21 0557                      u178_21 030D                      u194_27 0D41  
                    u187_20 059E                      u179_20 041D                      u187_21 059F  
                    u179_21 041C                      u187_22 05A4                      u187_23 05A5  
                    u195_27 0DA4                      u188_20 05BB                      u188_21 05BA  
                    u196_27 0E07                      u189_20 0601                      u189_21 0602  
                    u189_22 0607                      u189_23 0608                      u197_27 0E6A  
                    u198_27 0ECD                      u199_27 0127                      _CmdGPS 0040  
                    _Data_G 0034                      _Data_X 003E                      _Data_Y 003C  
                    _Data_Z 003A    __end_of_ReceiveCMD_USART 0C73                 _ContaSample 007B  
            ??_GPS_LATITUDE 0072                   ??___aldiv 0078            print_value@Bytes 0074  
          ?_ClosePort_USART 0070                  _SumData_TC 0024                  _SumData_TS 0020  
  __end_of_ConfigPort_USART 0A06            print_value@value 0071                 Interrups@ID 0079  
            ??_GPS_TIMEDATE 0072      __end_of_ReadByte_USART 09BA                      saved_w 007E  
             _GPS_LONGITUDE 0A98     __end_of__initialization 0021                ?_print_value 0071  
               _ReadDataADC 0B34              __pcstackCOMMON 0070            ??_OpenPort_USART 00A0  
           ?_ReadByte_USART 0070             GPS_STATUS@conta 0075              _OPTION_REGbits 0081  
         __end_of_Interrups 0712              ?_GPS_LONGITUDE 0070                ??_GPS_STATUS 0072  
                __pbssBANK0 0020                  __pmaintext 0A5B                  __pintentry 0004  
         GPS_LATITUDE@conta 0074          __end_of_GPS_STATUS 0CF5        __end_of_GPS_LATITUDE 07FE  
                __stringtab 0800                     _Data_TC 0038                     _Data_TS 0036  
      __end_of_GPS_TIMEDATE 0BF6          ReadDataADC@DataADC 0074                     ___aldiv 0715  
                   __ptext1 0991                     __ptext2 09E9                     __ptext3 098D  
                   __ptext4 0CF5                     __ptext5 09BA                     __ptext6 0715  
                   __ptext7 0A2C                     __ptext8 09CF                     __ptext9 0A06  
                 _T2CONbits 0012             ??_GPS_LONGITUDE 0072            ___aldiv@dividend 0074  
                   clrloop0 0996        end_of_initialization 0021         WriteByte_USART@byte 0070  
         ?_ReceiveCMD_USART 0070          ??_ReceiveCMD_USART 0070                   _RCSTAbits 0018  
          ___aldiv@quotient 0050                     psplit$0 E0020           GPS_TIMEDATE@conta 0074  
         ??_WriteByte_USART 0070           ?_ConfigPort_USART 0070                   _PORTAbits 0005  
                 _PORTBbits 0006                   _PORTCbits 0007          ??_ConfigPort_USART 00A0  
                 _TRISBbits 0086                   _TRISCbits 0087               ?_print_string 0071  
              ?_ReadDataADC 0070                   _BufferDAT 0041            ??_ReadByte_USART 0070  
         pnum$text4_split_1 0020         start_initialization 0015              ??_print_string 0073  
   TransmitCMD_USART@CMD_ID 0073                   _Interrups 0CF5  ReceiveCMD_USART@conta_byte 0071  
         _TransmitDAT_USART 0A2C                   _SumData_X 0030                   _SumData_Y 002C  
                 _SumData_Z 0028           _TransmitCMD_USART 09CF                _GPS_LATITUDE 07B2  
        ?_TransmitDAT_USART 0070          ?_TransmitCMD_USART 0070                _GPS_TIMEDATE 0B8E  
               __pbssCOMMON 007B         ??_TransmitDAT_USART 0073                   ___latbits 0002  
             __pcstackBANK0 004E               __pcstackBANK1 00A0         ??_TransmitCMD_USART 0073  
                ?_Interrups 0070            _ReadByteSW_USART 0AE3   __end_of_TransmitDAT_USART 0A5B  
 __end_of_TransmitCMD_USART 09E9                    ?___aldiv 0070             print_string@str 0071  
                 __pstrings 0800           ??_ClosePort_USART 00A0             ___aldiv@divisor 0070  
         interrupt_function 0004             ___aldiv@counter 004E             _WriteByte_USART 099D  
                 clear_ram0 0995                    _PIE1bits 008C                    _PIR1bits 000C  
      __end_of_print_string 0A2C                 __stringbase 080F       __end_of_GPS_LONGITUDE 0AE3  
 ReceiveCMD_USART@data_byte 0072              Interrups@conta 007A                 ??_Interrups 0054  
             ??_print_value 0073                    _RxBuffer 007D          __end_of__stringtab 0810  
                  __ptext10 099D                    __ptext11 0BF6                    __ptext12 09AA  
                  __ptext13 0B34                    __ptext14 0B8E                    __ptext15 0C73  
                  __ptext16 0A98                    __ptext17 07B2                    __ptext18 0AE3  
    GPS_LATITUDE@LimitConta 0073     __end_of_WriteByte_USART 09AA                   pnum$text4 000E  
       __end_of_print_value 09CF    __end_of_ReadByteSW_USART 0B34                  _INTCONbits 000B  
            _OpenPort_USART 0991     GPS_LONGITUDE@LimitConta 0073       ReadByteSW_USART@conta 0071  
                _GPS_STATUS 0C73                    intlevel1 0000                   stringcode 080A  
             _ControlSample 007C             _ClosePort_USART 098D      __end_of_OpenPort_USART 0995  
          _ReceiveCMD_USART 0BF6                    stringdir 080A                    stringtab 0800  
              ___aldiv@sign 004F          GPS_LONGITUDE@conta 0074                _print_string 0A06  
          ?_WriteByte_USART 0070            _ConfigPort_USART 09E9                 _print_value 09BA  
