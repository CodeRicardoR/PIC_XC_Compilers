

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 12 16:19:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
    44                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F876A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     0006                     	;# 
    89     0007                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0098                     	;# 
   183     0099                     	;# 
   184     009C                     	;# 
   185     009D                     	;# 
   186     009E                     	;# 
   187     009F                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194     0000                     	;# 
   195     0001                     	;# 
   196     0002                     	;# 
   197     0003                     	;# 
   198     0004                     	;# 
   199     0005                     	;# 
   200     0006                     	;# 
   201     0007                     	;# 
   202     000A                     	;# 
   203     000B                     	;# 
   204     000C                     	;# 
   205     000D                     	;# 
   206     000E                     	;# 
   207     000E                     	;# 
   208     000F                     	;# 
   209     0010                     	;# 
   210     0011                     	;# 
   211     0012                     	;# 
   212     0013                     	;# 
   213     0014                     	;# 
   214     0015                     	;# 
   215     0015                     	;# 
   216     0016                     	;# 
   217     0017                     	;# 
   218     0018                     	;# 
   219     0019                     	;# 
   220     001A                     	;# 
   221     001B                     	;# 
   222     001B                     	;# 
   223     001C                     	;# 
   224     001D                     	;# 
   225     001E                     	;# 
   226     001F                     	;# 
   227     0081                     	;# 
   228     0085                     	;# 
   229     0086                     	;# 
   230     0087                     	;# 
   231     008C                     	;# 
   232     008D                     	;# 
   233     008E                     	;# 
   234     0091                     	;# 
   235     0092                     	;# 
   236     0093                     	;# 
   237     0094                     	;# 
   238     0098                     	;# 
   239     0099                     	;# 
   240     009C                     	;# 
   241     009D                     	;# 
   242     009E                     	;# 
   243     009F                     	;# 
   244     010C                     	;# 
   245     010D                     	;# 
   246     010E                     	;# 
   247     010F                     	;# 
   248     018C                     	;# 
   249     018D                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     000E                     	;# 
   263     000E                     	;# 
   264     000F                     	;# 
   265     0010                     	;# 
   266     0011                     	;# 
   267     0012                     	;# 
   268     0013                     	;# 
   269     0014                     	;# 
   270     0015                     	;# 
   271     0015                     	;# 
   272     0016                     	;# 
   273     0017                     	;# 
   274     0018                     	;# 
   275     0019                     	;# 
   276     001A                     	;# 
   277     001B                     	;# 
   278     001B                     	;# 
   279     001C                     	;# 
   280     001D                     	;# 
   281     001E                     	;# 
   282     001F                     	;# 
   283     0081                     	;# 
   284     0085                     	;# 
   285     0086                     	;# 
   286     0087                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     008E                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0094                     	;# 
   294     0098                     	;# 
   295     0099                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     000A                     	;# 
   315     000B                     	;# 
   316     000C                     	;# 
   317     000D                     	;# 
   318     000E                     	;# 
   319     000E                     	;# 
   320     000F                     	;# 
   321     0010                     	;# 
   322     0011                     	;# 
   323     0012                     	;# 
   324     0013                     	;# 
   325     0014                     	;# 
   326     0015                     	;# 
   327     0015                     	;# 
   328     0016                     	;# 
   329     0017                     	;# 
   330     0018                     	;# 
   331     0019                     	;# 
   332     001A                     	;# 
   333     001B                     	;# 
   334     001B                     	;# 
   335     001C                     	;# 
   336     001D                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     0081                     	;# 
   340     0085                     	;# 
   341     0086                     	;# 
   342     0087                     	;# 
   343     008C                     	;# 
   344     008D                     	;# 
   345     008E                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0094                     	;# 
   350     0098                     	;# 
   351     0099                     	;# 
   352     009C                     	;# 
   353     009D                     	;# 
   354     009E                     	;# 
   355     009F                     	;# 
   356     010C                     	;# 
   357     010D                     	;# 
   358     010E                     	;# 
   359     010F                     	;# 
   360     018C                     	;# 
   361     018D                     	;# 
   362     0007                     _PORTC	set	7
   363     0005                     _PORTA	set	5
   364     0010                     _T1CON	set	16
   365     000E                     _TMR1L	set	14
   366     000F                     _TMR1H	set	15
   367     0005                     _PORTAbits	set	5
   368     000B                     _INTCONbits	set	11
   369     0019                     _TXREG	set	25
   370     001A                     _RCREG	set	26
   371     0012                     _T2CONbits	set	18
   372     0011                     _TMR2	set	17
   373     0018                     _RCSTAbits	set	24
   374     000C                     _PIR1bits	set	12
   375     0012                     _T2CON	set	18
   376     0018                     _RCSTA	set	24
   377     0006                     _PORTB	set	6
   378     0007                     _PORTCbits	set	7
   379     0013                     _SSPBUF	set	19
   380     0014                     _SSPCONbits	set	20
   381     0006                     _PORTBbits	set	6
   382     0087                     _TRISC	set	135
   383     0086                     _TRISB	set	134
   384     0085                     _TRISA	set	133
   385     009F                     _ADCON1	set	159
   386     0081                     _OPTION_REGbits	set	129
   387     008C                     _PIE1bits	set	140
   388     0092                     _PR2	set	146
   389     0099                     _SPBRG	set	153
   390     0098                     _TXSTA	set	152
   391     0094                     _SSPSTATbits	set	148
   392     0087                     _TRISCbits	set	135
   393                           
   394                           	psect	strings
   395     1000                     __pstrings:
   396     1000                     stringtab:
   397     1000                     __stringtab:
   398                           
   399                           ;	String table - string pointers are 1 byte each
   400     1000  1BFF               	btfsc	btemp+1,7
   401     1001  280A               	ljmp	stringcode
   402     1002  1383               	bcf	3,7
   403     1003  187F               	btfsc	btemp+1,0
   404     1004  1783               	bsf	3,7
   405     1005  0800               	movf	0,w
   406     1006  0A84               	incf	4,f
   407     1007  1903               	skipnz
   408     1008  0AFF               	incf	btemp+1,f
   409     1009  0008               	return
   410     100A                     stringcode:
   411     100A                     stringdir:
   412     100A  3010               	movlw	high stringdir
   413     100B  008A               	movwf	10
   414     100C  0804               	movf	4,w
   415     100D  0A84               	incf	4,f
   416     100E  0782               	addwf	2,f
   417     100F                     __stringbase:
   418     100F  3400               	retlw	0
   419     1010                     __end_of__stringtab:
   420     1010                     STR_9:
   421     1010  3447               	retlw	71	;'G'
   422     1011  342D               	retlw	45	;'-'
   423     1012  344A               	retlw	74	;'J'
   424     1013  3452               	retlw	82	;'R'
   425     1014  344F               	retlw	79	;'O'
   426     1015  3444               	retlw	68	;'D'
   427     1016  3441               	retlw	65	;'A'
   428     1017  3454               	retlw	84	;'T'
   429     1018  3445               	retlw	69	;'E'
   430     1019  3458               	retlw	88	;'X'
   431     101A  3458               	retlw	88	;'X'
   432     101B  3458               	retlw	88	;'X'
   433     101C  3458               	retlw	88	;'X'
   434     101D  3458               	retlw	88	;'X'
   435     101E  3458               	retlw	88	;'X'
   436     101F  3458               	retlw	88	;'X'
   437     1020  3458               	retlw	88	;'X'
   438     1021  3458               	retlw	88	;'X'
   439     1022  3458               	retlw	88	;'X'
   440     1023  3458               	retlw	88	;'X'
   441     1024  3458               	retlw	88	;'X'
   442     1025  340A               	retlw	10
   443     1026  340D               	retlw	13
   444     1027  3400               	retlw	0
   445     1028                     STR_1:
   446     1028  344E               	retlw	78	;'N'
   447     1029  344E               	retlw	78	;'N'
   448     102A  344E               	retlw	78	;'N'
   449     102B  344E               	retlw	78	;'N'
   450     102C  344A               	retlw	74	;'J'
   451     102D  3452               	retlw	82	;'R'
   452     102E  344F               	retlw	79	;'O'
   453     102F  3443               	retlw	67	;'C'
   454     1030  344D               	retlw	77	;'M'
   455     1031  3444               	retlw	68	;'D'
   456     1032  3400               	retlw	0
   457     1033                     STR_3:
   458     1033  344E               	retlw	78	;'N'
   459     1034  344E               	retlw	78	;'N'
   460     1035  344E               	retlw	78	;'N'
   461     1036  344E               	retlw	78	;'N'
   462     1037  344A               	retlw	74	;'J'
   463     1038  3452               	retlw	82	;'R'
   464     1039  344F               	retlw	79	;'O'
   465     103A  3444               	retlw	68	;'D'
   466     103B  3441               	retlw	65	;'A'
   467     103C  3454               	retlw	84	;'T'
   468     103D  3400               	retlw	0
   469     103E                     STR_5:
   470     103E  3447               	retlw	71	;'G'
   471     103F  342D               	retlw	45	;'-'
   472     1040  344A               	retlw	74	;'J'
   473     1041  3452               	retlw	82	;'R'
   474     1042  344F               	retlw	79	;'O'
   475     1043  3444               	retlw	68	;'D'
   476     1044  3441               	retlw	65	;'A'
   477     1045  3454               	retlw	84	;'T'
   478     1046  3445               	retlw	69	;'E'
   479     1047  3400               	retlw	0
   480     1048                     STR_7:
   481     1048  344A               	retlw	74	;'J'
   482     1049  3452               	retlw	82	;'R'
   483     104A  344F               	retlw	79	;'O'
   484     104B  3441               	retlw	65	;'A'
   485     104C  3444               	retlw	68	;'D'
   486     104D  3451               	retlw	81	;'Q'
   487     104E  3400               	retlw	0
   488     1025                     
   489                           	psect	cinit
   490     0015                     start_initialization:	
   491                           ; #config settings
   492                           
   493     0015                     __initialization:
   494                           
   495                           ; Clear objects allocated to BANK0
   496     0015  1383               	bcf	3,7	;select IRP bank0
   497     0016  3020               	movlw	low __pbssBANK0
   498     0017  0084               	movwf	4
   499     0018  3050               	movlw	low (__pbssBANK0+48)
   500     0019  120A  118A  27F5  120A  118A  	fcall	clear_ram0
   501                           
   502                           ; Clear objects allocated to BANK1
   503     001E  30A0               	movlw	low __pbssBANK1
   504     001F  0084               	movwf	4
   505     0020  30B5               	movlw	low (__pbssBANK1+21)
   506     0021  120A  118A  27F5  120A  118A  	fcall	clear_ram0
   507     0026                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510     0026                     __end_of__initialization:
   511     0026  0183               	clrf	3
   512     0027  160A  118A  2F24   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssBANK0
   515     0020                     __pbssBANK0:
   516     0020                     _Data_TS:
   517     0020                     	ds	4
   518     0024                     _Data_TC:
   519     0024                     	ds	4
   520     0028                     _Data_Z:
   521     0028                     	ds	4
   522     002C                     _Data_Y:
   523     002C                     	ds	4
   524     0030                     _Data_X:
   525     0030                     	ds	4
   526     0034                     _SumData_TS:
   527     0034                     	ds	4
   528     0038                     _SumData_TC:
   529     0038                     	ds	4
   530     003C                     _SumData_Z:
   531     003C                     	ds	4
   532     0040                     _SumData_Y:
   533     0040                     	ds	4
   534     0044                     _SumData_X:
   535     0044                     	ds	4
   536     0048                     _BufferSPI:
   537     0048                     	ds	4
   538     004C                     _ContaSample:
   539     004C                     	ds	1
   540     004D                     _ControlSample:
   541     004D                     	ds	1
   542     004E                     _CmdGPS:
   543     004E                     	ds	1
   544     004F                     _RxBuffer:
   545     004F                     	ds	1
   546                           
   547                           	psect	bssBANK1
   548     00A0                     __pbssBANK1:
   549     00A0                     _Data_GND:
   550     00A0                     	ds	4
   551     00A4                     _SumData_GND:
   552     00A4                     	ds	4
   553     00A8                     _BufferDAT:
   554     00A8                     	ds	13
   555                           
   556                           	psect	clrtext
   557     07F5                     clear_ram0:	
   558                           ;	Called with FSR containing the base address, and
   559                           ;	W with the last address+1
   560                           
   561     07F5  0064               	clrwdt	;clear the watchdog before getting into this loop
   562     07F6                     clrloop0:
   563     07F6  0180               	clrf	0	;clear RAM location pointed to by FSR
   564     07F7  0A84               	incf	4,f	;increment pointer
   565     07F8  0604               	xorwf	4,w	;XOR with final address
   566     07F9  1903               	btfsc	3,2	;have we reached the end yet?
   567     07FA  3400               	retlw	0	;all done for this memory range, return
   568     07FB  0604               	xorwf	4,w	;XOR again to restore value
   569     07FC  2FF6               	goto	clrloop0	;do the next byte
   570                           
   571                           	psect	cstackBANK1
   572     00B5                     __pcstackBANK1:
   573     00B5                     ??_ConfigPort_SPI:
   574     00B5                     ??_OpenPort_SPI:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     00B5                     ??_ClosePort_SPI:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     00B5                     ??_ConfigPort_USART:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     00B5                     ??_OpenPort_USART:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     00B5                     ??_ClosePort_USART:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     00B5                     ??_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           ; 1 bytes @ 0x0
   594     00B5                     	ds	3
   595                           
   596                           	psect	cstackCOMMON
   597     0070                     __pcstackCOMMON:
   598     0070                     ?_ReadRegister_4bytesCS5532:
   599     0070                     ?_WriteRegister_4bytesCS5532:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_ReadByteSW_USART:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ??_ReadByteSW_USART:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_GPS_STATUS:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_GPS_LATITUDE:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_GPS_LONGITUDE:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ?_GPS_TIMEDATE:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_ConfigPort_SPI:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_OpenPort_SPI:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_ClosePort_SPI:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_TransferByte_SPI:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ??_TransferByte_SPI:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?_ResetCS5532:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_InitCS5532:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_CleanHolding:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_ConfigPort_USART:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_OpenPort_USART:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_ClosePort_USART:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_ReadByte_USART:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ??_ReadByte_USART:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?_WriteByte_USART:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ??_WriteByte_USART:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_ReceiveCMD_USART:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ??_ReceiveCMD_USART:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_TransmitCMD_USART:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_TransmitDAT_USART:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_Interrups:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?___aldiv:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     TransferByte_SPI@data:	
   687                           ; 4 bytes @ 0x0
   688                           
   689     0070                     WriteByte_USART@byte:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     ReceiveCMD_USART@conta_byte:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ___aldiv@divisor:	
   696                           ; 1 bytes @ 0x0
   697                           
   698                           
   699                           ; 4 bytes @ 0x0
   700     0070                     	ds	1
   701     0071                     ??_ReadRegister_4bytesCS5532:
   702     0071                     ??_WriteRegister_4bytesCS5532:	
   703                           ; 1 bytes @ 0x1
   704                           
   705     0071                     ?_print_string:	
   706                           ; 1 bytes @ 0x1
   707                           
   708     0071                     ?_print_value:	
   709                           ; 1 bytes @ 0x1
   710                           
   711     0071                     ReadByteSW_USART@conta:	
   712                           ; 1 bytes @ 0x1
   713                           
   714     0071                     ReadRegister_4bytesCS5532@command:	
   715                           ; 1 bytes @ 0x1
   716                           
   717     0071                     WriteRegister_4bytesCS5532@command:	
   718                           ; 1 bytes @ 0x1
   719                           
   720     0071                     ReceiveCMD_USART@data_byte:	
   721                           ; 1 bytes @ 0x1
   722                           
   723     0071                     print_string@str:	
   724                           ; 1 bytes @ 0x1
   725                           
   726     0071                     print_value@value:	
   727                           ; 2 bytes @ 0x1
   728                           
   729                           
   730                           ; 4 bytes @ 0x1
   731     0071                     	ds	1
   732     0072                     ??_GPS_STATUS:
   733     0072                     ??_GPS_LATITUDE:	
   734                           ; 1 bytes @ 0x2
   735                           
   736     0072                     ??_GPS_LONGITUDE:	
   737                           ; 1 bytes @ 0x2
   738                           
   739     0072                     ??_GPS_TIMEDATE:	
   740                           ; 1 bytes @ 0x2
   741                           
   742     0072                     ??_ResetCS5532:	
   743                           ; 1 bytes @ 0x2
   744                           
   745     0072                     ??_InitCS5532:	
   746                           ; 1 bytes @ 0x2
   747                           
   748     0072                     GPS_TIMEDATE@LimitConta:	
   749                           ; 1 bytes @ 0x2
   750                           
   751     0072                     GPS_STATUS@LimitConta:	
   752                           ; 1 bytes @ 0x2
   753                           
   754                           
   755                           ; 2 bytes @ 0x2
   756     0072                     	ds	1
   757     0073                     ??_print_string:
   758     0073                     ??_TransmitCMD_USART:	
   759                           ; 1 bytes @ 0x3
   760                           
   761     0073                     ??_TransmitDAT_USART:	
   762                           ; 1 bytes @ 0x3
   763                           
   764     0073                     GPS_TIMEDATE@conta:	
   765                           ; 1 bytes @ 0x3
   766                           
   767     0073                     TransmitCMD_USART@CMD_ID:	
   768                           ; 1 bytes @ 0x3
   769                           
   770     0073                     TransmitDAT_USART@DAT_ID:	
   771                           ; 1 bytes @ 0x3
   772                           
   773                           
   774                           ; 1 bytes @ 0x3
   775     0073                     	ds	1
   776     0074                     GPS_STATUS@conta:
   777     0074                     GPS_LATITUDE@LimitConta:	
   778                           ; 1 bytes @ 0x4
   779                           
   780     0074                     GPS_LONGITUDE@LimitConta:	
   781                           ; 1 bytes @ 0x4
   782                           
   783     0074                     ResetCS5532@conta:	
   784                           ; 1 bytes @ 0x4
   785                           
   786     0074                     TransmitDAT_USART@conta:	
   787                           ; 1 bytes @ 0x4
   788                           
   789     0074                     ___aldiv@dividend:	
   790                           ; 1 bytes @ 0x4
   791                           
   792                           
   793                           ; 4 bytes @ 0x4
   794     0074                     	ds	1
   795     0075                     ??_print_value:
   796     0075                     GPS_LATITUDE@conta:	
   797                           ; 1 bytes @ 0x5
   798                           
   799     0075                     GPS_LONGITUDE@conta:	
   800                           ; 1 bytes @ 0x5
   801                           
   802                           
   803                           ; 1 bytes @ 0x5
   804     0075                     	ds	3
   805     0078                     ??___aldiv:
   806                           
   807                           ; 1 bytes @ 0x8
   808     0078                     	ds	1
   809     0079                     ReadAD24@flag_convert:
   810                           
   811                           ; 1 bytes @ 0x9
   812     0079                     	ds	1
   813     007A                     print_value@Bytes:
   814     007A                     ReadAD24@DataADC:	
   815                           ; 3 bytes @ 0xA
   816                           
   817                           
   818                           ; 4 bytes @ 0xA
   819     007A                     	ds	4
   820                           
   821                           	psect	cstackBANK0
   822     0050                     __pcstackBANK0:
   823     0050                     ___aldiv@counter:
   824                           
   825                           ; 1 bytes @ 0x0
   826     0050                     	ds	1
   827     0051                     ___aldiv@sign:
   828                           
   829                           ; 1 bytes @ 0x1
   830     0051                     	ds	1
   831     0052                     ___aldiv@quotient:
   832                           
   833                           ; 4 bytes @ 0x2
   834     0052                     	ds	4
   835     0056                     ?_ReadAD24:
   836     0056                     ReadAD24@cmd_convert:	
   837                           ; 4 bytes @ 0x6
   838                           
   839                           
   840                           ; 1 bytes @ 0x6
   841     0056                     	ds	4
   842     005A                     ??_ReadAD24:
   843                           
   844                           ; 1 bytes @ 0xA
   845     005A                     	ds	8
   846     0062                     ??_CleanHolding:
   847                           
   848                           ; 1 bytes @ 0x12
   849     0062                     	ds	1
   850     0063                     ??_Interrups:
   851                           
   852                           ; 1 bytes @ 0x13
   853     0063                     	ds	8
   854     006B                     Interrups@ID:
   855                           
   856                           ; 1 bytes @ 0x1B
   857     006B                     	ds	1
   858     006C                     Interrups@conta:
   859                           
   860                           ; 1 bytes @ 0x1C
   861     006C                     	ds	1
   862                           
   863                           	psect	maintext
   864     1724                     __pmaintext:	
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 449 in file "Digitizer24bitsV0.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : B00/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       0       3       0       0
   887 ;;      Totals:         0       0       3       0       0
   888 ;;Total ram usage:        3 bytes
   889 ;; Hardware stack levels required when called: 6
   890 ;; This function calls:
   891 ;;		_ClosePort_SPI
   892 ;;		_ClosePort_USART
   893 ;;		_ConfigPort_SPI
   894 ;;		_ConfigPort_USART
   895 ;;		_OpenPort_SPI
   896 ;;		_OpenPort_USART
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902     1724                     _main:	
   903                           ;psect for function _main
   904                           
   905     1724                     l3616:	
   906                           ;incstack = 0
   907                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   908                           
   909                           
   910                           ;Digitizer24bitsV0.c: 453:     ADCON1 = 0x06;
   911     1724  3006               	movlw	6
   912     1725  1683               	bsf	3,5	;RP0=1, select bank1
   913     1726  1303               	bcf	3,6	;RP1=0, select bank1
   914     1727  009F               	movwf	31	;volatile
   915     1728                     l3618:
   916                           
   917                           ;Digitizer24bitsV0.c: 454:     PORTA = 0;
   918     1728  1283               	bcf	3,5	;RP0=0, select bank0
   919     1729  1303               	bcf	3,6	;RP1=0, select bank0
   920     172A  0185               	clrf	5	;volatile
   921     172B                     l3620:
   922                           
   923                           ;Digitizer24bitsV0.c: 455:     PORTAbits.RA1 = 1;
   924     172B  1485               	bsf	5,1	;volatile
   925     172C                     l3622:
   926                           
   927                           ;Digitizer24bitsV0.c: 456:     PORTB = 0;
   928     172C  0186               	clrf	6	;volatile
   929     172D                     l3624:
   930                           
   931                           ;Digitizer24bitsV0.c: 457:     PORTC = 0;
   932     172D  0187               	clrf	7	;volatile
   933     172E                     l3626:
   934                           
   935                           ;Digitizer24bitsV0.c: 458:     TRISA = 0x01;
   936     172E  3001               	movlw	1
   937     172F  1683               	bsf	3,5	;RP0=1, select bank1
   938     1730  1303               	bcf	3,6	;RP1=0, select bank1
   939     1731  0085               	movwf	5	;volatile
   940     1732                     l3628:
   941                           
   942                           ;Digitizer24bitsV0.c: 459:     TRISB = 0x01;
   943     1732  3001               	movlw	1
   944     1733  0086               	movwf	6	;volatile
   945     1734                     l3630:
   946                           
   947                           ;Digitizer24bitsV0.c: 460:     TRISC = 0x00;
   948     1734  0187               	clrf	7	;volatile
   949     1735                     l3632:
   950                           
   951                           ;Digitizer24bitsV0.c: 461:     OPTION_REGbits.nRBPU = 0;
   952     1735  1381               	bcf	1,7	;volatile
   953                           
   954                           ;Digitizer24bitsV0.c: 462:     _delay((unsigned long)((100)*(9830400UL/4000.0)));
   955     1736  3002               	movlw	2
   956     1737  1683               	bsf	3,5	;RP0=1, select bank1
   957     1738  1303               	bcf	3,6	;RP1=0, select bank1
   958     1739  00B7               	movwf	(??_main^(0+128)+2)
   959     173A  3040               	movlw	64
   960     173B  00B6               	movwf	(??_main^(0+128)+1)
   961     173C  3027               	movlw	39
   962     173D  00B5               	movwf	??_main^(0+128)
   963     173E                     u1677:
   964     173E  0BB5               	decfsz	??_main^(0+128),f
   965     173F  2F3E               	goto	u1677
   966     1740  0BB6               	decfsz	(??_main^(0+128)+1),f
   967     1741  2F3E               	goto	u1677
   968     1742  0BB7               	decfsz	(??_main^(0+128)+2),f
   969     1743  2F3E               	goto	u1677
   970     1744                     l3634:
   971                           
   972                           ;Digitizer24bitsV0.c: 465:     ConfigPort_SPI();
   973     1744  160A  118A  2602  160A  118A  	fcall	_ConfigPort_SPI
   974                           
   975                           ;Digitizer24bitsV0.c: 466:     OpenPort_SPI();
   976     1749  160A  118A  25FA  160A  118A  	fcall	_OpenPort_SPI
   977     174E                     l3636:
   978                           
   979                           ;Digitizer24bitsV0.c: 469:     ConfigPort_USART();
   980     174E  160A  118A  2660  160A  118A  	fcall	_ConfigPort_USART
   981     1753                     l3638:
   982                           
   983                           ;Digitizer24bitsV0.c: 470:     OpenPort_USART();
   984     1753  160A  118A  25FE  160A  118A  	fcall	_OpenPort_USART
   985     1758                     l3640:
   986                           
   987                           ;Digitizer24bitsV0.c: 473:     INTCONbits.PEIE = 1;
   988     1758  170B               	bsf	11,6	;volatile
   989     1759                     l3642:
   990                           
   991                           ;Digitizer24bitsV0.c: 474:     INTCONbits.GIE = 1;
   992     1759  178B               	bsf	11,7	;volatile
   993     175A                     l3644:
   994                           
   995                           ;Digitizer24bitsV0.c: 477:     PORTAbits.RA2 = 0;
   996     175A  1283               	bcf	3,5	;RP0=0, select bank0
   997     175B  1303               	bcf	3,6	;RP1=0, select bank0
   998     175C  1105               	bcf	5,2	;volatile
   999     175D                     l3646:
  1000                           
  1001                           ;Digitizer24bitsV0.c: 478:     PORTBbits.RB7 = 0;
  1002     175D  1386               	bcf	6,7	;volatile
  1003     175E                     l3648:
  1004                           
  1005                           ;Digitizer24bitsV0.c: 479:     PORTBbits.RB6 = 0;
  1006     175E  1306               	bcf	6,6	;volatile
  1007     175F                     l513:	
  1008                           ;Digitizer24bitsV0.c: 481:     while(1);
  1009                           
  1010     175F                     l514:
  1011     175F  2F5F               	goto	l513
  1012     1760  120A  118A  2812   	ljmp	start
  1013     1763                     __end_of_main:
  1014                           
  1015                           	psect	text1
  1016     15FE                     __ptext1:	
  1017 ;; *************** function _OpenPort_USART *****************
  1018 ;; Defined at:
  1019 ;;		line 21 in file "LIB16F_USART.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		None
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     15FE                     _OpenPort_USART:	
  1048                           ;psect for function _OpenPort_USART
  1049                           
  1050     15FE                     l3612:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _OpenPort_USART: []
  1053                           
  1054                           
  1055                           ;LIB16F_USART.c: 23:     RCSTAbits.SPEN = 1;
  1056     15FE  1283               	bcf	3,5	;RP0=0, select bank0
  1057     15FF  1303               	bcf	3,6	;RP1=0, select bank0
  1058     1600  1798               	bsf	24,7	;volatile
  1059     1601                     l278:	
  1060                           ;LIB16F_USART.c: 24:     return;
  1061                           
  1062     1601  0008               	return
  1063     1602                     __end_of_OpenPort_USART:
  1064                           
  1065                           	psect	text2
  1066     15FA                     __ptext2:	
  1067 ;; *************** function _OpenPort_SPI *****************
  1068 ;; Defined at:
  1069 ;;		line 17 in file "LIB16F_SPI.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		None
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 5
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097     15FA                     _OpenPort_SPI:	
  1098                           ;psect for function _OpenPort_SPI
  1099                           
  1100     15FA                     l3598:	
  1101                           ;incstack = 0
  1102                           ; Regs used in _OpenPort_SPI: []
  1103                           
  1104                           
  1105                           ;LIB16F_SPI.c: 19:     SSPCONbits.SSPEN = 1;
  1106     15FA  1283               	bcf	3,5	;RP0=0, select bank0
  1107     15FB  1303               	bcf	3,6	;RP1=0, select bank0
  1108     15FC  1694               	bsf	20,5	;volatile
  1109     15FD                     l175:	
  1110                           ;LIB16F_SPI.c: 20:     return;
  1111                           
  1112     15FD  0008               	return
  1113     15FE                     __end_of_OpenPort_SPI:
  1114                           
  1115                           	psect	text3
  1116     1660                     __ptext3:	
  1117 ;; *************** function _ConfigPort_USART *****************
  1118 ;; Defined at:
  1119 ;;		line 4 in file "LIB16F_USART.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0
  1136 ;;      Totals:         0       0       0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; Hardware stack levels required when called: 5
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147     1660                     _ConfigPort_USART:	
  1148                           ;psect for function _ConfigPort_USART
  1149                           
  1150     1660                     l3602:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _ConfigPort_USART: [wreg]
  1153                           
  1154                           
  1155                           ;LIB16F_USART.c: 6:     TRISCbits.TRISC6 = 0;
  1156     1660  1683               	bsf	3,5	;RP0=1, select bank1
  1157     1661  1303               	bcf	3,6	;RP1=0, select bank1
  1158     1662  1307               	bcf	7,6	;volatile
  1159                           
  1160                           ;LIB16F_USART.c: 7:     TRISCbits.TRISC7 = 1;
  1161     1663  1787               	bsf	7,7	;volatile
  1162     1664                     l3604:
  1163                           
  1164                           ;LIB16F_USART.c: 9:     TXSTA = 0x24;
  1165     1664  3024               	movlw	36
  1166     1665  0098               	movwf	24	;volatile
  1167                           
  1168                           ;LIB16F_USART.c: 10:     RCSTA = 0x10;
  1169     1666  3010               	movlw	16
  1170     1667  1283               	bcf	3,5	;RP0=0, select bank0
  1171     1668  1303               	bcf	3,6	;RP1=0, select bank0
  1172     1669  0098               	movwf	24	;volatile
  1173                           
  1174                           ;LIB16F_USART.c: 11:     SPBRG = 0x0F;
  1175     166A  300F               	movlw	15
  1176     166B  1683               	bsf	3,5	;RP0=1, select bank1
  1177     166C  1303               	bcf	3,6	;RP1=0, select bank1
  1178     166D  0099               	movwf	25	;volatile
  1179                           
  1180                           ;LIB16F_USART.c: 13:     T2CON = 0x7A;
  1181     166E  307A               	movlw	122
  1182     166F  1283               	bcf	3,5	;RP0=0, select bank0
  1183     1670  1303               	bcf	3,6	;RP1=0, select bank0
  1184     1671  0092               	movwf	18	;volatile
  1185                           
  1186                           ;LIB16F_USART.c: 14:     PR2 = 0xFF;
  1187     1672  30FF               	movlw	255
  1188     1673  1683               	bsf	3,5	;RP0=1, select bank1
  1189     1674  1303               	bcf	3,6	;RP1=0, select bank1
  1190     1675  0092               	movwf	18	;volatile
  1191     1676                     l3606:
  1192                           
  1193                           ;LIB16F_USART.c: 15:     PIR1bits.TMR2IF = 0;
  1194     1676  1283               	bcf	3,5	;RP0=0, select bank0
  1195     1677  1303               	bcf	3,6	;RP1=0, select bank0
  1196     1678  108C               	bcf	12,1	;volatile
  1197     1679                     l3608:
  1198                           
  1199                           ;LIB16F_USART.c: 17:     PIE1bits.RCIE = 1;
  1200     1679  1683               	bsf	3,5	;RP0=1, select bank1
  1201     167A  1303               	bcf	3,6	;RP1=0, select bank1
  1202     167B  168C               	bsf	12,5	;volatile
  1203     167C                     l275:
  1204     167C  0008               	return
  1205     167D                     __end_of_ConfigPort_USART:
  1206                           
  1207                           	psect	text4
  1208     1602                     __ptext4:	
  1209 ;; *************** function _ConfigPort_SPI *****************
  1210 ;; Defined at:
  1211 ;;		line 4 in file "LIB16F_SPI.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 5
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     1602                     _ConfigPort_SPI:	
  1240                           ;psect for function _ConfigPort_SPI
  1241                           
  1242     1602                     l3592:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _ConfigPort_SPI: [wreg+status,2+status,0]
  1245                           
  1246                           
  1247                           ;LIB16F_SPI.c: 6:     TRISCbits.TRISC3 = 0;
  1248     1602  1683               	bsf	3,5	;RP0=1, select bank1
  1249     1603  1303               	bcf	3,6	;RP1=0, select bank1
  1250     1604  1187               	bcf	7,3	;volatile
  1251                           
  1252                           ;LIB16F_SPI.c: 7:     TRISCbits.TRISC4 = 1;
  1253     1605  1607               	bsf	7,4	;volatile
  1254                           
  1255                           ;LIB16F_SPI.c: 8:     TRISCbits.TRISC5 = 0;
  1256     1606  1287               	bcf	7,5	;volatile
  1257                           
  1258                           ;LIB16F_SPI.c: 10:     SSPSTATbits.SMP = 0;
  1259     1607  1394               	bcf	20,7	;volatile
  1260                           
  1261                           ;LIB16F_SPI.c: 11:     SSPSTATbits.CKE = 1;
  1262     1608  1714               	bsf	20,6	;volatile
  1263                           
  1264                           ;LIB16F_SPI.c: 12:     SSPCONbits.CKP = 0;
  1265     1609  1283               	bcf	3,5	;RP0=0, select bank0
  1266     160A  1303               	bcf	3,6	;RP1=0, select bank0
  1267     160B  1214               	bcf	20,4	;volatile
  1268     160C                     l3594:
  1269                           
  1270                           ;LIB16F_SPI.c: 13:     SSPCONbits.SSPM = 0x1;
  1271     160C  0814               	movf	20,w	;volatile
  1272     160D  39F0               	andlw	-16
  1273     160E  3801               	iorlw	1
  1274     160F  0094               	movwf	20	;volatile
  1275     1610                     l172:
  1276     1610  0008               	return
  1277     1611                     __end_of_ConfigPort_SPI:
  1278                           
  1279                           	psect	text5
  1280     15F6                     __ptext5:	
  1281 ;; *************** function _ClosePort_USART *****************
  1282 ;; Defined at:
  1283 ;;		line 27 in file "LIB16F_USART.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 5
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311     15F6                     _ClosePort_USART:	
  1312                           ;psect for function _ClosePort_USART
  1313                           
  1314     15F6                     l3614:	
  1315                           ;incstack = 0
  1316                           ; Regs used in _ClosePort_USART: []
  1317                           
  1318                           
  1319                           ;LIB16F_USART.c: 29:     RCSTAbits.SPEN = 0;
  1320     15F6  1283               	bcf	3,5	;RP0=0, select bank0
  1321     15F7  1303               	bcf	3,6	;RP1=0, select bank0
  1322     15F8  1398               	bcf	24,7	;volatile
  1323     15F9                     l281:	
  1324                           ;LIB16F_USART.c: 30:     return;
  1325                           
  1326     15F9  0008               	return
  1327     15FA                     __end_of_ClosePort_USART:
  1328                           
  1329                           	psect	text6
  1330     15F2                     __ptext6:	
  1331 ;; *************** function _ClosePort_SPI *****************
  1332 ;; Defined at:
  1333 ;;		line 23 in file "LIB16F_SPI.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		None
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0
  1350 ;;      Totals:         0       0       0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 5
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361     15F2                     _ClosePort_SPI:	
  1362                           ;psect for function _ClosePort_SPI
  1363                           
  1364     15F2                     l3600:	
  1365                           ;incstack = 0
  1366                           ; Regs used in _ClosePort_SPI: []
  1367                           
  1368                           
  1369                           ;LIB16F_SPI.c: 25:     SSPCONbits.SSPEN = 0;
  1370     15F2  1283               	bcf	3,5	;RP0=0, select bank0
  1371     15F3  1303               	bcf	3,6	;RP1=0, select bank0
  1372     15F4  1294               	bcf	20,5	;volatile
  1373     15F5                     l178:	
  1374                           ;LIB16F_SPI.c: 26:     return;
  1375                           
  1376     15F5  0008               	return
  1377     15F6                     __end_of_ClosePort_SPI:
  1378                           
  1379                           	psect	text7
  1380     0CB2                     __ptext7:	
  1381 ;; *************** function _Interrups *****************
  1382 ;; Defined at:
  1383 ;;		line 10 in file "Digitizer24bitsV0.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  conta           1   28[BANK0 ] unsigned char 
  1388 ;;  ID              1   27[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       2       0       0       0
  1400 ;;      Temps:          0       8       0       0       0
  1401 ;;      Totals:         0      10       0       0       0
  1402 ;;Total ram usage:       10 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 4
  1405 ;; This function calls:
  1406 ;;		_CleanHolding
  1407 ;;		_GPS_LATITUDE
  1408 ;;		_GPS_LONGITUDE
  1409 ;;		_GPS_STATUS
  1410 ;;		_GPS_TIMEDATE
  1411 ;;		_InitCS5532
  1412 ;;		_ReadAD24
  1413 ;;		_ReadRegister_4bytesCS5532
  1414 ;;		_ReceiveCMD_USART
  1415 ;;		_ResetCS5532
  1416 ;;		_TransferByte_SPI
  1417 ;;		_TransmitCMD_USART
  1418 ;;		_TransmitDAT_USART
  1419 ;;		_WriteByte_USART
  1420 ;;		___aldiv
  1421 ;;		_print_string
  1422 ;;		_print_value
  1423 ;; This function is called by:
  1424 ;;		Interrupt level 1
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428     0CB2                     _Interrups:	
  1429                           ;psect for function _Interrups
  1430                           
  1431     0CB2                     i1l2844:
  1432                           
  1433                           ;Digitizer24bitsV0.c: 11:     unsigned char ID, conta;;Digitizer24bitsV0.c: 13:     if((
      +                          INTCONbits.INTF == 1) && (INTCONbits.INTE == 1)){
  1434     0CB2  1C8B               	btfss	11,1	;volatile
  1435     0CB3  2CB5               	goto	u141_21
  1436     0CB4  2CB8               	goto	u141_20
  1437     0CB5                     u141_21:
  1438     0CB5  120A  158A  2BEA   	goto	i1l445
  1439     0CB8                     u141_20:
  1440     0CB8                     i1l2846:
  1441     0CB8  1E0B               	btfss	11,4	;volatile
  1442     0CB9  2CBB               	goto	u142_21
  1443     0CBA  2CBC               	goto	u142_20
  1444     0CBB                     u142_21:
  1445     0CBB  2CB5               	goto	u141_21
  1446     0CBC                     u142_20:
  1447     0CBC                     i1l2848:
  1448                           
  1449                           ;Digitizer24bitsV0.c: 14:         INTCONbits.INTF = 0;
  1450     0CBC  108B               	bcf	11,1	;volatile
  1451                           
  1452                           ;Digitizer24bitsV0.c: 15:         INTCONbits.INTE = 0;
  1453     0CBD  120B               	bcf	11,4	;volatile
  1454                           
  1455                           ;Digitizer24bitsV0.c: 17:         switch(CmdGPS){
  1456     0CBE  120A  158A  2BD4   	goto	i1l3026
  1457     0CC1                     i1l2850:
  1458                           
  1459                           ;Digitizer24bitsV0.c: 19:                 if(ControlSample == 1){
  1460     0CC1  034D               	decf	_ControlSample,w
  1461     0CC2  1D03               	btfss	3,2
  1462     0CC3  2CC5               	goto	u143_21
  1463     0CC4  2CC8               	goto	u143_20
  1464     0CC5                     u143_21:
  1465     0CC5  120A  118A  2FB3   	goto	i1l466
  1466     0CC8                     u143_20:
  1467     0CC8                     i1l2852:
  1468                           
  1469                           ;Digitizer24bitsV0.c: 21:                     PORTAbits.RA2 = 1;
  1470     0CC8  1505               	bsf	5,2	;volatile
  1471     0CC9                     i1l2854:
  1472                           
  1473                           ;Digitizer24bitsV0.c: 24:                     TMR1H = 0x10;
  1474     0CC9  3010               	movlw	16
  1475     0CCA  008F               	movwf	15	;volatile
  1476                           
  1477                           ;Digitizer24bitsV0.c: 25:                     TMR1L = 0x06;
  1478     0CCB  3006               	movlw	6
  1479     0CCC  008E               	movwf	14	;volatile
  1480                           
  1481                           ;Digitizer24bitsV0.c: 26:                     T1CON = 0x31;
  1482     0CCD  3031               	movlw	49
  1483     0CCE  0090               	movwf	16	;volatile
  1484     0CCF                     i1l2856:
  1485                           
  1486                           ;Digitizer24bitsV0.c: 27:                     PIR1bits.TMR1IF = 0;
  1487     0CCF  100C               	bcf	12,0	;volatile
  1488     0CD0                     i1l2858:
  1489                           
  1490                           ;Digitizer24bitsV0.c: 28:                     PIE1bits.TMR1IE = 1;
  1491     0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  1492     0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  1493     0CD2  140C               	bsf	12,0	;volatile
  1494     0CD3                     i1l2860:
  1495                           
  1496                           ;Digitizer24bitsV0.c: 31:                     ContaSample = 0;
  1497     0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  1498     0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  1499     0CD5  01CC               	clrf	_ContaSample
  1500     0CD6                     i1l2862:
  1501                           
  1502                           ;Digitizer24bitsV0.c: 34:                     PORTBbits.RB7 = 1;
  1503     0CD6  1786               	bsf	6,7	;volatile
  1504     0CD7                     i1l2864:
  1505                           
  1506                           ;Digitizer24bitsV0.c: 35:                     GPS_TIMEDATE();
  1507     0CD7  120A  158A  2156  120A  158A  	fcall	_GPS_TIMEDATE
  1508     0CDC                     i1l2866:
  1509                           
  1510                           ;Digitizer24bitsV0.c: 36:                     PORTBbits.RB7 = 0;
  1511     0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  1512     0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  1513     0CDE  1386               	bcf	6,7	;volatile
  1514     0CDF                     i1l2868:
  1515                           
  1516                           ;Digitizer24bitsV0.c: 39:                     print_string("G-JRODATE");
  1517     0CDF  302F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1518     0CE0  00F1               	movwf	print_string@str
  1519     0CE1  3080               	movlw	128
  1520     0CE2  00F2               	movwf	print_string@str+1
  1521     0CE3  160A  118A  269B  120A  158A  	fcall	_print_string
  1522     0CE8                     i1l2870:
  1523                           
  1524                           ;Digitizer24bitsV0.c: 40:                     print_string(BufferDAT);
  1525     0CE8  30A8               	movlw	(low (_BufferDAT| 0))& (0+255)
  1526     0CE9  00F1               	movwf	print_string@str
  1527     0CEA  3000               	movlw	0
  1528     0CEB  00F2               	movwf	print_string@str+1
  1529     0CEC  160A  118A  269B  120A  158A  	fcall	_print_string
  1530     0CF1                     i1l2872:
  1531                           
  1532                           ;Digitizer24bitsV0.c: 41:                     print_string("\n\r");
  1533     0CF1  3016               	movlw	(low (((STR_9+21)-__stringbase)| (0+32768)))& (0+255)
  1534     0CF2  00F1               	movwf	print_string@str
  1535     0CF3  3080               	movlw	128
  1536     0CF4  00F2               	movwf	print_string@str+1
  1537     0CF5  160A  118A  269B  120A  158A  	fcall	_print_string
  1538     0CFA                     i1l2874:
  1539                           
  1540                           ;Digitizer24bitsV0.c: 45:                     CleanHolding();
  1541     0CFA  160A  118A  2631  120A  158A  	fcall	_CleanHolding
  1542     0CFF                     i1l2876:
  1543                           
  1544                           ;Digitizer24bitsV0.c: 47:                     PORTB = 0x38;
  1545     0CFF  3038               	movlw	56
  1546     0D00  1283               	bcf	3,5	;RP0=0, select bank0
  1547     0D01  1303               	bcf	3,6	;RP1=0, select bank0
  1548     0D02  0086               	movwf	6	;volatile
  1549     0D03                     i1l2878:
  1550                           
  1551                           ;Digitizer24bitsV0.c: 48:                     PORTBbits.RB7 = 1;
  1552     0D03  1786               	bsf	6,7	;volatile
  1553     0D04                     i1l2880:
  1554                           
  1555                           ;Digitizer24bitsV0.c: 49:                     _delay((unsigned long)((7)*(9830400UL/4000
      +                          .0)));
  1556     0D04  3017               	movlw	23
  1557     0D05  1283               	bcf	3,5	;RP0=0, select bank0
  1558     0D06  1303               	bcf	3,6	;RP1=0, select bank0
  1559     0D07  00E4               	movwf	??_Interrups+1
  1560     0D08  3055               	movlw	85
  1561     0D09  00E3               	movwf	??_Interrups
  1562     0D0A                     u168_27:
  1563     0D0A  0BE3               	decfsz	??_Interrups,f
  1564     0D0B  2D0A               	goto	u168_27
  1565     0D0C  0BE4               	decfsz	??_Interrups+1,f
  1566     0D0D  2D0A               	goto	u168_27
  1567     0D0E  0000               	nop
  1568     0D0F                     i1l2882:
  1569                           
  1570                           ;Digitizer24bitsV0.c: 50:                     SumData_X = 0;
  1571     0D0F  3000               	movlw	0
  1572     0D10  1283               	bcf	3,5	;RP0=0, select bank0
  1573     0D11  1303               	bcf	3,6	;RP1=0, select bank0
  1574     0D12  00C7               	movwf	_SumData_X+3
  1575     0D13  3000               	movlw	0
  1576     0D14  00C6               	movwf	_SumData_X+2
  1577     0D15  3000               	movlw	0
  1578     0D16  00C5               	movwf	_SumData_X+1
  1579     0D17  3000               	movlw	0
  1580     0D18  00C4               	movwf	_SumData_X
  1581     0D19                     i1l2884:
  1582                           
  1583                           ;Digitizer24bitsV0.c: 51:                     ReadAD24(0,0x00);
  1584     0D19  01D6               	clrf	ReadAD24@cmd_convert
  1585     0D1A  3000               	movlw	0
  1586     0D1B  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1587                           
  1588                           ;Digitizer24bitsV0.c: 52:                     for(conta=0; conta<5; conta++){
  1589     0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1590     0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1591     0D22  01EC               	clrf	Interrups@conta
  1592     0D23                     i1l2890:
  1593                           
  1594                           ;Digitizer24bitsV0.c: 53:                         Data_X = ReadAD24(1,0x00);
  1595     0D23  01D6               	clrf	ReadAD24@cmd_convert
  1596     0D24  3001               	movlw	1
  1597     0D25  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1598     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1599     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1600     0D2C  0859               	movf	?_ReadAD24+3,w
  1601     0D2D  00B3               	movwf	_Data_X+3
  1602     0D2E  0858               	movf	?_ReadAD24+2,w
  1603     0D2F  00B2               	movwf	_Data_X+2
  1604     0D30  0857               	movf	?_ReadAD24+1,w
  1605     0D31  00B1               	movwf	_Data_X+1
  1606     0D32  0856               	movf	?_ReadAD24,w
  1607     0D33  00B0               	movwf	_Data_X
  1608     0D34                     i1l2892:
  1609                           
  1610                           ;Digitizer24bitsV0.c: 54:                         SumData_X = SumData_X + Data_X;
  1611     0D34  0844               	movf	_SumData_X,w
  1612     0D35  0730               	addwf	_Data_X,w
  1613     0D36  00E3               	movwf	??_Interrups
  1614     0D37  3000               	movlw	0
  1615     0D38  1803               	skipnc
  1616     0D39  3001               	movlw	1
  1617     0D3A  0745               	addwf	_SumData_X+1,w
  1618     0D3B  01E5               	clrf	??_Interrups+2
  1619     0D3C  1803               	skipnc
  1620     0D3D  0AE5               	incf	??_Interrups+2,f
  1621     0D3E  0731               	addwf	_Data_X+1,w
  1622     0D3F  00E4               	movwf	??_Interrups+1
  1623     0D40  1803               	skipnc
  1624     0D41  0AE5               	incf	??_Interrups+2,f
  1625     0D42  0846               	movf	_SumData_X+2,w
  1626     0D43  0765               	addwf	??_Interrups+2,w
  1627     0D44  01E6               	clrf	??_Interrups+3
  1628     0D45  1803               	skipnc
  1629     0D46  0AE6               	incf	??_Interrups+3,f
  1630     0D47  0732               	addwf	_Data_X+2,w
  1631     0D48  00E5               	movwf	??_Interrups+2
  1632     0D49  1803               	skipnc
  1633     0D4A  0AE6               	incf	??_Interrups+3,f
  1634     0D4B  0847               	movf	_SumData_X+3,w
  1635     0D4C  0766               	addwf	??_Interrups+3,w
  1636     0D4D  0733               	addwf	_Data_X+3,w
  1637     0D4E  00E6               	movwf	??_Interrups+3
  1638     0D4F  0866               	movf	??_Interrups+3,w
  1639     0D50  00C7               	movwf	_SumData_X+3
  1640     0D51  0865               	movf	??_Interrups+2,w
  1641     0D52  00C6               	movwf	_SumData_X+2
  1642     0D53  0864               	movf	??_Interrups+1,w
  1643     0D54  00C5               	movwf	_SumData_X+1
  1644     0D55  0863               	movf	??_Interrups,w
  1645     0D56  00C4               	movwf	_SumData_X
  1646     0D57                     i1l2894:
  1647                           
  1648                           ;Digitizer24bitsV0.c: 55:                     }
  1649     0D57  3001               	movlw	1
  1650     0D58  00FF               	movwf	btemp+1
  1651     0D59  087F               	movf	btemp+1,w
  1652     0D5A  07EC               	addwf	Interrups@conta,f
  1653     0D5B                     i1l2896:
  1654     0D5B  3005               	movlw	5
  1655     0D5C  026C               	subwf	Interrups@conta,w
  1656     0D5D  1C03               	skipc
  1657     0D5E  2D60               	goto	u144_21
  1658     0D5F  2D61               	goto	u144_20
  1659     0D60                     u144_21:
  1660     0D60  2D23               	goto	i1l2890
  1661     0D61                     u144_20:
  1662     0D61                     i1l450:
  1663                           
  1664                           ;Digitizer24bitsV0.c: 56:                     PORTBbits.RB7 = 0;
  1665     0D61  1386               	bcf	6,7	;volatile
  1666     0D62                     i1l2898:
  1667                           
  1668                           ;Digitizer24bitsV0.c: 58:                     CleanHolding();
  1669     0D62  160A  118A  2631  120A  158A  	fcall	_CleanHolding
  1670     0D67                     i1l2900:
  1671                           
  1672                           ;Digitizer24bitsV0.c: 60:                     PORTB = 0x18;
  1673     0D67  3018               	movlw	24
  1674     0D68  1283               	bcf	3,5	;RP0=0, select bank0
  1675     0D69  1303               	bcf	3,6	;RP1=0, select bank0
  1676     0D6A  0086               	movwf	6	;volatile
  1677     0D6B                     i1l2902:
  1678                           
  1679                           ;Digitizer24bitsV0.c: 61:                     _delay((unsigned long)((7)*(9830400UL/4000
      +                          .0)));
  1680     0D6B  3017               	movlw	23
  1681     0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  1682     0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  1683     0D6E  00E4               	movwf	??_Interrups+1
  1684     0D6F  3055               	movlw	85
  1685     0D70  00E3               	movwf	??_Interrups
  1686     0D71                     u169_27:
  1687     0D71  0BE3               	decfsz	??_Interrups,f
  1688     0D72  2D71               	goto	u169_27
  1689     0D73  0BE4               	decfsz	??_Interrups+1,f
  1690     0D74  2D71               	goto	u169_27
  1691     0D75  0000               	nop
  1692     0D76                     i1l2904:
  1693                           
  1694                           ;Digitizer24bitsV0.c: 62:                     SumData_Y = 0;
  1695     0D76  3000               	movlw	0
  1696     0D77  1283               	bcf	3,5	;RP0=0, select bank0
  1697     0D78  1303               	bcf	3,6	;RP1=0, select bank0
  1698     0D79  00C3               	movwf	_SumData_Y+3
  1699     0D7A  3000               	movlw	0
  1700     0D7B  00C2               	movwf	_SumData_Y+2
  1701     0D7C  3000               	movlw	0
  1702     0D7D  00C1               	movwf	_SumData_Y+1
  1703     0D7E  3000               	movlw	0
  1704     0D7F  00C0               	movwf	_SumData_Y
  1705     0D80                     i1l2906:
  1706                           
  1707                           ;Digitizer24bitsV0.c: 63:                     ReadAD24(0,0x00);
  1708     0D80  01D6               	clrf	ReadAD24@cmd_convert
  1709     0D81  3000               	movlw	0
  1710     0D82  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1711     0D87                     i1l2908:
  1712                           
  1713                           ;Digitizer24bitsV0.c: 64:                     for(conta=0; conta<5; conta++){
  1714     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  1715     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  1716     0D89  01EC               	clrf	Interrups@conta
  1717     0D8A                     i1l2914:
  1718                           
  1719                           ;Digitizer24bitsV0.c: 65:                         Data_Y = ReadAD24(1,0x00);
  1720     0D8A  01D6               	clrf	ReadAD24@cmd_convert
  1721     0D8B  3001               	movlw	1
  1722     0D8C  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1723     0D91  1283               	bcf	3,5	;RP0=0, select bank0
  1724     0D92  1303               	bcf	3,6	;RP1=0, select bank0
  1725     0D93  0859               	movf	?_ReadAD24+3,w
  1726     0D94  00AF               	movwf	_Data_Y+3
  1727     0D95  0858               	movf	?_ReadAD24+2,w
  1728     0D96  00AE               	movwf	_Data_Y+2
  1729     0D97  0857               	movf	?_ReadAD24+1,w
  1730     0D98  00AD               	movwf	_Data_Y+1
  1731     0D99  0856               	movf	?_ReadAD24,w
  1732     0D9A  00AC               	movwf	_Data_Y
  1733     0D9B                     i1l2916:
  1734                           
  1735                           ;Digitizer24bitsV0.c: 66:                         SumData_Y = SumData_Y + Data_Y;
  1736     0D9B  0840               	movf	_SumData_Y,w
  1737     0D9C  072C               	addwf	_Data_Y,w
  1738     0D9D  00E3               	movwf	??_Interrups
  1739     0D9E  3000               	movlw	0
  1740     0D9F  1803               	skipnc
  1741     0DA0  3001               	movlw	1
  1742     0DA1  0741               	addwf	_SumData_Y+1,w
  1743     0DA2  01E5               	clrf	??_Interrups+2
  1744     0DA3  1803               	skipnc
  1745     0DA4  0AE5               	incf	??_Interrups+2,f
  1746     0DA5  072D               	addwf	_Data_Y+1,w
  1747     0DA6  00E4               	movwf	??_Interrups+1
  1748     0DA7  1803               	skipnc
  1749     0DA8  0AE5               	incf	??_Interrups+2,f
  1750     0DA9  0842               	movf	_SumData_Y+2,w
  1751     0DAA  0765               	addwf	??_Interrups+2,w
  1752     0DAB  01E6               	clrf	??_Interrups+3
  1753     0DAC  1803               	skipnc
  1754     0DAD  0AE6               	incf	??_Interrups+3,f
  1755     0DAE  072E               	addwf	_Data_Y+2,w
  1756     0DAF  00E5               	movwf	??_Interrups+2
  1757     0DB0  1803               	skipnc
  1758     0DB1  0AE6               	incf	??_Interrups+3,f
  1759     0DB2  0843               	movf	_SumData_Y+3,w
  1760     0DB3  0766               	addwf	??_Interrups+3,w
  1761     0DB4  072F               	addwf	_Data_Y+3,w
  1762     0DB5  00E6               	movwf	??_Interrups+3
  1763     0DB6  0866               	movf	??_Interrups+3,w
  1764     0DB7  00C3               	movwf	_SumData_Y+3
  1765     0DB8  0865               	movf	??_Interrups+2,w
  1766     0DB9  00C2               	movwf	_SumData_Y+2
  1767     0DBA  0864               	movf	??_Interrups+1,w
  1768     0DBB  00C1               	movwf	_SumData_Y+1
  1769     0DBC  0863               	movf	??_Interrups,w
  1770     0DBD  00C0               	movwf	_SumData_Y
  1771     0DBE                     i1l2918:
  1772                           
  1773                           ;Digitizer24bitsV0.c: 67:                     }
  1774     0DBE  3001               	movlw	1
  1775     0DBF  00FF               	movwf	btemp+1
  1776     0DC0  087F               	movf	btemp+1,w
  1777     0DC1  07EC               	addwf	Interrups@conta,f
  1778     0DC2                     i1l2920:
  1779     0DC2  3005               	movlw	5
  1780     0DC3  026C               	subwf	Interrups@conta,w
  1781     0DC4  1C03               	skipc
  1782     0DC5  2DC7               	goto	u145_21
  1783     0DC6  2DC8               	goto	u145_20
  1784     0DC7                     u145_21:
  1785     0DC7  2D8A               	goto	i1l2914
  1786     0DC8                     u145_20:
  1787     0DC8                     i1l2922:
  1788                           
  1789                           ;Digitizer24bitsV0.c: 69:                     CleanHolding();
  1790     0DC8  160A  118A  2631  120A  158A  	fcall	_CleanHolding
  1791     0DCD                     i1l2924:
  1792                           
  1793                           ;Digitizer24bitsV0.c: 71:                     PORTB = 0x28;
  1794     0DCD  3028               	movlw	40
  1795     0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  1796     0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  1797     0DD0  0086               	movwf	6	;volatile
  1798     0DD1                     i1l2926:
  1799                           
  1800                           ;Digitizer24bitsV0.c: 72:                     _delay((unsigned long)((7)*(9830400UL/4000
      +                          .0)));
  1801     0DD1  3017               	movlw	23
  1802     0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1803     0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  1804     0DD4  00E4               	movwf	??_Interrups+1
  1805     0DD5  3055               	movlw	85
  1806     0DD6  00E3               	movwf	??_Interrups
  1807     0DD7                     u170_27:
  1808     0DD7  0BE3               	decfsz	??_Interrups,f
  1809     0DD8  2DD7               	goto	u170_27
  1810     0DD9  0BE4               	decfsz	??_Interrups+1,f
  1811     0DDA  2DD7               	goto	u170_27
  1812     0DDB  0000               	nop
  1813     0DDC                     i1l2928:
  1814                           
  1815                           ;Digitizer24bitsV0.c: 73:                     SumData_Z = 0;
  1816     0DDC  3000               	movlw	0
  1817     0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  1818     0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  1819     0DDF  00BF               	movwf	_SumData_Z+3
  1820     0DE0  3000               	movlw	0
  1821     0DE1  00BE               	movwf	_SumData_Z+2
  1822     0DE2  3000               	movlw	0
  1823     0DE3  00BD               	movwf	_SumData_Z+1
  1824     0DE4  3000               	movlw	0
  1825     0DE5  00BC               	movwf	_SumData_Z
  1826     0DE6                     i1l2930:
  1827                           
  1828                           ;Digitizer24bitsV0.c: 74:                     ReadAD24(0,0x00);
  1829     0DE6  01D6               	clrf	ReadAD24@cmd_convert
  1830     0DE7  3000               	movlw	0
  1831     0DE8  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1832     0DED                     i1l2932:
  1833                           
  1834                           ;Digitizer24bitsV0.c: 75:                     for(conta=0; conta<5; conta++){
  1835     0DED  1283               	bcf	3,5	;RP0=0, select bank0
  1836     0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  1837     0DEF  01EC               	clrf	Interrups@conta
  1838     0DF0                     i1l2938:
  1839                           
  1840                           ;Digitizer24bitsV0.c: 76:                         Data_Z = ReadAD24(1,0x00);
  1841     0DF0  01D6               	clrf	ReadAD24@cmd_convert
  1842     0DF1  3001               	movlw	1
  1843     0DF2  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1844     0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  1845     0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  1846     0DF9  0859               	movf	?_ReadAD24+3,w
  1847     0DFA  00AB               	movwf	_Data_Z+3
  1848     0DFB  0858               	movf	?_ReadAD24+2,w
  1849     0DFC  00AA               	movwf	_Data_Z+2
  1850     0DFD  0857               	movf	?_ReadAD24+1,w
  1851     0DFE  00A9               	movwf	_Data_Z+1
  1852     0DFF  0856               	movf	?_ReadAD24,w
  1853     0E00  00A8               	movwf	_Data_Z
  1854     0E01                     i1l2940:
  1855                           
  1856                           ;Digitizer24bitsV0.c: 77:                         SumData_Z = SumData_Z + Data_Z;
  1857     0E01  083C               	movf	_SumData_Z,w
  1858     0E02  0728               	addwf	_Data_Z,w
  1859     0E03  00E3               	movwf	??_Interrups
  1860     0E04  3000               	movlw	0
  1861     0E05  1803               	skipnc
  1862     0E06  3001               	movlw	1
  1863     0E07  073D               	addwf	_SumData_Z+1,w
  1864     0E08  01E5               	clrf	??_Interrups+2
  1865     0E09  1803               	skipnc
  1866     0E0A  0AE5               	incf	??_Interrups+2,f
  1867     0E0B  0729               	addwf	_Data_Z+1,w
  1868     0E0C  00E4               	movwf	??_Interrups+1
  1869     0E0D  1803               	skipnc
  1870     0E0E  0AE5               	incf	??_Interrups+2,f
  1871     0E0F  083E               	movf	_SumData_Z+2,w
  1872     0E10  0765               	addwf	??_Interrups+2,w
  1873     0E11  01E6               	clrf	??_Interrups+3
  1874     0E12  1803               	skipnc
  1875     0E13  0AE6               	incf	??_Interrups+3,f
  1876     0E14  072A               	addwf	_Data_Z+2,w
  1877     0E15  00E5               	movwf	??_Interrups+2
  1878     0E16  1803               	skipnc
  1879     0E17  0AE6               	incf	??_Interrups+3,f
  1880     0E18  083F               	movf	_SumData_Z+3,w
  1881     0E19  0766               	addwf	??_Interrups+3,w
  1882     0E1A  072B               	addwf	_Data_Z+3,w
  1883     0E1B  00E6               	movwf	??_Interrups+3
  1884     0E1C  0866               	movf	??_Interrups+3,w
  1885     0E1D  00BF               	movwf	_SumData_Z+3
  1886     0E1E  0865               	movf	??_Interrups+2,w
  1887     0E1F  00BE               	movwf	_SumData_Z+2
  1888     0E20  0864               	movf	??_Interrups+1,w
  1889     0E21  00BD               	movwf	_SumData_Z+1
  1890     0E22  0863               	movf	??_Interrups,w
  1891     0E23  00BC               	movwf	_SumData_Z
  1892     0E24                     i1l2942:
  1893                           
  1894                           ;Digitizer24bitsV0.c: 78:                     }
  1895     0E24  3001               	movlw	1
  1896     0E25  00FF               	movwf	btemp+1
  1897     0E26  087F               	movf	btemp+1,w
  1898     0E27  07EC               	addwf	Interrups@conta,f
  1899     0E28                     i1l2944:
  1900     0E28  3005               	movlw	5
  1901     0E29  026C               	subwf	Interrups@conta,w
  1902     0E2A  1C03               	skipc
  1903     0E2B  2E2D               	goto	u146_21
  1904     0E2C  2E2E               	goto	u146_20
  1905     0E2D                     u146_21:
  1906     0E2D  2DF0               	goto	i1l2938
  1907     0E2E                     u146_20:
  1908     0E2E                     i1l2946:
  1909                           
  1910                           ;Digitizer24bitsV0.c: 80:                     CleanHolding();
  1911     0E2E  160A  118A  2631  120A  158A  	fcall	_CleanHolding
  1912     0E33                     i1l2948:
  1913                           
  1914                           ;Digitizer24bitsV0.c: 82:                     PORTB = 0x08;
  1915     0E33  3008               	movlw	8
  1916     0E34  1283               	bcf	3,5	;RP0=0, select bank0
  1917     0E35  1303               	bcf	3,6	;RP1=0, select bank0
  1918     0E36  0086               	movwf	6	;volatile
  1919     0E37                     i1l2950:
  1920                           
  1921                           ;Digitizer24bitsV0.c: 83:                     _delay((unsigned long)((7)*(9830400UL/4000
      +                          .0)));
  1922     0E37  3017               	movlw	23
  1923     0E38  1283               	bcf	3,5	;RP0=0, select bank0
  1924     0E39  1303               	bcf	3,6	;RP1=0, select bank0
  1925     0E3A  00E4               	movwf	??_Interrups+1
  1926     0E3B  3055               	movlw	85
  1927     0E3C  00E3               	movwf	??_Interrups
  1928     0E3D                     u171_27:
  1929     0E3D  0BE3               	decfsz	??_Interrups,f
  1930     0E3E  2E3D               	goto	u171_27
  1931     0E3F  0BE4               	decfsz	??_Interrups+1,f
  1932     0E40  2E3D               	goto	u171_27
  1933     0E41  0000               	nop
  1934     0E42                     i1l2952:
  1935                           
  1936                           ;Digitizer24bitsV0.c: 84:                     SumData_TC = 0;
  1937     0E42  3000               	movlw	0
  1938     0E43  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0E44  1303               	bcf	3,6	;RP1=0, select bank0
  1940     0E45  00BB               	movwf	_SumData_TC+3
  1941     0E46  3000               	movlw	0
  1942     0E47  00BA               	movwf	_SumData_TC+2
  1943     0E48  3000               	movlw	0
  1944     0E49  00B9               	movwf	_SumData_TC+1
  1945     0E4A  3000               	movlw	0
  1946     0E4B  00B8               	movwf	_SumData_TC
  1947     0E4C                     i1l2954:
  1948                           
  1949                           ;Digitizer24bitsV0.c: 85:                     ReadAD24(0,0x00);
  1950     0E4C  01D6               	clrf	ReadAD24@cmd_convert
  1951     0E4D  3000               	movlw	0
  1952     0E4E  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1953     0E53                     i1l2956:
  1954                           
  1955                           ;Digitizer24bitsV0.c: 86:                     for(conta=0; conta<5; conta++){
  1956     0E53  1283               	bcf	3,5	;RP0=0, select bank0
  1957     0E54  1303               	bcf	3,6	;RP1=0, select bank0
  1958     0E55  01EC               	clrf	Interrups@conta
  1959     0E56                     i1l2962:
  1960                           
  1961                           ;Digitizer24bitsV0.c: 87:                         Data_TC = ReadAD24(1,0x00);
  1962     0E56  01D6               	clrf	ReadAD24@cmd_convert
  1963     0E57  3001               	movlw	1
  1964     0E58  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  1965     0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  1966     0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0E5F  0859               	movf	?_ReadAD24+3,w
  1968     0E60  00A7               	movwf	_Data_TC+3
  1969     0E61  0858               	movf	?_ReadAD24+2,w
  1970     0E62  00A6               	movwf	_Data_TC+2
  1971     0E63  0857               	movf	?_ReadAD24+1,w
  1972     0E64  00A5               	movwf	_Data_TC+1
  1973     0E65  0856               	movf	?_ReadAD24,w
  1974     0E66  00A4               	movwf	_Data_TC
  1975     0E67                     i1l2964:
  1976                           
  1977                           ;Digitizer24bitsV0.c: 88:                         SumData_TC = SumData_TC + Data_TC;
  1978     0E67  0838               	movf	_SumData_TC,w
  1979     0E68  0724               	addwf	_Data_TC,w
  1980     0E69  00E3               	movwf	??_Interrups
  1981     0E6A  3000               	movlw	0
  1982     0E6B  1803               	skipnc
  1983     0E6C  3001               	movlw	1
  1984     0E6D  0739               	addwf	_SumData_TC+1,w
  1985     0E6E  01E5               	clrf	??_Interrups+2
  1986     0E6F  1803               	skipnc
  1987     0E70  0AE5               	incf	??_Interrups+2,f
  1988     0E71  0725               	addwf	_Data_TC+1,w
  1989     0E72  00E4               	movwf	??_Interrups+1
  1990     0E73  1803               	skipnc
  1991     0E74  0AE5               	incf	??_Interrups+2,f
  1992     0E75  083A               	movf	_SumData_TC+2,w
  1993     0E76  0765               	addwf	??_Interrups+2,w
  1994     0E77  01E6               	clrf	??_Interrups+3
  1995     0E78  1803               	skipnc
  1996     0E79  0AE6               	incf	??_Interrups+3,f
  1997     0E7A  0726               	addwf	_Data_TC+2,w
  1998     0E7B  00E5               	movwf	??_Interrups+2
  1999     0E7C  1803               	skipnc
  2000     0E7D  0AE6               	incf	??_Interrups+3,f
  2001     0E7E  083B               	movf	_SumData_TC+3,w
  2002     0E7F  0766               	addwf	??_Interrups+3,w
  2003     0E80  0727               	addwf	_Data_TC+3,w
  2004     0E81  00E6               	movwf	??_Interrups+3
  2005     0E82  0866               	movf	??_Interrups+3,w
  2006     0E83  00BB               	movwf	_SumData_TC+3
  2007     0E84  0865               	movf	??_Interrups+2,w
  2008     0E85  00BA               	movwf	_SumData_TC+2
  2009     0E86  0864               	movf	??_Interrups+1,w
  2010     0E87  00B9               	movwf	_SumData_TC+1
  2011     0E88  0863               	movf	??_Interrups,w
  2012     0E89  00B8               	movwf	_SumData_TC
  2013     0E8A                     i1l2966:
  2014                           
  2015                           ;Digitizer24bitsV0.c: 89:                     }
  2016     0E8A  3001               	movlw	1
  2017     0E8B  00FF               	movwf	btemp+1
  2018     0E8C  087F               	movf	btemp+1,w
  2019     0E8D  07EC               	addwf	Interrups@conta,f
  2020     0E8E                     i1l2968:
  2021     0E8E  3005               	movlw	5
  2022     0E8F  026C               	subwf	Interrups@conta,w
  2023     0E90  1C03               	skipc
  2024     0E91  2E93               	goto	u147_21
  2025     0E92  2E94               	goto	u147_20
  2026     0E93                     u147_21:
  2027     0E93  2E56               	goto	i1l2962
  2028     0E94                     u147_20:
  2029     0E94                     i1l2970:
  2030                           
  2031                           ;Digitizer24bitsV0.c: 91:                     CleanHolding();
  2032     0E94  160A  118A  2631  120A  158A  	fcall	_CleanHolding
  2033     0E99                     i1l2972:
  2034                           
  2035                           ;Digitizer24bitsV0.c: 93:                     PORTB = 0x04;
  2036     0E99  3004               	movlw	4
  2037     0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  2038     0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  2039     0E9C  0086               	movwf	6	;volatile
  2040     0E9D                     i1l2974:
  2041                           
  2042                           ;Digitizer24bitsV0.c: 94:                     _delay((unsigned long)((7)*(9830400UL/4000
      +                          .0)));
  2043     0E9D  3017               	movlw	23
  2044     0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  2045     0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  2046     0EA0  00E4               	movwf	??_Interrups+1
  2047     0EA1  3055               	movlw	85
  2048     0EA2  00E3               	movwf	??_Interrups
  2049     0EA3                     u172_27:
  2050     0EA3  0BE3               	decfsz	??_Interrups,f
  2051     0EA4  2EA3               	goto	u172_27
  2052     0EA5  0BE4               	decfsz	??_Interrups+1,f
  2053     0EA6  2EA3               	goto	u172_27
  2054     0EA7  0000               	nop
  2055     0EA8                     i1l2976:
  2056                           
  2057                           ;Digitizer24bitsV0.c: 95:                     SumData_TS = 0;
  2058     0EA8  3000               	movlw	0
  2059     0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  2060     0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  2061     0EAB  00B7               	movwf	_SumData_TS+3
  2062     0EAC  3000               	movlw	0
  2063     0EAD  00B6               	movwf	_SumData_TS+2
  2064     0EAE  3000               	movlw	0
  2065     0EAF  00B5               	movwf	_SumData_TS+1
  2066     0EB0  3000               	movlw	0
  2067     0EB1  00B4               	movwf	_SumData_TS
  2068     0EB2                     i1l2978:
  2069                           
  2070                           ;Digitizer24bitsV0.c: 96:                     ReadAD24(0,0x00);
  2071     0EB2  01D6               	clrf	ReadAD24@cmd_convert
  2072     0EB3  3000               	movlw	0
  2073     0EB4  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  2074     0EB9                     i1l2980:
  2075                           
  2076                           ;Digitizer24bitsV0.c: 97:                     for(conta=0; conta<5; conta++){
  2077     0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  2078     0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  2079     0EBB  01EC               	clrf	Interrups@conta
  2080     0EBC                     i1l2986:
  2081                           
  2082                           ;Digitizer24bitsV0.c: 98:                         Data_TS = ReadAD24(1,0x00);
  2083     0EBC  01D6               	clrf	ReadAD24@cmd_convert
  2084     0EBD  3001               	movlw	1
  2085     0EBE  120A  158A  22E7  120A  158A  	fcall	_ReadAD24
  2086     0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  2087     0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  2088     0EC5  0859               	movf	?_ReadAD24+3,w
  2089     0EC6  00A3               	movwf	_Data_TS+3
  2090     0EC7  0858               	movf	?_ReadAD24+2,w
  2091     0EC8  00A2               	movwf	_Data_TS+2
  2092     0EC9  0857               	movf	?_ReadAD24+1,w
  2093     0ECA  00A1               	movwf	_Data_TS+1
  2094     0ECB  0856               	movf	?_ReadAD24,w
  2095     0ECC  00A0               	movwf	_Data_TS
  2096     0ECD                     i1l2988:
  2097                           
  2098                           ;Digitizer24bitsV0.c: 99:                         SumData_TS = SumData_TS + Data_TS;
  2099     0ECD  0834               	movf	_SumData_TS,w
  2100     0ECE  0720               	addwf	_Data_TS,w
  2101     0ECF  00E3               	movwf	??_Interrups
  2102     0ED0  3000               	movlw	0
  2103     0ED1  1803               	skipnc
  2104     0ED2  3001               	movlw	1
  2105     0ED3  0735               	addwf	_SumData_TS+1,w
  2106     0ED4  01E5               	clrf	??_Interrups+2
  2107     0ED5  1803               	skipnc
  2108     0ED6  0AE5               	incf	??_Interrups+2,f
  2109     0ED7  0721               	addwf	_Data_TS+1,w
  2110     0ED8  00E4               	movwf	??_Interrups+1
  2111     0ED9  1803               	skipnc
  2112     0EDA  0AE5               	incf	??_Interrups+2,f
  2113     0EDB  0836               	movf	_SumData_TS+2,w
  2114     0EDC  0765               	addwf	??_Interrups+2,w
  2115     0EDD  01E6               	clrf	??_Interrups+3
  2116     0EDE  1803               	skipnc
  2117     0EDF  0AE6               	incf	??_Interrups+3,f
  2118     0EE0  0722               	addwf	_Data_TS+2,w
  2119     0EE1  00E5               	movwf	??_Interrups+2
  2120     0EE2  1803               	skipnc
  2121     0EE3  0AE6               	incf	??_Interrups+3,f
  2122     0EE4  0837               	movf	_SumData_TS+3,w
  2123     0EE5  0766               	addwf	??_Interrups+3,w
  2124     0EE6  0723               	addwf	_Data_TS+3,w
  2125     0EE7  00E6               	movwf	??_Interrups+3
  2126     0EE8  0866               	movf	??_Interrups+3,w
  2127     0EE9  00B7               	movwf	_SumData_TS+3
  2128     0EEA  0865               	movf	??_Interrups+2,w
  2129     0EEB  00B6               	movwf	_SumData_TS+2
  2130     0EEC  0864               	movf	??_Interrups+1,w
  2131     0EED  00B5               	movwf	_SumData_TS+1
  2132     0EEE  0863               	movf	??_Interrups,w
  2133     0EEF  00B4               	movwf	_SumData_TS
  2134     0EF0                     i1l2990:
  2135                           
  2136                           ;Digitizer24bitsV0.c: 100:                     }
  2137     0EF0  3001               	movlw	1
  2138     0EF1  00FF               	movwf	btemp+1
  2139     0EF2  087F               	movf	btemp+1,w
  2140     0EF3  07EC               	addwf	Interrups@conta,f
  2141     0EF4                     i1l2992:
  2142     0EF4  3005               	movlw	5
  2143     0EF5  026C               	subwf	Interrups@conta,w
  2144     0EF6  1C03               	skipc
  2145     0EF7  2EF9               	goto	u148_21
  2146     0EF8  2EFA               	goto	u148_20
  2147     0EF9                     u148_21:
  2148     0EF9  2EBC               	goto	i1l2986
  2149     0EFA                     u148_20:
  2150     0EFA                     i1l2994:
  2151                           
  2152                           ;Digitizer24bitsV0.c: 103:                     Data_X = SumData_X/5;
  2153     0EFA  3000               	movlw	0
  2154     0EFB  00F3               	movwf	___aldiv@divisor+3
  2155     0EFC  3000               	movlw	0
  2156     0EFD  00F2               	movwf	___aldiv@divisor+2
  2157     0EFE  3000               	movlw	0
  2158     0EFF  00F1               	movwf	___aldiv@divisor+1
  2159     0F00  3005               	movlw	5
  2160     0F01  00F0               	movwf	___aldiv@divisor
  2161     0F02  0847               	movf	_SumData_X+3,w
  2162     0F03  00F7               	movwf	___aldiv@dividend+3
  2163     0F04  0846               	movf	_SumData_X+2,w
  2164     0F05  00F6               	movwf	___aldiv@dividend+2
  2165     0F06  0845               	movf	_SumData_X+1,w
  2166     0F07  00F5               	movwf	___aldiv@dividend+1
  2167     0F08  0844               	movf	_SumData_X,w
  2168     0F09  00F4               	movwf	___aldiv@dividend
  2169     0F0A  120A  158A  224A  120A  158A  	fcall	___aldiv
  2170     0F0F  0873               	movf	?___aldiv+3,w
  2171     0F10  1283               	bcf	3,5	;RP0=0, select bank0
  2172     0F11  1303               	bcf	3,6	;RP1=0, select bank0
  2173     0F12  00B3               	movwf	_Data_X+3
  2174     0F13  0872               	movf	?___aldiv+2,w
  2175     0F14  00B2               	movwf	_Data_X+2
  2176     0F15  0871               	movf	?___aldiv+1,w
  2177     0F16  00B1               	movwf	_Data_X+1
  2178     0F17  0870               	movf	?___aldiv,w
  2179     0F18  00B0               	movwf	_Data_X
  2180                           
  2181                           ;Digitizer24bitsV0.c: 104:                     Data_Y = SumData_Y/5;
  2182     0F19  3000               	movlw	0
  2183     0F1A  00F3               	movwf	___aldiv@divisor+3
  2184     0F1B  3000               	movlw	0
  2185     0F1C  00F2               	movwf	___aldiv@divisor+2
  2186     0F1D  3000               	movlw	0
  2187     0F1E  00F1               	movwf	___aldiv@divisor+1
  2188     0F1F  3005               	movlw	5
  2189     0F20  00F0               	movwf	___aldiv@divisor
  2190     0F21  0843               	movf	_SumData_Y+3,w
  2191     0F22  00F7               	movwf	___aldiv@dividend+3
  2192     0F23  0842               	movf	_SumData_Y+2,w
  2193     0F24  00F6               	movwf	___aldiv@dividend+2
  2194     0F25  0841               	movf	_SumData_Y+1,w
  2195     0F26  00F5               	movwf	___aldiv@dividend+1
  2196     0F27  0840               	movf	_SumData_Y,w
  2197     0F28  00F4               	movwf	___aldiv@dividend
  2198     0F29  120A  158A  224A  120A  158A  	fcall	___aldiv
  2199     0F2E  0873               	movf	?___aldiv+3,w
  2200     0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  2201     0F30  1303               	bcf	3,6	;RP1=0, select bank0
  2202     0F31  00AF               	movwf	_Data_Y+3
  2203     0F32  0872               	movf	?___aldiv+2,w
  2204     0F33  00AE               	movwf	_Data_Y+2
  2205     0F34  0871               	movf	?___aldiv+1,w
  2206     0F35  00AD               	movwf	_Data_Y+1
  2207     0F36  0870               	movf	?___aldiv,w
  2208     0F37  00AC               	movwf	_Data_Y
  2209                           
  2210                           ;Digitizer24bitsV0.c: 105:                     Data_Z = SumData_Z/5;
  2211     0F38  3000               	movlw	0
  2212     0F39  00F3               	movwf	___aldiv@divisor+3
  2213     0F3A  3000               	movlw	0
  2214     0F3B  00F2               	movwf	___aldiv@divisor+2
  2215     0F3C  3000               	movlw	0
  2216     0F3D  00F1               	movwf	___aldiv@divisor+1
  2217     0F3E  3005               	movlw	5
  2218     0F3F  00F0               	movwf	___aldiv@divisor
  2219     0F40  083F               	movf	_SumData_Z+3,w
  2220     0F41  00F7               	movwf	___aldiv@dividend+3
  2221     0F42  083E               	movf	_SumData_Z+2,w
  2222     0F43  00F6               	movwf	___aldiv@dividend+2
  2223     0F44  083D               	movf	_SumData_Z+1,w
  2224     0F45  00F5               	movwf	___aldiv@dividend+1
  2225     0F46  083C               	movf	_SumData_Z,w
  2226     0F47  00F4               	movwf	___aldiv@dividend
  2227     0F48  120A  158A  224A  120A  158A  	fcall	___aldiv
  2228     0F4D  0873               	movf	?___aldiv+3,w
  2229     0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  2230     0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  2231     0F50  00AB               	movwf	_Data_Z+3
  2232     0F51  0872               	movf	?___aldiv+2,w
  2233     0F52  00AA               	movwf	_Data_Z+2
  2234     0F53  0871               	movf	?___aldiv+1,w
  2235     0F54  00A9               	movwf	_Data_Z+1
  2236     0F55  0870               	movf	?___aldiv,w
  2237     0F56  00A8               	movwf	_Data_Z
  2238                           
  2239                           ;Digitizer24bitsV0.c: 106:                     Data_TC = SumData_TC/5;
  2240     0F57  3000               	movlw	0
  2241     0F58  00F3               	movwf	___aldiv@divisor+3
  2242     0F59  3000               	movlw	0
  2243     0F5A  00F2               	movwf	___aldiv@divisor+2
  2244     0F5B  3000               	movlw	0
  2245     0F5C  00F1               	movwf	___aldiv@divisor+1
  2246     0F5D  3005               	movlw	5
  2247     0F5E  00F0               	movwf	___aldiv@divisor
  2248     0F5F  083B               	movf	_SumData_TC+3,w
  2249     0F60  00F7               	movwf	___aldiv@dividend+3
  2250     0F61  083A               	movf	_SumData_TC+2,w
  2251     0F62  00F6               	movwf	___aldiv@dividend+2
  2252     0F63  0839               	movf	_SumData_TC+1,w
  2253     0F64  00F5               	movwf	___aldiv@dividend+1
  2254     0F65  0838               	movf	_SumData_TC,w
  2255     0F66  00F4               	movwf	___aldiv@dividend
  2256     0F67  120A  158A  224A  120A  158A  	fcall	___aldiv
  2257     0F6C  0873               	movf	?___aldiv+3,w
  2258     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2260     0F6F  00A7               	movwf	_Data_TC+3
  2261     0F70  0872               	movf	?___aldiv+2,w
  2262     0F71  00A6               	movwf	_Data_TC+2
  2263     0F72  0871               	movf	?___aldiv+1,w
  2264     0F73  00A5               	movwf	_Data_TC+1
  2265     0F74  0870               	movf	?___aldiv,w
  2266     0F75  00A4               	movwf	_Data_TC
  2267                           
  2268                           ;Digitizer24bitsV0.c: 107:                     Data_TS = SumData_TS/5;
  2269     0F76  3000               	movlw	0
  2270     0F77  00F3               	movwf	___aldiv@divisor+3
  2271     0F78  3000               	movlw	0
  2272     0F79  00F2               	movwf	___aldiv@divisor+2
  2273     0F7A  3000               	movlw	0
  2274     0F7B  00F1               	movwf	___aldiv@divisor+1
  2275     0F7C  3005               	movlw	5
  2276     0F7D  00F0               	movwf	___aldiv@divisor
  2277     0F7E  0837               	movf	_SumData_TS+3,w
  2278     0F7F  00F7               	movwf	___aldiv@dividend+3
  2279     0F80  0836               	movf	_SumData_TS+2,w
  2280     0F81  00F6               	movwf	___aldiv@dividend+2
  2281     0F82  0835               	movf	_SumData_TS+1,w
  2282     0F83  00F5               	movwf	___aldiv@dividend+1
  2283     0F84  0834               	movf	_SumData_TS,w
  2284     0F85  00F4               	movwf	___aldiv@dividend
  2285     0F86  120A  158A  224A  120A  158A  	fcall	___aldiv
  2286     0F8B  0873               	movf	?___aldiv+3,w
  2287     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2288     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2289     0F8E  00A3               	movwf	_Data_TS+3
  2290     0F8F  0872               	movf	?___aldiv+2,w
  2291     0F90  00A2               	movwf	_Data_TS+2
  2292     0F91  0871               	movf	?___aldiv+1,w
  2293     0F92  00A1               	movwf	_Data_TS+1
  2294     0F93  0870               	movf	?___aldiv,w
  2295     0F94  00A0               	movwf	_Data_TS
  2296     0F95                     i1l2996:
  2297                           
  2298                           ;Digitizer24bitsV0.c: 110:                     print_string("JROADQ");
  2299     0F95  3039               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2300     0F96  00F1               	movwf	print_string@str
  2301     0F97  3080               	movlw	128
  2302     0F98  00F2               	movwf	print_string@str+1
  2303     0F99  160A  118A  269B  120A  158A  	fcall	_print_string
  2304     0F9E                     i1l2998:
  2305                           
  2306                           ;Digitizer24bitsV0.c: 111:                     WriteByte_USART(ContaSample);
  2307     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  2308     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  2309     0FA0  084C               	movf	_ContaSample,w
  2310     0FA1  120A  158A  2001  120A  158A  	fcall	_WriteByte_USART
  2311     0FA6                     i1l3000:
  2312                           
  2313                           ;Digitizer24bitsV0.c: 112:                     print_value(Data_X);
  2314     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2315     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2316     0FA8  0833               	movf	_Data_X+3,w
  2317     0FA9  00F4               	movwf	print_value@value+3
  2318     0FAA  0832               	movf	_Data_X+2,w
  2319     0FAB  00F3               	movwf	print_value@value+2
  2320     0FAC  0831               	movf	_Data_X+1,w
  2321     0FAD  00F2               	movwf	print_value@value+1
  2322     0FAE  0830               	movf	_Data_X,w
  2323     0FAF  00F1               	movwf	print_value@value
  2324     0FB0  160A  118A  26E9  120A  158A  	fcall	_print_value
  2325     0FB5                     i1l3002:
  2326                           
  2327                           ;Digitizer24bitsV0.c: 113:                     print_value(Data_Y);
  2328     0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2329     0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2330     0FB7  082F               	movf	_Data_Y+3,w
  2331     0FB8  00F4               	movwf	print_value@value+3
  2332     0FB9  082E               	movf	_Data_Y+2,w
  2333     0FBA  00F3               	movwf	print_value@value+2
  2334     0FBB  082D               	movf	_Data_Y+1,w
  2335     0FBC  00F2               	movwf	print_value@value+1
  2336     0FBD  082C               	movf	_Data_Y,w
  2337     0FBE  00F1               	movwf	print_value@value
  2338     0FBF  160A  118A  26E9  120A  158A  	fcall	_print_value
  2339     0FC4                     i1l3004:
  2340                           
  2341                           ;Digitizer24bitsV0.c: 114:                     print_value(Data_Z);
  2342     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2343     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2344     0FC6  082B               	movf	_Data_Z+3,w
  2345     0FC7  00F4               	movwf	print_value@value+3
  2346     0FC8  082A               	movf	_Data_Z+2,w
  2347     0FC9  00F3               	movwf	print_value@value+2
  2348     0FCA  0829               	movf	_Data_Z+1,w
  2349     0FCB  00F2               	movwf	print_value@value+1
  2350     0FCC  0828               	movf	_Data_Z,w
  2351     0FCD  00F1               	movwf	print_value@value
  2352     0FCE  160A  118A  26E9  120A  158A  	fcall	_print_value
  2353     0FD3                     i1l3006:
  2354                           
  2355                           ;Digitizer24bitsV0.c: 115:                     print_value(Data_TC);
  2356     0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  2357     0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  2358     0FD5  0827               	movf	_Data_TC+3,w
  2359     0FD6  00F4               	movwf	print_value@value+3
  2360     0FD7  0826               	movf	_Data_TC+2,w
  2361     0FD8  00F3               	movwf	print_value@value+2
  2362     0FD9  0825               	movf	_Data_TC+1,w
  2363     0FDA  00F2               	movwf	print_value@value+1
  2364     0FDB  0824               	movf	_Data_TC,w
  2365     0FDC  00F1               	movwf	print_value@value
  2366     0FDD  160A  118A  26E9  120A  158A  	fcall	_print_value
  2367     0FE2                     i1l3008:
  2368                           
  2369                           ;Digitizer24bitsV0.c: 116:                     print_value(Data_TS);
  2370     0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  2371     0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  2372     0FE4  0823               	movf	_Data_TS+3,w
  2373     0FE5  00F4               	movwf	print_value@value+3
  2374     0FE6  0822               	movf	_Data_TS+2,w
  2375     0FE7  00F3               	movwf	print_value@value+2
  2376     0FE8  0821               	movf	_Data_TS+1,w
  2377     0FE9  00F2               	movwf	print_value@value+1
  2378     0FEA  0820               	movf	_Data_TS,w
  2379     0FEB  00F1               	movwf	print_value@value
  2380     0FEC  160A  118A  26E9  120A  158A  	fcall	_print_value
  2381     0FF1                     i1l3010:
  2382                           
  2383                           ;Digitizer24bitsV0.c: 117:                     print_string("\n\r");
  2384     0FF1  3016               	movlw	(low (((STR_9+21)-__stringbase)| (0+32768)))& (0+255)
  2385     0FF2  00F1               	movwf	print_string@str
  2386     0FF3  3080               	movlw	128
  2387     0FF4  00F2               	movwf	print_string@str+1
  2388     0FF5  160A  118A  269B  120A  158A  	fcall	_print_string
  2389     0FFA                     i1l3012:
  2390                           
  2391                           ;Digitizer24bitsV0.c: 119:                     PORTAbits.RA2 = 0;
  2392     0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  2393     0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  2394     0FFC  1105               	bcf	5,2	;volatile
  2395     0FFD  120A  118A  2FB3   	goto	i1l508
  2396                           
  2397                           	psect	intentry
  2398     0004                     __pintentry:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _Interrups: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2401                           
  2402     0004                     interrupt_function:
  2403     007E                     saved_w	set	btemp
  2404     0004  00FE               	movwf	btemp
  2405     0005  0E03               	swapf	3,w
  2406     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2407     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2408     0008  00E7               	movwf	??_Interrups+4
  2409     0009  0804               	movf	4,w
  2410     000A  00E8               	movwf	??_Interrups+5
  2411     000B  080A               	movf	10,w
  2412     000C  00E9               	movwf	??_Interrups+6
  2413     000D  087F               	movf	btemp+1,w
  2414     000E  00EA               	movwf	??_Interrups+7
  2415     000F  120A  158A  2CB2   	ljmp	_Interrups
  2416                           
  2417                           	psect	text8
  2418     16E9                     __ptext8:	
  2419 ;; *************** function _print_value *****************
  2420 ;; Defined at:
  2421 ;;		line 145 in file "LIB16F_USART.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  value           4    1[COMMON] long 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  Bytes           3   10[COMMON] unsigned char [3]
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         4       0       0       0       0
  2436 ;;      Locals:         3       0       0       0       0
  2437 ;;      Temps:          5       0       0       0       0
  2438 ;;      Totals:        12       0       0       0       0
  2439 ;;Total ram usage:       12 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 1
  2442 ;; This function calls:
  2443 ;;		_WriteByte_USART
  2444 ;; This function is called by:
  2445 ;;		_Interrups
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449     16E9                     _print_value:	
  2450                           ;psect for function _print_value
  2451                           
  2452     16E9                     i1l2832:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _print_value: [wreg+status,2+status,0+pclath+cstack]
  2455                           
  2456                           
  2457                           ;LIB16F_USART.c: 147:     char Bytes[3];;LIB16F_USART.c: 150:     Bytes[2] = (char) ((va
      +                          lue&0x00FF0000)>>16);
  2458     16E9  0871               	movf	print_value@value,w
  2459     16EA  00F5               	movwf	??_print_value
  2460     16EB  0872               	movf	print_value@value+1,w
  2461     16EC  00F6               	movwf	??_print_value+1
  2462     16ED  0873               	movf	print_value@value+2,w
  2463     16EE  00F7               	movwf	??_print_value+2
  2464     16EF  0874               	movf	print_value@value+3,w
  2465     16F0  00F8               	movwf	??_print_value+3
  2466     16F1  3010               	movlw	16
  2467     16F2  00F9               	movwf	??_print_value+4
  2468     16F3                     u139_25:
  2469     16F3  0D78               	rlf	??_print_value+3,w
  2470     16F4  0CF8               	rrf	??_print_value+3,f
  2471     16F5  0CF7               	rrf	??_print_value+2,f
  2472     16F6  0CF6               	rrf	??_print_value+1,f
  2473     16F7  0CF5               	rrf	??_print_value,f
  2474     16F8                     u139_20:
  2475     16F8  0BF9               	decfsz	??_print_value+4,f
  2476     16F9  2EF3               	goto	u139_25
  2477     16FA  0875               	movf	??_print_value,w
  2478     16FB  00FC               	movwf	print_value@Bytes+2
  2479                           
  2480                           ;LIB16F_USART.c: 152:     Bytes[1] = (char) ((value&0x0000FF00)>>8);
  2481     16FC  0871               	movf	print_value@value,w
  2482     16FD  00F5               	movwf	??_print_value
  2483     16FE  0872               	movf	print_value@value+1,w
  2484     16FF  00F6               	movwf	??_print_value+1
  2485     1700  0873               	movf	print_value@value+2,w
  2486     1701  00F7               	movwf	??_print_value+2
  2487     1702  0874               	movf	print_value@value+3,w
  2488     1703  00F8               	movwf	??_print_value+3
  2489     1704  3008               	movlw	8
  2490     1705  00F9               	movwf	??_print_value+4
  2491     1706                     u140_25:
  2492     1706  0D78               	rlf	??_print_value+3,w
  2493     1707  0CF8               	rrf	??_print_value+3,f
  2494     1708  0CF7               	rrf	??_print_value+2,f
  2495     1709  0CF6               	rrf	??_print_value+1,f
  2496     170A  0CF5               	rrf	??_print_value,f
  2497     170B                     u140_20:
  2498     170B  0BF9               	decfsz	??_print_value+4,f
  2499     170C  2F06               	goto	u140_25
  2500     170D  0875               	movf	??_print_value,w
  2501     170E  00FB               	movwf	print_value@Bytes+1
  2502     170F                     i1l2834:
  2503                           
  2504                           ;LIB16F_USART.c: 154:     Bytes[0] = (char) ((value&0x000000FF)>>0);
  2505     170F  0871               	movf	print_value@value,w
  2506     1710  00FA               	movwf	print_value@Bytes
  2507     1711                     i1l2836:
  2508                           
  2509                           ;LIB16F_USART.c: 157:     WriteByte_USART(Bytes[0]);
  2510     1711  087A               	movf	print_value@Bytes,w
  2511     1712  120A  158A  2001  160A  118A  	fcall	_WriteByte_USART
  2512     1717                     i1l2838:
  2513                           
  2514                           ;LIB16F_USART.c: 158:     WriteByte_USART(Bytes[1]);
  2515     1717  087B               	movf	print_value@Bytes+1,w
  2516     1718  120A  158A  2001  160A  118A  	fcall	_WriteByte_USART
  2517     171D                     i1l2840:
  2518                           
  2519                           ;LIB16F_USART.c: 159:     WriteByte_USART(Bytes[2]);
  2520     171D  087C               	movf	print_value@Bytes+2,w
  2521     171E  120A  158A  2001  160A  118A  	fcall	_WriteByte_USART
  2522     1723                     i1l322:
  2523     1723  0008               	return
  2524     1724                     __end_of_print_value:
  2525                           
  2526                           	psect	text9
  2527     07C6                     __ptext9:	
  2528 ;; *************** function _TransmitDAT_USART *****************
  2529 ;; Defined at:
  2530 ;;		line 133 in file "LIB16F_USART.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  DAT_ID          1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  DAT_ID          1    3[COMMON] unsigned char 
  2535 ;;  conta           1    4[COMMON] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         2       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         2       0       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		_WriteByte_USART
  2554 ;;		_print_string
  2555 ;; This function is called by:
  2556 ;;		_Interrups
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560     07C6                     _TransmitDAT_USART:	
  2561                           ;psect for function _TransmitDAT_USART
  2562                           
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _TransmitDAT_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2566                           ;TransmitDAT_USART@DAT_ID stored from wreg
  2567     07C6  00F3               	movwf	TransmitDAT_USART@DAT_ID
  2568     07C7                     i1l2812:
  2569                           
  2570                           ;LIB16F_USART.c: 134:     unsigned char conta;;LIB16F_USART.c: 136:     print_string("NN
      +                          NNJRODAT");
  2571     07C7  3024               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2572     07C8  00F1               	movwf	print_string@str
  2573     07C9  3080               	movlw	128
  2574     07CA  00F2               	movwf	print_string@str+1
  2575     07CB  160A  118A  269B  120A  118A  	fcall	_print_string
  2576     07D0                     i1l2814:
  2577                           
  2578                           ;LIB16F_USART.c: 137:     WriteByte_USART(DAT_ID);
  2579     07D0  0873               	movf	TransmitDAT_USART@DAT_ID,w
  2580     07D1  120A  158A  2001  120A  118A  	fcall	_WriteByte_USART
  2581     07D6                     i1l2816:
  2582                           
  2583                           ;LIB16F_USART.c: 138:     for(conta=0; conta<12; conta++){
  2584     07D6  01F4               	clrf	TransmitDAT_USART@conta
  2585     07D7                     i1l2822:
  2586                           
  2587                           ;LIB16F_USART.c: 139:         WriteByte_USART(BufferDAT[conta]);
  2588     07D7  0874               	movf	TransmitDAT_USART@conta,w
  2589     07D8  3EA8               	addlw	(low (_BufferDAT| 0))& (0+255)
  2590     07D9  0084               	movwf	4
  2591     07DA  1383               	bcf	3,7	;select IRP bank1
  2592     07DB  0800               	movf	0,w
  2593     07DC  120A  158A  2001  120A  118A  	fcall	_WriteByte_USART
  2594     07E1                     i1l2824:
  2595                           
  2596                           ;LIB16F_USART.c: 140:     }
  2597     07E1  3001               	movlw	1
  2598     07E2  00FF               	movwf	btemp+1
  2599     07E3  087F               	movf	btemp+1,w
  2600     07E4  07F4               	addwf	TransmitDAT_USART@conta,f
  2601     07E5                     i1l2826:
  2602     07E5  300C               	movlw	12
  2603     07E6  0274               	subwf	TransmitDAT_USART@conta,w
  2604     07E7  1C03               	skipc
  2605     07E8  2FEA               	goto	u138_21
  2606     07E9  2FEB               	goto	u138_20
  2607     07EA                     u138_21:
  2608     07EA  2FD7               	goto	i1l2822
  2609     07EB                     u138_20:
  2610     07EB                     i1l2828:
  2611                           
  2612                           ;LIB16F_USART.c: 141:     print_string("\n\r");
  2613     07EB  3016               	movlw	(low (((STR_9+21)-__stringbase)| (0+32768)))& (0+255)
  2614     07EC  00F1               	movwf	print_string@str
  2615     07ED  3080               	movlw	128
  2616     07EE  00F2               	movwf	print_string@str+1
  2617     07EF  160A  118A  269B  120A  118A  	fcall	_print_string
  2618     07F4                     i1l319:
  2619     07F4  0008               	return
  2620     07F5                     __end_of_TransmitDAT_USART:
  2621                           
  2622                           	psect	text10
  2623     1646                     __ptext10:	
  2624 ;; *************** function _TransmitCMD_USART *****************
  2625 ;; Defined at:
  2626 ;;		line 125 in file "LIB16F_USART.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  CMD_ID          1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  CMD_ID          1    3[COMMON] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         1       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0
  2643 ;;      Totals:         1       0       0       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; Hardware stack levels required when called: 2
  2647 ;; This function calls:
  2648 ;;		_WriteByte_USART
  2649 ;;		_print_string
  2650 ;; This function is called by:
  2651 ;;		_Interrups
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655     1646                     _TransmitCMD_USART:	
  2656                           ;psect for function _TransmitCMD_USART
  2657                           
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _TransmitCMD_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2661                           ;TransmitCMD_USART@CMD_ID stored from wreg
  2662     1646  00F3               	movwf	TransmitCMD_USART@CMD_ID
  2663     1647                     i1l2804:
  2664                           
  2665                           ;LIB16F_USART.c: 127:     print_string("NNNNJROCMD");
  2666     1647  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2667     1648  00F1               	movwf	print_string@str
  2668     1649  3080               	movlw	128
  2669     164A  00F2               	movwf	print_string@str+1
  2670     164B  160A  118A  269B  160A  118A  	fcall	_print_string
  2671     1650                     i1l2806:
  2672                           
  2673                           ;LIB16F_USART.c: 128:     WriteByte_USART(CMD_ID);
  2674     1650  0873               	movf	TransmitCMD_USART@CMD_ID,w
  2675     1651  120A  158A  2001  160A  118A  	fcall	_WriteByte_USART
  2676     1656                     i1l2808:
  2677                           
  2678                           ;LIB16F_USART.c: 129:     print_string("\n\r");
  2679     1656  3016               	movlw	(low (((STR_9+21)-__stringbase)| (0+32768)))& (0+255)
  2680     1657  00F1               	movwf	print_string@str
  2681     1658  3080               	movlw	128
  2682     1659  00F2               	movwf	print_string@str+1
  2683     165A  160A  118A  269B  160A  118A  	fcall	_print_string
  2684     165F                     i1l314:
  2685     165F  0008               	return
  2686     1660                     __end_of_TransmitCMD_USART:
  2687                           
  2688                           	psect	text11
  2689     169B                     __ptext11:	
  2690 ;; *************** function _print_string *****************
  2691 ;; Defined at:
  2692 ;;		line 52 in file "LIB16F_USART.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  str             2    1[COMMON] PTR unsigned char 
  2695 ;;		 -> STR_13(3), STR_12(7), STR_11(3), STR_10(7), 
  2696 ;;		 -> STR_9(24), STR_8(3), STR_7(7), STR_6(3), 
  2697 ;;		 -> STR_5(10), STR_4(3), STR_3(11), STR_2(3), 
  2698 ;;		 -> STR_1(11), BufferDAT(13), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         2       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0
  2713 ;;      Totals:         2       0       0       0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 1
  2717 ;; This function calls:
  2718 ;;		_WriteByte_USART
  2719 ;; This function is called by:
  2720 ;;		_TransmitCMD_USART
  2721 ;;		_TransmitDAT_USART
  2722 ;;		_Interrups
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726     169B                     _print_string:	
  2727                           ;psect for function _print_string
  2728                           
  2729     169B                     i1l2474:	
  2730                           ;incstack = 0
  2731                           ; Regs used in _print_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2732                           
  2733                           
  2734                           ;LIB16F_USART.c: 54:     while(*str != '\0'){
  2735     169B  2EB0               	goto	i1l2480
  2736     169C                     i1l2476:
  2737                           
  2738                           ;LIB16F_USART.c: 55:         WriteByte_USART(*str);
  2739     169C  0872               	movf	print_string@str+1,w
  2740     169D  00FF               	movwf	btemp+1
  2741     169E  0871               	movf	print_string@str,w
  2742     169F  0084               	movwf	4
  2743     16A0  160A  118A  2000  160A  118A  	fcall	stringtab
  2744     16A5  120A  158A  2001  160A  118A  	fcall	_WriteByte_USART
  2745     16AA                     i1l2478:
  2746                           
  2747                           ;LIB16F_USART.c: 56:         str++;
  2748     16AA  3001               	movlw	1
  2749     16AB  07F1               	addwf	print_string@str,f
  2750     16AC  1803               	skipnc
  2751     16AD  0AF2               	incf	print_string@str+1,f
  2752     16AE  3000               	movlw	0
  2753     16AF  07F2               	addwf	print_string@str+1,f
  2754     16B0                     i1l2480:
  2755                           
  2756                           ;LIB16F_USART.c: 54:     while(*str != '\0'){
  2757     16B0  0872               	movf	print_string@str+1,w
  2758     16B1  1283               	bcf	3,5	;RP0=0, select bank0
  2759     16B2  1303               	bcf	3,6	;RP1=0, select bank0
  2760     16B3  00FF               	movwf	btemp+1
  2761     16B4  0871               	movf	print_string@str,w
  2762     16B5  0084               	movwf	4
  2763     16B6  160A  118A  2000  160A  118A  	fcall	stringtab
  2764     16BB  3A00               	xorlw	0
  2765     16BC  1D03               	skipz
  2766     16BD  2EBF               	goto	u107_21
  2767     16BE  2EC0               	goto	u107_20
  2768     16BF                     u107_21:
  2769     16BF  2E9C               	goto	i1l2476
  2770     16C0                     u107_20:
  2771     16C0                     i1l301:
  2772     16C0  0008               	return
  2773     16C1                     __end_of_print_string:
  2774                           
  2775                           	psect	text12
  2776     0801                     __ptext12:	
  2777 ;; *************** function _WriteByte_USART *****************
  2778 ;; Defined at:
  2779 ;;		line 44 in file "LIB16F_USART.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  byte            1    wreg     unsigned char 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  byte            1    0[COMMON] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         1       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0
  2796 ;;      Totals:         1       0       0       0       0
  2797 ;;Total ram usage:        1 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_print_string
  2803 ;;		_TransmitCMD_USART
  2804 ;;		_TransmitDAT_USART
  2805 ;;		_print_value
  2806 ;;		_Interrups
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810     0801                     _WriteByte_USART:	
  2811                           ;psect for function _WriteByte_USART
  2812                           
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in _WriteByte_USART: [wreg]
  2816                           ;WriteByte_USART@byte stored from wreg
  2817     0801  00F0               	movwf	WriteByte_USART@byte
  2818     0802                     i1l2356:
  2819                           
  2820                           ;LIB16F_USART.c: 46:     TXREG = byte;
  2821     0802  0870               	movf	WriteByte_USART@byte,w
  2822     0803  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0804  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0805  0099               	movwf	25	;volatile
  2825     0806                     i1l2358:
  2826                           
  2827                           ;LIB16F_USART.c: 47:     __nop();
  2828     0806  0000               	nop
  2829     0807                     i1l292:	
  2830                           ;LIB16F_USART.c: 48:     while(!PIR1bits.TXIF);
  2831                           
  2832     0807  1283               	bcf	3,5	;RP0=0, select bank0
  2833     0808  1303               	bcf	3,6	;RP1=0, select bank0
  2834     0809  1E0C               	btfss	12,4	;volatile
  2835     080A  280C               	goto	u85_21
  2836     080B  280D               	goto	u85_20
  2837     080C                     u85_21:
  2838     080C  2807               	goto	i1l292
  2839     080D                     u85_20:
  2840     080D                     i1l295:
  2841     080D  0008               	return
  2842     080E                     __end_of_WriteByte_USART:
  2843                           
  2844                           	psect	text13
  2845     1763                     __ptext13:	
  2846 ;; *************** function _ResetCS5532 *****************
  2847 ;; Defined at:
  2848 ;;		line 39 in file "LIB16F_SPI.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  conta           1    4[COMMON] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      unsigned char 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2862 ;;      Params:         0       0       0       0       0
  2863 ;;      Locals:         1       0       0       0       0
  2864 ;;      Temps:          2       0       0       0       0
  2865 ;;      Totals:         3       0       0       0       0
  2866 ;;Total ram usage:        3 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 2
  2869 ;; This function calls:
  2870 ;;		_ReadRegister_4bytesCS5532
  2871 ;;		_TransferByte_SPI
  2872 ;;		_WriteRegister_4bytesCS5532
  2873 ;; This function is called by:
  2874 ;;		_Interrups
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878     1763                     _ResetCS5532:	
  2879                           ;psect for function _ResetCS5532
  2880                           
  2881     1763                     i1l2694:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _ResetCS5532: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2884                           
  2885                           
  2886                           ;LIB16F_SPI.c: 40:     unsigned char conta;;LIB16F_SPI.c: 43:     for(conta=0;conta<15;c
      +                          onta++){
  2887     1763  01F4               	clrf	ResetCS5532@conta
  2888     1764                     i1l2700:
  2889                           
  2890                           ;LIB16F_SPI.c: 44:         TransferByte_SPI(0xFF);
  2891     1764  30FF               	movlw	255
  2892     1765  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  2893     176A                     i1l2702:
  2894                           
  2895                           ;LIB16F_SPI.c: 45:     }
  2896     176A  3001               	movlw	1
  2897     176B  00FF               	movwf	btemp+1
  2898     176C  087F               	movf	btemp+1,w
  2899     176D  07F4               	addwf	ResetCS5532@conta,f
  2900     176E                     i1l2704:
  2901     176E  300F               	movlw	15
  2902     176F  0274               	subwf	ResetCS5532@conta,w
  2903     1770  1C03               	skipc
  2904     1771  2F73               	goto	u131_21
  2905     1772  2F74               	goto	u131_20
  2906     1773                     u131_21:
  2907     1773  2F64               	goto	i1l2700
  2908     1774                     u131_20:
  2909     1774                     i1l2706:
  2910                           
  2911                           ;LIB16F_SPI.c: 46:     TransferByte_SPI(0xFE);
  2912     1774  30FE               	movlw	254
  2913     1775  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  2914     177A                     i1l2708:
  2915                           
  2916                           ;LIB16F_SPI.c: 47:     _delay((unsigned long)((2)*(9830400UL/4000.0)));
  2917     177A  3007               	movlw	7
  2918     177B  00F3               	movwf	??_ResetCS5532+1
  2919     177C  3060               	movlw	96
  2920     177D  00F2               	movwf	??_ResetCS5532
  2921     177E                     u184_27:
  2922     177E  0BF2               	decfsz	??_ResetCS5532,f
  2923     177F  2F7E               	goto	u184_27
  2924     1780  0BF3               	decfsz	??_ResetCS5532+1,f
  2925     1781  2F7E               	goto	u184_27
  2926     1782  2F83               	nop2
  2927     1783                     i1l2710:
  2928                           
  2929                           ;LIB16F_SPI.c: 49:     ReadRegister_4bytesCS5532(0x0B);
  2930     1783  300B               	movlw	11
  2931     1784  120A  158A  200E  160A  118A  	fcall	_ReadRegister_4bytesCS5532
  2932     1789                     i1l2712:
  2933                           
  2934                           ;LIB16F_SPI.c: 50:     BufferSPI[0] |= 0x20;
  2935     1789  1283               	bcf	3,5	;RP0=0, select bank0
  2936     178A  1303               	bcf	3,6	;RP1=0, select bank0
  2937     178B  16C8               	bsf	_BufferSPI,5
  2938     178C                     i1l2714:
  2939                           
  2940                           ;LIB16F_SPI.c: 51:     WriteRegister_4bytesCS5532(0x03);
  2941     178C  3003               	movlw	3
  2942     178D  160A  118A  26C1  160A  118A  	fcall	_WriteRegister_4bytesCS5532
  2943     1792                     i1l2716:
  2944                           
  2945                           ;LIB16F_SPI.c: 52:     _delay((unsigned long)((25)*(9830400UL/4000000.0)));
  2946     1792  3014               	movlw	20
  2947     1793  00F2               	movwf	??_ResetCS5532
  2948     1794                     u185_27:
  2949     1794  0BF2               	decfsz	??_ResetCS5532,f
  2950     1795  2F94               	goto	u185_27
  2951     1796                     i1l2718:
  2952                           
  2953                           ;LIB16F_SPI.c: 53:     BufferSPI[0] &= 0xDF;
  2954     1796  30DF               	movlw	223
  2955     1797  00FF               	movwf	btemp+1
  2956     1798  087F               	movf	btemp+1,w
  2957     1799  1283               	bcf	3,5	;RP0=0, select bank0
  2958     179A  1303               	bcf	3,6	;RP1=0, select bank0
  2959     179B  05C8               	andwf	_BufferSPI,f
  2960     179C                     i1l2720:
  2961                           
  2962                           ;LIB16F_SPI.c: 54:     WriteRegister_4bytesCS5532(0x03);
  2963     179C  3003               	movlw	3
  2964     179D  160A  118A  26C1  160A  118A  	fcall	_WriteRegister_4bytesCS5532
  2965     17A2                     i1l2722:
  2966                           
  2967                           ;LIB16F_SPI.c: 55:     _delay((unsigned long)((25)*(9830400UL/4000000.0)));
  2968     17A2  3014               	movlw	20
  2969     17A3  00F2               	movwf	??_ResetCS5532
  2970     17A4                     u186_27:
  2971     17A4  0BF2               	decfsz	??_ResetCS5532,f
  2972     17A5  2FA4               	goto	u186_27
  2973     17A6                     i1l2724:
  2974                           
  2975                           ;LIB16F_SPI.c: 56:     ReadRegister_4bytesCS5532(0x0B);
  2976     17A6  300B               	movlw	11
  2977     17A7  120A  158A  200E  160A  118A  	fcall	_ReadRegister_4bytesCS5532
  2978     17AC                     i1l2726:
  2979                           
  2980                           ;LIB16F_SPI.c: 57:     return BufferSPI[0];
  2981     17AC  1283               	bcf	3,5	;RP0=0, select bank0
  2982     17AD  1303               	bcf	3,6	;RP1=0, select bank0
  2983     17AE  0848               	movf	_BufferSPI,w
  2984     17AF                     i1l189:
  2985     17AF  0008               	return
  2986     17B0                     __end_of_ResetCS5532:
  2987                           
  2988                           	psect	text14
  2989     08EB                     __ptext14:	
  2990 ;; *************** function _ReceiveCMD_USART *****************
  2991 ;; Defined at:
  2992 ;;		line 60 in file "LIB16F_USART.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  data_byte       1    1[COMMON] unsigned char 
  2997 ;;  conta_byte      1    0[COMMON] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      unsigned char 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         0       0       0       0       0
  3008 ;;      Locals:         2       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0
  3010 ;;      Totals:         2       0       0       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 1
  3014 ;; This function calls:
  3015 ;;		_ReadByte_USART
  3016 ;; This function is called by:
  3017 ;;		_Interrups
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021     08EB                     _ReceiveCMD_USART:	
  3022                           ;psect for function _ReceiveCMD_USART
  3023                           
  3024     08EB                     i1l2764:	
  3025                           ;incstack = 0
  3026                           ; Regs used in _ReceiveCMD_USART: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3027                           
  3028                           
  3029                           ;LIB16F_USART.c: 61:     unsigned char conta_byte;;LIB16F_USART.c: 62:     unsigned char
      +                           data_byte;;LIB16F_USART.c: 64:     for(conta_byte=0; conta_byte<10; conta_byte++){
  3030     08EB  01F0               	clrf	ReceiveCMD_USART@conta_byte
  3031     08EC                     i1l2770:
  3032                           
  3033                           ;LIB16F_USART.c: 65:         data_byte = ReadByte_USART();
  3034     08EC  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3035     08F1  00F1               	movwf	ReceiveCMD_USART@data_byte
  3036     08F2                     i1l2772:
  3037                           
  3038                           ;LIB16F_USART.c: 66:         if(data_byte == 'J'){
  3039     08F2  304A               	movlw	74
  3040     08F3  0671               	xorwf	ReceiveCMD_USART@data_byte,w
  3041     08F4  1D03               	btfss	3,2
  3042     08F5  28F7               	goto	u132_21
  3043     08F6  28F8               	goto	u132_20
  3044     08F7                     u132_21:
  3045     08F7  28F9               	goto	i1l2776
  3046     08F8                     u132_20:
  3047     08F8  2903               	goto	i1l2780
  3048     08F9                     i1l2776:
  3049                           
  3050                           ;LIB16F_USART.c: 69:     }
  3051     08F9  3001               	movlw	1
  3052     08FA  00FF               	movwf	btemp+1
  3053     08FB  087F               	movf	btemp+1,w
  3054     08FC  07F0               	addwf	ReceiveCMD_USART@conta_byte,f
  3055     08FD                     i1l2778:
  3056     08FD  300A               	movlw	10
  3057     08FE  0270               	subwf	ReceiveCMD_USART@conta_byte,w
  3058     08FF  1C03               	skipc
  3059     0900  2902               	goto	u133_21
  3060     0901  2903               	goto	u133_20
  3061     0902                     u133_21:
  3062     0902  28EC               	goto	i1l2770
  3063     0903                     u133_20:
  3064     0903                     i1l2780:
  3065                           
  3066                           ;LIB16F_USART.c: 70:     if(conta_byte < 10){
  3067     0903  300A               	movlw	10
  3068     0904  0270               	subwf	ReceiveCMD_USART@conta_byte,w
  3069     0905  1803               	skipnc
  3070     0906  2908               	goto	u134_21
  3071     0907  2909               	goto	u134_20
  3072     0908                     u134_21:
  3073     0908  2951               	goto	i1l307
  3074     0909                     u134_20:
  3075     0909                     i1l2782:
  3076                           
  3077                           ;LIB16F_USART.c: 71:         data_byte = ReadByte_USART();
  3078     0909  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3079     090E  00F1               	movwf	ReceiveCMD_USART@data_byte
  3080     090F                     i1l2784:
  3081                           
  3082                           ;LIB16F_USART.c: 72:         if(data_byte == 'R'){
  3083     090F  3052               	movlw	82
  3084     0910  0671               	xorwf	ReceiveCMD_USART@data_byte,w
  3085     0911  1D03               	btfss	3,2
  3086     0912  2914               	goto	u135_21
  3087     0913  2915               	goto	u135_20
  3088     0914                     u135_21:
  3089     0914  2951               	goto	i1l307
  3090     0915                     u135_20:
  3091     0915                     i1l2786:
  3092                           
  3093                           ;LIB16F_USART.c: 73:             data_byte = ReadByte_USART();
  3094     0915  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3095     091A  00F1               	movwf	ReceiveCMD_USART@data_byte
  3096     091B                     i1l2788:
  3097                           
  3098                           ;LIB16F_USART.c: 74:             if(data_byte == 'O'){
  3099     091B  304F               	movlw	79
  3100     091C  0671               	xorwf	ReceiveCMD_USART@data_byte,w
  3101     091D  1D03               	btfss	3,2
  3102     091E  2920               	goto	u136_21
  3103     091F  2921               	goto	u136_20
  3104     0920                     u136_21:
  3105     0920  2951               	goto	i1l307
  3106     0921                     u136_20:
  3107     0921                     i1l2790:
  3108                           
  3109                           ;LIB16F_USART.c: 75:                 data_byte = ReadByte_USART();
  3110     0921  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3111     0926  00F1               	movwf	ReceiveCMD_USART@data_byte
  3112     0927                     i1l2792:
  3113                           
  3114                           ;LIB16F_USART.c: 76:                 if(data_byte == 'C'){
  3115     0927  3043               	movlw	67
  3116     0928  0671               	xorwf	ReceiveCMD_USART@data_byte,w
  3117     0929  1D03               	btfss	3,2
  3118     092A  292C               	goto	u137_21
  3119     092B  292D               	goto	u137_20
  3120     092C                     u137_21:
  3121     092C  2951               	goto	i1l307
  3122     092D                     u137_20:
  3123     092D                     i1l2794:
  3124                           
  3125                           ;LIB16F_USART.c: 77:                     data_byte = ReadByte_USART();
  3126     092D  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3127     0932  00F1               	movwf	ReceiveCMD_USART@data_byte
  3128                           
  3129                           ;LIB16F_USART.c: 78:                     data_byte = ReadByte_USART();
  3130     0933  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3131     0938  00F1               	movwf	ReceiveCMD_USART@data_byte
  3132                           
  3133                           ;LIB16F_USART.c: 79:                     BufferDAT[12] = ReadByte_USART();
  3134     0939  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3135     093E  1683               	bsf	3,5	;RP0=1, select bank1
  3136     093F  1303               	bcf	3,6	;RP1=0, select bank1
  3137     0940  00B4               	movwf	(_BufferDAT^(0+128)+12)
  3138                           
  3139                           ;LIB16F_USART.c: 80:                     data_byte = ReadByte_USART();
  3140     0941  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3141     0946  00F1               	movwf	ReceiveCMD_USART@data_byte
  3142                           
  3143                           ;LIB16F_USART.c: 81:                     data_byte = ReadByte_USART();
  3144     0947  160A  118A  2621  120A  158A  	fcall	_ReadByte_USART
  3145     094C  00F1               	movwf	ReceiveCMD_USART@data_byte
  3146     094D                     i1l2796:
  3147                           
  3148                           ;LIB16F_USART.c: 82:                     return BufferDAT[12];
  3149     094D  1683               	bsf	3,5	;RP0=1, select bank1
  3150     094E  1303               	bcf	3,6	;RP1=0, select bank1
  3151     094F  0834               	movf	(_BufferDAT^(0+128)+12),w
  3152     0950  2955               	goto	i1l311
  3153     0951                     i1l307:	
  3154                           ;LIB16F_USART.c: 86:     }
  3155                           
  3156                           
  3157                           ;LIB16F_USART.c: 87:     RCSTAbits.CREN = 0;
  3158     0951  1283               	bcf	3,5	;RP0=0, select bank0
  3159     0952  1303               	bcf	3,6	;RP1=0, select bank0
  3160     0953  1218               	bcf	24,4	;volatile
  3161     0954                     i1l2800:
  3162                           
  3163                           ;LIB16F_USART.c: 88:     return 'X';
  3164     0954  3058               	movlw	88
  3165     0955                     i1l311:
  3166     0955  0008               	return
  3167     0956                     __end_of_ReceiveCMD_USART:
  3168                           
  3169                           	psect	text15
  3170     1621                     __ptext15:	
  3171 ;; *************** function _ReadByte_USART *****************
  3172 ;; Defined at:
  3173 ;;		line 33 in file "LIB16F_USART.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      unsigned char 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0
  3190 ;;      Totals:         0       0       0       0       0
  3191 ;;Total ram usage:        0 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_ReceiveCMD_USART
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200     1621                     _ReadByte_USART:	
  3201                           ;psect for function _ReadByte_USART
  3202                           
  3203     1621                     i1l2464:	
  3204                           ;incstack = 0
  3205                           ; Regs used in _ReadByte_USART: [wreg+status,2]
  3206                           
  3207                           
  3208                           ;LIB16F_USART.c: 35:     TMR2 = 0x00;
  3209     1621  1283               	bcf	3,5	;RP0=0, select bank0
  3210     1622  1303               	bcf	3,6	;RP1=0, select bank0
  3211     1623  0191               	clrf	17	;volatile
  3212     1624                     i1l2466:
  3213                           
  3214                           ;LIB16F_USART.c: 36:     T2CONbits.TMR2ON = 1;
  3215     1624  1512               	bsf	18,2	;volatile
  3216     1625                     i1l284:	
  3217                           ;LIB16F_USART.c: 37:     while((!PIR1bits.RCIF) && (!PIR1bits.TMR2IF));
  3218                           
  3219     1625  1A8C               	btfsc	12,5	;volatile
  3220     1626  2E28               	goto	u105_21
  3221     1627  2E29               	goto	u105_20
  3222     1628                     u105_21:
  3223     1628  2E2D               	goto	i1l288
  3224     1629                     u105_20:
  3225     1629                     i1l2468:
  3226     1629  1C8C               	btfss	12,1	;volatile
  3227     162A  2E2C               	goto	u106_21
  3228     162B  2E2D               	goto	u106_20
  3229     162C                     u106_21:
  3230     162C  2E25               	goto	i1l284
  3231     162D                     u106_20:
  3232     162D                     i1l288:
  3233                           
  3234                           ;LIB16F_USART.c: 39:     T2CONbits.TMR2ON = 0;
  3235     162D  1112               	bcf	18,2	;volatile
  3236                           
  3237                           ;LIB16F_USART.c: 40:     PIR1bits.TMR2IF = 0;
  3238     162E  108C               	bcf	12,1	;volatile
  3239     162F                     i1l2470:
  3240                           
  3241                           ;LIB16F_USART.c: 41:     return RCREG;
  3242     162F  081A               	movf	26,w	;volatile
  3243     1630                     i1l289:
  3244     1630  0008               	return
  3245     1631                     __end_of_ReadByte_USART:
  3246                           
  3247                           	psect	text16
  3248     167D                     __ptext16:	
  3249 ;; *************** function _InitCS5532 *****************
  3250 ;; Defined at:
  3251 ;;		line 60 in file "LIB16F_SPI.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0, pclath, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3265 ;;      Params:         0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0
  3268 ;;      Totals:         0       0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 2
  3272 ;; This function calls:
  3273 ;;		_ReadRegister_4bytesCS5532
  3274 ;;		_WriteRegister_4bytesCS5532
  3275 ;; This function is called by:
  3276 ;;		_Interrups
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280     167D                     _InitCS5532:	
  3281                           ;psect for function _InitCS5532
  3282                           
  3283     167D                     i1l2730:	
  3284                           ;incstack = 0
  3285                           ; Regs used in _InitCS5532: [wreg+status,2+status,0+pclath+cstack]
  3286                           
  3287                           
  3288                           ;LIB16F_SPI.c: 63:     ReadRegister_4bytesCS5532(0x0B);
  3289     167D  300B               	movlw	11
  3290     167E  120A  158A  200E  160A  118A  	fcall	_ReadRegister_4bytesCS5532
  3291     1683                     i1l2732:
  3292                           
  3293                           ;LIB16F_SPI.c: 64:     BufferSPI[0] |= 0x02;
  3294     1683  1283               	bcf	3,5	;RP0=0, select bank0
  3295     1684  1303               	bcf	3,6	;RP1=0, select bank0
  3296     1685  14C8               	bsf	_BufferSPI,1
  3297                           
  3298                           ;LIB16F_SPI.c: 65:     WriteRegister_4bytesCS5532(0x03);
  3299     1686  3003               	movlw	3
  3300     1687  160A  118A  26C1  160A  118A  	fcall	_WriteRegister_4bytesCS5532
  3301     168C                     i1l2734:
  3302                           
  3303                           ;LIB16F_SPI.c: 67:     BufferSPI[0] = 0x05;
  3304     168C  3005               	movlw	5
  3305     168D  1283               	bcf	3,5	;RP0=0, select bank0
  3306     168E  1303               	bcf	3,6	;RP1=0, select bank0
  3307     168F  00C8               	movwf	_BufferSPI
  3308     1690                     i1l2736:
  3309                           
  3310                           ;LIB16F_SPI.c: 68:     BufferSPI[1] = 0x00;
  3311     1690  01C9               	clrf	_BufferSPI+1
  3312     1691                     i1l2738:
  3313                           
  3314                           ;LIB16F_SPI.c: 69:     BufferSPI[2] = 0x05;
  3315     1691  3005               	movlw	5
  3316     1692  00CA               	movwf	_BufferSPI+2
  3317     1693                     i1l2740:
  3318                           
  3319                           ;LIB16F_SPI.c: 70:     BufferSPI[3] = 0x00;
  3320     1693  01CB               	clrf	_BufferSPI+3
  3321                           
  3322                           ;LIB16F_SPI.c: 71:     WriteRegister_4bytesCS5532(0x05);
  3323     1694  3005               	movlw	5
  3324     1695  160A  118A  26C1  160A  118A  	fcall	_WriteRegister_4bytesCS5532
  3325     169A                     i1l192:
  3326     169A  0008               	return
  3327     169B                     __end_of_InitCS5532:
  3328                           
  3329                           	psect	text17
  3330     16C1                     __ptext17:	
  3331 ;; *************** function _WriteRegister_4bytesCS5532 *****************
  3332 ;; Defined at:
  3333 ;;		line 85 in file "LIB16F_SPI.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  command         1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  command         1    1[COMMON] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         1       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         1       0       0       0       0
  3351 ;;Total ram usage:        1 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 1
  3354 ;; This function calls:
  3355 ;;		_TransferByte_SPI
  3356 ;; This function is called by:
  3357 ;;		_ResetCS5532
  3358 ;;		_InitCS5532
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362     16C1                     _WriteRegister_4bytesCS5532:	
  3363                           ;psect for function _WriteRegister_4bytesCS5532
  3364                           
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _WriteRegister_4bytesCS5532: [wreg+status,2+status,0+pclath+cstack]
  3368                           ;WriteRegister_4bytesCS5532@command stored from wreg
  3369     16C1  00F1               	movwf	WriteRegister_4bytesCS5532@command
  3370     16C2                     i1l2444:
  3371                           
  3372                           ;LIB16F_SPI.c: 87:     TransferByte_SPI(command);
  3373     16C2  0871               	movf	WriteRegister_4bytesCS5532@command,w
  3374     16C3  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  3375                           
  3376                           ;LIB16F_SPI.c: 88:     TransferByte_SPI(BufferSPI[0]);
  3377     16C8  1283               	bcf	3,5	;RP0=0, select bank0
  3378     16C9  1303               	bcf	3,6	;RP1=0, select bank0
  3379     16CA  0848               	movf	_BufferSPI,w
  3380     16CB  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  3381                           
  3382                           ;LIB16F_SPI.c: 89:     TransferByte_SPI(BufferSPI[1]);
  3383     16D0  1283               	bcf	3,5	;RP0=0, select bank0
  3384     16D1  1303               	bcf	3,6	;RP1=0, select bank0
  3385     16D2  0849               	movf	_BufferSPI+1,w
  3386     16D3  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  3387                           
  3388                           ;LIB16F_SPI.c: 90:     TransferByte_SPI(BufferSPI[2]);
  3389     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  3390     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  3391     16DA  084A               	movf	_BufferSPI+2,w
  3392     16DB  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  3393                           
  3394                           ;LIB16F_SPI.c: 91:     TransferByte_SPI(BufferSPI[3]);
  3395     16E0  1283               	bcf	3,5	;RP0=0, select bank0
  3396     16E1  1303               	bcf	3,6	;RP1=0, select bank0
  3397     16E2  084B               	movf	_BufferSPI+3,w
  3398     16E3  160A  118A  2611  160A  118A  	fcall	_TransferByte_SPI
  3399     16E8                     i1l198:
  3400     16E8  0008               	return
  3401     16E9                     __end_of_WriteRegister_4bytesCS5532:
  3402                           
  3403                           	psect	text18
  3404     0956                     __ptext18:	
  3405 ;; *************** function _GPS_TIMEDATE *****************
  3406 ;; Defined at:
  3407 ;;		line 176 in file "LIB16F_GPS38400.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  conta           1    3[COMMON] unsigned char 
  3412 ;;  LimitConta      1    2[COMMON] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         2       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0
  3425 ;;      Totals:         2       0       0       0       0
  3426 ;;Total ram usage:        2 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 1
  3429 ;; This function calls:
  3430 ;;		_ReadByteSW_USART
  3431 ;; This function is called by:
  3432 ;;		_Interrups
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436     0956                     _GPS_TIMEDATE:	
  3437                           ;psect for function _GPS_TIMEDATE
  3438                           
  3439     0956                     i1l2628:	
  3440                           ;incstack = 0
  3441                           ; Regs used in _GPS_TIMEDATE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3442                           
  3443                           
  3444                           ;LIB16F_GPS38400.c: 181:     unsigned char LimitConta = 0;
  3445     0956  01F2               	clrf	GPS_TIMEDATE@LimitConta
  3446                           
  3447                           ;LIB16F_GPS38400.c: 185:     while(LimitConta < 150){
  3448     0957  29BB               	goto	i1l2682
  3449     0958                     i1l2630:
  3450                           
  3451                           ;LIB16F_GPS38400.c: 186:         ReadByteSW_USART();
  3452     0958  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3453     095D                     i1l2632:
  3454                           
  3455                           ;LIB16F_GPS38400.c: 187:         if(RxBuffer == 'C'){
  3456     095D  3043               	movlw	67
  3457     095E  1283               	bcf	3,5	;RP0=0, select bank0
  3458     095F  1303               	bcf	3,6	;RP1=0, select bank0
  3459     0960  064F               	xorwf	_RxBuffer,w
  3460     0961  1D03               	btfss	3,2
  3461     0962  2964               	goto	u125_21
  3462     0963  2965               	goto	u125_20
  3463     0964                     u125_21:
  3464     0964  29B7               	goto	i1l2680
  3465     0965                     u125_20:
  3466     0965                     i1l2634:
  3467                           
  3468                           ;LIB16F_GPS38400.c: 189:             ReadByteSW_USART();
  3469     0965  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3470     096A                     i1l2636:
  3471                           
  3472                           ;LIB16F_GPS38400.c: 191:             for(conta=0; conta<6; conta++){
  3473     096A  01F3               	clrf	GPS_TIMEDATE@conta
  3474     096B                     i1l2642:
  3475                           
  3476                           ;LIB16F_GPS38400.c: 192:                 ReadByteSW_USART();
  3477     096B  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3478     0970                     i1l2644:
  3479                           
  3480                           ;LIB16F_GPS38400.c: 193:                 BufferDAT[conta] = RxBuffer;
  3481     0970  0873               	movf	GPS_TIMEDATE@conta,w
  3482     0971  3EA8               	addlw	(low (_BufferDAT| 0))& (0+255)
  3483     0972  0084               	movwf	4
  3484     0973  1283               	bcf	3,5	;RP0=0, select bank0
  3485     0974  1303               	bcf	3,6	;RP1=0, select bank0
  3486     0975  084F               	movf	_RxBuffer,w
  3487     0976  1383               	bcf	3,7	;select IRP bank1
  3488     0977  0080               	movwf	0
  3489     0978                     i1l2646:
  3490                           
  3491                           ;LIB16F_GPS38400.c: 194:             }
  3492     0978  3001               	movlw	1
  3493     0979  00FF               	movwf	btemp+1
  3494     097A  087F               	movf	btemp+1,w
  3495     097B  07F3               	addwf	GPS_TIMEDATE@conta,f
  3496     097C                     i1l2648:
  3497     097C  3006               	movlw	6
  3498     097D  0273               	subwf	GPS_TIMEDATE@conta,w
  3499     097E  1C03               	skipc
  3500     097F  2981               	goto	u126_21
  3501     0980  2982               	goto	u126_20
  3502     0981                     u126_21:
  3503     0981  296B               	goto	i1l2642
  3504     0982                     u126_20:
  3505     0982                     i1l2650:
  3506                           
  3507                           ;LIB16F_GPS38400.c: 196:             conta = 0;
  3508     0982  01F3               	clrf	GPS_TIMEDATE@conta
  3509                           
  3510                           ;LIB16F_GPS38400.c: 197:             while(conta<8){
  3511     0983  2995               	goto	i1l2658
  3512     0984                     i1l2652:
  3513                           
  3514                           ;LIB16F_GPS38400.c: 198:                 ReadByteSW_USART();
  3515     0984  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3516     0989                     i1l2654:
  3517                           
  3518                           ;LIB16F_GPS38400.c: 199:                 if(RxBuffer == ','){
  3519     0989  302C               	movlw	44
  3520     098A  1283               	bcf	3,5	;RP0=0, select bank0
  3521     098B  1303               	bcf	3,6	;RP1=0, select bank0
  3522     098C  064F               	xorwf	_RxBuffer,w
  3523     098D  1D03               	btfss	3,2
  3524     098E  2990               	goto	u127_21
  3525     098F  2991               	goto	u127_20
  3526     0990                     u127_21:
  3527     0990  2995               	goto	i1l2658
  3528     0991                     u127_20:
  3529     0991                     i1l2656:
  3530                           
  3531                           ;LIB16F_GPS38400.c: 200:                     conta++;
  3532     0991  3001               	movlw	1
  3533     0992  00FF               	movwf	btemp+1
  3534     0993  087F               	movf	btemp+1,w
  3535     0994  07F3               	addwf	GPS_TIMEDATE@conta,f
  3536     0995                     i1l2658:
  3537                           
  3538                           ;LIB16F_GPS38400.c: 197:             while(conta<8){
  3539     0995  3008               	movlw	8
  3540     0996  0273               	subwf	GPS_TIMEDATE@conta,w
  3541     0997  1C03               	skipc
  3542     0998  299A               	goto	u128_21
  3543     0999  299B               	goto	u128_20
  3544     099A                     u128_21:
  3545     099A  2984               	goto	i1l2652
  3546     099B                     u128_20:
  3547     099B                     i1l2660:
  3548                           
  3549                           ;LIB16F_GPS38400.c: 204:             for(conta=0; conta<6; conta++){
  3550     099B  01F3               	clrf	GPS_TIMEDATE@conta
  3551     099C                     i1l2666:
  3552                           
  3553                           ;LIB16F_GPS38400.c: 205:                 ReadByteSW_USART();
  3554     099C  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3555     09A1                     i1l2668:
  3556                           
  3557                           ;LIB16F_GPS38400.c: 206:                 BufferDAT[conta + 6] = RxBuffer;
  3558     09A1  0873               	movf	GPS_TIMEDATE@conta,w
  3559     09A2  3EAE               	addlw	(low ((_BufferDAT| 0+6)))& (0+255)
  3560     09A3  0084               	movwf	4
  3561     09A4  1283               	bcf	3,5	;RP0=0, select bank0
  3562     09A5  1303               	bcf	3,6	;RP1=0, select bank0
  3563     09A6  084F               	movf	_RxBuffer,w
  3564     09A7  1383               	bcf	3,7	;select IRP bank1
  3565     09A8  0080               	movwf	0
  3566     09A9                     i1l2670:
  3567                           
  3568                           ;LIB16F_GPS38400.c: 207:             }
  3569     09A9  3001               	movlw	1
  3570     09AA  00FF               	movwf	btemp+1
  3571     09AB  087F               	movf	btemp+1,w
  3572     09AC  07F3               	addwf	GPS_TIMEDATE@conta,f
  3573     09AD                     i1l2672:
  3574     09AD  3006               	movlw	6
  3575     09AE  0273               	subwf	GPS_TIMEDATE@conta,w
  3576     09AF  1C03               	skipc
  3577     09B0  29B2               	goto	u129_21
  3578     09B1  29B3               	goto	u129_20
  3579     09B2                     u129_21:
  3580     09B2  299C               	goto	i1l2666
  3581     09B3                     u129_20:
  3582     09B3                     i1l2674:
  3583                           
  3584                           ;LIB16F_GPS38400.c: 208:             BufferDAT[12] = '\0';
  3585     09B3  1683               	bsf	3,5	;RP0=1, select bank1
  3586     09B4  1303               	bcf	3,6	;RP1=0, select bank1
  3587     09B5  01B4               	clrf	(_BufferDAT^(0+128)+12)
  3588     09B6                     i1l2676:
  3589                           
  3590                           ;LIB16F_GPS38400.c: 210:             break;
  3591     09B6  29C1               	goto	i1l115
  3592     09B7                     i1l2680:
  3593                           
  3594                           ;LIB16F_GPS38400.c: 212:             LimitConta++;
  3595     09B7  3001               	movlw	1
  3596     09B8  00FF               	movwf	btemp+1
  3597     09B9  087F               	movf	btemp+1,w
  3598     09BA  07F2               	addwf	GPS_TIMEDATE@LimitConta,f
  3599     09BB                     i1l2682:
  3600                           
  3601                           ;LIB16F_GPS38400.c: 185:     while(LimitConta < 150){
  3602     09BB  3096               	movlw	150
  3603     09BC  0272               	subwf	GPS_TIMEDATE@LimitConta,w
  3604     09BD  1C03               	skipc
  3605     09BE  29C0               	goto	u130_21
  3606     09BF  29C1               	goto	u130_20
  3607     09C0                     u130_21:
  3608     09C0  2958               	goto	i1l2630
  3609     09C1                     u130_20:
  3610     09C1                     i1l115:
  3611     09C1  0008               	return
  3612     09C2                     __end_of_GPS_TIMEDATE:
  3613                           
  3614                           	psect	text19
  3615     09C2                     __ptext19:	
  3616 ;; *************** function _GPS_STATUS *****************
  3617 ;; Defined at:
  3618 ;;		line 47 in file "LIB16F_GPS38400.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  LimitConta      2    2[COMMON] unsigned short 
  3623 ;;  conta           1    4[COMMON] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         0       0       0       0       0
  3634 ;;      Locals:         3       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         3       0       0       0       0
  3637 ;;Total ram usage:        3 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 1
  3640 ;; This function calls:
  3641 ;;		_ReadByteSW_USART
  3642 ;; This function is called by:
  3643 ;;		_Interrups
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647     09C2                     _GPS_STATUS:	
  3648                           ;psect for function _GPS_STATUS
  3649                           
  3650     09C2                     i1l2482:	
  3651                           ;incstack = 0
  3652                           ; Regs used in _GPS_STATUS: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3653                           
  3654                           
  3655                           ;LIB16F_GPS38400.c: 54:     unsigned short LimitConta = 0;
  3656     09C2  01F2               	clrf	GPS_STATUS@LimitConta
  3657     09C3  01F3               	clrf	GPS_STATUS@LimitConta+1
  3658                           
  3659                           ;LIB16F_GPS38400.c: 57:     while(LimitConta < 4200){
  3660     09C4  2A40               	goto	i1l57
  3661     09C5                     i1l2484:
  3662                           
  3663                           ;LIB16F_GPS38400.c: 58:         ReadByteSW_USART();
  3664     09C5  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3665     09CA                     i1l2486:
  3666                           
  3667                           ;LIB16F_GPS38400.c: 59:         if(RxBuffer == 'C'){
  3668     09CA  3043               	movlw	67
  3669     09CB  1283               	bcf	3,5	;RP0=0, select bank0
  3670     09CC  1303               	bcf	3,6	;RP1=0, select bank0
  3671     09CD  064F               	xorwf	_RxBuffer,w
  3672     09CE  1D03               	btfss	3,2
  3673     09CF  29D1               	goto	u108_21
  3674     09D0  29D2               	goto	u108_20
  3675     09D1                     u108_21:
  3676     09D1  2A3A               	goto	i1l2538
  3677     09D2                     u108_20:
  3678     09D2                     i1l2488:
  3679                           
  3680                           ;LIB16F_GPS38400.c: 61:             ReadByteSW_USART();
  3681     09D2  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3682     09D7                     i1l2490:
  3683                           
  3684                           ;LIB16F_GPS38400.c: 63:             for(conta=0; conta<6; conta++){
  3685     09D7  01F4               	clrf	GPS_STATUS@conta
  3686     09D8                     i1l2496:
  3687                           
  3688                           ;LIB16F_GPS38400.c: 64:                 ReadByteSW_USART();
  3689     09D8  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3690     09DD                     i1l2498:
  3691                           
  3692                           ;LIB16F_GPS38400.c: 65:                 BufferDAT[conta] = RxBuffer;
  3693     09DD  0874               	movf	GPS_STATUS@conta,w
  3694     09DE  3EA8               	addlw	(low (_BufferDAT| 0))& (0+255)
  3695     09DF  0084               	movwf	4
  3696     09E0  1283               	bcf	3,5	;RP0=0, select bank0
  3697     09E1  1303               	bcf	3,6	;RP1=0, select bank0
  3698     09E2  084F               	movf	_RxBuffer,w
  3699     09E3  1383               	bcf	3,7	;select IRP bank1
  3700     09E4  0080               	movwf	0
  3701     09E5                     i1l2500:
  3702                           
  3703                           ;LIB16F_GPS38400.c: 66:             }
  3704     09E5  3001               	movlw	1
  3705     09E6  00FF               	movwf	btemp+1
  3706     09E7  087F               	movf	btemp+1,w
  3707     09E8  07F4               	addwf	GPS_STATUS@conta,f
  3708     09E9                     i1l2502:
  3709     09E9  3006               	movlw	6
  3710     09EA  0274               	subwf	GPS_STATUS@conta,w
  3711     09EB  1C03               	skipc
  3712     09EC  29EE               	goto	u109_21
  3713     09ED  29EF               	goto	u109_20
  3714     09EE                     u109_21:
  3715     09EE  29D8               	goto	i1l2496
  3716     09EF                     u109_20:
  3717     09EF                     i1l2504:
  3718                           
  3719                           ;LIB16F_GPS38400.c: 68:             ReadByteSW_USART();
  3720     09EF  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3721                           
  3722                           ;LIB16F_GPS38400.c: 70:             ReadByteSW_USART();
  3723     09F4  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3724     09F9                     i1l2506:
  3725                           
  3726                           ;LIB16F_GPS38400.c: 71:             if(RxBuffer == 'A'){
  3727     09F9  3041               	movlw	65
  3728     09FA  1283               	bcf	3,5	;RP0=0, select bank0
  3729     09FB  1303               	bcf	3,6	;RP1=0, select bank0
  3730     09FC  064F               	xorwf	_RxBuffer,w
  3731     09FD  1D03               	btfss	3,2
  3732     09FE  2A00               	goto	u110_21
  3733     09FF  2A01               	goto	u110_20
  3734     0A00                     u110_21:
  3735     0A00  2A40               	goto	i1l57
  3736     0A01                     u110_20:
  3737     0A01                     i1l2508:
  3738                           
  3739                           ;LIB16F_GPS38400.c: 73:                 conta = 0;
  3740     0A01  01F4               	clrf	GPS_STATUS@conta
  3741                           
  3742                           ;LIB16F_GPS38400.c: 74:                 while(conta<7){
  3743     0A02  2A14               	goto	i1l2516
  3744     0A03                     i1l2510:
  3745                           
  3746                           ;LIB16F_GPS38400.c: 75:                     ReadByteSW_USART();
  3747     0A03  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3748     0A08                     i1l2512:
  3749                           
  3750                           ;LIB16F_GPS38400.c: 76:                     if(RxBuffer == ','){
  3751     0A08  302C               	movlw	44
  3752     0A09  1283               	bcf	3,5	;RP0=0, select bank0
  3753     0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  3754     0A0B  064F               	xorwf	_RxBuffer,w
  3755     0A0C  1D03               	btfss	3,2
  3756     0A0D  2A0F               	goto	u111_21
  3757     0A0E  2A10               	goto	u111_20
  3758     0A0F                     u111_21:
  3759     0A0F  2A14               	goto	i1l2516
  3760     0A10                     u111_20:
  3761     0A10                     i1l2514:
  3762                           
  3763                           ;LIB16F_GPS38400.c: 77:                         conta++;
  3764     0A10  3001               	movlw	1
  3765     0A11  00FF               	movwf	btemp+1
  3766     0A12  087F               	movf	btemp+1,w
  3767     0A13  07F4               	addwf	GPS_STATUS@conta,f
  3768     0A14                     i1l2516:
  3769                           
  3770                           ;LIB16F_GPS38400.c: 74:                 while(conta<7){
  3771     0A14  3007               	movlw	7
  3772     0A15  0274               	subwf	GPS_STATUS@conta,w
  3773     0A16  1C03               	skipc
  3774     0A17  2A19               	goto	u112_21
  3775     0A18  2A1A               	goto	u112_20
  3776     0A19                     u112_21:
  3777     0A19  2A03               	goto	i1l2510
  3778     0A1A                     u112_20:
  3779     0A1A                     i1l2518:
  3780                           
  3781                           ;LIB16F_GPS38400.c: 81:                 for(conta=0; conta<6; conta++){
  3782     0A1A  01F4               	clrf	GPS_STATUS@conta
  3783     0A1B                     i1l2524:
  3784                           
  3785                           ;LIB16F_GPS38400.c: 82:                     ReadByteSW_USART();
  3786     0A1B  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3787     0A20                     i1l2526:
  3788                           
  3789                           ;LIB16F_GPS38400.c: 83:                     BufferDAT[conta + 6] = RxBuffer;
  3790     0A20  0874               	movf	GPS_STATUS@conta,w
  3791     0A21  3EAE               	addlw	(low ((_BufferDAT| 0+6)))& (0+255)
  3792     0A22  0084               	movwf	4
  3793     0A23  1283               	bcf	3,5	;RP0=0, select bank0
  3794     0A24  1303               	bcf	3,6	;RP1=0, select bank0
  3795     0A25  084F               	movf	_RxBuffer,w
  3796     0A26  1383               	bcf	3,7	;select IRP bank1
  3797     0A27  0080               	movwf	0
  3798     0A28                     i1l2528:
  3799                           
  3800                           ;LIB16F_GPS38400.c: 84:                 }
  3801     0A28  3001               	movlw	1
  3802     0A29  00FF               	movwf	btemp+1
  3803     0A2A  087F               	movf	btemp+1,w
  3804     0A2B  07F4               	addwf	GPS_STATUS@conta,f
  3805     0A2C                     i1l2530:
  3806     0A2C  3006               	movlw	6
  3807     0A2D  0274               	subwf	GPS_STATUS@conta,w
  3808     0A2E  1C03               	skipc
  3809     0A2F  2A31               	goto	u113_21
  3810     0A30  2A32               	goto	u113_20
  3811     0A31                     u113_21:
  3812     0A31  2A1B               	goto	i1l2524
  3813     0A32                     u113_20:
  3814     0A32                     i1l2532:
  3815                           
  3816                           ;LIB16F_GPS38400.c: 85:                 BufferDAT[12] = '\0';
  3817     0A32  1683               	bsf	3,5	;RP0=1, select bank1
  3818     0A33  1303               	bcf	3,6	;RP1=0, select bank1
  3819     0A34  01B4               	clrf	(_BufferDAT^(0+128)+12)
  3820     0A35                     i1l2534:
  3821                           
  3822                           ;LIB16F_GPS38400.c: 86:                 RxBuffer = 'A';
  3823     0A35  3041               	movlw	65
  3824     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  3825     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  3826     0A38  00CF               	movwf	_RxBuffer
  3827     0A39                     i1l2536:
  3828                           
  3829                           ;LIB16F_GPS38400.c: 88:                 break;
  3830     0A39  2A49               	goto	i1l71
  3831     0A3A                     i1l2538:
  3832                           
  3833                           ;LIB16F_GPS38400.c: 91:             LimitConta++;
  3834     0A3A  3001               	movlw	1
  3835     0A3B  07F2               	addwf	GPS_STATUS@LimitConta,f
  3836     0A3C  1803               	skipnc
  3837     0A3D  0AF3               	incf	GPS_STATUS@LimitConta+1,f
  3838     0A3E  3000               	movlw	0
  3839     0A3F  07F3               	addwf	GPS_STATUS@LimitConta+1,f
  3840     0A40                     i1l57:	
  3841                           ;LIB16F_GPS38400.c: 93:     }
  3842                           
  3843                           
  3844                           ;LIB16F_GPS38400.c: 57:     while(LimitConta < 4200){
  3845     0A40  3010               	movlw	16
  3846     0A41  0273               	subwf	GPS_STATUS@LimitConta+1,w
  3847     0A42  3068               	movlw	104
  3848     0A43  1903               	skipnz
  3849     0A44  0272               	subwf	GPS_STATUS@LimitConta,w
  3850     0A45  1C03               	skipc
  3851     0A46  2A48               	goto	u114_21
  3852     0A47  2A49               	goto	u114_20
  3853     0A48                     u114_21:
  3854     0A48  29C5               	goto	i1l2484
  3855     0A49                     u114_20:
  3856     0A49                     i1l71:
  3857     0A49  0008               	return
  3858     0A4A                     __end_of_GPS_STATUS:
  3859                           
  3860                           	psect	text20
  3861     083A                     __ptext20:	
  3862 ;; *************** function _GPS_LONGITUDE *****************
  3863 ;; Defined at:
  3864 ;;		line 138 in file "LIB16F_GPS38400.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  conta           1    5[COMMON] unsigned char 
  3869 ;;  LimitConta      1    4[COMMON] unsigned char 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       0       0       0       0
  3880 ;;      Locals:         2       0       0       0       0
  3881 ;;      Temps:          2       0       0       0       0
  3882 ;;      Totals:         4       0       0       0       0
  3883 ;;Total ram usage:        4 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 1
  3886 ;; This function calls:
  3887 ;;		_ReadByteSW_USART
  3888 ;; This function is called by:
  3889 ;;		_Interrups
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893     083A                     _GPS_LONGITUDE:	
  3894                           ;psect for function _GPS_LONGITUDE
  3895                           
  3896     083A                     i1l2584:	
  3897                           ;incstack = 0
  3898                           ; Regs used in _GPS_LONGITUDE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3899                           
  3900                           
  3901                           ;LIB16F_GPS38400.c: 143:     unsigned char LimitConta = 0;
  3902     083A  01F4               	clrf	GPS_LONGITUDE@LimitConta
  3903                           
  3904                           ;LIB16F_GPS38400.c: 147:     while(LimitConta < 150){
  3905     083B  2882               	goto	i1l2622
  3906     083C                     i1l2586:
  3907                           
  3908                           ;LIB16F_GPS38400.c: 148:         ReadByteSW_USART();
  3909     083C  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3910     0841                     i1l2588:
  3911                           
  3912                           ;LIB16F_GPS38400.c: 149:         if(RxBuffer == 'C'){
  3913     0841  3043               	movlw	67
  3914     0842  1283               	bcf	3,5	;RP0=0, select bank0
  3915     0843  1303               	bcf	3,6	;RP1=0, select bank0
  3916     0844  064F               	xorwf	_RxBuffer,w
  3917     0845  1D03               	btfss	3,2
  3918     0846  2848               	goto	u120_21
  3919     0847  2849               	goto	u120_20
  3920     0848                     u120_21:
  3921     0848  287E               	goto	i1l2620
  3922     0849                     u120_20:
  3923     0849                     i1l2590:
  3924                           
  3925                           ;LIB16F_GPS38400.c: 151:             conta = 0;
  3926     0849  01F5               	clrf	GPS_LONGITUDE@conta
  3927                           
  3928                           ;LIB16F_GPS38400.c: 152:             while(conta<5){
  3929     084A  285C               	goto	i1l2598
  3930     084B                     i1l2592:
  3931                           
  3932                           ;LIB16F_GPS38400.c: 153:                 ReadByteSW_USART();
  3933     084B  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3934     0850                     i1l2594:
  3935                           
  3936                           ;LIB16F_GPS38400.c: 154:                 if(RxBuffer == ','){
  3937     0850  302C               	movlw	44
  3938     0851  1283               	bcf	3,5	;RP0=0, select bank0
  3939     0852  1303               	bcf	3,6	;RP1=0, select bank0
  3940     0853  064F               	xorwf	_RxBuffer,w
  3941     0854  1D03               	btfss	3,2
  3942     0855  2857               	goto	u121_21
  3943     0856  2858               	goto	u121_20
  3944     0857                     u121_21:
  3945     0857  285C               	goto	i1l2598
  3946     0858                     u121_20:
  3947     0858                     i1l2596:
  3948                           
  3949                           ;LIB16F_GPS38400.c: 155:                     conta++;
  3950     0858  3001               	movlw	1
  3951     0859  00FF               	movwf	btemp+1
  3952     085A  087F               	movf	btemp+1,w
  3953     085B  07F5               	addwf	GPS_LONGITUDE@conta,f
  3954     085C                     i1l2598:
  3955                           
  3956                           ;LIB16F_GPS38400.c: 152:             while(conta<5){
  3957     085C  3005               	movlw	5
  3958     085D  0275               	subwf	GPS_LONGITUDE@conta,w
  3959     085E  1C03               	skipc
  3960     085F  2861               	goto	u122_21
  3961     0860  2862               	goto	u122_20
  3962     0861                     u122_21:
  3963     0861  284B               	goto	i1l2592
  3964     0862                     u122_20:
  3965     0862                     i1l2600:
  3966                           
  3967                           ;LIB16F_GPS38400.c: 159:             for(conta=0; conta<12; conta++){
  3968     0862  01F5               	clrf	GPS_LONGITUDE@conta
  3969     0863                     i1l2606:
  3970                           
  3971                           ;LIB16F_GPS38400.c: 160:                 ReadByteSW_USART();
  3972     0863  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  3973     0868                     i1l2608:
  3974                           
  3975                           ;LIB16F_GPS38400.c: 161:                 BufferDAT[conta] = RxBuffer;
  3976     0868  0875               	movf	GPS_LONGITUDE@conta,w
  3977     0869  3EA8               	addlw	(low (_BufferDAT| 0))& (0+255)
  3978     086A  0084               	movwf	4
  3979     086B  1283               	bcf	3,5	;RP0=0, select bank0
  3980     086C  1303               	bcf	3,6	;RP1=0, select bank0
  3981     086D  084F               	movf	_RxBuffer,w
  3982     086E  1383               	bcf	3,7	;select IRP bank1
  3983     086F  0080               	movwf	0
  3984     0870                     i1l2610:
  3985                           
  3986                           ;LIB16F_GPS38400.c: 162:             }
  3987     0870  3001               	movlw	1
  3988     0871  00FF               	movwf	btemp+1
  3989     0872  087F               	movf	btemp+1,w
  3990     0873  07F5               	addwf	GPS_LONGITUDE@conta,f
  3991     0874                     i1l2612:
  3992     0874  300C               	movlw	12
  3993     0875  0275               	subwf	GPS_LONGITUDE@conta,w
  3994     0876  1C03               	skipc
  3995     0877  2879               	goto	u123_21
  3996     0878  287A               	goto	u123_20
  3997     0879                     u123_21:
  3998     0879  2863               	goto	i1l2606
  3999     087A                     u123_20:
  4000     087A                     i1l2614:
  4001                           
  4002                           ;LIB16F_GPS38400.c: 163:             BufferDAT[12] = '\0';
  4003     087A  1683               	bsf	3,5	;RP0=1, select bank1
  4004     087B  1303               	bcf	3,6	;RP1=0, select bank1
  4005     087C  01B4               	clrf	(_BufferDAT^(0+128)+12)
  4006     087D                     i1l2616:
  4007                           
  4008                           ;LIB16F_GPS38400.c: 165:             break;
  4009     087D  2888               	goto	i1l2624
  4010     087E                     i1l2620:
  4011                           
  4012                           ;LIB16F_GPS38400.c: 167:             LimitConta++;
  4013     087E  3001               	movlw	1
  4014     087F  00FF               	movwf	btemp+1
  4015     0880  087F               	movf	btemp+1,w
  4016     0881  07F4               	addwf	GPS_LONGITUDE@LimitConta,f
  4017     0882                     i1l2622:
  4018                           
  4019                           ;LIB16F_GPS38400.c: 147:     while(LimitConta < 150){
  4020     0882  3096               	movlw	150
  4021     0883  0274               	subwf	GPS_LONGITUDE@LimitConta,w
  4022     0884  1C03               	skipc
  4023     0885  2887               	goto	u124_21
  4024     0886  2888               	goto	u124_20
  4025     0887                     u124_21:
  4026     0887  283C               	goto	i1l2586
  4027     0888                     u124_20:
  4028     0888                     i1l2624:
  4029                           
  4030                           ;LIB16F_GPS38400.c: 170:     _delay((unsigned long)((14)*(9830400UL/4000.0)));
  4031     0888  302D               	movlw	45
  4032     0889  00F3               	movwf	??_GPS_LONGITUDE+1
  4033     088A  30AD               	movlw	173
  4034     088B  00F2               	movwf	??_GPS_LONGITUDE
  4035     088C                     u187_27:
  4036     088C  0BF2               	decfsz	??_GPS_LONGITUDE,f
  4037     088D  288C               	goto	u187_27
  4038     088E  0BF3               	decfsz	??_GPS_LONGITUDE+1,f
  4039     088F  288C               	goto	u187_27
  4040     0890  2891               	nop2
  4041     0891                     i1l99:
  4042     0891  0008               	return
  4043     0892                     __end_of_GPS_LONGITUDE:
  4044                           
  4045                           	psect	text21
  4046     0892                     __ptext21:	
  4047 ;; *************** function _GPS_LATITUDE *****************
  4048 ;; Defined at:
  4049 ;;		line 99 in file "LIB16F_GPS38400.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  conta           1    5[COMMON] unsigned char 
  4054 ;;  LimitConta      1    4[COMMON] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4064 ;;      Params:         0       0       0       0       0
  4065 ;;      Locals:         2       0       0       0       0
  4066 ;;      Temps:          2       0       0       0       0
  4067 ;;      Totals:         4       0       0       0       0
  4068 ;;Total ram usage:        4 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 1
  4071 ;; This function calls:
  4072 ;;		_ReadByteSW_USART
  4073 ;; This function is called by:
  4074 ;;		_Interrups
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078     0892                     _GPS_LATITUDE:	
  4079                           ;psect for function _GPS_LATITUDE
  4080                           
  4081     0892                     i1l2540:	
  4082                           ;incstack = 0
  4083                           ; Regs used in _GPS_LATITUDE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4084                           
  4085                           
  4086                           ;LIB16F_GPS38400.c: 104:     unsigned char LimitConta = 0;
  4087     0892  01F4               	clrf	GPS_LATITUDE@LimitConta
  4088                           
  4089                           ;LIB16F_GPS38400.c: 108:     while(LimitConta < 150){
  4090     0893  28DB               	goto	i1l2578
  4091     0894                     i1l2542:
  4092                           
  4093                           ;LIB16F_GPS38400.c: 109:         ReadByteSW_USART();
  4094     0894  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  4095     0899                     i1l2544:
  4096                           
  4097                           ;LIB16F_GPS38400.c: 110:         if(RxBuffer == 'C'){
  4098     0899  3043               	movlw	67
  4099     089A  1283               	bcf	3,5	;RP0=0, select bank0
  4100     089B  1303               	bcf	3,6	;RP1=0, select bank0
  4101     089C  064F               	xorwf	_RxBuffer,w
  4102     089D  1D03               	btfss	3,2
  4103     089E  28A0               	goto	u115_21
  4104     089F  28A1               	goto	u115_20
  4105     08A0                     u115_21:
  4106     08A0  28D7               	goto	i1l2576
  4107     08A1                     u115_20:
  4108     08A1                     i1l2546:
  4109                           
  4110                           ;LIB16F_GPS38400.c: 112:             conta = 0;
  4111     08A1  01F5               	clrf	GPS_LATITUDE@conta
  4112                           
  4113                           ;LIB16F_GPS38400.c: 113:             while(conta<3){
  4114     08A2  28B4               	goto	i1l2554
  4115     08A3                     i1l2548:
  4116                           
  4117                           ;LIB16F_GPS38400.c: 114:                 ReadByteSW_USART();
  4118     08A3  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  4119     08A8                     i1l2550:
  4120                           
  4121                           ;LIB16F_GPS38400.c: 115:                 if(RxBuffer == ','){
  4122     08A8  302C               	movlw	44
  4123     08A9  1283               	bcf	3,5	;RP0=0, select bank0
  4124     08AA  1303               	bcf	3,6	;RP1=0, select bank0
  4125     08AB  064F               	xorwf	_RxBuffer,w
  4126     08AC  1D03               	btfss	3,2
  4127     08AD  28AF               	goto	u116_21
  4128     08AE  28B0               	goto	u116_20
  4129     08AF                     u116_21:
  4130     08AF  28B4               	goto	i1l2554
  4131     08B0                     u116_20:
  4132     08B0                     i1l2552:
  4133                           
  4134                           ;LIB16F_GPS38400.c: 116:                     conta++;
  4135     08B0  3001               	movlw	1
  4136     08B1  00FF               	movwf	btemp+1
  4137     08B2  087F               	movf	btemp+1,w
  4138     08B3  07F5               	addwf	GPS_LATITUDE@conta,f
  4139     08B4                     i1l2554:
  4140                           
  4141                           ;LIB16F_GPS38400.c: 113:             while(conta<3){
  4142     08B4  3003               	movlw	3
  4143     08B5  0275               	subwf	GPS_LATITUDE@conta,w
  4144     08B6  1C03               	skipc
  4145     08B7  28B9               	goto	u117_21
  4146     08B8  28BA               	goto	u117_20
  4147     08B9                     u117_21:
  4148     08B9  28A3               	goto	i1l2548
  4149     08BA                     u117_20:
  4150     08BA                     i1l2556:
  4151                           
  4152                           ;LIB16F_GPS38400.c: 120:             for(conta=0; conta<11; conta++){
  4153     08BA  01F5               	clrf	GPS_LATITUDE@conta
  4154     08BB                     i1l2562:
  4155                           
  4156                           ;LIB16F_GPS38400.c: 121:                 ReadByteSW_USART();
  4157     08BB  160A  118A  27B0  120A  158A  	fcall	_ReadByteSW_USART
  4158     08C0                     i1l2564:
  4159                           
  4160                           ;LIB16F_GPS38400.c: 122:                 BufferDAT[conta] = RxBuffer;
  4161     08C0  0875               	movf	GPS_LATITUDE@conta,w
  4162     08C1  3EA8               	addlw	(low (_BufferDAT| 0))& (0+255)
  4163     08C2  0084               	movwf	4
  4164     08C3  1283               	bcf	3,5	;RP0=0, select bank0
  4165     08C4  1303               	bcf	3,6	;RP1=0, select bank0
  4166     08C5  084F               	movf	_RxBuffer,w
  4167     08C6  1383               	bcf	3,7	;select IRP bank1
  4168     08C7  0080               	movwf	0
  4169     08C8                     i1l2566:
  4170                           
  4171                           ;LIB16F_GPS38400.c: 123:             }
  4172     08C8  3001               	movlw	1
  4173     08C9  00FF               	movwf	btemp+1
  4174     08CA  087F               	movf	btemp+1,w
  4175     08CB  07F5               	addwf	GPS_LATITUDE@conta,f
  4176     08CC                     i1l2568:
  4177     08CC  300B               	movlw	11
  4178     08CD  0275               	subwf	GPS_LATITUDE@conta,w
  4179     08CE  1C03               	skipc
  4180     08CF  28D1               	goto	u118_21
  4181     08D0  28D2               	goto	u118_20
  4182     08D1                     u118_21:
  4183     08D1  28BB               	goto	i1l2562
  4184     08D2                     u118_20:
  4185     08D2                     i1l2570:
  4186                           
  4187                           ;LIB16F_GPS38400.c: 124:             BufferDAT[11] = '\0';
  4188     08D2  1683               	bsf	3,5	;RP0=1, select bank1
  4189     08D3  1303               	bcf	3,6	;RP1=0, select bank1
  4190     08D4  01B3               	clrf	(_BufferDAT^(0+128)+11)
  4191                           
  4192                           ;LIB16F_GPS38400.c: 125:             BufferDAT[12] = '\0';
  4193     08D5  01B4               	clrf	(_BufferDAT^(0+128)+12)
  4194     08D6                     i1l2572:
  4195                           
  4196                           ;LIB16F_GPS38400.c: 127:             break;
  4197     08D6  28E1               	goto	i1l2580
  4198     08D7                     i1l2576:
  4199                           
  4200                           ;LIB16F_GPS38400.c: 129:             LimitConta++;
  4201     08D7  3001               	movlw	1
  4202     08D8  00FF               	movwf	btemp+1
  4203     08D9  087F               	movf	btemp+1,w
  4204     08DA  07F4               	addwf	GPS_LATITUDE@LimitConta,f
  4205     08DB                     i1l2578:
  4206                           
  4207                           ;LIB16F_GPS38400.c: 108:     while(LimitConta < 150){
  4208     08DB  3096               	movlw	150
  4209     08DC  0274               	subwf	GPS_LATITUDE@LimitConta,w
  4210     08DD  1C03               	skipc
  4211     08DE  28E0               	goto	u119_21
  4212     08DF  28E1               	goto	u119_20
  4213     08E0                     u119_21:
  4214     08E0  2894               	goto	i1l2542
  4215     08E1                     u119_20:
  4216     08E1                     i1l2580:
  4217                           
  4218                           ;LIB16F_GPS38400.c: 132:     _delay((unsigned long)((14)*(9830400UL/4000.0)));
  4219     08E1  302D               	movlw	45
  4220     08E2  00F3               	movwf	??_GPS_LATITUDE+1
  4221     08E3  30AD               	movlw	173
  4222     08E4  00F2               	movwf	??_GPS_LATITUDE
  4223     08E5                     u188_27:
  4224     08E5  0BF2               	decfsz	??_GPS_LATITUDE,f
  4225     08E6  28E5               	goto	u188_27
  4226     08E7  0BF3               	decfsz	??_GPS_LATITUDE+1,f
  4227     08E8  28E5               	goto	u188_27
  4228     08E9  28EA               	nop2
  4229     08EA                     i1l85:
  4230     08EA  0008               	return
  4231     08EB                     __end_of_GPS_LATITUDE:
  4232                           
  4233                           	psect	text22
  4234     17B0                     __ptext22:	
  4235 ;; *************** function _ReadByteSW_USART *****************
  4236 ;; Defined at:
  4237 ;;		line 5 in file "LIB16F_GPS38400.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  conta           1    1[COMMON] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, btemp+1
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       0       0       0       0
  4252 ;;      Locals:         1       0       0       0       0
  4253 ;;      Temps:          1       0       0       0       0
  4254 ;;      Totals:         2       0       0       0       0
  4255 ;;Total ram usage:        2 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_GPS_STATUS
  4261 ;;		_GPS_LATITUDE
  4262 ;;		_GPS_LONGITUDE
  4263 ;;		_GPS_TIMEDATE
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267     17B0                     _ReadByteSW_USART:	
  4268                           ;psect for function _ReadByteSW_USART
  4269                           
  4270     17B0                     i1l2402:	
  4271                           ;incstack = 0
  4272                           ; Regs used in _ReadByteSW_USART: [wreg+status,2+status,0+btemp+1]
  4273                           
  4274                           
  4275                           ;LIB16F_GPS38400.c: 6:     unsigned char conta;;LIB16F_GPS38400.c: 8:     RxBuffer = 0;
  4276     17B0  1283               	bcf	3,5	;RP0=0, select bank0
  4277     17B1  1303               	bcf	3,6	;RP1=0, select bank0
  4278     17B2  01CF               	clrf	_RxBuffer
  4279     17B3                     i1l45:	
  4280                           ;LIB16F_GPS38400.c: 9:     while(PORTBbits.RB0);
  4281                           
  4282     17B3  1806               	btfsc	6,0	;volatile
  4283     17B4  2FB6               	goto	u96_21
  4284     17B5  2FB7               	goto	u96_20
  4285     17B6                     u96_21:
  4286     17B6  2FB3               	goto	i1l45
  4287     17B7                     u96_20:
  4288     17B7                     i1l2404:
  4289                           
  4290                           ;LIB16F_GPS38400.c: 10:     _delay((unsigned long)((15)*(9830400UL/4000000.0)));
  4291     17B7  300B               	movlw	11
  4292     17B8  00F0               	movwf	??_ReadByteSW_USART
  4293     17B9                     u189_27:
  4294     17B9  0BF0               	decfsz	??_ReadByteSW_USART,f
  4295     17BA  2FB9               	goto	u189_27
  4296     17BB  2FBC               	nop2
  4297     17BC                     i1l2406:
  4298                           
  4299                           ;LIB16F_GPS38400.c: 11:     for(conta=0; conta<7; conta++){
  4300     17BC  01F1               	clrf	ReadByteSW_USART@conta
  4301     17BD                     i1l2412:
  4302                           
  4303                           ;LIB16F_GPS38400.c: 12:         _delay((unsigned long)((15)*(9830400UL/4000000.0)));
  4304     17BD  300B               	movlw	11
  4305     17BE  00F0               	movwf	??_ReadByteSW_USART
  4306     17BF                     u190_27:
  4307     17BF  0BF0               	decfsz	??_ReadByteSW_USART,f
  4308     17C0  2FBF               	goto	u190_27
  4309     17C1  2FC2               	nop2
  4310     17C2                     i1l2414:
  4311                           
  4312                           ;LIB16F_GPS38400.c: 13:         __nop();
  4313     17C2  0000               	nop
  4314     17C3                     i1l2416:
  4315                           
  4316                           ;LIB16F_GPS38400.c: 14:         __nop();
  4317     17C3  0000               	nop
  4318     17C4                     i1l2418:
  4319                           
  4320                           ;LIB16F_GPS38400.c: 15:         if(PORTBbits.RB0 == 1){
  4321     17C4  1283               	bcf	3,5	;RP0=0, select bank0
  4322     17C5  1303               	bcf	3,6	;RP1=0, select bank0
  4323     17C6  1C06               	btfss	6,0	;volatile
  4324     17C7  2FC9               	goto	u97_21
  4325     17C8  2FCA               	goto	u97_20
  4326     17C9                     u97_21:
  4327     17C9  2FCE               	goto	i1l50
  4328     17CA                     u97_20:
  4329     17CA                     i1l2420:
  4330                           
  4331                           ;LIB16F_GPS38400.c: 16:             RxBuffer = RxBuffer | 0x80;
  4332     17CA  084F               	movf	_RxBuffer,w
  4333     17CB  3880               	iorlw	128
  4334     17CC  00CF               	movwf	_RxBuffer
  4335                           
  4336                           ;LIB16F_GPS38400.c: 17:         }else{
  4337     17CD  2FD4               	goto	i1l2422
  4338     17CE                     i1l50:
  4339                           
  4340                           ;LIB16F_GPS38400.c: 18:             __nop();
  4341     17CE  0000               	nop
  4342                           
  4343                           ;LIB16F_GPS38400.c: 19:             __nop();
  4344     17CF  0000               	nop
  4345                           
  4346                           ;LIB16F_GPS38400.c: 20:             __nop();
  4347     17D0  0000               	nop
  4348                           
  4349                           ;LIB16F_GPS38400.c: 21:             __nop();
  4350     17D1  0000               	nop
  4351                           
  4352                           ;LIB16F_GPS38400.c: 22:             __nop();
  4353     17D2  0000               	nop
  4354                           
  4355                           ;LIB16F_GPS38400.c: 23:             __nop();
  4356     17D3  0000               	nop
  4357     17D4                     i1l2422:
  4358                           
  4359                           ;LIB16F_GPS38400.c: 25:         RxBuffer >>= 1;
  4360     17D4  1003               	clrc
  4361     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  4362     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  4363     17D7  0CCF               	rrf	_RxBuffer,f
  4364     17D8                     i1l2424:
  4365                           
  4366                           ;LIB16F_GPS38400.c: 26:     }
  4367     17D8  3001               	movlw	1
  4368     17D9  00FF               	movwf	btemp+1
  4369     17DA  087F               	movf	btemp+1,w
  4370     17DB  07F1               	addwf	ReadByteSW_USART@conta,f
  4371     17DC                     i1l2426:
  4372     17DC  3007               	movlw	7
  4373     17DD  0271               	subwf	ReadByteSW_USART@conta,w
  4374     17DE  1C03               	skipc
  4375     17DF  2FE1               	goto	u98_21
  4376     17E0  2FE2               	goto	u98_20
  4377     17E1                     u98_21:
  4378     17E1  2FBD               	goto	i1l2412
  4379     17E2                     u98_20:
  4380     17E2                     i1l2428:
  4381                           
  4382                           ;LIB16F_GPS38400.c: 27:     _delay((unsigned long)((15)*(9830400UL/4000000.0)));
  4383     17E2  300B               	movlw	11
  4384     17E3  00F0               	movwf	??_ReadByteSW_USART
  4385     17E4                     u191_27:
  4386     17E4  0BF0               	decfsz	??_ReadByteSW_USART,f
  4387     17E5  2FE4               	goto	u191_27
  4388     17E6  2FE7               	nop2
  4389     17E7                     i1l2430:
  4390                           
  4391                           ;LIB16F_GPS38400.c: 28:     __nop();
  4392     17E7  0000               	nop
  4393     17E8                     i1l2432:
  4394                           
  4395                           ;LIB16F_GPS38400.c: 29:     __nop();
  4396     17E8  0000               	nop
  4397     17E9                     i1l2434:
  4398                           
  4399                           ;LIB16F_GPS38400.c: 30:     __nop();
  4400     17E9  0000               	nop
  4401     17EA                     i1l2436:
  4402                           
  4403                           ;LIB16F_GPS38400.c: 31:     if(PORTBbits.RB0 == 1){
  4404     17EA  1283               	bcf	3,5	;RP0=0, select bank0
  4405     17EB  1303               	bcf	3,6	;RP1=0, select bank0
  4406     17EC  1C06               	btfss	6,0	;volatile
  4407     17ED  2FEF               	goto	u99_21
  4408     17EE  2FF0               	goto	u99_20
  4409     17EF                     u99_21:
  4410     17EF  2FF4               	goto	i1l52
  4411     17F0                     u99_20:
  4412     17F0                     i1l2438:
  4413                           
  4414                           ;LIB16F_GPS38400.c: 32:         RxBuffer = RxBuffer | 0x80;
  4415     17F0  084F               	movf	_RxBuffer,w
  4416     17F1  3880               	iorlw	128
  4417     17F2  00CF               	movwf	_RxBuffer
  4418                           
  4419                           ;LIB16F_GPS38400.c: 33:     }else{
  4420     17F3  2FFA               	goto	i1l2440
  4421     17F4                     i1l52:
  4422                           
  4423                           ;LIB16F_GPS38400.c: 34:         __nop();
  4424     17F4  0000               	nop
  4425                           
  4426                           ;LIB16F_GPS38400.c: 35:         __nop();
  4427     17F5  0000               	nop
  4428                           
  4429                           ;LIB16F_GPS38400.c: 36:         __nop();
  4430     17F6  0000               	nop
  4431                           
  4432                           ;LIB16F_GPS38400.c: 37:         __nop();
  4433     17F7  0000               	nop
  4434                           
  4435                           ;LIB16F_GPS38400.c: 38:         __nop();
  4436     17F8  0000               	nop
  4437                           
  4438                           ;LIB16F_GPS38400.c: 39:         __nop();
  4439     17F9  0000               	nop
  4440     17FA                     i1l2440:
  4441                           
  4442                           ;LIB16F_GPS38400.c: 41:     _delay((unsigned long)((12)*(9830400UL/4000000.0)));
  4443     17FA  3009               	movlw	9
  4444     17FB  00F0               	movwf	??_ReadByteSW_USART
  4445     17FC                     u192_27:
  4446     17FC  0BF0               	decfsz	??_ReadByteSW_USART,f
  4447     17FD  2FFC               	goto	u192_27
  4448     17FE  0000               	nop
  4449     17FF                     i1l54:
  4450     17FF  0008               	return
  4451     1800                     __end_of_ReadByteSW_USART:
  4452                           
  4453                           	psect	text23
  4454     1631                     __ptext23:	
  4455 ;; *************** function _CleanHolding *****************
  4456 ;; Defined at:
  4457 ;;		line 116 in file "LIB16F_SPI.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4471 ;;      Params:         0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0
  4473 ;;      Temps:          0       1       0       0       0
  4474 ;;      Totals:         0       1       0       0       0
  4475 ;;Total ram usage:        1 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; Hardware stack levels required when called: 3
  4478 ;; This function calls:
  4479 ;;		_ReadAD24
  4480 ;; This function is called by:
  4481 ;;		_Interrups
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485     1631                     _CleanHolding:	
  4486                           ;psect for function _CleanHolding
  4487                           
  4488     1631                     i1l2744:	
  4489                           ;incstack = 0
  4490                           ; Regs used in _CleanHolding: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4491                           
  4492                           
  4493                           ;LIB16F_SPI.c: 118:     PORTB = 0X0C;
  4494     1631  300C               	movlw	12
  4495     1632  1283               	bcf	3,5	;RP0=0, select bank0
  4496     1633  1303               	bcf	3,6	;RP1=0, select bank0
  4497     1634  0086               	movwf	6	;volatile
  4498                           
  4499                           ;LIB16F_SPI.c: 119:     _delay((unsigned long)((100)*(9830400UL/4000000.0)));
  4500     1635  3050               	movlw	80
  4501     1636  1283               	bcf	3,5	;RP0=0, select bank0
  4502     1637  1303               	bcf	3,6	;RP1=0, select bank0
  4503     1638  00E2               	movwf	??_CleanHolding
  4504     1639                     u193_27:
  4505     1639  0BE2               	decfsz	??_CleanHolding,f
  4506     163A  2E39               	goto	u193_27
  4507     163B  2E3C               	nop2
  4508     163C                     i1l2746:
  4509                           
  4510                           ;LIB16F_SPI.c: 120:     ReadAD24(0, 0x00);
  4511     163C  1283               	bcf	3,5	;RP0=0, select bank0
  4512     163D  1303               	bcf	3,6	;RP1=0, select bank0
  4513     163E  01D6               	clrf	ReadAD24@cmd_convert
  4514     163F  3000               	movlw	0
  4515     1640  120A  158A  22E7  160A  118A  	fcall	_ReadAD24
  4516     1645                     i1l208:
  4517     1645  0008               	return
  4518     1646                     __end_of_CleanHolding:
  4519                           
  4520                           	psect	text24
  4521     0AE7                     __ptext24:	
  4522 ;; *************** function _ReadAD24 *****************
  4523 ;; Defined at:
  4524 ;;		line 97 in file "LIB16F_SPI.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  flag_convert    1    wreg     unsigned char 
  4527 ;;  cmd_convert     1    6[BANK0 ] unsigned char 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  flag_convert    1    9[COMMON] unsigned char 
  4530 ;;  DataADC         4   10[COMMON] long 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  4    6[BANK0 ] long 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4540 ;;      Params:         0       4       0       0       0
  4541 ;;      Locals:         5       0       0       0       0
  4542 ;;      Temps:          0       8       0       0       0
  4543 ;;      Totals:         5      12       0       0       0
  4544 ;;Total ram usage:       17 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 2
  4547 ;; This function calls:
  4548 ;;		_ReadRegister_4bytesCS5532
  4549 ;;		___aldiv
  4550 ;; This function is called by:
  4551 ;;		_CleanHolding
  4552 ;;		_Interrups
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556     0AE7                     _ReadAD24:	
  4557                           ;psect for function _ReadAD24
  4558                           
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _ReadAD24: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4562                           ;ReadAD24@flag_convert stored from wreg
  4563     0AE7  00F9               	movwf	ReadAD24@flag_convert
  4564     0AE8                     i1l2448:
  4565     0AE8                     i1l201:	
  4566                           ;LIB16F_SPI.c: 98:     signed long DataADC;;LIB16F_SPI.c: 101:     while(PORTCbits.RC4);
  4567                           
  4568     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  4569     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  4570     0AEA  1A07               	btfsc	7,4	;volatile
  4571     0AEB  2AED               	goto	u100_21
  4572     0AEC  2AEE               	goto	u100_20
  4573     0AED                     u100_21:
  4574     0AED  2AE8               	goto	i1l201
  4575     0AEE                     u100_20:
  4576     0AEE                     i1l2450:
  4577                           
  4578                           ;LIB16F_SPI.c: 102:     ReadRegister_4bytesCS5532(cmd_convert);
  4579     0AEE  0856               	movf	ReadAD24@cmd_convert,w
  4580     0AEF  120A  158A  200E  120A  158A  	fcall	_ReadRegister_4bytesCS5532
  4581     0AF4                     i1l2452:
  4582                           
  4583                           ;LIB16F_SPI.c: 104:     DataADC = 0;
  4584     0AF4  3000               	movlw	0
  4585     0AF5  00FD               	movwf	ReadAD24@DataADC+3
  4586     0AF6  3000               	movlw	0
  4587     0AF7  00FC               	movwf	ReadAD24@DataADC+2
  4588     0AF8  3000               	movlw	0
  4589     0AF9  00FB               	movwf	ReadAD24@DataADC+1
  4590     0AFA  3000               	movlw	0
  4591     0AFB  00FA               	movwf	ReadAD24@DataADC
  4592     0AFC                     i1l2454:
  4593                           
  4594                           ;LIB16F_SPI.c: 105:     if(flag_convert){
  4595     0AFC  0879               	movf	ReadAD24@flag_convert,w
  4596     0AFD  1903               	btfsc	3,2
  4597     0AFE  2B00               	goto	u101_21
  4598     0AFF  2B01               	goto	u101_20
  4599     0B00                     u101_21:
  4600     0B00  2B92               	goto	i1l2460
  4601     0B01                     u101_20:
  4602     0B01                     i1l2456:
  4603                           
  4604                           ;LIB16F_SPI.c: 106:         DataADC = DataADC | (signed long) BufferSPI[0]<<24;
  4605     0B01  087A               	movf	ReadAD24@DataADC,w
  4606     0B02  1283               	bcf	3,5	;RP0=0, select bank0
  4607     0B03  1303               	bcf	3,6	;RP1=0, select bank0
  4608     0B04  00DA               	movwf	??_ReadAD24
  4609     0B05  087B               	movf	ReadAD24@DataADC+1,w
  4610     0B06  00DB               	movwf	??_ReadAD24+1
  4611     0B07  087C               	movf	ReadAD24@DataADC+2,w
  4612     0B08  00DC               	movwf	??_ReadAD24+2
  4613     0B09  087D               	movf	ReadAD24@DataADC+3,w
  4614     0B0A  00DD               	movwf	??_ReadAD24+3
  4615     0B0B  0848               	movf	_BufferSPI,w
  4616     0B0C  00DE               	movwf	??_ReadAD24+4
  4617     0B0D  01DF               	clrf	??_ReadAD24+5
  4618     0B0E  01E0               	clrf	??_ReadAD24+6
  4619     0B0F  01E1               	clrf	??_ReadAD24+7
  4620     0B10  3018               	movlw	24
  4621     0B11                     u102_25:
  4622     0B11  1003               	clrc
  4623     0B12  0DDE               	rlf	??_ReadAD24+4,f
  4624     0B13  0DDF               	rlf	??_ReadAD24+5,f
  4625     0B14  0DE0               	rlf	??_ReadAD24+6,f
  4626     0B15  0DE1               	rlf	??_ReadAD24+7,f
  4627     0B16                     u102_20:
  4628     0B16  3EFF               	addlw	-1
  4629     0B17  1D03               	skipz
  4630     0B18  2B11               	goto	u102_25
  4631     0B19  085E               	movf	??_ReadAD24+4,w
  4632     0B1A  04DA               	iorwf	??_ReadAD24,f
  4633     0B1B  085F               	movf	??_ReadAD24+5,w
  4634     0B1C  04DB               	iorwf	??_ReadAD24+1,f
  4635     0B1D  0860               	movf	??_ReadAD24+6,w
  4636     0B1E  04DC               	iorwf	??_ReadAD24+2,f
  4637     0B1F  0861               	movf	??_ReadAD24+7,w
  4638     0B20  04DD               	iorwf	??_ReadAD24+3,f
  4639     0B21  085D               	movf	??_ReadAD24+3,w
  4640     0B22  00FD               	movwf	ReadAD24@DataADC+3
  4641     0B23  085C               	movf	??_ReadAD24+2,w
  4642     0B24  00FC               	movwf	ReadAD24@DataADC+2
  4643     0B25  085B               	movf	??_ReadAD24+1,w
  4644     0B26  00FB               	movwf	ReadAD24@DataADC+1
  4645     0B27  085A               	movf	??_ReadAD24,w
  4646     0B28  00FA               	movwf	ReadAD24@DataADC
  4647                           
  4648                           ;LIB16F_SPI.c: 107:         DataADC = DataADC | (signed long) BufferSPI[1]<<16;
  4649     0B29  087A               	movf	ReadAD24@DataADC,w
  4650     0B2A  00DA               	movwf	??_ReadAD24
  4651     0B2B  087B               	movf	ReadAD24@DataADC+1,w
  4652     0B2C  00DB               	movwf	??_ReadAD24+1
  4653     0B2D  087C               	movf	ReadAD24@DataADC+2,w
  4654     0B2E  00DC               	movwf	??_ReadAD24+2
  4655     0B2F  087D               	movf	ReadAD24@DataADC+3,w
  4656     0B30  00DD               	movwf	??_ReadAD24+3
  4657     0B31  0849               	movf	_BufferSPI+1,w
  4658     0B32  00DE               	movwf	??_ReadAD24+4
  4659     0B33  01DF               	clrf	??_ReadAD24+5
  4660     0B34  01E0               	clrf	??_ReadAD24+6
  4661     0B35  01E1               	clrf	??_ReadAD24+7
  4662     0B36  3010               	movlw	16
  4663     0B37                     u103_25:
  4664     0B37  1003               	clrc
  4665     0B38  0DDE               	rlf	??_ReadAD24+4,f
  4666     0B39  0DDF               	rlf	??_ReadAD24+5,f
  4667     0B3A  0DE0               	rlf	??_ReadAD24+6,f
  4668     0B3B  0DE1               	rlf	??_ReadAD24+7,f
  4669     0B3C                     u103_20:
  4670     0B3C  3EFF               	addlw	-1
  4671     0B3D  1D03               	skipz
  4672     0B3E  2B37               	goto	u103_25
  4673     0B3F  085E               	movf	??_ReadAD24+4,w
  4674     0B40  04DA               	iorwf	??_ReadAD24,f
  4675     0B41  085F               	movf	??_ReadAD24+5,w
  4676     0B42  04DB               	iorwf	??_ReadAD24+1,f
  4677     0B43  0860               	movf	??_ReadAD24+6,w
  4678     0B44  04DC               	iorwf	??_ReadAD24+2,f
  4679     0B45  0861               	movf	??_ReadAD24+7,w
  4680     0B46  04DD               	iorwf	??_ReadAD24+3,f
  4681     0B47  085D               	movf	??_ReadAD24+3,w
  4682     0B48  00FD               	movwf	ReadAD24@DataADC+3
  4683     0B49  085C               	movf	??_ReadAD24+2,w
  4684     0B4A  00FC               	movwf	ReadAD24@DataADC+2
  4685     0B4B  085B               	movf	??_ReadAD24+1,w
  4686     0B4C  00FB               	movwf	ReadAD24@DataADC+1
  4687     0B4D  085A               	movf	??_ReadAD24,w
  4688     0B4E  00FA               	movwf	ReadAD24@DataADC
  4689                           
  4690                           ;LIB16F_SPI.c: 108:         DataADC = DataADC | (signed long) BufferSPI[2]<<8;
  4691     0B4F  087A               	movf	ReadAD24@DataADC,w
  4692     0B50  00DA               	movwf	??_ReadAD24
  4693     0B51  087B               	movf	ReadAD24@DataADC+1,w
  4694     0B52  00DB               	movwf	??_ReadAD24+1
  4695     0B53  087C               	movf	ReadAD24@DataADC+2,w
  4696     0B54  00DC               	movwf	??_ReadAD24+2
  4697     0B55  087D               	movf	ReadAD24@DataADC+3,w
  4698     0B56  00DD               	movwf	??_ReadAD24+3
  4699     0B57  084A               	movf	_BufferSPI+2,w
  4700     0B58  00DE               	movwf	??_ReadAD24+4
  4701     0B59  01DF               	clrf	??_ReadAD24+5
  4702     0B5A  01E0               	clrf	??_ReadAD24+6
  4703     0B5B  01E1               	clrf	??_ReadAD24+7
  4704     0B5C  3008               	movlw	8
  4705     0B5D                     u104_25:
  4706     0B5D  1003               	clrc
  4707     0B5E  0DDE               	rlf	??_ReadAD24+4,f
  4708     0B5F  0DDF               	rlf	??_ReadAD24+5,f
  4709     0B60  0DE0               	rlf	??_ReadAD24+6,f
  4710     0B61  0DE1               	rlf	??_ReadAD24+7,f
  4711     0B62                     u104_20:
  4712     0B62  3EFF               	addlw	-1
  4713     0B63  1D03               	skipz
  4714     0B64  2B5D               	goto	u104_25
  4715     0B65  085E               	movf	??_ReadAD24+4,w
  4716     0B66  04DA               	iorwf	??_ReadAD24,f
  4717     0B67  085F               	movf	??_ReadAD24+5,w
  4718     0B68  04DB               	iorwf	??_ReadAD24+1,f
  4719     0B69  0860               	movf	??_ReadAD24+6,w
  4720     0B6A  04DC               	iorwf	??_ReadAD24+2,f
  4721     0B6B  0861               	movf	??_ReadAD24+7,w
  4722     0B6C  04DD               	iorwf	??_ReadAD24+3,f
  4723     0B6D  085D               	movf	??_ReadAD24+3,w
  4724     0B6E  00FD               	movwf	ReadAD24@DataADC+3
  4725     0B6F  085C               	movf	??_ReadAD24+2,w
  4726     0B70  00FC               	movwf	ReadAD24@DataADC+2
  4727     0B71  085B               	movf	??_ReadAD24+1,w
  4728     0B72  00FB               	movwf	ReadAD24@DataADC+1
  4729     0B73  085A               	movf	??_ReadAD24,w
  4730     0B74  00FA               	movwf	ReadAD24@DataADC
  4731     0B75                     i1l2458:
  4732                           
  4733                           ;LIB16F_SPI.c: 110:         DataADC = DataADC/256;
  4734     0B75  3000               	movlw	0
  4735     0B76  00F3               	movwf	___aldiv@divisor+3
  4736     0B77  3000               	movlw	0
  4737     0B78  00F2               	movwf	___aldiv@divisor+2
  4738     0B79  3001               	movlw	1
  4739     0B7A  00F1               	movwf	___aldiv@divisor+1
  4740     0B7B  3000               	movlw	0
  4741     0B7C  00F0               	movwf	___aldiv@divisor
  4742     0B7D  087D               	movf	ReadAD24@DataADC+3,w
  4743     0B7E  00F7               	movwf	___aldiv@dividend+3
  4744     0B7F  087C               	movf	ReadAD24@DataADC+2,w
  4745     0B80  00F6               	movwf	___aldiv@dividend+2
  4746     0B81  087B               	movf	ReadAD24@DataADC+1,w
  4747     0B82  00F5               	movwf	___aldiv@dividend+1
  4748     0B83  087A               	movf	ReadAD24@DataADC,w
  4749     0B84  00F4               	movwf	___aldiv@dividend
  4750     0B85  120A  158A  224A  120A  158A  	fcall	___aldiv
  4751     0B8A  0873               	movf	?___aldiv+3,w
  4752     0B8B  00FD               	movwf	ReadAD24@DataADC+3
  4753     0B8C  0872               	movf	?___aldiv+2,w
  4754     0B8D  00FC               	movwf	ReadAD24@DataADC+2
  4755     0B8E  0871               	movf	?___aldiv+1,w
  4756     0B8F  00FB               	movwf	ReadAD24@DataADC+1
  4757     0B90  0870               	movf	?___aldiv,w
  4758     0B91  00FA               	movwf	ReadAD24@DataADC
  4759     0B92                     i1l2460:
  4760                           
  4761                           ;LIB16F_SPI.c: 113:     return DataADC;
  4762     0B92  087D               	movf	ReadAD24@DataADC+3,w
  4763     0B93  1283               	bcf	3,5	;RP0=0, select bank0
  4764     0B94  1303               	bcf	3,6	;RP1=0, select bank0
  4765     0B95  00D9               	movwf	?_ReadAD24+3
  4766     0B96  087C               	movf	ReadAD24@DataADC+2,w
  4767     0B97  00D8               	movwf	?_ReadAD24+2
  4768     0B98  087B               	movf	ReadAD24@DataADC+1,w
  4769     0B99  00D7               	movwf	?_ReadAD24+1
  4770     0B9A  087A               	movf	ReadAD24@DataADC,w
  4771     0B9B  00D6               	movwf	?_ReadAD24
  4772     0B9C                     i1l205:
  4773     0B9C  0008               	return
  4774     0B9D                     __end_of_ReadAD24:
  4775                           
  4776                           	psect	text25
  4777     0A4A                     __ptext25:	
  4778 ;; *************** function ___aldiv *****************
  4779 ;; Defined at:
  4780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  divisor         4    0[COMMON] long 
  4783 ;;  dividend        4    4[COMMON] long 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  quotient        4    2[BANK0 ] long 
  4786 ;;  sign            1    1[BANK0 ] unsigned char 
  4787 ;;  counter         1    0[BANK0 ] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  4    0[COMMON] long 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0, btemp+1
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4797 ;;      Params:         8       0       0       0       0
  4798 ;;      Locals:         0       6       0       0       0
  4799 ;;      Temps:          1       0       0       0       0
  4800 ;;      Totals:         9       6       0       0       0
  4801 ;;Total ram usage:       15 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_ReadAD24
  4807 ;;		_Interrups
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811     0A4A                     ___aldiv:	
  4812                           ;psect for function ___aldiv
  4813                           
  4814     0A4A                     i1l2360:	
  4815                           ;incstack = 0
  4816                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  4817                           
  4818     0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  4819     0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  4820     0A4C  01D1               	clrf	___aldiv@sign
  4821     0A4D                     i1l2362:
  4822     0A4D  1FF3               	btfss	___aldiv@divisor+3,7
  4823     0A4E  2A50               	goto	u86_21
  4824     0A4F  2A51               	goto	u86_20
  4825     0A50                     u86_21:
  4826     0A50  2A5E               	goto	i1l667
  4827     0A51                     u86_20:
  4828     0A51                     i1l2364:
  4829     0A51  09F0               	comf	___aldiv@divisor,f
  4830     0A52  09F1               	comf	___aldiv@divisor+1,f
  4831     0A53  09F2               	comf	___aldiv@divisor+2,f
  4832     0A54  09F3               	comf	___aldiv@divisor+3,f
  4833     0A55  0AF0               	incf	___aldiv@divisor,f
  4834     0A56  1903               	skipnz
  4835     0A57  0AF1               	incf	___aldiv@divisor+1,f
  4836     0A58  1903               	skipnz
  4837     0A59  0AF2               	incf	___aldiv@divisor+2,f
  4838     0A5A  1903               	skipnz
  4839     0A5B  0AF3               	incf	___aldiv@divisor+3,f
  4840     0A5C  01D1               	clrf	___aldiv@sign
  4841     0A5D  0AD1               	incf	___aldiv@sign,f
  4842     0A5E                     i1l667:
  4843     0A5E  1FF7               	btfss	___aldiv@dividend+3,7
  4844     0A5F  2A61               	goto	u87_21
  4845     0A60  2A62               	goto	u87_20
  4846     0A61                     u87_21:
  4847     0A61  2A71               	goto	i1l2370
  4848     0A62                     u87_20:
  4849     0A62                     i1l2366:
  4850     0A62  09F4               	comf	___aldiv@dividend,f
  4851     0A63  09F5               	comf	___aldiv@dividend+1,f
  4852     0A64  09F6               	comf	___aldiv@dividend+2,f
  4853     0A65  09F7               	comf	___aldiv@dividend+3,f
  4854     0A66  0AF4               	incf	___aldiv@dividend,f
  4855     0A67  1903               	skipnz
  4856     0A68  0AF5               	incf	___aldiv@dividend+1,f
  4857     0A69  1903               	skipnz
  4858     0A6A  0AF6               	incf	___aldiv@dividend+2,f
  4859     0A6B  1903               	skipnz
  4860     0A6C  0AF7               	incf	___aldiv@dividend+3,f
  4861     0A6D                     i1l2368:
  4862     0A6D  3001               	movlw	1
  4863     0A6E  00FF               	movwf	btemp+1
  4864     0A6F  087F               	movf	btemp+1,w
  4865     0A70  06D1               	xorwf	___aldiv@sign,f
  4866     0A71                     i1l2370:
  4867     0A71  3000               	movlw	0
  4868     0A72  00D5               	movwf	___aldiv@quotient+3
  4869     0A73  3000               	movlw	0
  4870     0A74  00D4               	movwf	___aldiv@quotient+2
  4871     0A75  3000               	movlw	0
  4872     0A76  00D3               	movwf	___aldiv@quotient+1
  4873     0A77  3000               	movlw	0
  4874     0A78  00D2               	movwf	___aldiv@quotient
  4875     0A79                     i1l2372:
  4876     0A79  0873               	movf	___aldiv@divisor+3,w
  4877     0A7A  0472               	iorwf	___aldiv@divisor+2,w
  4878     0A7B  0471               	iorwf	___aldiv@divisor+1,w
  4879     0A7C  0470               	iorwf	___aldiv@divisor,w
  4880     0A7D  1903               	skipnz
  4881     0A7E  2A80               	goto	u88_21
  4882     0A7F  2A81               	goto	u88_20
  4883     0A80                     u88_21:
  4884     0A80  2ACE               	goto	i1l2394
  4885     0A81                     u88_20:
  4886     0A81                     i1l2374:
  4887     0A81  01D0               	clrf	___aldiv@counter
  4888     0A82  0AD0               	incf	___aldiv@counter,f
  4889     0A83  2A91               	goto	i1l2380
  4890     0A84                     i1l2376:
  4891     0A84  3001               	movlw	1
  4892     0A85  00F8               	movwf	??___aldiv
  4893     0A86                     u89_25:
  4894     0A86  1003               	clrc
  4895     0A87  0DF0               	rlf	___aldiv@divisor,f
  4896     0A88  0DF1               	rlf	___aldiv@divisor+1,f
  4897     0A89  0DF2               	rlf	___aldiv@divisor+2,f
  4898     0A8A  0DF3               	rlf	___aldiv@divisor+3,f
  4899     0A8B  0BF8               	decfsz	??___aldiv,f
  4900     0A8C  2A86               	goto	u89_25
  4901     0A8D                     i1l2378:
  4902     0A8D  3001               	movlw	1
  4903     0A8E  00FF               	movwf	btemp+1
  4904     0A8F  087F               	movf	btemp+1,w
  4905     0A90  07D0               	addwf	___aldiv@counter,f
  4906     0A91                     i1l2380:
  4907     0A91  1FF3               	btfss	___aldiv@divisor+3,7
  4908     0A92  2A94               	goto	u90_21
  4909     0A93  2A95               	goto	u90_20
  4910     0A94                     u90_21:
  4911     0A94  2A84               	goto	i1l2376
  4912     0A95                     u90_20:
  4913     0A95                     i1l2382:
  4914     0A95  3001               	movlw	1
  4915     0A96  00F8               	movwf	??___aldiv
  4916     0A97                     u91_25:
  4917     0A97  1003               	clrc
  4918     0A98  0DD2               	rlf	___aldiv@quotient,f
  4919     0A99  0DD3               	rlf	___aldiv@quotient+1,f
  4920     0A9A  0DD4               	rlf	___aldiv@quotient+2,f
  4921     0A9B  0DD5               	rlf	___aldiv@quotient+3,f
  4922     0A9C  0BF8               	decfsz	??___aldiv,f
  4923     0A9D  2A97               	goto	u91_25
  4924     0A9E                     i1l2384:
  4925     0A9E  0873               	movf	___aldiv@divisor+3,w
  4926     0A9F  0277               	subwf	___aldiv@dividend+3,w
  4927     0AA0  1D03               	skipz
  4928     0AA1  2AAC               	goto	u92_25
  4929     0AA2  0872               	movf	___aldiv@divisor+2,w
  4930     0AA3  0276               	subwf	___aldiv@dividend+2,w
  4931     0AA4  1D03               	skipz
  4932     0AA5  2AAC               	goto	u92_25
  4933     0AA6  0871               	movf	___aldiv@divisor+1,w
  4934     0AA7  0275               	subwf	___aldiv@dividend+1,w
  4935     0AA8  1D03               	skipz
  4936     0AA9  2AAC               	goto	u92_25
  4937     0AAA  0870               	movf	___aldiv@divisor,w
  4938     0AAB  0274               	subwf	___aldiv@dividend,w
  4939     0AAC                     u92_25:
  4940     0AAC  1C03               	skipc
  4941     0AAD  2AAF               	goto	u92_21
  4942     0AAE  2AB0               	goto	u92_20
  4943     0AAF                     u92_21:
  4944     0AAF  2ABF               	goto	i1l2390
  4945     0AB0                     u92_20:
  4946     0AB0                     i1l2386:
  4947     0AB0  0870               	movf	___aldiv@divisor,w
  4948     0AB1  02F4               	subwf	___aldiv@dividend,f
  4949     0AB2  0871               	movf	___aldiv@divisor+1,w
  4950     0AB3  1C03               	skipc
  4951     0AB4  0F71               	incfsz	___aldiv@divisor+1,w
  4952     0AB5  02F5               	subwf	___aldiv@dividend+1,f
  4953     0AB6  0872               	movf	___aldiv@divisor+2,w
  4954     0AB7  1C03               	skipc
  4955     0AB8  0F72               	incfsz	___aldiv@divisor+2,w
  4956     0AB9  02F6               	subwf	___aldiv@dividend+2,f
  4957     0ABA  0873               	movf	___aldiv@divisor+3,w
  4958     0ABB  1C03               	skipc
  4959     0ABC  0F73               	incfsz	___aldiv@divisor+3,w
  4960     0ABD  02F7               	subwf	___aldiv@dividend+3,f
  4961     0ABE                     i1l2388:
  4962     0ABE  1452               	bsf	___aldiv@quotient,0
  4963     0ABF                     i1l2390:
  4964     0ABF  3001               	movlw	1
  4965     0AC0                     u93_25:
  4966     0AC0  1003               	clrc
  4967     0AC1  0CF3               	rrf	___aldiv@divisor+3,f
  4968     0AC2  0CF2               	rrf	___aldiv@divisor+2,f
  4969     0AC3  0CF1               	rrf	___aldiv@divisor+1,f
  4970     0AC4  0CF0               	rrf	___aldiv@divisor,f
  4971     0AC5  3EFF               	addlw	-1
  4972     0AC6  1D03               	skipz
  4973     0AC7  2AC0               	goto	u93_25
  4974     0AC8                     i1l2392:
  4975     0AC8  3001               	movlw	1
  4976     0AC9  02D0               	subwf	___aldiv@counter,f
  4977     0ACA  1D03               	btfss	3,2
  4978     0ACB  2ACD               	goto	u94_21
  4979     0ACC  2ACE               	goto	u94_20
  4980     0ACD                     u94_21:
  4981     0ACD  2A95               	goto	i1l2382
  4982     0ACE                     u94_20:
  4983     0ACE                     i1l2394:
  4984     0ACE  0851               	movf	___aldiv@sign,w
  4985     0ACF  1903               	btfsc	3,2
  4986     0AD0  2AD2               	goto	u95_21
  4987     0AD1  2AD3               	goto	u95_20
  4988     0AD2                     u95_21:
  4989     0AD2  2ADE               	goto	i1l2398
  4990     0AD3                     u95_20:
  4991     0AD3                     i1l2396:
  4992     0AD3  09D2               	comf	___aldiv@quotient,f
  4993     0AD4  09D3               	comf	___aldiv@quotient+1,f
  4994     0AD5  09D4               	comf	___aldiv@quotient+2,f
  4995     0AD6  09D5               	comf	___aldiv@quotient+3,f
  4996     0AD7  0AD2               	incf	___aldiv@quotient,f
  4997     0AD8  1903               	skipnz
  4998     0AD9  0AD3               	incf	___aldiv@quotient+1,f
  4999     0ADA  1903               	skipnz
  5000     0ADB  0AD4               	incf	___aldiv@quotient+2,f
  5001     0ADC  1903               	skipnz
  5002     0ADD  0AD5               	incf	___aldiv@quotient+3,f
  5003     0ADE                     i1l2398:
  5004     0ADE  0855               	movf	___aldiv@quotient+3,w
  5005     0ADF  00F3               	movwf	?___aldiv+3
  5006     0AE0  0854               	movf	___aldiv@quotient+2,w
  5007     0AE1  00F2               	movwf	?___aldiv+2
  5008     0AE2  0853               	movf	___aldiv@quotient+1,w
  5009     0AE3  00F1               	movwf	?___aldiv+1
  5010     0AE4  0852               	movf	___aldiv@quotient,w
  5011     0AE5  00F0               	movwf	?___aldiv
  5012     0AE6                     i1l677:
  5013     0AE6  0008               	return
  5014     0AE7                     __end_of___aldiv:
  5015                           
  5016                           	psect	text26
  5017     080E                     __ptext26:	
  5018 ;; *************** function _ReadRegister_4bytesCS5532 *****************
  5019 ;; Defined at:
  5020 ;;		line 75 in file "LIB16F_SPI.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  command         1    wreg     unsigned char 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  command         1    1[COMMON] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5034 ;;      Params:         0       0       0       0       0
  5035 ;;      Locals:         1       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0
  5037 ;;      Totals:         1       0       0       0       0
  5038 ;;Total ram usage:        1 bytes
  5039 ;; Hardware stack levels used: 1
  5040 ;; Hardware stack levels required when called: 1
  5041 ;; This function calls:
  5042 ;;		_TransferByte_SPI
  5043 ;; This function is called by:
  5044 ;;		_ResetCS5532
  5045 ;;		_InitCS5532
  5046 ;;		_ReadAD24
  5047 ;;		_Interrups
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051     080E                     _ReadRegister_4bytesCS5532:	
  5052                           ;psect for function _ReadRegister_4bytesCS5532
  5053                           
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _ReadRegister_4bytesCS5532: [wreg+status,2+status,0+pclath+cstack]
  5057                           ;ReadRegister_4bytesCS5532@command stored from wreg
  5058     080E  00F1               	movwf	ReadRegister_4bytesCS5532@command
  5059     080F                     i1l2344:
  5060                           
  5061                           ;LIB16F_SPI.c: 77:     TransferByte_SPI(command);
  5062     080F  0871               	movf	ReadRegister_4bytesCS5532@command,w
  5063     0810  160A  118A  2611  120A  158A  	fcall	_TransferByte_SPI
  5064     0815                     i1l2346:
  5065                           
  5066                           ;LIB16F_SPI.c: 78:     BufferSPI[0] = TransferByte_SPI(0x00);
  5067     0815  3000               	movlw	0
  5068     0816  160A  118A  2611  120A  158A  	fcall	_TransferByte_SPI
  5069     081B  1283               	bcf	3,5	;RP0=0, select bank0
  5070     081C  1303               	bcf	3,6	;RP1=0, select bank0
  5071     081D  00C8               	movwf	_BufferSPI
  5072     081E                     i1l2348:
  5073                           
  5074                           ;LIB16F_SPI.c: 79:     BufferSPI[1] = TransferByte_SPI(0x00);
  5075     081E  3000               	movlw	0
  5076     081F  160A  118A  2611  120A  158A  	fcall	_TransferByte_SPI
  5077     0824  1283               	bcf	3,5	;RP0=0, select bank0
  5078     0825  1303               	bcf	3,6	;RP1=0, select bank0
  5079     0826  00C9               	movwf	_BufferSPI+1
  5080     0827                     i1l2350:
  5081                           
  5082                           ;LIB16F_SPI.c: 80:     BufferSPI[2] = TransferByte_SPI(0x00);
  5083     0827  3000               	movlw	0
  5084     0828  160A  118A  2611  120A  158A  	fcall	_TransferByte_SPI
  5085     082D  1283               	bcf	3,5	;RP0=0, select bank0
  5086     082E  1303               	bcf	3,6	;RP1=0, select bank0
  5087     082F  00CA               	movwf	_BufferSPI+2
  5088     0830                     i1l2352:
  5089                           
  5090                           ;LIB16F_SPI.c: 81:     BufferSPI[3] = TransferByte_SPI(0x00);
  5091     0830  3000               	movlw	0
  5092     0831  160A  118A  2611  120A  158A  	fcall	_TransferByte_SPI
  5093     0836  1283               	bcf	3,5	;RP0=0, select bank0
  5094     0837  1303               	bcf	3,6	;RP1=0, select bank0
  5095     0838  00CB               	movwf	_BufferSPI+3
  5096     0839                     i1l195:
  5097     0839  0008               	return
  5098     083A                     __end_of_ReadRegister_4bytesCS5532:
  5099                           
  5100                           	psect	text27
  5101     1611                     __ptext27:	
  5102 ;; *************** function _TransferByte_SPI *****************
  5103 ;; Defined at:
  5104 ;;		line 29 in file "LIB16F_SPI.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  data            1    wreg     unsigned char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  data            1    0[COMMON] unsigned char 
  5109 ;;  valor           1    0        unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      unsigned char 
  5112 ;; Registers used:
  5113 ;;		wreg
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5119 ;;      Params:         0       0       0       0       0
  5120 ;;      Locals:         1       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0
  5122 ;;      Totals:         1       0       0       0       0
  5123 ;;Total ram usage:        1 bytes
  5124 ;; Hardware stack levels used: 1
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_ResetCS5532
  5129 ;;		_ReadRegister_4bytesCS5532
  5130 ;;		_WriteRegister_4bytesCS5532
  5131 ;;		_Interrups
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135     1611                     _TransferByte_SPI:	
  5136                           ;psect for function _TransferByte_SPI
  5137                           
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in _TransferByte_SPI: [wreg]
  5141                           ;TransferByte_SPI@data stored from wreg
  5142     1611  00F0               	movwf	TransferByte_SPI@data
  5143     1612                     i1l2338:
  5144     1612  1283               	bcf	3,5	;RP0=0, select bank0
  5145     1613  1303               	bcf	3,6	;RP1=0, select bank0
  5146     1614  0813               	movf	19,w	;volatile
  5147                           
  5148                           ;LIB16F_SPI.c: 33:     SSPBUF = data;
  5149     1615  0870               	movf	TransferByte_SPI@data,w
  5150     1616  0093               	movwf	19	;volatile
  5151     1617                     i1l181:	
  5152                           ;LIB16F_SPI.c: 34:     while(!SSPSTATbits.BF);
  5153                           
  5154     1617  1683               	bsf	3,5	;RP0=1, select bank1
  5155     1618  1303               	bcf	3,6	;RP1=0, select bank1
  5156     1619  1C14               	btfss	20,0	;volatile
  5157     161A  2E1C               	goto	u84_21
  5158     161B  2E1D               	goto	u84_20
  5159     161C                     u84_21:
  5160     161C  2E17               	goto	i1l181
  5161     161D                     u84_20:
  5162     161D                     i1l2340:
  5163                           
  5164                           ;LIB16F_SPI.c: 35:     return SSPBUF;
  5165     161D  1283               	bcf	3,5	;RP0=0, select bank0
  5166     161E  1303               	bcf	3,6	;RP1=0, select bank0
  5167     161F  0813               	movf	19,w	;volatile
  5168     1620                     i1l184:
  5169     1620  0008               	return
  5170     1621                     __end_of_TransferByte_SPI:
  5171     007E                     btemp	set	126	;btemp
  5172     007E                     wtemp0	set	126
  5173                           
  5174                           	psect	idloc
  5175                           
  5176                           ;Config register IDLOC0 @ 0x2000
  5177                           ;	unspecified, using default values
  5178     2000                     	org	8192
  5179     2000  3FFF               	dw	16383
  5180                           
  5181                           ;Config register IDLOC1 @ 0x2001
  5182                           ;	unspecified, using default values
  5183     2001                     	org	8193
  5184     2001  3FFF               	dw	16383
  5185                           
  5186                           ;Config register IDLOC2 @ 0x2002
  5187                           ;	unspecified, using default values
  5188     2002                     	org	8194
  5189     2002  3FFF               	dw	16383
  5190                           
  5191                           ;Config register IDLOC3 @ 0x2003
  5192                           ;	unspecified, using default values
  5193     2003                     	org	8195
  5194     2003  3FFF               	dw	16383
  5195                           
  5196                           	psect	config
  5197                           
  5198                           ;Config register CONFIG @ 0x2007
  5199                           ;	Oscillator Selection bits
  5200                           ;	FOSC = HS, HS oscillator
  5201                           ;	Watchdog Timer Enable bit
  5202                           ;	WDTE = OFF, WDT disabled
  5203                           ;	Power-up Timer Enable bit
  5204                           ;	PWRTE = ON, PWRT enabled
  5205                           ;	Brown-out Reset Enable bit
  5206                           ;	BOREN = OFF, BOR disabled
  5207                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5208                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5209                           ;	Data EEPROM Memory Code Protection bit
  5210                           ;	CPD = OFF, Data EEPROM code protection off
  5211                           ;	Flash Program Memory Write Enable bits
  5212                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5213                           ;	In-Circuit Debugger Mode bit
  5214                           ;	DEBUG = 0x1, unprogrammed default
  5215                           ;	Flash Program Memory Code Protection bit
  5216                           ;	CP = OFF, Code protection off
  5217     2007                     	org	8199
  5218     2007  3F32               	dw	16178
  5219                           
  5220                           	psect	text7_split_1
  5221     0B9D                     i1l3014:
  5222                           
  5223                           ;Digitizer24bitsV0.c: 124:                 GPS_LATITUDE();
  5224     0B9D  120A  158A  2092  120A  158A  	fcall	_GPS_LATITUDE
  5225                           
  5226                           ;Digitizer24bitsV0.c: 125:                 TransmitDAT_USART('1');
  5227     0BA2  3031               	movlw	49
  5228     0BA3  120A  118A  27C6  120A  158A  	fcall	_TransmitDAT_USART
  5229     0BA8                     L2:
  5230                           
  5231                           ;Digitizer24bitsV0.c: 126:                 break;
  5232     0BA8  120A  118A  2FB3   	goto	i1l508
  5233     0BAB                     i1l3016:
  5234                           
  5235                           ;Digitizer24bitsV0.c: 128:                 GPS_LONGITUDE();
  5236     0BAB  120A  158A  203A  120A  158A  	fcall	_GPS_LONGITUDE
  5237                           
  5238                           ;Digitizer24bitsV0.c: 129:                 TransmitDAT_USART('2');
  5239     0BB0  3032               	movlw	50
  5240     0BB1  120A  118A  27C6  120A  158A  	fcall	_TransmitDAT_USART
  5241                           
  5242                           ;Digitizer24bitsV0.c: 130:                 break;
  5243     0BB6  2BA8               	goto	L2
  5244     0BB7                     i1l3018:
  5245                           
  5246                           ;Digitizer24bitsV0.c: 132:                 GPS_STATUS();
  5247     0BB7  120A  158A  21C2  120A  158A  	fcall	_GPS_STATUS
  5248     0BBC                     i1l3020:
  5249                           
  5250                           ;Digitizer24bitsV0.c: 133:                 if(RxBuffer=='A'){
  5251     0BBC  3041               	movlw	65
  5252     0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  5253     0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  5254     0BBF  064F               	xorwf	_RxBuffer,w
  5255     0BC0  1D03               	btfss	3,2
  5256     0BC1  2BC3               	goto	u149_21
  5257     0BC2  2BC4               	goto	u149_20
  5258     0BC3                     u149_21:
  5259     0BC3  2BCB               	goto	i1l3024
  5260     0BC4                     u149_20:
  5261     0BC4                     i1l3022:
  5262                           
  5263                           ;Digitizer24bitsV0.c: 134:                     TransmitDAT_USART('8');
  5264     0BC4  3038               	movlw	56
  5265     0BC5  120A  118A  27C6  120A  158A  	fcall	_TransmitDAT_USART
  5266                           
  5267                           ;Digitizer24bitsV0.c: 135:                 }else{
  5268     0BCA  2BA8               	goto	L2
  5269     0BCB                     i1l3024:
  5270                           
  5271                           ;Digitizer24bitsV0.c: 136:                     TransmitDAT_USART('0');
  5272     0BCB  3030               	movlw	48
  5273     0BCC  120A  118A  27C6  120A  158A  	fcall	_TransmitDAT_USART
  5274     0BD1  2BA8               	goto	L2
  5275     0BD2                     i1l465:	
  5276                           ;Digitizer24bitsV0.c: 139:             default:
  5277                           
  5278                           
  5279                           ;Digitizer24bitsV0.c: 140:                 __nop();
  5280     0BD2  0000               	nop
  5281                           
  5282                           ;Digitizer24bitsV0.c: 141:         }
  5283     0BD3  2BA8               	goto	L2
  5284     0BD4                     i1l3026:
  5285     0BD4  084E               	movf	_CmdGPS,w
  5286     0BD5  00E3               	movwf	??_Interrups
  5287     0BD6  01E4               	clrf	??_Interrups+1
  5288                           
  5289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5290                           ; Switch size 1, requested type "simple"
  5291                           ; Number of cases is 1, Range of values is 0 to 0
  5292                           ; switch strategies available:
  5293                           ; Name         Instructions Cycles
  5294                           ; simple_byte            4     3 (average)
  5295                           ; direct_byte           11     8 (fixed)
  5296                           ; jumptable            260     6 (fixed)
  5297                           ;	Chosen strategy is simple_byte
  5298     0BD7  0864               	movf	??_Interrups+1,w
  5299     0BD8  3A00               	xorlw	0	; case 0
  5300     0BD9  1903               	skipnz
  5301     0BDA  2BDC               	goto	i1l3714
  5302     0BDB  2BD2               	goto	i1l465
  5303     0BDC                     i1l3714:
  5304                           
  5305                           ; Switch size 1, requested type "simple"
  5306                           ; Number of cases is 4, Range of values is 0 to 3
  5307                           ; switch strategies available:
  5308                           ; Name         Instructions Cycles
  5309                           ; simple_byte           13     7 (average)
  5310                           ; direct_byte           20     8 (fixed)
  5311                           ; jumptable            260     6 (fixed)
  5312                           ;	Chosen strategy is simple_byte
  5313     0BDC  0863               	movf	??_Interrups,w
  5314     0BDD  3A00               	xorlw	0	; case 0
  5315     0BDE  1903               	skipnz
  5316     0BDF  2CAF               	goto	L4
  5317     0BE0  3A01               	xorlw	1	; case 1
  5318     0BE1  1903               	skipnz
  5319     0BE2  2B9D               	goto	i1l3014
  5320     0BE3  3A03               	xorlw	3	; case 2
  5321     0BE4  1903               	skipnz
  5322     0BE5  2BAB               	goto	i1l3016
  5323     0BE6  3A01               	xorlw	1	; case 3
  5324     0BE7  1903               	skipnz
  5325     0BE8  2BB7               	goto	i1l3018
  5326     0BE9  2BD2               	goto	i1l465
  5327     0BEA                     i1l445:
  5328     0BEA  1E8C               	btfss	12,5	;volatile
  5329     0BEB  2BED               	goto	u150_21
  5330     0BEC  2BF0               	goto	u150_20
  5331     0BED                     u150_21:
  5332     0BED  120A  118A  2C7D   	goto	i1l467
  5333     0BF0                     u150_20:
  5334     0BF0                     i1l3028:
  5335     0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  5336     0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  5337     0BF2  1E8C               	btfss	12,5	;volatile
  5338     0BF3  2BF5               	goto	u151_21
  5339     0BF4  2BF6               	goto	u151_20
  5340     0BF5                     u151_21:
  5341     0BF5  2BED               	goto	u150_21
  5342     0BF6                     u151_20:
  5343     0BF6                     i1l3030:
  5344                           
  5345                           ;Digitizer24bitsV0.c: 143:         ID = ReceiveCMD_USART();
  5346     0BF6  120A  158A  20EB  120A  158A  	fcall	_ReceiveCMD_USART
  5347     0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  5348     0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  5349     0BFD  00EB               	movwf	Interrups@ID
  5350                           
  5351                           ;Digitizer24bitsV0.c: 144:         switch(ID){
  5352     0BFE  120A  118A  2C51   	goto	i1l3318
  5353     0C01                     i1l3032:
  5354                           
  5355                           ;Digitizer24bitsV0.c: 146:                 TransmitCMD_USART('5');
  5356     0C01  3035               	movlw	53
  5357     0C02  160A  118A  2646  120A  158A  	fcall	_TransmitCMD_USART
  5358     0C07                     i1l3034:
  5359                           
  5360                           ;Digitizer24bitsV0.c: 147:                 ControlSample = 0;
  5361     0C07  1283               	bcf	3,5	;RP0=0, select bank0
  5362     0C08  1303               	bcf	3,6	;RP1=0, select bank0
  5363     0C09  01CD               	clrf	_ControlSample
  5364                           
  5365                           ;Digitizer24bitsV0.c: 148:                 break;
  5366     0C0A  2BA8               	goto	L2
  5367     0C0B                     i1l3036:
  5368                           
  5369                           ;Digitizer24bitsV0.c: 150:                 TransmitCMD_USART('0');
  5370     0C0B  3030               	movlw	48
  5371     0C0C  160A  118A  2646  120A  158A  	fcall	_TransmitCMD_USART
  5372     0C11                     i1l3038:
  5373                           
  5374                           ;Digitizer24bitsV0.c: 151:                 BufferDAT[0] = 'V';
  5375     0C11  3056               	movlw	86
  5376     0C12  1683               	bsf	3,5	;RP0=1, select bank1
  5377     0C13  1303               	bcf	3,6	;RP1=0, select bank1
  5378     0C14  00A8               	movwf	_BufferDAT^(0+128)
  5379     0C15                     i1l3040:
  5380                           
  5381                           ;Digitizer24bitsV0.c: 152:                 BufferDAT[1] = '2';
  5382     0C15  3032               	movlw	50
  5383     0C16  00A9               	movwf	(_BufferDAT^(0+128)+1)
  5384     0C17                     i1l3042:
  5385                           
  5386                           ;Digitizer24bitsV0.c: 153:                 BufferDAT[2] = '0';
  5387     0C17  3030               	movlw	48
  5388     0C18  00AA               	movwf	(_BufferDAT^(0+128)+2)
  5389     0C19                     i1l3044:
  5390                           
  5391                           ;Digitizer24bitsV0.c: 154:                 BufferDAT[12] = '\0';
  5392     0C19  01B4               	clrf	(_BufferDAT^(0+128)+12)
  5393     0C1A                     i1l3046:
  5394                           
  5395                           ;Digitizer24bitsV0.c: 155:                 TransmitDAT_USART('0');
  5396     0C1A  3030               	movlw	48
  5397     0C1B  120A  118A  27C6  120A  158A  	fcall	_TransmitDAT_USART
  5398                           
  5399                           ;Digitizer24bitsV0.c: 156:                 break;
  5400     0C20  2BA8               	goto	L2
  5401     0C21                     i1l3048:
  5402                           
  5403                           ;Digitizer24bitsV0.c: 158:                 TransmitCMD_USART('1');
  5404     0C21  3031               	movlw	49
  5405     0C22  160A  118A  2646  120A  158A  	fcall	_TransmitCMD_USART
  5406     0C27                     i1l3050:
  5407                           
  5408                           ;Digitizer24bitsV0.c: 161:                 CmdGPS = 1;
  5409     0C27  1283               	bcf	3,5	;RP0=0, select bank0
  5410     0C28  1303               	bcf	3,6	;RP1=0, select bank0
  5411     0C29  01CE               	clrf	_CmdGPS
  5412     0C2A  0ACE               	incf	_CmdGPS,f
  5413     0C2B                     i1l3052:
  5414                           
  5415                           ;Digitizer24bitsV0.c: 162:                 OPTION_REGbits.INTEDG = 0;
  5416     0C2B  1683               	bsf	3,5	;RP0=1, select bank1
  5417     0C2C  1303               	bcf	3,6	;RP1=0, select bank1
  5418     0C2D  1301               	bcf	1,6	;volatile
  5419     0C2E                     i1l3054:
  5420                           
  5421                           ;Digitizer24bitsV0.c: 163:                 INTCONbits.INTF = 0;
  5422     0C2E  108B               	bcf	11,1	;volatile
  5423     0C2F                     i1l3056:
  5424                           
  5425                           ;Digitizer24bitsV0.c: 164:                 INTCONbits.INTE = 1;
  5426     0C2F  160B               	bsf	11,4	;volatile
  5427                           
  5428                           ;Digitizer24bitsV0.c: 166:                 break;
  5429     0C30  2BA8               	goto	L2
  5430     0C31                     i1l3058:
  5431                           
  5432                           ;Digitizer24bitsV0.c: 168:                 TransmitCMD_USART('2');
  5433     0C31  3032               	movlw	50
  5434     0C32  160A  118A  2646  120A  158A  	fcall	_TransmitCMD_USART
  5435     0C37                     i1l3060:
  5436                           
  5437                           ;Digitizer24bitsV0.c: 171:                 CmdGPS = 2;
  5438     0C37  3002               	movlw	2
  5439     0C38  1283               	bcf	3,5	;RP0=0, select bank0
  5440     0C39  1303               	bcf	3,6	;RP1=0, select bank0
  5441     0C3A  00CE               	movwf	_CmdGPS
  5442     0C3B                     i1l3062:
  5443                           
  5444                           ;Digitizer24bitsV0.c: 172:                 OPTION_REGbits.INTEDG = 0;
  5445     0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  5446     0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  5447     0C3D  1301               	bcf	1,6	;volatile
  5448     0C3E                     i1l3064:
  5449                           
  5450                           ;Digitizer24bitsV0.c: 173:                 INTCONbits.INTF = 0;
  5451     0C3E  108B               	bcf	11,1	;volatile
  5452     0C3F                     i1l3066:
  5453                           
  5454                           ;Digitizer24bitsV0.c: 174:                 INTCONbits.INTE = 1;
  5455     0C3F  160B               	bsf	11,4	;volatile
  5456                           
  5457                           ;Digitizer24bitsV0.c: 176:                 break;
  5458     0C40  2BA8               	goto	L2
  5459     0C41                     i1l3068:
  5460                           
  5461                           ;Digitizer24bitsV0.c: 178:                 TransmitCMD_USART('3');
  5462     0C41  3033               	movlw	51
  5463     0C42  160A  118A  2646  120A  158A  	fcall	_TransmitCMD_USART
  5464     0C47                     i1l3070:
  5465                           
  5466                           ;Digitizer24bitsV0.c: 181:                 BufferDAT[0] = ResetCS5532();
  5467     0C47  160A  118A  2763  120A  158A  	fcall	_ResetCS5532
  5468     0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5469     0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  5470     0C4E  00A8               	movwf	_BufferDAT^(0+128)
  5471     0C4F                     i1l3072:
  5472                           
  5473                           ;Digitizer24bitsV0.c: 182:                 InitCS5532();
  5474     0C4F  160A  118A  267D  120A  158A  	fcall	_InitCS5532
  5475     0C54                     i1l3074:
  5476                           
  5477                           ;Digitizer24bitsV0.c: 184:                 ReadRegister_4bytesCS5532(0x09);
  5478     0C54  3009               	movlw	9
  5479     0C55  120A  158A  200E  120A  158A  	fcall	_ReadRegister_4bytesCS5532
  5480     0C5A                     i1l3076:
  5481                           
  5482                           ;Digitizer24bitsV0.c: 185:                 BufferDAT[1] = BufferSPI[0];
  5483     0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  5484     0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  5485     0C5C  0848               	movf	_BufferSPI,w
  5486     0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  5487     0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  5488     0C5F  00A9               	movwf	(_BufferDAT^(0+128)+1)
  5489     0C60                     i1l3078:
  5490                           
  5491                           ;Digitizer24bitsV0.c: 186:                 BufferDAT[2] = BufferSPI[1];
  5492     0C60  1283               	bcf	3,5	;RP0=0, select bank0
  5493     0C61  1303               	bcf	3,6	;RP1=0, select bank0
  5494     0C62  0849               	movf	_BufferSPI+1,w
  5495     0C63  1683               	bsf	3,5	;RP0=1, select bank1
  5496     0C64  1303               	bcf	3,6	;RP1=0, select bank1
  5497     0C65  00AA               	movwf	(_BufferDAT^(0+128)+2)
  5498     0C66                     i1l3080:
  5499                           
  5500                           ;Digitizer24bitsV0.c: 187:                 BufferDAT[3] = BufferSPI[2];
  5501     0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5502     0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5503     0C68  084A               	movf	_BufferSPI+2,w
  5504     0C69  1683               	bsf	3,5	;RP0=1, select bank1
  5505     0C6A  1303               	bcf	3,6	;RP1=0, select bank1
  5506     0C6B  00AB               	movwf	(_BufferDAT^(0+128)+3)
  5507     0C6C                     i1l3082:
  5508                           
  5509                           ;Digitizer24bitsV0.c: 188:                 BufferDAT[4] = BufferSPI[3];
  5510     0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5511     0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  5512     0C6E  084B               	movf	_BufferSPI+3,w
  5513     0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  5514     0C70  1303               	bcf	3,6	;RP1=0, select bank1
  5515     0C71  00AC               	movwf	(_BufferDAT^(0+128)+4)
  5516     0C72                     i1l3084:
  5517                           
  5518                           ;Digitizer24bitsV0.c: 191:                 ReadRegister_4bytesCS5532(0x0A);
  5519     0C72  300A               	movlw	10
  5520     0C73  120A  158A  200E  120A  158A  	fcall	_ReadRegister_4bytesCS5532
  5521     0C78                     i1l3086:
  5522                           
  5523                           ;Digitizer24bitsV0.c: 192:                 BufferDAT[5] = BufferSPI[0];
  5524     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  5525     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  5526     0C7A  0848               	movf	_BufferSPI,w
  5527     0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  5528     0C7C  1303               	bcf	3,6	;RP1=0, select bank1
  5529     0C7D  00AD               	movwf	(_BufferDAT^(0+128)+5)
  5530     0C7E                     i1l3088:
  5531                           
  5532                           ;Digitizer24bitsV0.c: 193:                 BufferDAT[6] = BufferSPI[1];
  5533     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  5534     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  5535     0C80  0849               	movf	_BufferSPI+1,w
  5536     0C81  1683               	bsf	3,5	;RP0=1, select bank1
  5537     0C82  1303               	bcf	3,6	;RP1=0, select bank1
  5538     0C83  00AE               	movwf	(_BufferDAT^(0+128)+6)
  5539     0C84                     i1l3090:
  5540                           
  5541                           ;Digitizer24bitsV0.c: 194:                 BufferDAT[7] = BufferSPI[2];
  5542     0C84  1283               	bcf	3,5	;RP0=0, select bank0
  5543     0C85  1303               	bcf	3,6	;RP1=0, select bank0
  5544     0C86  084A               	movf	_BufferSPI+2,w
  5545     0C87  1683               	bsf	3,5	;RP0=1, select bank1
  5546     0C88  1303               	bcf	3,6	;RP1=0, select bank1
  5547     0C89  00AF               	movwf	(_BufferDAT^(0+128)+7)
  5548     0C8A                     i1l3092:
  5549                           
  5550                           ;Digitizer24bitsV0.c: 195:                 BufferDAT[8] = BufferSPI[3];
  5551     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  5552     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  5553     0C8C  084B               	movf	_BufferSPI+3,w
  5554     0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  5555     0C8E  1303               	bcf	3,6	;RP1=0, select bank1
  5556     0C8F  00B0               	movwf	(_BufferDAT^(0+128)+8)
  5557     0C90                     i1l3094:
  5558                           
  5559                           ;Digitizer24bitsV0.c: 196:                 BufferDAT[12] = '\0';
  5560     0C90  01B4               	clrf	(_BufferDAT^(0+128)+12)
  5561     0C91                     i1l3096:
  5562                           
  5563                           ;Digitizer24bitsV0.c: 197:                 TransmitDAT_USART('3');
  5564     0C91  3033               	movlw	51
  5565     0C92  120A  118A  27C6  120A  158A  	fcall	_TransmitDAT_USART
  5566                           
  5567                           ;Digitizer24bitsV0.c: 199:                 break;
  5568     0C97  2BA8               	goto	L2
  5569     0C98                     i1l3098:
  5570                           
  5571                           ;Digitizer24bitsV0.c: 201:                 TransmitCMD_USART('4');
  5572     0C98  3034               	movlw	52
  5573     0C99  160A  118A  2646  120A  158A  	fcall	_TransmitCMD_USART
  5574     0C9E                     i1l3100:
  5575                           
  5576                           ;Digitizer24bitsV0.c: 203:                 CmdGPS = 0;
  5577     0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  5578     0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  5579     0CA0  01CE               	clrf	_CmdGPS
  5580     0CA1                     i1l3102:
  5581                           
  5582                           ;Digitizer24bitsV0.c: 204:                 ControlSample = 1;
  5583     0CA1  01CD               	clrf	_ControlSample
  5584     0CA2  0ACD               	incf	_ControlSample,f
  5585     0CA3                     i1l3104:
  5586                           
  5587                           ;Digitizer24bitsV0.c: 205:                 TransferByte_SPI(0xC0);
  5588     0CA3  30C0               	movlw	192
  5589     0CA4  160A  118A  2611  120A  158A  	fcall	_TransferByte_SPI
  5590     0CA9                     i1l3106:
  5591                           
  5592                           ;Digitizer24bitsV0.c: 206:                 OPTION_REGbits.INTEDG = 0;
  5593     0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  5594     0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  5595     0CAB  1301               	bcf	1,6	;volatile
  5596     0CAC                     i1l3108:
  5597                           
  5598                           ;Digitizer24bitsV0.c: 207:                 INTCONbits.INTF = 0;
  5599     0CAC  108B               	bcf	11,1	;volatile
  5600     0CAD                     i1l3110:
  5601                           
  5602                           ;Digitizer24bitsV0.c: 208:                 INTCONbits.INTE = 1;
  5603     0CAD  160B               	bsf	11,4	;volatile
  5604                           
  5605                           ;Digitizer24bitsV0.c: 210:                 break;
  5606     0CAE  2BA8               	goto	L2
  5607     0CAF                     L4:
  5608     0CAF                     L3:
  5609     0CAF  120A  118A  2FC0   	ljmp	L1
  5610                           
  5611                           	psect	text7_split_2
  5612     002A                     i1l3112:
  5613                           
  5614                           ;Digitizer24bitsV0.c: 212:                 TransmitCMD_USART('6');
  5615     002A  3036               	movlw	54
  5616     002B  160A  118A  2646  120A  118A  	fcall	_TransmitCMD_USART
  5617     0030                     i1l3114:
  5618                           
  5619                           ;Digitizer24bitsV0.c: 214:                 PORTB = 0x0C;
  5620     0030  300C               	movlw	12
  5621     0031  1283               	bcf	3,5	;RP0=0, select bank0
  5622     0032  1303               	bcf	3,6	;RP1=0, select bank0
  5623     0033  0086               	movwf	6	;volatile
  5624     0034                     i1l3116:
  5625                           
  5626                           ;Digitizer24bitsV0.c: 215:                 _delay((unsigned long)((7)*(9830400UL/4000.0)
      +                          ));
  5627     0034  3017               	movlw	23
  5628     0035  1283               	bcf	3,5	;RP0=0, select bank0
  5629     0036  1303               	bcf	3,6	;RP1=0, select bank0
  5630     0037  00E4               	movwf	??_Interrups+1
  5631     0038  3055               	movlw	85
  5632     0039  00E3               	movwf	??_Interrups
  5633     003A                     u173_27:
  5634     003A  0BE3               	decfsz	??_Interrups,f
  5635     003B  283A               	goto	u173_27
  5636     003C  0BE4               	decfsz	??_Interrups+1,f
  5637     003D  283A               	goto	u173_27
  5638     003E  0000               	nop
  5639     003F                     i1l3118:
  5640                           
  5641                           ;Digitizer24bitsV0.c: 216:                 SumData_GND = 0;
  5642     003F  3000               	movlw	0
  5643     0040  1683               	bsf	3,5	;RP0=1, select bank1
  5644     0041  1303               	bcf	3,6	;RP1=0, select bank1
  5645     0042  00A7               	movwf	(_SumData_GND+3)^(0+128)
  5646     0043  3000               	movlw	0
  5647     0044  00A6               	movwf	(_SumData_GND+2)^(0+128)
  5648     0045  3000               	movlw	0
  5649     0046  00A5               	movwf	(_SumData_GND+1)^(0+128)
  5650     0047  3000               	movlw	0
  5651     0048  00A4               	movwf	_SumData_GND^(0+128)
  5652     0049                     i1l3120:
  5653                           
  5654                           ;Digitizer24bitsV0.c: 217:                 TransferByte_SPI(0x80);
  5655     0049  3080               	movlw	128
  5656     004A  160A  118A  2611  120A  118A  	fcall	_TransferByte_SPI
  5657     004F                     i1l3122:
  5658                           
  5659                           ;Digitizer24bitsV0.c: 218:                 ReadAD24(0,0x00);
  5660     004F  1283               	bcf	3,5	;RP0=0, select bank0
  5661     0050  1303               	bcf	3,6	;RP1=0, select bank0
  5662     0051  01D6               	clrf	ReadAD24@cmd_convert
  5663     0052  3000               	movlw	0
  5664     0053  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  5665     0058                     i1l3124:
  5666                           
  5667                           ;Digitizer24bitsV0.c: 219:                 for(conta=0; conta<5; conta++){
  5668     0058  1283               	bcf	3,5	;RP0=0, select bank0
  5669     0059  1303               	bcf	3,6	;RP1=0, select bank0
  5670     005A  01EC               	clrf	Interrups@conta
  5671     005B                     i1l3130:
  5672                           
  5673                           ;Digitizer24bitsV0.c: 220:                     TransferByte_SPI(0x80);
  5674     005B  3080               	movlw	128
  5675     005C  160A  118A  2611  120A  118A  	fcall	_TransferByte_SPI
  5676     0061                     i1l3132:
  5677                           
  5678                           ;Digitizer24bitsV0.c: 221:                     Data_GND = ReadAD24(1,0x00);
  5679     0061  1283               	bcf	3,5	;RP0=0, select bank0
  5680     0062  1303               	bcf	3,6	;RP1=0, select bank0
  5681     0063  01D6               	clrf	ReadAD24@cmd_convert
  5682     0064  3001               	movlw	1
  5683     0065  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  5684     006A  1283               	bcf	3,5	;RP0=0, select bank0
  5685     006B  1303               	bcf	3,6	;RP1=0, select bank0
  5686     006C  0859               	movf	?_ReadAD24+3,w
  5687     006D  1683               	bsf	3,5	;RP0=1, select bank1
  5688     006E  1303               	bcf	3,6	;RP1=0, select bank1
  5689     006F  00A3               	movwf	(_Data_GND+3)^(0+128)
  5690     0070  1283               	bcf	3,5	;RP0=0, select bank0
  5691     0071  1303               	bcf	3,6	;RP1=0, select bank0
  5692     0072  0858               	movf	?_ReadAD24+2,w
  5693     0073  1683               	bsf	3,5	;RP0=1, select bank1
  5694     0074  1303               	bcf	3,6	;RP1=0, select bank1
  5695     0075  00A2               	movwf	(_Data_GND+2)^(0+128)
  5696     0076  1283               	bcf	3,5	;RP0=0, select bank0
  5697     0077  1303               	bcf	3,6	;RP1=0, select bank0
  5698     0078  0857               	movf	?_ReadAD24+1,w
  5699     0079  1683               	bsf	3,5	;RP0=1, select bank1
  5700     007A  1303               	bcf	3,6	;RP1=0, select bank1
  5701     007B  00A1               	movwf	(_Data_GND+1)^(0+128)
  5702     007C  1283               	bcf	3,5	;RP0=0, select bank0
  5703     007D  1303               	bcf	3,6	;RP1=0, select bank0
  5704     007E  0856               	movf	?_ReadAD24,w
  5705     007F  1683               	bsf	3,5	;RP0=1, select bank1
  5706     0080  1303               	bcf	3,6	;RP1=0, select bank1
  5707     0081  00A0               	movwf	_Data_GND^(0+128)
  5708     0082                     i1l3134:
  5709                           
  5710                           ;Digitizer24bitsV0.c: 222:                     SumData_GND = SumData_GND + Data_GND;
  5711     0082  0824               	movf	_SumData_GND^(0+128),w
  5712     0083  0720               	addwf	_Data_GND^(0+128),w
  5713     0084  1283               	bcf	3,5	;RP0=0, select bank0
  5714     0085  1303               	bcf	3,6	;RP1=0, select bank0
  5715     0086  00E3               	movwf	??_Interrups
  5716     0087  3000               	movlw	0
  5717     0088  1803               	skipnc
  5718     0089  3001               	movlw	1
  5719     008A  1683               	bsf	3,5	;RP0=1, select bank1
  5720     008B  1303               	bcf	3,6	;RP1=0, select bank1
  5721     008C  0725               	addwf	(_SumData_GND+1)^(0+128),w
  5722     008D  1283               	bcf	3,5	;RP0=0, select bank0
  5723     008E  1303               	bcf	3,6	;RP1=0, select bank0
  5724     008F  01E5               	clrf	??_Interrups+2
  5725     0090  1803               	skipnc
  5726     0091  0AE5               	incf	??_Interrups+2,f
  5727     0092  1683               	bsf	3,5	;RP0=1, select bank1
  5728     0093  1303               	bcf	3,6	;RP1=0, select bank1
  5729     0094  0721               	addwf	(_Data_GND+1)^(0+128),w
  5730     0095  1283               	bcf	3,5	;RP0=0, select bank0
  5731     0096  1303               	bcf	3,6	;RP1=0, select bank0
  5732     0097  00E4               	movwf	??_Interrups+1
  5733     0098  1803               	skipnc
  5734     0099  0AE5               	incf	??_Interrups+2,f
  5735     009A  1683               	bsf	3,5	;RP0=1, select bank1
  5736     009B  1303               	bcf	3,6	;RP1=0, select bank1
  5737     009C  0826               	movf	(_SumData_GND+2)^(0+128),w
  5738     009D  1283               	bcf	3,5	;RP0=0, select bank0
  5739     009E  1303               	bcf	3,6	;RP1=0, select bank0
  5740     009F  0765               	addwf	??_Interrups+2,w
  5741     00A0  01E6               	clrf	??_Interrups+3
  5742     00A1  1803               	skipnc
  5743     00A2  0AE6               	incf	??_Interrups+3,f
  5744     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5745     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  5746     00A5  0722               	addwf	(_Data_GND+2)^(0+128),w
  5747     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  5748     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  5749     00A8  00E5               	movwf	??_Interrups+2
  5750     00A9  1803               	skipnc
  5751     00AA  0AE6               	incf	??_Interrups+3,f
  5752     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  5753     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  5754     00AD  0827               	movf	(_SumData_GND+3)^(0+128),w
  5755     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  5756     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  5757     00B0  0766               	addwf	??_Interrups+3,w
  5758     00B1  1683               	bsf	3,5	;RP0=1, select bank1
  5759     00B2  1303               	bcf	3,6	;RP1=0, select bank1
  5760     00B3  0723               	addwf	(_Data_GND+3)^(0+128),w
  5761     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  5762     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  5763     00B6  00E6               	movwf	??_Interrups+3
  5764     00B7  0866               	movf	??_Interrups+3,w
  5765     00B8  1683               	bsf	3,5	;RP0=1, select bank1
  5766     00B9  1303               	bcf	3,6	;RP1=0, select bank1
  5767     00BA  00A7               	movwf	(_SumData_GND+3)^(0+128)
  5768     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  5769     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  5770     00BD  0865               	movf	??_Interrups+2,w
  5771     00BE  1683               	bsf	3,5	;RP0=1, select bank1
  5772     00BF  1303               	bcf	3,6	;RP1=0, select bank1
  5773     00C0  00A6               	movwf	(_SumData_GND+2)^(0+128)
  5774     00C1  1283               	bcf	3,5	;RP0=0, select bank0
  5775     00C2  1303               	bcf	3,6	;RP1=0, select bank0
  5776     00C3  0864               	movf	??_Interrups+1,w
  5777     00C4  1683               	bsf	3,5	;RP0=1, select bank1
  5778     00C5  1303               	bcf	3,6	;RP1=0, select bank1
  5779     00C6  00A5               	movwf	(_SumData_GND+1)^(0+128)
  5780     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  5781     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  5782     00C9  0863               	movf	??_Interrups,w
  5783     00CA  1683               	bsf	3,5	;RP0=1, select bank1
  5784     00CB  1303               	bcf	3,6	;RP1=0, select bank1
  5785     00CC  00A4               	movwf	_SumData_GND^(0+128)
  5786     00CD                     i1l3136:
  5787                           
  5788                           ;Digitizer24bitsV0.c: 223:                 }
  5789     00CD  3001               	movlw	1
  5790     00CE  00FF               	movwf	btemp+1
  5791     00CF  087F               	movf	btemp+1,w
  5792     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  5793     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  5794     00D2  07EC               	addwf	Interrups@conta,f
  5795     00D3                     i1l3138:
  5796     00D3  3005               	movlw	5
  5797     00D4  026C               	subwf	Interrups@conta,w
  5798     00D5  1C03               	skipc
  5799     00D6  28D8               	goto	u152_21
  5800     00D7  28D9               	goto	u152_20
  5801     00D8                     u152_21:
  5802     00D8  285B               	goto	i1l3130
  5803     00D9                     u152_20:
  5804     00D9                     i1l3140:
  5805                           
  5806                           ;Digitizer24bitsV0.c: 224:                 Data_GND = SumData_GND/5;
  5807     00D9  3000               	movlw	0
  5808     00DA  00F3               	movwf	___aldiv@divisor+3
  5809     00DB  3000               	movlw	0
  5810     00DC  00F2               	movwf	___aldiv@divisor+2
  5811     00DD  3000               	movlw	0
  5812     00DE  00F1               	movwf	___aldiv@divisor+1
  5813     00DF  3005               	movlw	5
  5814     00E0  00F0               	movwf	___aldiv@divisor
  5815     00E1  1683               	bsf	3,5	;RP0=1, select bank1
  5816     00E2  1303               	bcf	3,6	;RP1=0, select bank1
  5817     00E3  0827               	movf	(_SumData_GND+3)^(0+128),w
  5818     00E4  00F7               	movwf	___aldiv@dividend+3
  5819     00E5  0826               	movf	(_SumData_GND+2)^(0+128),w
  5820     00E6  00F6               	movwf	___aldiv@dividend+2
  5821     00E7  0825               	movf	(_SumData_GND+1)^(0+128),w
  5822     00E8  00F5               	movwf	___aldiv@dividend+1
  5823     00E9  0824               	movf	_SumData_GND^(0+128),w
  5824     00EA  00F4               	movwf	___aldiv@dividend
  5825     00EB  120A  158A  224A  120A  118A  	fcall	___aldiv
  5826     00F0  0873               	movf	?___aldiv+3,w
  5827     00F1  1683               	bsf	3,5	;RP0=1, select bank1
  5828     00F2  1303               	bcf	3,6	;RP1=0, select bank1
  5829     00F3  00A3               	movwf	(_Data_GND+3)^(0+128)
  5830     00F4  0872               	movf	?___aldiv+2,w
  5831     00F5  00A2               	movwf	(_Data_GND+2)^(0+128)
  5832     00F6  0871               	movf	?___aldiv+1,w
  5833     00F7  00A1               	movwf	(_Data_GND+1)^(0+128)
  5834     00F8  0870               	movf	?___aldiv,w
  5835     00F9  00A0               	movwf	_Data_GND^(0+128)
  5836     00FA                     i1l3142:
  5837                           
  5838                           ;Digitizer24bitsV0.c: 225:                 print_value(Data_GND);
  5839     00FA  0823               	movf	(_Data_GND+3)^(0+128),w
  5840     00FB  00F4               	movwf	print_value@value+3
  5841     00FC  0822               	movf	(_Data_GND+2)^(0+128),w
  5842     00FD  00F3               	movwf	print_value@value+2
  5843     00FE  0821               	movf	(_Data_GND+1)^(0+128),w
  5844     00FF  00F2               	movwf	print_value@value+1
  5845     0100  0820               	movf	_Data_GND^(0+128),w
  5846     0101  00F1               	movwf	print_value@value
  5847     0102  160A  118A  26E9  120A  118A  	fcall	_print_value
  5848                           
  5849                           ;Digitizer24bitsV0.c: 227:                 break;
  5850     0107  2FB3               	goto	i1l508
  5851     0108                     i1l3144:
  5852                           
  5853                           ;Digitizer24bitsV0.c: 229:                 TransmitCMD_USART('7');
  5854     0108  3037               	movlw	55
  5855     0109  160A  118A  2646  120A  118A  	fcall	_TransmitCMD_USART
  5856                           
  5857                           ;Digitizer24bitsV0.c: 230:                 break;
  5858     010E  2FB3               	goto	i1l508
  5859     010F                     i1l3146:
  5860                           
  5861                           ;Digitizer24bitsV0.c: 232:                 TransmitCMD_USART('8');
  5862     010F  3038               	movlw	56
  5863     0110  160A  118A  2646  120A  118A  	fcall	_TransmitCMD_USART
  5864     0115                     i1l3148:
  5865                           
  5866                           ;Digitizer24bitsV0.c: 235:                 CmdGPS = 3;
  5867     0115  3003               	movlw	3
  5868     0116  1283               	bcf	3,5	;RP0=0, select bank0
  5869     0117  1303               	bcf	3,6	;RP1=0, select bank0
  5870     0118  00CE               	movwf	_CmdGPS
  5871     0119                     i1l3150:
  5872                           
  5873                           ;Digitizer24bitsV0.c: 236:                 OPTION_REGbits.INTEDG = 0;
  5874     0119  1683               	bsf	3,5	;RP0=1, select bank1
  5875     011A  1303               	bcf	3,6	;RP1=0, select bank1
  5876     011B  1301               	bcf	1,6	;volatile
  5877     011C                     i1l3152:
  5878                           
  5879                           ;Digitizer24bitsV0.c: 237:                 INTCONbits.INTF = 0;
  5880     011C  108B               	bcf	11,1	;volatile
  5881     011D                     i1l3154:
  5882                           
  5883                           ;Digitizer24bitsV0.c: 238:                 INTCONbits.INTE = 1;
  5884     011D  160B               	bsf	11,4	;volatile
  5885                           
  5886                           ;Digitizer24bitsV0.c: 240:                 break;
  5887     011E  2FB3               	goto	i1l508
  5888     011F                     i1l481:	
  5889                           ;Digitizer24bitsV0.c: 241:             case '9':
  5890                           
  5891                           
  5892                           ;Digitizer24bitsV0.c: 243:                 PORTAbits.RA2 = 1;
  5893     011F  1505               	bsf	5,2	;volatile
  5894     0120                     i1l3156:
  5895                           
  5896                           ;Digitizer24bitsV0.c: 246:                 TMR1H = 0x10;
  5897     0120  3010               	movlw	16
  5898     0121  008F               	movwf	15	;volatile
  5899                           
  5900                           ;Digitizer24bitsV0.c: 247:                 TMR1L = 0x06;
  5901     0122  3006               	movlw	6
  5902     0123  008E               	movwf	14	;volatile
  5903                           
  5904                           ;Digitizer24bitsV0.c: 248:                 T1CON = 0x31;
  5905     0124  3031               	movlw	49
  5906     0125  0090               	movwf	16	;volatile
  5907     0126                     i1l3158:
  5908                           
  5909                           ;Digitizer24bitsV0.c: 249:                 PIR1bits.TMR1IF = 0;
  5910     0126  100C               	bcf	12,0	;volatile
  5911     0127                     i1l3160:
  5912                           
  5913                           ;Digitizer24bitsV0.c: 250:                 PIE1bits.TMR1IE = 1;
  5914     0127  1683               	bsf	3,5	;RP0=1, select bank1
  5915     0128  1303               	bcf	3,6	;RP1=0, select bank1
  5916     0129  140C               	bsf	12,0	;volatile
  5917     012A                     i1l3162:
  5918                           
  5919                           ;Digitizer24bitsV0.c: 252:                 TransmitCMD_USART('9');
  5920     012A  3039               	movlw	57
  5921     012B  160A  118A  2646  120A  118A  	fcall	_TransmitCMD_USART
  5922     0130                     i1l3164:
  5923                           
  5924                           ;Digitizer24bitsV0.c: 254:                 TransferByte_SPI(0xC0);
  5925     0130  30C0               	movlw	192
  5926     0131  160A  118A  2611  120A  118A  	fcall	_TransferByte_SPI
  5927     0136                     i1l3166:
  5928                           
  5929                           ;Digitizer24bitsV0.c: 257:                 ContaSample = 0;
  5930     0136  1283               	bcf	3,5	;RP0=0, select bank0
  5931     0137  1303               	bcf	3,6	;RP1=0, select bank0
  5932     0138  01CC               	clrf	_ContaSample
  5933     0139                     i1l3168:
  5934                           
  5935                           ;Digitizer24bitsV0.c: 258:                 ControlSample = 0;
  5936     0139  01CD               	clrf	_ControlSample
  5937     013A                     i1l3170:
  5938                           
  5939                           ;Digitizer24bitsV0.c: 261:                 print_string("G-JRODATEXXXXXXXXXXXX\n\r");
  5940     013A  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5941     013B  00F1               	movwf	print_string@str
  5942     013C  3080               	movlw	128
  5943     013D  00F2               	movwf	print_string@str+1
  5944     013E  160A  118A  269B  120A  118A  	fcall	_print_string
  5945     0143                     i1l3172:
  5946                           
  5947                           ;Digitizer24bitsV0.c: 265:                 CleanHolding();
  5948     0143  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  5949     0148                     i1l3174:
  5950                           
  5951                           ;Digitizer24bitsV0.c: 267:                 PORTB = 0x38;
  5952     0148  3038               	movlw	56
  5953     0149  1283               	bcf	3,5	;RP0=0, select bank0
  5954     014A  1303               	bcf	3,6	;RP1=0, select bank0
  5955     014B  0086               	movwf	6	;volatile
  5956     014C                     i1l3176:
  5957                           
  5958                           ;Digitizer24bitsV0.c: 268:                 PORTBbits.RB7 = 1;
  5959     014C  1786               	bsf	6,7	;volatile
  5960     014D                     i1l3178:
  5961                           
  5962                           ;Digitizer24bitsV0.c: 269:                 _delay((unsigned long)((7)*(9830400UL/4000.0)
      +                          ));
  5963     014D  3017               	movlw	23
  5964     014E  1283               	bcf	3,5	;RP0=0, select bank0
  5965     014F  1303               	bcf	3,6	;RP1=0, select bank0
  5966     0150  00E4               	movwf	??_Interrups+1
  5967     0151  3055               	movlw	85
  5968     0152  00E3               	movwf	??_Interrups
  5969     0153                     u174_27:
  5970     0153  0BE3               	decfsz	??_Interrups,f
  5971     0154  2953               	goto	u174_27
  5972     0155  0BE4               	decfsz	??_Interrups+1,f
  5973     0156  2953               	goto	u174_27
  5974     0157  0000               	nop
  5975     0158                     i1l3180:
  5976                           
  5977                           ;Digitizer24bitsV0.c: 270:                 SumData_X = 0;
  5978     0158  3000               	movlw	0
  5979     0159  1283               	bcf	3,5	;RP0=0, select bank0
  5980     015A  1303               	bcf	3,6	;RP1=0, select bank0
  5981     015B  00C7               	movwf	_SumData_X+3
  5982     015C  3000               	movlw	0
  5983     015D  00C6               	movwf	_SumData_X+2
  5984     015E  3000               	movlw	0
  5985     015F  00C5               	movwf	_SumData_X+1
  5986     0160  3000               	movlw	0
  5987     0161  00C4               	movwf	_SumData_X
  5988     0162                     i1l3182:
  5989                           
  5990                           ;Digitizer24bitsV0.c: 271:                 ReadAD24(0,0x00);
  5991     0162  01D6               	clrf	ReadAD24@cmd_convert
  5992     0163  3000               	movlw	0
  5993     0164  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  5994     0169                     i1l3184:
  5995                           
  5996                           ;Digitizer24bitsV0.c: 272:                 for(conta=0; conta<5; conta++){
  5997     0169  1283               	bcf	3,5	;RP0=0, select bank0
  5998     016A  1303               	bcf	3,6	;RP1=0, select bank0
  5999     016B  01EC               	clrf	Interrups@conta
  6000     016C                     i1l3190:
  6001                           
  6002                           ;Digitizer24bitsV0.c: 273:                     Data_X = ReadAD24(1,0x00);
  6003     016C  01D6               	clrf	ReadAD24@cmd_convert
  6004     016D  3001               	movlw	1
  6005     016E  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6006     0173  1283               	bcf	3,5	;RP0=0, select bank0
  6007     0174  1303               	bcf	3,6	;RP1=0, select bank0
  6008     0175  0859               	movf	?_ReadAD24+3,w
  6009     0176  00B3               	movwf	_Data_X+3
  6010     0177  0858               	movf	?_ReadAD24+2,w
  6011     0178  00B2               	movwf	_Data_X+2
  6012     0179  0857               	movf	?_ReadAD24+1,w
  6013     017A  00B1               	movwf	_Data_X+1
  6014     017B  0856               	movf	?_ReadAD24,w
  6015     017C  00B0               	movwf	_Data_X
  6016     017D                     i1l3192:
  6017                           
  6018                           ;Digitizer24bitsV0.c: 274:                     SumData_X = SumData_X + Data_X;
  6019     017D  0844               	movf	_SumData_X,w
  6020     017E  0730               	addwf	_Data_X,w
  6021     017F  00E3               	movwf	??_Interrups
  6022     0180  3000               	movlw	0
  6023     0181  1803               	skipnc
  6024     0182  3001               	movlw	1
  6025     0183  0745               	addwf	_SumData_X+1,w
  6026     0184  01E5               	clrf	??_Interrups+2
  6027     0185  1803               	skipnc
  6028     0186  0AE5               	incf	??_Interrups+2,f
  6029     0187  0731               	addwf	_Data_X+1,w
  6030     0188  00E4               	movwf	??_Interrups+1
  6031     0189  1803               	skipnc
  6032     018A  0AE5               	incf	??_Interrups+2,f
  6033     018B  0846               	movf	_SumData_X+2,w
  6034     018C  0765               	addwf	??_Interrups+2,w
  6035     018D  01E6               	clrf	??_Interrups+3
  6036     018E  1803               	skipnc
  6037     018F  0AE6               	incf	??_Interrups+3,f
  6038     0190  0732               	addwf	_Data_X+2,w
  6039     0191  00E5               	movwf	??_Interrups+2
  6040     0192  1803               	skipnc
  6041     0193  0AE6               	incf	??_Interrups+3,f
  6042     0194  0847               	movf	_SumData_X+3,w
  6043     0195  0766               	addwf	??_Interrups+3,w
  6044     0196  0733               	addwf	_Data_X+3,w
  6045     0197  00E6               	movwf	??_Interrups+3
  6046     0198  0866               	movf	??_Interrups+3,w
  6047     0199  00C7               	movwf	_SumData_X+3
  6048     019A  0865               	movf	??_Interrups+2,w
  6049     019B  00C6               	movwf	_SumData_X+2
  6050     019C  0864               	movf	??_Interrups+1,w
  6051     019D  00C5               	movwf	_SumData_X+1
  6052     019E  0863               	movf	??_Interrups,w
  6053     019F  00C4               	movwf	_SumData_X
  6054     01A0                     i1l3194:
  6055                           
  6056                           ;Digitizer24bitsV0.c: 275:                 }
  6057     01A0  3001               	movlw	1
  6058     01A1  00FF               	movwf	btemp+1
  6059     01A2  087F               	movf	btemp+1,w
  6060     01A3  07EC               	addwf	Interrups@conta,f
  6061     01A4                     i1l3196:
  6062     01A4  3005               	movlw	5
  6063     01A5  026C               	subwf	Interrups@conta,w
  6064     01A6  1C03               	skipc
  6065     01A7  29A9               	goto	u153_21
  6066     01A8  29AA               	goto	u153_20
  6067     01A9                     u153_21:
  6068     01A9  296C               	goto	i1l3190
  6069     01AA                     u153_20:
  6070     01AA                     i1l483:
  6071                           
  6072                           ;Digitizer24bitsV0.c: 276:                 PORTBbits.RB7 = 0;
  6073     01AA  1386               	bcf	6,7	;volatile
  6074     01AB                     i1l3198:
  6075                           
  6076                           ;Digitizer24bitsV0.c: 278:                 CleanHolding();
  6077     01AB  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  6078     01B0                     i1l3200:
  6079                           
  6080                           ;Digitizer24bitsV0.c: 280:                 PORTB = 0x18;
  6081     01B0  3018               	movlw	24
  6082     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  6083     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  6084     01B3  0086               	movwf	6	;volatile
  6085     01B4                     i1l3202:
  6086                           
  6087                           ;Digitizer24bitsV0.c: 281:                 _delay((unsigned long)((7)*(9830400UL/4000.0)
      +                          ));
  6088     01B4  3017               	movlw	23
  6089     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  6090     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  6091     01B7  00E4               	movwf	??_Interrups+1
  6092     01B8  3055               	movlw	85
  6093     01B9  00E3               	movwf	??_Interrups
  6094     01BA                     u175_27:
  6095     01BA  0BE3               	decfsz	??_Interrups,f
  6096     01BB  29BA               	goto	u175_27
  6097     01BC  0BE4               	decfsz	??_Interrups+1,f
  6098     01BD  29BA               	goto	u175_27
  6099     01BE  0000               	nop
  6100     01BF                     i1l3204:
  6101                           
  6102                           ;Digitizer24bitsV0.c: 282:                 SumData_Y = 0;
  6103     01BF  3000               	movlw	0
  6104     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  6105     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  6106     01C2  00C3               	movwf	_SumData_Y+3
  6107     01C3  3000               	movlw	0
  6108     01C4  00C2               	movwf	_SumData_Y+2
  6109     01C5  3000               	movlw	0
  6110     01C6  00C1               	movwf	_SumData_Y+1
  6111     01C7  3000               	movlw	0
  6112     01C8  00C0               	movwf	_SumData_Y
  6113     01C9                     i1l3206:
  6114                           
  6115                           ;Digitizer24bitsV0.c: 283:                 ReadAD24(0,0x00);
  6116     01C9  01D6               	clrf	ReadAD24@cmd_convert
  6117     01CA  3000               	movlw	0
  6118     01CB  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6119     01D0                     i1l3208:
  6120                           
  6121                           ;Digitizer24bitsV0.c: 284:                 for(conta=0; conta<5; conta++){
  6122     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  6123     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  6124     01D2  01EC               	clrf	Interrups@conta
  6125     01D3                     i1l3214:
  6126                           
  6127                           ;Digitizer24bitsV0.c: 285:                     Data_Y = ReadAD24(1,0x00);
  6128     01D3  01D6               	clrf	ReadAD24@cmd_convert
  6129     01D4  3001               	movlw	1
  6130     01D5  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6131     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  6132     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  6133     01DC  0859               	movf	?_ReadAD24+3,w
  6134     01DD  00AF               	movwf	_Data_Y+3
  6135     01DE  0858               	movf	?_ReadAD24+2,w
  6136     01DF  00AE               	movwf	_Data_Y+2
  6137     01E0  0857               	movf	?_ReadAD24+1,w
  6138     01E1  00AD               	movwf	_Data_Y+1
  6139     01E2  0856               	movf	?_ReadAD24,w
  6140     01E3  00AC               	movwf	_Data_Y
  6141     01E4                     i1l3216:
  6142                           
  6143                           ;Digitizer24bitsV0.c: 286:                     SumData_Y = SumData_Y + Data_Y;
  6144     01E4  0840               	movf	_SumData_Y,w
  6145     01E5  072C               	addwf	_Data_Y,w
  6146     01E6  00E3               	movwf	??_Interrups
  6147     01E7  3000               	movlw	0
  6148     01E8  1803               	skipnc
  6149     01E9  3001               	movlw	1
  6150     01EA  0741               	addwf	_SumData_Y+1,w
  6151     01EB  01E5               	clrf	??_Interrups+2
  6152     01EC  1803               	skipnc
  6153     01ED  0AE5               	incf	??_Interrups+2,f
  6154     01EE  072D               	addwf	_Data_Y+1,w
  6155     01EF  00E4               	movwf	??_Interrups+1
  6156     01F0  1803               	skipnc
  6157     01F1  0AE5               	incf	??_Interrups+2,f
  6158     01F2  0842               	movf	_SumData_Y+2,w
  6159     01F3  0765               	addwf	??_Interrups+2,w
  6160     01F4  01E6               	clrf	??_Interrups+3
  6161     01F5  1803               	skipnc
  6162     01F6  0AE6               	incf	??_Interrups+3,f
  6163     01F7  072E               	addwf	_Data_Y+2,w
  6164     01F8  00E5               	movwf	??_Interrups+2
  6165     01F9  1803               	skipnc
  6166     01FA  0AE6               	incf	??_Interrups+3,f
  6167     01FB  0843               	movf	_SumData_Y+3,w
  6168     01FC  0766               	addwf	??_Interrups+3,w
  6169     01FD  072F               	addwf	_Data_Y+3,w
  6170     01FE  00E6               	movwf	??_Interrups+3
  6171     01FF  0866               	movf	??_Interrups+3,w
  6172     0200  00C3               	movwf	_SumData_Y+3
  6173     0201  0865               	movf	??_Interrups+2,w
  6174     0202  00C2               	movwf	_SumData_Y+2
  6175     0203  0864               	movf	??_Interrups+1,w
  6176     0204  00C1               	movwf	_SumData_Y+1
  6177     0205  0863               	movf	??_Interrups,w
  6178     0206  00C0               	movwf	_SumData_Y
  6179     0207                     i1l3218:
  6180                           
  6181                           ;Digitizer24bitsV0.c: 287:                 }
  6182     0207  3001               	movlw	1
  6183     0208  00FF               	movwf	btemp+1
  6184     0209  087F               	movf	btemp+1,w
  6185     020A  07EC               	addwf	Interrups@conta,f
  6186     020B                     i1l3220:
  6187     020B  3005               	movlw	5
  6188     020C  026C               	subwf	Interrups@conta,w
  6189     020D  1C03               	skipc
  6190     020E  2A10               	goto	u154_21
  6191     020F  2A11               	goto	u154_20
  6192     0210                     u154_21:
  6193     0210  29D3               	goto	i1l3214
  6194     0211                     u154_20:
  6195     0211                     i1l3222:
  6196                           
  6197                           ;Digitizer24bitsV0.c: 289:                 CleanHolding();
  6198     0211  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  6199     0216                     i1l3224:
  6200                           
  6201                           ;Digitizer24bitsV0.c: 291:                 PORTB = 0x28;
  6202     0216  3028               	movlw	40
  6203     0217  1283               	bcf	3,5	;RP0=0, select bank0
  6204     0218  1303               	bcf	3,6	;RP1=0, select bank0
  6205     0219  0086               	movwf	6	;volatile
  6206     021A                     i1l3226:
  6207                           
  6208                           ;Digitizer24bitsV0.c: 292:                 _delay((unsigned long)((7)*(9830400UL/4000.0)
      +                          ));
  6209     021A  3017               	movlw	23
  6210     021B  1283               	bcf	3,5	;RP0=0, select bank0
  6211     021C  1303               	bcf	3,6	;RP1=0, select bank0
  6212     021D  00E4               	movwf	??_Interrups+1
  6213     021E  3055               	movlw	85
  6214     021F  00E3               	movwf	??_Interrups
  6215     0220                     u176_27:
  6216     0220  0BE3               	decfsz	??_Interrups,f
  6217     0221  2A20               	goto	u176_27
  6218     0222  0BE4               	decfsz	??_Interrups+1,f
  6219     0223  2A20               	goto	u176_27
  6220     0224  0000               	nop
  6221     0225                     i1l3228:
  6222                           
  6223                           ;Digitizer24bitsV0.c: 293:                 SumData_Z = 0;
  6224     0225  3000               	movlw	0
  6225     0226  1283               	bcf	3,5	;RP0=0, select bank0
  6226     0227  1303               	bcf	3,6	;RP1=0, select bank0
  6227     0228  00BF               	movwf	_SumData_Z+3
  6228     0229  3000               	movlw	0
  6229     022A  00BE               	movwf	_SumData_Z+2
  6230     022B  3000               	movlw	0
  6231     022C  00BD               	movwf	_SumData_Z+1
  6232     022D  3000               	movlw	0
  6233     022E  00BC               	movwf	_SumData_Z
  6234     022F                     i1l3230:
  6235                           
  6236                           ;Digitizer24bitsV0.c: 294:                 ReadAD24(0,0x00);
  6237     022F  01D6               	clrf	ReadAD24@cmd_convert
  6238     0230  3000               	movlw	0
  6239     0231  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6240     0236                     i1l3232:
  6241                           
  6242                           ;Digitizer24bitsV0.c: 295:                 for(conta=0; conta<5; conta++){
  6243     0236  1283               	bcf	3,5	;RP0=0, select bank0
  6244     0237  1303               	bcf	3,6	;RP1=0, select bank0
  6245     0238  01EC               	clrf	Interrups@conta
  6246     0239                     i1l3238:
  6247                           
  6248                           ;Digitizer24bitsV0.c: 296:                     Data_Z = ReadAD24(1,0x00);
  6249     0239  01D6               	clrf	ReadAD24@cmd_convert
  6250     023A  3001               	movlw	1
  6251     023B  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6252     0240  1283               	bcf	3,5	;RP0=0, select bank0
  6253     0241  1303               	bcf	3,6	;RP1=0, select bank0
  6254     0242  0859               	movf	?_ReadAD24+3,w
  6255     0243  00AB               	movwf	_Data_Z+3
  6256     0244  0858               	movf	?_ReadAD24+2,w
  6257     0245  00AA               	movwf	_Data_Z+2
  6258     0246  0857               	movf	?_ReadAD24+1,w
  6259     0247  00A9               	movwf	_Data_Z+1
  6260     0248  0856               	movf	?_ReadAD24,w
  6261     0249  00A8               	movwf	_Data_Z
  6262     024A                     i1l3240:
  6263                           
  6264                           ;Digitizer24bitsV0.c: 297:                     SumData_Z = SumData_Z + Data_Z;
  6265     024A  083C               	movf	_SumData_Z,w
  6266     024B  0728               	addwf	_Data_Z,w
  6267     024C  00E3               	movwf	??_Interrups
  6268     024D  3000               	movlw	0
  6269     024E  1803               	skipnc
  6270     024F  3001               	movlw	1
  6271     0250  073D               	addwf	_SumData_Z+1,w
  6272     0251  01E5               	clrf	??_Interrups+2
  6273     0252  1803               	skipnc
  6274     0253  0AE5               	incf	??_Interrups+2,f
  6275     0254  0729               	addwf	_Data_Z+1,w
  6276     0255  00E4               	movwf	??_Interrups+1
  6277     0256  1803               	skipnc
  6278     0257  0AE5               	incf	??_Interrups+2,f
  6279     0258  083E               	movf	_SumData_Z+2,w
  6280     0259  0765               	addwf	??_Interrups+2,w
  6281     025A  01E6               	clrf	??_Interrups+3
  6282     025B  1803               	skipnc
  6283     025C  0AE6               	incf	??_Interrups+3,f
  6284     025D  072A               	addwf	_Data_Z+2,w
  6285     025E  00E5               	movwf	??_Interrups+2
  6286     025F  1803               	skipnc
  6287     0260  0AE6               	incf	??_Interrups+3,f
  6288     0261  083F               	movf	_SumData_Z+3,w
  6289     0262  0766               	addwf	??_Interrups+3,w
  6290     0263  072B               	addwf	_Data_Z+3,w
  6291     0264  00E6               	movwf	??_Interrups+3
  6292     0265  0866               	movf	??_Interrups+3,w
  6293     0266  00BF               	movwf	_SumData_Z+3
  6294     0267  0865               	movf	??_Interrups+2,w
  6295     0268  00BE               	movwf	_SumData_Z+2
  6296     0269  0864               	movf	??_Interrups+1,w
  6297     026A  00BD               	movwf	_SumData_Z+1
  6298     026B  0863               	movf	??_Interrups,w
  6299     026C  00BC               	movwf	_SumData_Z
  6300     026D                     i1l3242:
  6301                           
  6302                           ;Digitizer24bitsV0.c: 298:                 }
  6303     026D  3001               	movlw	1
  6304     026E  00FF               	movwf	btemp+1
  6305     026F  087F               	movf	btemp+1,w
  6306     0270  07EC               	addwf	Interrups@conta,f
  6307     0271                     i1l3244:
  6308     0271  3005               	movlw	5
  6309     0272  026C               	subwf	Interrups@conta,w
  6310     0273  1C03               	skipc
  6311     0274  2A76               	goto	u155_21
  6312     0275  2A77               	goto	u155_20
  6313     0276                     u155_21:
  6314     0276  2A39               	goto	i1l3238
  6315     0277                     u155_20:
  6316     0277                     i1l3246:
  6317                           
  6318                           ;Digitizer24bitsV0.c: 300:                 CleanHolding();
  6319     0277  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  6320     027C                     i1l3248:
  6321                           
  6322                           ;Digitizer24bitsV0.c: 302:                 PORTB = 0x08;
  6323     027C  3008               	movlw	8
  6324     027D  1283               	bcf	3,5	;RP0=0, select bank0
  6325     027E  1303               	bcf	3,6	;RP1=0, select bank0
  6326     027F  0086               	movwf	6	;volatile
  6327     0280                     i1l3250:
  6328                           
  6329                           ;Digitizer24bitsV0.c: 303:                 _delay((unsigned long)((7)*(9830400UL/4000.0)
      +                          ));
  6330     0280  3017               	movlw	23
  6331     0281  1283               	bcf	3,5	;RP0=0, select bank0
  6332     0282  1303               	bcf	3,6	;RP1=0, select bank0
  6333     0283  00E4               	movwf	??_Interrups+1
  6334     0284  3055               	movlw	85
  6335     0285  00E3               	movwf	??_Interrups
  6336     0286                     u177_27:
  6337     0286  0BE3               	decfsz	??_Interrups,f
  6338     0287  2A86               	goto	u177_27
  6339     0288  0BE4               	decfsz	??_Interrups+1,f
  6340     0289  2A86               	goto	u177_27
  6341     028A  0000               	nop
  6342     028B                     i1l3252:
  6343                           
  6344                           ;Digitizer24bitsV0.c: 304:                 SumData_TC = 0;
  6345     028B  3000               	movlw	0
  6346     028C  1283               	bcf	3,5	;RP0=0, select bank0
  6347     028D  1303               	bcf	3,6	;RP1=0, select bank0
  6348     028E  00BB               	movwf	_SumData_TC+3
  6349     028F  3000               	movlw	0
  6350     0290  00BA               	movwf	_SumData_TC+2
  6351     0291  3000               	movlw	0
  6352     0292  00B9               	movwf	_SumData_TC+1
  6353     0293  3000               	movlw	0
  6354     0294  00B8               	movwf	_SumData_TC
  6355     0295                     i1l3254:
  6356                           
  6357                           ;Digitizer24bitsV0.c: 305:                 ReadAD24(0,0x00);
  6358     0295  01D6               	clrf	ReadAD24@cmd_convert
  6359     0296  3000               	movlw	0
  6360     0297  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6361     029C                     i1l3256:
  6362                           
  6363                           ;Digitizer24bitsV0.c: 306:                 for(conta=0; conta<5; conta++){
  6364     029C  1283               	bcf	3,5	;RP0=0, select bank0
  6365     029D  1303               	bcf	3,6	;RP1=0, select bank0
  6366     029E  01EC               	clrf	Interrups@conta
  6367     029F                     i1l3262:
  6368                           
  6369                           ;Digitizer24bitsV0.c: 307:                     Data_TC = ReadAD24(1,0x00);
  6370     029F  01D6               	clrf	ReadAD24@cmd_convert
  6371     02A0  3001               	movlw	1
  6372     02A1  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6373     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  6374     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  6375     02A8  0859               	movf	?_ReadAD24+3,w
  6376     02A9  00A7               	movwf	_Data_TC+3
  6377     02AA  0858               	movf	?_ReadAD24+2,w
  6378     02AB  00A6               	movwf	_Data_TC+2
  6379     02AC  0857               	movf	?_ReadAD24+1,w
  6380     02AD  00A5               	movwf	_Data_TC+1
  6381     02AE  0856               	movf	?_ReadAD24,w
  6382     02AF  00A4               	movwf	_Data_TC
  6383     02B0                     i1l3264:
  6384                           
  6385                           ;Digitizer24bitsV0.c: 308:                     SumData_TC = SumData_TC + Data_TC;
  6386     02B0  0838               	movf	_SumData_TC,w
  6387     02B1  0724               	addwf	_Data_TC,w
  6388     02B2  00E3               	movwf	??_Interrups
  6389     02B3  3000               	movlw	0
  6390     02B4  1803               	skipnc
  6391     02B5  3001               	movlw	1
  6392     02B6  0739               	addwf	_SumData_TC+1,w
  6393     02B7  01E5               	clrf	??_Interrups+2
  6394     02B8  1803               	skipnc
  6395     02B9  0AE5               	incf	??_Interrups+2,f
  6396     02BA  0725               	addwf	_Data_TC+1,w
  6397     02BB  00E4               	movwf	??_Interrups+1
  6398     02BC  1803               	skipnc
  6399     02BD  0AE5               	incf	??_Interrups+2,f
  6400     02BE  083A               	movf	_SumData_TC+2,w
  6401     02BF  0765               	addwf	??_Interrups+2,w
  6402     02C0  01E6               	clrf	??_Interrups+3
  6403     02C1  1803               	skipnc
  6404     02C2  0AE6               	incf	??_Interrups+3,f
  6405     02C3  0726               	addwf	_Data_TC+2,w
  6406     02C4  00E5               	movwf	??_Interrups+2
  6407     02C5  1803               	skipnc
  6408     02C6  0AE6               	incf	??_Interrups+3,f
  6409     02C7  083B               	movf	_SumData_TC+3,w
  6410     02C8  0766               	addwf	??_Interrups+3,w
  6411     02C9  0727               	addwf	_Data_TC+3,w
  6412     02CA  00E6               	movwf	??_Interrups+3
  6413     02CB  0866               	movf	??_Interrups+3,w
  6414     02CC  00BB               	movwf	_SumData_TC+3
  6415     02CD  0865               	movf	??_Interrups+2,w
  6416     02CE  00BA               	movwf	_SumData_TC+2
  6417     02CF  0864               	movf	??_Interrups+1,w
  6418     02D0  00B9               	movwf	_SumData_TC+1
  6419     02D1  0863               	movf	??_Interrups,w
  6420     02D2  00B8               	movwf	_SumData_TC
  6421     02D3                     i1l3266:
  6422                           
  6423                           ;Digitizer24bitsV0.c: 309:                 }
  6424     02D3  3001               	movlw	1
  6425     02D4  00FF               	movwf	btemp+1
  6426     02D5  087F               	movf	btemp+1,w
  6427     02D6  07EC               	addwf	Interrups@conta,f
  6428     02D7                     i1l3268:
  6429     02D7  3005               	movlw	5
  6430     02D8  026C               	subwf	Interrups@conta,w
  6431     02D9  1C03               	skipc
  6432     02DA  2ADC               	goto	u156_21
  6433     02DB  2ADD               	goto	u156_20
  6434     02DC                     u156_21:
  6435     02DC  2A9F               	goto	i1l3262
  6436     02DD                     u156_20:
  6437     02DD                     i1l3270:
  6438                           
  6439                           ;Digitizer24bitsV0.c: 311:                 CleanHolding();
  6440     02DD  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  6441     02E2                     i1l3272:
  6442                           
  6443                           ;Digitizer24bitsV0.c: 313:                 PORTB = 0x04;
  6444     02E2  3004               	movlw	4
  6445     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6446     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  6447     02E5  0086               	movwf	6	;volatile
  6448     02E6                     i1l3274:
  6449                           
  6450                           ;Digitizer24bitsV0.c: 314:                 _delay((unsigned long)((7)*(9830400UL/4000.0)
      +                          ));
  6451     02E6  3017               	movlw	23
  6452     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  6453     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  6454     02E9  00E4               	movwf	??_Interrups+1
  6455     02EA  3055               	movlw	85
  6456     02EB  00E3               	movwf	??_Interrups
  6457     02EC                     u178_27:
  6458     02EC  0BE3               	decfsz	??_Interrups,f
  6459     02ED  2AEC               	goto	u178_27
  6460     02EE  0BE4               	decfsz	??_Interrups+1,f
  6461     02EF  2AEC               	goto	u178_27
  6462     02F0  0000               	nop
  6463     02F1                     i1l3276:
  6464                           
  6465                           ;Digitizer24bitsV0.c: 315:                 SumData_TS = 0;
  6466     02F1  3000               	movlw	0
  6467     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  6468     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  6469     02F4  00B7               	movwf	_SumData_TS+3
  6470     02F5  3000               	movlw	0
  6471     02F6  00B6               	movwf	_SumData_TS+2
  6472     02F7  3000               	movlw	0
  6473     02F8  00B5               	movwf	_SumData_TS+1
  6474     02F9  3000               	movlw	0
  6475     02FA  00B4               	movwf	_SumData_TS
  6476     02FB                     i1l3278:
  6477                           
  6478                           ;Digitizer24bitsV0.c: 316:                 ReadAD24(0,0x00);
  6479     02FB  01D6               	clrf	ReadAD24@cmd_convert
  6480     02FC  3000               	movlw	0
  6481     02FD  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6482     0302                     i1l3280:
  6483                           
  6484                           ;Digitizer24bitsV0.c: 317:                 for(conta=0; conta<5; conta++){
  6485     0302  1283               	bcf	3,5	;RP0=0, select bank0
  6486     0303  1303               	bcf	3,6	;RP1=0, select bank0
  6487     0304  01EC               	clrf	Interrups@conta
  6488     0305                     i1l3286:
  6489                           
  6490                           ;Digitizer24bitsV0.c: 318:                     Data_TS = ReadAD24(1,0x00);
  6491     0305  01D6               	clrf	ReadAD24@cmd_convert
  6492     0306  3001               	movlw	1
  6493     0307  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6494     030C  1283               	bcf	3,5	;RP0=0, select bank0
  6495     030D  1303               	bcf	3,6	;RP1=0, select bank0
  6496     030E  0859               	movf	?_ReadAD24+3,w
  6497     030F  00A3               	movwf	_Data_TS+3
  6498     0310  0858               	movf	?_ReadAD24+2,w
  6499     0311  00A2               	movwf	_Data_TS+2
  6500     0312  0857               	movf	?_ReadAD24+1,w
  6501     0313  00A1               	movwf	_Data_TS+1
  6502     0314  0856               	movf	?_ReadAD24,w
  6503     0315  00A0               	movwf	_Data_TS
  6504     0316                     i1l3288:
  6505                           
  6506                           ;Digitizer24bitsV0.c: 319:                     SumData_TS = SumData_TS + Data_TS;
  6507     0316  0834               	movf	_SumData_TS,w
  6508     0317  0720               	addwf	_Data_TS,w
  6509     0318  00E3               	movwf	??_Interrups
  6510     0319  3000               	movlw	0
  6511     031A  1803               	skipnc
  6512     031B  3001               	movlw	1
  6513     031C  0735               	addwf	_SumData_TS+1,w
  6514     031D  01E5               	clrf	??_Interrups+2
  6515     031E  1803               	skipnc
  6516     031F  0AE5               	incf	??_Interrups+2,f
  6517     0320  0721               	addwf	_Data_TS+1,w
  6518     0321  00E4               	movwf	??_Interrups+1
  6519     0322  1803               	skipnc
  6520     0323  0AE5               	incf	??_Interrups+2,f
  6521     0324  0836               	movf	_SumData_TS+2,w
  6522     0325  0765               	addwf	??_Interrups+2,w
  6523     0326  01E6               	clrf	??_Interrups+3
  6524     0327  1803               	skipnc
  6525     0328  0AE6               	incf	??_Interrups+3,f
  6526     0329  0722               	addwf	_Data_TS+2,w
  6527     032A  00E5               	movwf	??_Interrups+2
  6528     032B  1803               	skipnc
  6529     032C  0AE6               	incf	??_Interrups+3,f
  6530     032D  0837               	movf	_SumData_TS+3,w
  6531     032E  0766               	addwf	??_Interrups+3,w
  6532     032F  0723               	addwf	_Data_TS+3,w
  6533     0330  00E6               	movwf	??_Interrups+3
  6534     0331  0866               	movf	??_Interrups+3,w
  6535     0332  00B7               	movwf	_SumData_TS+3
  6536     0333  0865               	movf	??_Interrups+2,w
  6537     0334  00B6               	movwf	_SumData_TS+2
  6538     0335  0864               	movf	??_Interrups+1,w
  6539     0336  00B5               	movwf	_SumData_TS+1
  6540     0337  0863               	movf	??_Interrups,w
  6541     0338  00B4               	movwf	_SumData_TS
  6542     0339                     i1l3290:
  6543                           
  6544                           ;Digitizer24bitsV0.c: 320:                 }
  6545     0339  3001               	movlw	1
  6546     033A  00FF               	movwf	btemp+1
  6547     033B  087F               	movf	btemp+1,w
  6548     033C  07EC               	addwf	Interrups@conta,f
  6549     033D                     i1l3292:
  6550     033D  3005               	movlw	5
  6551     033E  026C               	subwf	Interrups@conta,w
  6552     033F  1C03               	skipc
  6553     0340  2B42               	goto	u157_21
  6554     0341  2B43               	goto	u157_20
  6555     0342                     u157_21:
  6556     0342  2B05               	goto	i1l3286
  6557     0343                     u157_20:
  6558     0343                     i1l3294:
  6559                           
  6560                           ;Digitizer24bitsV0.c: 323:                 Data_X = SumData_X/5;
  6561     0343  3000               	movlw	0
  6562     0344  00F3               	movwf	___aldiv@divisor+3
  6563     0345  3000               	movlw	0
  6564     0346  00F2               	movwf	___aldiv@divisor+2
  6565     0347  3000               	movlw	0
  6566     0348  00F1               	movwf	___aldiv@divisor+1
  6567     0349  3005               	movlw	5
  6568     034A  00F0               	movwf	___aldiv@divisor
  6569     034B  0847               	movf	_SumData_X+3,w
  6570     034C  00F7               	movwf	___aldiv@dividend+3
  6571     034D  0846               	movf	_SumData_X+2,w
  6572     034E  00F6               	movwf	___aldiv@dividend+2
  6573     034F  0845               	movf	_SumData_X+1,w
  6574     0350  00F5               	movwf	___aldiv@dividend+1
  6575     0351  0844               	movf	_SumData_X,w
  6576     0352  00F4               	movwf	___aldiv@dividend
  6577     0353  120A  158A  224A  120A  118A  	fcall	___aldiv
  6578     0358  0873               	movf	?___aldiv+3,w
  6579     0359  1283               	bcf	3,5	;RP0=0, select bank0
  6580     035A  1303               	bcf	3,6	;RP1=0, select bank0
  6581     035B  00B3               	movwf	_Data_X+3
  6582     035C  0872               	movf	?___aldiv+2,w
  6583     035D  00B2               	movwf	_Data_X+2
  6584     035E  0871               	movf	?___aldiv+1,w
  6585     035F  00B1               	movwf	_Data_X+1
  6586     0360  0870               	movf	?___aldiv,w
  6587     0361  00B0               	movwf	_Data_X
  6588                           
  6589                           ;Digitizer24bitsV0.c: 324:                 Data_Y = SumData_Y/5;
  6590     0362  3000               	movlw	0
  6591     0363  00F3               	movwf	___aldiv@divisor+3
  6592     0364  3000               	movlw	0
  6593     0365  00F2               	movwf	___aldiv@divisor+2
  6594     0366  3000               	movlw	0
  6595     0367  00F1               	movwf	___aldiv@divisor+1
  6596     0368  3005               	movlw	5
  6597     0369  00F0               	movwf	___aldiv@divisor
  6598     036A  0843               	movf	_SumData_Y+3,w
  6599     036B  00F7               	movwf	___aldiv@dividend+3
  6600     036C  0842               	movf	_SumData_Y+2,w
  6601     036D  00F6               	movwf	___aldiv@dividend+2
  6602     036E  0841               	movf	_SumData_Y+1,w
  6603     036F  00F5               	movwf	___aldiv@dividend+1
  6604     0370  0840               	movf	_SumData_Y,w
  6605     0371  00F4               	movwf	___aldiv@dividend
  6606     0372  120A  158A  224A  120A  118A  	fcall	___aldiv
  6607     0377  0873               	movf	?___aldiv+3,w
  6608     0378  1283               	bcf	3,5	;RP0=0, select bank0
  6609     0379  1303               	bcf	3,6	;RP1=0, select bank0
  6610     037A  00AF               	movwf	_Data_Y+3
  6611     037B  0872               	movf	?___aldiv+2,w
  6612     037C  00AE               	movwf	_Data_Y+2
  6613     037D  0871               	movf	?___aldiv+1,w
  6614     037E  00AD               	movwf	_Data_Y+1
  6615     037F  0870               	movf	?___aldiv,w
  6616     0380  00AC               	movwf	_Data_Y
  6617                           
  6618                           ;Digitizer24bitsV0.c: 325:                 Data_Z = SumData_Z/5;
  6619     0381  3000               	movlw	0
  6620     0382  00F3               	movwf	___aldiv@divisor+3
  6621     0383  3000               	movlw	0
  6622     0384  00F2               	movwf	___aldiv@divisor+2
  6623     0385  3000               	movlw	0
  6624     0386  00F1               	movwf	___aldiv@divisor+1
  6625     0387  3005               	movlw	5
  6626     0388  00F0               	movwf	___aldiv@divisor
  6627     0389  083F               	movf	_SumData_Z+3,w
  6628     038A  00F7               	movwf	___aldiv@dividend+3
  6629     038B  083E               	movf	_SumData_Z+2,w
  6630     038C  00F6               	movwf	___aldiv@dividend+2
  6631     038D  083D               	movf	_SumData_Z+1,w
  6632     038E  00F5               	movwf	___aldiv@dividend+1
  6633     038F  083C               	movf	_SumData_Z,w
  6634     0390  00F4               	movwf	___aldiv@dividend
  6635     0391  120A  158A  224A  120A  118A  	fcall	___aldiv
  6636     0396  0873               	movf	?___aldiv+3,w
  6637     0397  1283               	bcf	3,5	;RP0=0, select bank0
  6638     0398  1303               	bcf	3,6	;RP1=0, select bank0
  6639     0399  00AB               	movwf	_Data_Z+3
  6640     039A  0872               	movf	?___aldiv+2,w
  6641     039B  00AA               	movwf	_Data_Z+2
  6642     039C  0871               	movf	?___aldiv+1,w
  6643     039D  00A9               	movwf	_Data_Z+1
  6644     039E  0870               	movf	?___aldiv,w
  6645     039F  00A8               	movwf	_Data_Z
  6646                           
  6647                           ;Digitizer24bitsV0.c: 326:                 Data_TC = SumData_TC/5;
  6648     03A0  3000               	movlw	0
  6649     03A1  00F3               	movwf	___aldiv@divisor+3
  6650     03A2  3000               	movlw	0
  6651     03A3  00F2               	movwf	___aldiv@divisor+2
  6652     03A4  3000               	movlw	0
  6653     03A5  00F1               	movwf	___aldiv@divisor+1
  6654     03A6  3005               	movlw	5
  6655     03A7  00F0               	movwf	___aldiv@divisor
  6656     03A8  083B               	movf	_SumData_TC+3,w
  6657     03A9  00F7               	movwf	___aldiv@dividend+3
  6658     03AA  083A               	movf	_SumData_TC+2,w
  6659     03AB  00F6               	movwf	___aldiv@dividend+2
  6660     03AC  0839               	movf	_SumData_TC+1,w
  6661     03AD  00F5               	movwf	___aldiv@dividend+1
  6662     03AE  0838               	movf	_SumData_TC,w
  6663     03AF  00F4               	movwf	___aldiv@dividend
  6664     03B0  120A  158A  224A  120A  118A  	fcall	___aldiv
  6665     03B5  0873               	movf	?___aldiv+3,w
  6666     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  6667     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  6668     03B8  00A7               	movwf	_Data_TC+3
  6669     03B9  0872               	movf	?___aldiv+2,w
  6670     03BA  00A6               	movwf	_Data_TC+2
  6671     03BB  0871               	movf	?___aldiv+1,w
  6672     03BC  00A5               	movwf	_Data_TC+1
  6673     03BD  0870               	movf	?___aldiv,w
  6674     03BE  00A4               	movwf	_Data_TC
  6675                           
  6676                           ;Digitizer24bitsV0.c: 327:                 Data_TS = SumData_TS/5;
  6677     03BF  3000               	movlw	0
  6678     03C0  00F3               	movwf	___aldiv@divisor+3
  6679     03C1  3000               	movlw	0
  6680     03C2  00F2               	movwf	___aldiv@divisor+2
  6681     03C3  3000               	movlw	0
  6682     03C4  00F1               	movwf	___aldiv@divisor+1
  6683     03C5  3005               	movlw	5
  6684     03C6  00F0               	movwf	___aldiv@divisor
  6685     03C7  0837               	movf	_SumData_TS+3,w
  6686     03C8  00F7               	movwf	___aldiv@dividend+3
  6687     03C9  0836               	movf	_SumData_TS+2,w
  6688     03CA  00F6               	movwf	___aldiv@dividend+2
  6689     03CB  0835               	movf	_SumData_TS+1,w
  6690     03CC  00F5               	movwf	___aldiv@dividend+1
  6691     03CD  0834               	movf	_SumData_TS,w
  6692     03CE  00F4               	movwf	___aldiv@dividend
  6693     03CF  120A  158A  224A  120A  118A  	fcall	___aldiv
  6694     03D4  0873               	movf	?___aldiv+3,w
  6695     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  6696     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  6697     03D7  00A3               	movwf	_Data_TS+3
  6698     03D8  0872               	movf	?___aldiv+2,w
  6699     03D9  00A2               	movwf	_Data_TS+2
  6700     03DA  0871               	movf	?___aldiv+1,w
  6701     03DB  00A1               	movwf	_Data_TS+1
  6702     03DC  0870               	movf	?___aldiv,w
  6703     03DD  00A0               	movwf	_Data_TS
  6704     03DE                     i1l3296:
  6705                           
  6706                           ;Digitizer24bitsV0.c: 330:                 print_string("JROADQ");
  6707     03DE  3039               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  6708     03DF  00F1               	movwf	print_string@str
  6709     03E0  3080               	movlw	128
  6710     03E1  00F2               	movwf	print_string@str+1
  6711     03E2  160A  118A  269B  120A  118A  	fcall	_print_string
  6712     03E7                     i1l3298:
  6713                           
  6714                           ;Digitizer24bitsV0.c: 331:                 WriteByte_USART(ContaSample);
  6715     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  6716     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  6717     03E9  084C               	movf	_ContaSample,w
  6718     03EA  120A  158A  2001  120A  118A  	fcall	_WriteByte_USART
  6719     03EF                     i1l3300:
  6720                           
  6721                           ;Digitizer24bitsV0.c: 332:                 print_value(Data_X);
  6722     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  6723     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  6724     03F1  0833               	movf	_Data_X+3,w
  6725     03F2  00F4               	movwf	print_value@value+3
  6726     03F3  0832               	movf	_Data_X+2,w
  6727     03F4  00F3               	movwf	print_value@value+2
  6728     03F5  0831               	movf	_Data_X+1,w
  6729     03F6  00F2               	movwf	print_value@value+1
  6730     03F7  0830               	movf	_Data_X,w
  6731     03F8  00F1               	movwf	print_value@value
  6732     03F9  160A  118A  26E9  120A  118A  	fcall	_print_value
  6733     03FE                     i1l3302:
  6734                           
  6735                           ;Digitizer24bitsV0.c: 333:                 print_value(Data_Y);
  6736     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  6737     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  6738     0400  082F               	movf	_Data_Y+3,w
  6739     0401  00F4               	movwf	print_value@value+3
  6740     0402  082E               	movf	_Data_Y+2,w
  6741     0403  00F3               	movwf	print_value@value+2
  6742     0404  082D               	movf	_Data_Y+1,w
  6743     0405  00F2               	movwf	print_value@value+1
  6744     0406  082C               	movf	_Data_Y,w
  6745     0407  00F1               	movwf	print_value@value
  6746     0408  160A  118A  26E9  120A  118A  	fcall	_print_value
  6747     040D                     i1l3304:
  6748                           
  6749                           ;Digitizer24bitsV0.c: 334:                 print_value(Data_Z);
  6750     040D  1283               	bcf	3,5	;RP0=0, select bank0
  6751     040E  1303               	bcf	3,6	;RP1=0, select bank0
  6752     040F  082B               	movf	_Data_Z+3,w
  6753     0410  00F4               	movwf	print_value@value+3
  6754     0411  082A               	movf	_Data_Z+2,w
  6755     0412  00F3               	movwf	print_value@value+2
  6756     0413  0829               	movf	_Data_Z+1,w
  6757     0414  00F2               	movwf	print_value@value+1
  6758     0415  0828               	movf	_Data_Z,w
  6759     0416  00F1               	movwf	print_value@value
  6760     0417  160A  118A  26E9  120A  118A  	fcall	_print_value
  6761     041C                     i1l3306:
  6762                           
  6763                           ;Digitizer24bitsV0.c: 335:                 print_value(Data_TC);
  6764     041C  1283               	bcf	3,5	;RP0=0, select bank0
  6765     041D  1303               	bcf	3,6	;RP1=0, select bank0
  6766     041E  0827               	movf	_Data_TC+3,w
  6767     041F  00F4               	movwf	print_value@value+3
  6768     0420  0826               	movf	_Data_TC+2,w
  6769     0421  00F3               	movwf	print_value@value+2
  6770     0422  0825               	movf	_Data_TC+1,w
  6771     0423  00F2               	movwf	print_value@value+1
  6772     0424  0824               	movf	_Data_TC,w
  6773     0425  00F1               	movwf	print_value@value
  6774     0426  160A  118A  26E9  120A  118A  	fcall	_print_value
  6775     042B                     i1l3308:
  6776                           
  6777                           ;Digitizer24bitsV0.c: 336:                 print_value(Data_TS);
  6778     042B  1283               	bcf	3,5	;RP0=0, select bank0
  6779     042C  1303               	bcf	3,6	;RP1=0, select bank0
  6780     042D  0823               	movf	_Data_TS+3,w
  6781     042E  00F4               	movwf	print_value@value+3
  6782     042F  0822               	movf	_Data_TS+2,w
  6783     0430  00F3               	movwf	print_value@value+2
  6784     0431  0821               	movf	_Data_TS+1,w
  6785     0432  00F2               	movwf	print_value@value+1
  6786     0433  0820               	movf	_Data_TS,w
  6787     0434  00F1               	movwf	print_value@value
  6788     0435  160A  118A  26E9  120A  118A  	fcall	_print_value
  6789     043A                     i1l3310:
  6790                           
  6791                           ;Digitizer24bitsV0.c: 337:                 print_string("\n\r");
  6792     043A  3016               	movlw	(low (((STR_9+21)-__stringbase)| (0+32768)))& (0+255)
  6793     043B  00F1               	movwf	print_string@str
  6794     043C  3080               	movlw	128
  6795     043D  00F2               	movwf	print_string@str+1
  6796     043E  160A  118A  269B  120A  118A  	fcall	_print_string
  6797     0443                     i1l3312:
  6798                           
  6799                           ;Digitizer24bitsV0.c: 339:                 PORTAbits.RA2 = 0;
  6800     0443  1283               	bcf	3,5	;RP0=0, select bank0
  6801     0444  1303               	bcf	3,6	;RP1=0, select bank0
  6802     0445  1105               	bcf	5,2	;volatile
  6803                           
  6804                           ;Digitizer24bitsV0.c: 341:                 break;
  6805     0446  2FB3               	goto	i1l508
  6806     0447                     i1l3314:
  6807                           
  6808                           ;Digitizer24bitsV0.c: 343:                 TransmitCMD_USART('X');
  6809     0447  3058               	movlw	88
  6810     0448  160A  118A  2646  120A  118A  	fcall	_TransmitCMD_USART
  6811     044D                     i1l3316:
  6812                           
  6813                           ;Digitizer24bitsV0.c: 344:                 RCSTAbits.CREN = 1;
  6814     044D  1283               	bcf	3,5	;RP0=0, select bank0
  6815     044E  1303               	bcf	3,6	;RP1=0, select bank0
  6816     044F  1618               	bsf	24,4	;volatile
  6817                           
  6818                           ;Digitizer24bitsV0.c: 345:         }
  6819     0450  2FB3               	goto	i1l508
  6820     0451                     i1l3318:
  6821     0451  086B               	movf	Interrups@ID,w
  6822     0452  00E3               	movwf	??_Interrups
  6823     0453  01E4               	clrf	??_Interrups+1
  6824                           
  6825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6826                           ; Switch size 1, requested type "simple"
  6827                           ; Number of cases is 1, Range of values is 0 to 0
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte            4     3 (average)
  6831                           ; direct_byte           11     8 (fixed)
  6832                           ; jumptable            260     6 (fixed)
  6833                           ;	Chosen strategy is simple_byte
  6834     0454  0864               	movf	??_Interrups+1,w
  6835     0455  3A00               	xorlw	0	; case 0
  6836     0456  1903               	skipnz
  6837     0457  2C59               	goto	i1l3716
  6838     0458  2C47               	goto	i1l3314
  6839     0459                     i1l3716:
  6840                           
  6841                           ; Switch size 1, requested type "simple"
  6842                           ; Number of cases is 10, Range of values is 48 to 57
  6843                           ; switch strategies available:
  6844                           ; Name         Instructions Cycles
  6845                           ; simple_byte           31    16 (average)
  6846                           ; direct_byte           41    11 (fixed)
  6847                           ; jumptable            263     9 (fixed)
  6848                           ;	Chosen strategy is simple_byte
  6849     0459  0863               	movf	??_Interrups,w
  6850     045A  3A30               	xorlw	48	; case 48
  6851     045B  120A  158A  1903   	skipnz
  6852     045E  2C0B               	goto	i1l3036
  6853     045F  3A01               	xorlw	1	; case 49
  6854     0460  1903               	skipnz
  6855     0461  2C21               	goto	i1l3048
  6856     0462  3A03               	xorlw	3	; case 50
  6857     0463  1903               	skipnz
  6858     0464  2C31               	goto	i1l3058
  6859     0465  3A01               	xorlw	1	; case 51
  6860     0466  1903               	skipnz
  6861     0467  2C41               	goto	i1l3068
  6862     0468  3A07               	xorlw	7	; case 52
  6863     0469  1903               	skipnz
  6864     046A  2C98  120A  118A   	goto	i1l3098
  6865     046D  3A01               	xorlw	1	; case 53
  6866     046E  1903               	skipnz
  6867     046F  2FC3               	goto	L6
  6868     0470  3A03               	xorlw	3	; case 54
  6869     0471  1903               	skipnz
  6870     0472  282A               	goto	i1l3112
  6871     0473  3A01               	xorlw	1	; case 55
  6872     0474  1903               	skipnz
  6873     0475  2908               	goto	i1l3144
  6874     0476  3A0F               	xorlw	15	; case 56
  6875     0477  1903               	skipnz
  6876     0478  290F               	goto	i1l3146
  6877     0479  3A01               	xorlw	1	; case 57
  6878     047A  1903               	skipnz
  6879     047B  291F               	goto	i1l481
  6880     047C  2C47               	goto	i1l3314
  6881     047D                     i1l467:
  6882     047D  1283               	bcf	3,5	;RP0=0, select bank0
  6883     047E  1C0C               	btfss	12,0	;volatile
  6884     047F  2C81               	goto	u158_21
  6885     0480  2C82               	goto	u158_20
  6886     0481                     u158_21:
  6887     0481  2FB3               	goto	i1l466
  6888     0482                     u158_20:
  6889     0482                     i1l3320:
  6890     0482  1683               	bsf	3,5	;RP0=1, select bank1
  6891     0483  1303               	bcf	3,6	;RP1=0, select bank1
  6892     0484  1C0C               	btfss	12,0	;volatile
  6893     0485  2C87               	goto	u159_21
  6894     0486  2C88               	goto	u159_20
  6895     0487                     u159_21:
  6896     0487  2FB3               	goto	i1l466
  6897     0488                     u159_20:
  6898     0488                     i1l3322:
  6899                           
  6900                           ;Digitizer24bitsV0.c: 348:         PORTAbits.RA2 = 1;
  6901     0488  1283               	bcf	3,5	;RP0=0, select bank0
  6902     0489  1303               	bcf	3,6	;RP1=0, select bank0
  6903     048A  1505               	bsf	5,2	;volatile
  6904                           
  6905                           ;Digitizer24bitsV0.c: 350:         PIR1bits.TMR1IF = 0;
  6906     048B  100C               	bcf	12,0	;volatile
  6907     048C                     i1l3324:
  6908                           
  6909                           ;Digitizer24bitsV0.c: 351:         TMR1H = 0x10;
  6910     048C  3010               	movlw	16
  6911     048D  008F               	movwf	15	;volatile
  6912                           
  6913                           ;Digitizer24bitsV0.c: 352:         TMR1L = 0x06;
  6914     048E  3006               	movlw	6
  6915     048F  008E               	movwf	14	;volatile
  6916     0490                     i1l3326:
  6917                           
  6918                           ;Digitizer24bitsV0.c: 353:         ContaSample++;
  6919     0490  3001               	movlw	1
  6920     0491  00FF               	movwf	btemp+1
  6921     0492  087F               	movf	btemp+1,w
  6922     0493  07CC               	addwf	_ContaSample,f
  6923     0494                     i1l3328:
  6924                           
  6925                           ;Digitizer24bitsV0.c: 357:         CleanHolding();
  6926     0494  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  6927     0499                     i1l3330:
  6928                           
  6929                           ;Digitizer24bitsV0.c: 359:         PORTB = 0x38;
  6930     0499  3038               	movlw	56
  6931     049A  1283               	bcf	3,5	;RP0=0, select bank0
  6932     049B  1303               	bcf	3,6	;RP1=0, select bank0
  6933     049C  0086               	movwf	6	;volatile
  6934     049D                     i1l3332:
  6935                           
  6936                           ;Digitizer24bitsV0.c: 360:         PORTBbits.RB7 = 1;
  6937     049D  1786               	bsf	6,7	;volatile
  6938     049E                     i1l3334:
  6939                           
  6940                           ;Digitizer24bitsV0.c: 361:         _delay((unsigned long)((7)*(9830400UL/4000.0)));
  6941     049E  3017               	movlw	23
  6942     049F  1283               	bcf	3,5	;RP0=0, select bank0
  6943     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  6944     04A1  00E4               	movwf	??_Interrups+1
  6945     04A2  3055               	movlw	85
  6946     04A3  00E3               	movwf	??_Interrups
  6947     04A4                     u179_27:
  6948     04A4  0BE3               	decfsz	??_Interrups,f
  6949     04A5  2CA4               	goto	u179_27
  6950     04A6  0BE4               	decfsz	??_Interrups+1,f
  6951     04A7  2CA4               	goto	u179_27
  6952     04A8  0000               	nop
  6953     04A9                     i1l3336:
  6954                           
  6955                           ;Digitizer24bitsV0.c: 362:         SumData_X = 0;
  6956     04A9  3000               	movlw	0
  6957     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  6958     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  6959     04AC  00C7               	movwf	_SumData_X+3
  6960     04AD  3000               	movlw	0
  6961     04AE  00C6               	movwf	_SumData_X+2
  6962     04AF  3000               	movlw	0
  6963     04B0  00C5               	movwf	_SumData_X+1
  6964     04B1  3000               	movlw	0
  6965     04B2  00C4               	movwf	_SumData_X
  6966     04B3                     i1l3338:
  6967                           
  6968                           ;Digitizer24bitsV0.c: 363:         ReadAD24(0,0x00);
  6969     04B3  01D6               	clrf	ReadAD24@cmd_convert
  6970     04B4  3000               	movlw	0
  6971     04B5  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6972     04BA                     i1l3340:
  6973                           
  6974                           ;Digitizer24bitsV0.c: 364:         for(conta=0; conta<5; conta++){
  6975     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  6976     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  6977     04BC  01EC               	clrf	Interrups@conta
  6978     04BD                     i1l3346:
  6979                           
  6980                           ;Digitizer24bitsV0.c: 365:             Data_X = ReadAD24(1,0x00);
  6981     04BD  01D6               	clrf	ReadAD24@cmd_convert
  6982     04BE  3001               	movlw	1
  6983     04BF  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  6984     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  6985     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  6986     04C6  0859               	movf	?_ReadAD24+3,w
  6987     04C7  00B3               	movwf	_Data_X+3
  6988     04C8  0858               	movf	?_ReadAD24+2,w
  6989     04C9  00B2               	movwf	_Data_X+2
  6990     04CA  0857               	movf	?_ReadAD24+1,w
  6991     04CB  00B1               	movwf	_Data_X+1
  6992     04CC  0856               	movf	?_ReadAD24,w
  6993     04CD  00B0               	movwf	_Data_X
  6994     04CE                     i1l3348:
  6995                           
  6996                           ;Digitizer24bitsV0.c: 366:             SumData_X = SumData_X + Data_X;
  6997     04CE  0844               	movf	_SumData_X,w
  6998     04CF  0730               	addwf	_Data_X,w
  6999     04D0  00E3               	movwf	??_Interrups
  7000     04D1  3000               	movlw	0
  7001     04D2  1803               	skipnc
  7002     04D3  3001               	movlw	1
  7003     04D4  0745               	addwf	_SumData_X+1,w
  7004     04D5  01E5               	clrf	??_Interrups+2
  7005     04D6  1803               	skipnc
  7006     04D7  0AE5               	incf	??_Interrups+2,f
  7007     04D8  0731               	addwf	_Data_X+1,w
  7008     04D9  00E4               	movwf	??_Interrups+1
  7009     04DA  1803               	skipnc
  7010     04DB  0AE5               	incf	??_Interrups+2,f
  7011     04DC  0846               	movf	_SumData_X+2,w
  7012     04DD  0765               	addwf	??_Interrups+2,w
  7013     04DE  01E6               	clrf	??_Interrups+3
  7014     04DF  1803               	skipnc
  7015     04E0  0AE6               	incf	??_Interrups+3,f
  7016     04E1  0732               	addwf	_Data_X+2,w
  7017     04E2  00E5               	movwf	??_Interrups+2
  7018     04E3  1803               	skipnc
  7019     04E4  0AE6               	incf	??_Interrups+3,f
  7020     04E5  0847               	movf	_SumData_X+3,w
  7021     04E6  0766               	addwf	??_Interrups+3,w
  7022     04E7  0733               	addwf	_Data_X+3,w
  7023     04E8  00E6               	movwf	??_Interrups+3
  7024     04E9  0866               	movf	??_Interrups+3,w
  7025     04EA  00C7               	movwf	_SumData_X+3
  7026     04EB  0865               	movf	??_Interrups+2,w
  7027     04EC  00C6               	movwf	_SumData_X+2
  7028     04ED  0864               	movf	??_Interrups+1,w
  7029     04EE  00C5               	movwf	_SumData_X+1
  7030     04EF  0863               	movf	??_Interrups,w
  7031     04F0  00C4               	movwf	_SumData_X
  7032     04F1                     i1l3350:
  7033                           
  7034                           ;Digitizer24bitsV0.c: 367:         }
  7035     04F1  3001               	movlw	1
  7036     04F2  00FF               	movwf	btemp+1
  7037     04F3  087F               	movf	btemp+1,w
  7038     04F4  07EC               	addwf	Interrups@conta,f
  7039     04F5                     i1l3352:
  7040     04F5  3005               	movlw	5
  7041     04F6  026C               	subwf	Interrups@conta,w
  7042     04F7  1C03               	skipc
  7043     04F8  2CFA               	goto	u160_21
  7044     04F9  2CFB               	goto	u160_20
  7045     04FA                     u160_21:
  7046     04FA  2CBD               	goto	i1l3346
  7047     04FB                     u160_20:
  7048     04FB                     i1l496:
  7049                           
  7050                           ;Digitizer24bitsV0.c: 368:         PORTBbits.RB7 = 0;
  7051     04FB  1386               	bcf	6,7	;volatile
  7052     04FC                     i1l3354:
  7053                           
  7054                           ;Digitizer24bitsV0.c: 370:         CleanHolding();
  7055     04FC  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  7056     0501                     i1l3356:
  7057                           
  7058                           ;Digitizer24bitsV0.c: 372:         PORTB = 0x18;
  7059     0501  3018               	movlw	24
  7060     0502  1283               	bcf	3,5	;RP0=0, select bank0
  7061     0503  1303               	bcf	3,6	;RP1=0, select bank0
  7062     0504  0086               	movwf	6	;volatile
  7063     0505                     i1l3358:
  7064                           
  7065                           ;Digitizer24bitsV0.c: 373:         _delay((unsigned long)((7)*(9830400UL/4000.0)));
  7066     0505  3017               	movlw	23
  7067     0506  1283               	bcf	3,5	;RP0=0, select bank0
  7068     0507  1303               	bcf	3,6	;RP1=0, select bank0
  7069     0508  00E4               	movwf	??_Interrups+1
  7070     0509  3055               	movlw	85
  7071     050A  00E3               	movwf	??_Interrups
  7072     050B                     u180_27:
  7073     050B  0BE3               	decfsz	??_Interrups,f
  7074     050C  2D0B               	goto	u180_27
  7075     050D  0BE4               	decfsz	??_Interrups+1,f
  7076     050E  2D0B               	goto	u180_27
  7077     050F  0000               	nop
  7078     0510                     i1l3360:
  7079                           
  7080                           ;Digitizer24bitsV0.c: 374:         SumData_Y = 0;
  7081     0510  3000               	movlw	0
  7082     0511  1283               	bcf	3,5	;RP0=0, select bank0
  7083     0512  1303               	bcf	3,6	;RP1=0, select bank0
  7084     0513  00C3               	movwf	_SumData_Y+3
  7085     0514  3000               	movlw	0
  7086     0515  00C2               	movwf	_SumData_Y+2
  7087     0516  3000               	movlw	0
  7088     0517  00C1               	movwf	_SumData_Y+1
  7089     0518  3000               	movlw	0
  7090     0519  00C0               	movwf	_SumData_Y
  7091     051A                     i1l3362:
  7092                           
  7093                           ;Digitizer24bitsV0.c: 375:         ReadAD24(0,0x00);
  7094     051A  01D6               	clrf	ReadAD24@cmd_convert
  7095     051B  3000               	movlw	0
  7096     051C  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7097     0521                     i1l3364:
  7098                           
  7099                           ;Digitizer24bitsV0.c: 376:         for(conta=0; conta<5; conta++){
  7100     0521  1283               	bcf	3,5	;RP0=0, select bank0
  7101     0522  1303               	bcf	3,6	;RP1=0, select bank0
  7102     0523  01EC               	clrf	Interrups@conta
  7103     0524                     i1l3370:
  7104                           
  7105                           ;Digitizer24bitsV0.c: 377:             Data_Y = ReadAD24(1,0x00);
  7106     0524  01D6               	clrf	ReadAD24@cmd_convert
  7107     0525  3001               	movlw	1
  7108     0526  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7109     052B  1283               	bcf	3,5	;RP0=0, select bank0
  7110     052C  1303               	bcf	3,6	;RP1=0, select bank0
  7111     052D  0859               	movf	?_ReadAD24+3,w
  7112     052E  00AF               	movwf	_Data_Y+3
  7113     052F  0858               	movf	?_ReadAD24+2,w
  7114     0530  00AE               	movwf	_Data_Y+2
  7115     0531  0857               	movf	?_ReadAD24+1,w
  7116     0532  00AD               	movwf	_Data_Y+1
  7117     0533  0856               	movf	?_ReadAD24,w
  7118     0534  00AC               	movwf	_Data_Y
  7119     0535                     i1l3372:
  7120                           
  7121                           ;Digitizer24bitsV0.c: 378:             SumData_Y = SumData_Y + Data_Y;
  7122     0535  0840               	movf	_SumData_Y,w
  7123     0536  072C               	addwf	_Data_Y,w
  7124     0537  00E3               	movwf	??_Interrups
  7125     0538  3000               	movlw	0
  7126     0539  1803               	skipnc
  7127     053A  3001               	movlw	1
  7128     053B  0741               	addwf	_SumData_Y+1,w
  7129     053C  01E5               	clrf	??_Interrups+2
  7130     053D  1803               	skipnc
  7131     053E  0AE5               	incf	??_Interrups+2,f
  7132     053F  072D               	addwf	_Data_Y+1,w
  7133     0540  00E4               	movwf	??_Interrups+1
  7134     0541  1803               	skipnc
  7135     0542  0AE5               	incf	??_Interrups+2,f
  7136     0543  0842               	movf	_SumData_Y+2,w
  7137     0544  0765               	addwf	??_Interrups+2,w
  7138     0545  01E6               	clrf	??_Interrups+3
  7139     0546  1803               	skipnc
  7140     0547  0AE6               	incf	??_Interrups+3,f
  7141     0548  072E               	addwf	_Data_Y+2,w
  7142     0549  00E5               	movwf	??_Interrups+2
  7143     054A  1803               	skipnc
  7144     054B  0AE6               	incf	??_Interrups+3,f
  7145     054C  0843               	movf	_SumData_Y+3,w
  7146     054D  0766               	addwf	??_Interrups+3,w
  7147     054E  072F               	addwf	_Data_Y+3,w
  7148     054F  00E6               	movwf	??_Interrups+3
  7149     0550  0866               	movf	??_Interrups+3,w
  7150     0551  00C3               	movwf	_SumData_Y+3
  7151     0552  0865               	movf	??_Interrups+2,w
  7152     0553  00C2               	movwf	_SumData_Y+2
  7153     0554  0864               	movf	??_Interrups+1,w
  7154     0555  00C1               	movwf	_SumData_Y+1
  7155     0556  0863               	movf	??_Interrups,w
  7156     0557  00C0               	movwf	_SumData_Y
  7157     0558                     i1l3374:
  7158                           
  7159                           ;Digitizer24bitsV0.c: 379:         }
  7160     0558  3001               	movlw	1
  7161     0559  00FF               	movwf	btemp+1
  7162     055A  087F               	movf	btemp+1,w
  7163     055B  07EC               	addwf	Interrups@conta,f
  7164     055C                     i1l3376:
  7165     055C  3005               	movlw	5
  7166     055D  026C               	subwf	Interrups@conta,w
  7167     055E  1C03               	skipc
  7168     055F  2D61               	goto	u161_21
  7169     0560  2D62               	goto	u161_20
  7170     0561                     u161_21:
  7171     0561  2D24               	goto	i1l3370
  7172     0562                     u161_20:
  7173     0562                     i1l3378:
  7174                           
  7175                           ;Digitizer24bitsV0.c: 381:         CleanHolding();
  7176     0562  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  7177     0567                     i1l3380:
  7178                           
  7179                           ;Digitizer24bitsV0.c: 383:         PORTB = 0x28;
  7180     0567  3028               	movlw	40
  7181     0568  1283               	bcf	3,5	;RP0=0, select bank0
  7182     0569  1303               	bcf	3,6	;RP1=0, select bank0
  7183     056A  0086               	movwf	6	;volatile
  7184     056B                     i1l3382:
  7185                           
  7186                           ;Digitizer24bitsV0.c: 384:         _delay((unsigned long)((7)*(9830400UL/4000.0)));
  7187     056B  3017               	movlw	23
  7188     056C  1283               	bcf	3,5	;RP0=0, select bank0
  7189     056D  1303               	bcf	3,6	;RP1=0, select bank0
  7190     056E  00E4               	movwf	??_Interrups+1
  7191     056F  3055               	movlw	85
  7192     0570  00E3               	movwf	??_Interrups
  7193     0571                     u181_27:
  7194     0571  0BE3               	decfsz	??_Interrups,f
  7195     0572  2D71               	goto	u181_27
  7196     0573  0BE4               	decfsz	??_Interrups+1,f
  7197     0574  2D71               	goto	u181_27
  7198     0575  0000               	nop
  7199     0576                     i1l3384:
  7200                           
  7201                           ;Digitizer24bitsV0.c: 385:         SumData_Z = 0;
  7202     0576  3000               	movlw	0
  7203     0577  1283               	bcf	3,5	;RP0=0, select bank0
  7204     0578  1303               	bcf	3,6	;RP1=0, select bank0
  7205     0579  00BF               	movwf	_SumData_Z+3
  7206     057A  3000               	movlw	0
  7207     057B  00BE               	movwf	_SumData_Z+2
  7208     057C  3000               	movlw	0
  7209     057D  00BD               	movwf	_SumData_Z+1
  7210     057E  3000               	movlw	0
  7211     057F  00BC               	movwf	_SumData_Z
  7212     0580                     i1l3386:
  7213                           
  7214                           ;Digitizer24bitsV0.c: 386:         ReadAD24(0,0x00);
  7215     0580  01D6               	clrf	ReadAD24@cmd_convert
  7216     0581  3000               	movlw	0
  7217     0582  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7218     0587                     i1l3388:
  7219                           
  7220                           ;Digitizer24bitsV0.c: 387:         for(conta=0; conta<5; conta++){
  7221     0587  1283               	bcf	3,5	;RP0=0, select bank0
  7222     0588  1303               	bcf	3,6	;RP1=0, select bank0
  7223     0589  01EC               	clrf	Interrups@conta
  7224     058A                     i1l3394:
  7225                           
  7226                           ;Digitizer24bitsV0.c: 388:             Data_Z = ReadAD24(1,0x00);
  7227     058A  01D6               	clrf	ReadAD24@cmd_convert
  7228     058B  3001               	movlw	1
  7229     058C  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7230     0591  1283               	bcf	3,5	;RP0=0, select bank0
  7231     0592  1303               	bcf	3,6	;RP1=0, select bank0
  7232     0593  0859               	movf	?_ReadAD24+3,w
  7233     0594  00AB               	movwf	_Data_Z+3
  7234     0595  0858               	movf	?_ReadAD24+2,w
  7235     0596  00AA               	movwf	_Data_Z+2
  7236     0597  0857               	movf	?_ReadAD24+1,w
  7237     0598  00A9               	movwf	_Data_Z+1
  7238     0599  0856               	movf	?_ReadAD24,w
  7239     059A  00A8               	movwf	_Data_Z
  7240     059B                     i1l3396:
  7241                           
  7242                           ;Digitizer24bitsV0.c: 389:             SumData_Z = SumData_Z + Data_Z;
  7243     059B  083C               	movf	_SumData_Z,w
  7244     059C  0728               	addwf	_Data_Z,w
  7245     059D  00E3               	movwf	??_Interrups
  7246     059E  3000               	movlw	0
  7247     059F  1803               	skipnc
  7248     05A0  3001               	movlw	1
  7249     05A1  073D               	addwf	_SumData_Z+1,w
  7250     05A2  01E5               	clrf	??_Interrups+2
  7251     05A3  1803               	skipnc
  7252     05A4  0AE5               	incf	??_Interrups+2,f
  7253     05A5  0729               	addwf	_Data_Z+1,w
  7254     05A6  00E4               	movwf	??_Interrups+1
  7255     05A7  1803               	skipnc
  7256     05A8  0AE5               	incf	??_Interrups+2,f
  7257     05A9  083E               	movf	_SumData_Z+2,w
  7258     05AA  0765               	addwf	??_Interrups+2,w
  7259     05AB  01E6               	clrf	??_Interrups+3
  7260     05AC  1803               	skipnc
  7261     05AD  0AE6               	incf	??_Interrups+3,f
  7262     05AE  072A               	addwf	_Data_Z+2,w
  7263     05AF  00E5               	movwf	??_Interrups+2
  7264     05B0  1803               	skipnc
  7265     05B1  0AE6               	incf	??_Interrups+3,f
  7266     05B2  083F               	movf	_SumData_Z+3,w
  7267     05B3  0766               	addwf	??_Interrups+3,w
  7268     05B4  072B               	addwf	_Data_Z+3,w
  7269     05B5  00E6               	movwf	??_Interrups+3
  7270     05B6  0866               	movf	??_Interrups+3,w
  7271     05B7  00BF               	movwf	_SumData_Z+3
  7272     05B8  0865               	movf	??_Interrups+2,w
  7273     05B9  00BE               	movwf	_SumData_Z+2
  7274     05BA  0864               	movf	??_Interrups+1,w
  7275     05BB  00BD               	movwf	_SumData_Z+1
  7276     05BC  0863               	movf	??_Interrups,w
  7277     05BD  00BC               	movwf	_SumData_Z
  7278     05BE                     i1l3398:
  7279                           
  7280                           ;Digitizer24bitsV0.c: 390:         }
  7281     05BE  3001               	movlw	1
  7282     05BF  00FF               	movwf	btemp+1
  7283     05C0  087F               	movf	btemp+1,w
  7284     05C1  07EC               	addwf	Interrups@conta,f
  7285     05C2                     i1l3400:
  7286     05C2  3005               	movlw	5
  7287     05C3  026C               	subwf	Interrups@conta,w
  7288     05C4  1C03               	skipc
  7289     05C5  2DC7               	goto	u162_21
  7290     05C6  2DC8               	goto	u162_20
  7291     05C7                     u162_21:
  7292     05C7  2D8A               	goto	i1l3394
  7293     05C8                     u162_20:
  7294     05C8                     i1l3402:
  7295                           
  7296                           ;Digitizer24bitsV0.c: 392:         CleanHolding();
  7297     05C8  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  7298     05CD                     i1l3404:
  7299                           
  7300                           ;Digitizer24bitsV0.c: 394:         PORTB = 0x08;
  7301     05CD  3008               	movlw	8
  7302     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  7303     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  7304     05D0  0086               	movwf	6	;volatile
  7305     05D1                     i1l3406:
  7306                           
  7307                           ;Digitizer24bitsV0.c: 395:         _delay((unsigned long)((7)*(9830400UL/4000.0)));
  7308     05D1  3017               	movlw	23
  7309     05D2  1283               	bcf	3,5	;RP0=0, select bank0
  7310     05D3  1303               	bcf	3,6	;RP1=0, select bank0
  7311     05D4  00E4               	movwf	??_Interrups+1
  7312     05D5  3055               	movlw	85
  7313     05D6  00E3               	movwf	??_Interrups
  7314     05D7                     u182_27:
  7315     05D7  0BE3               	decfsz	??_Interrups,f
  7316     05D8  2DD7               	goto	u182_27
  7317     05D9  0BE4               	decfsz	??_Interrups+1,f
  7318     05DA  2DD7               	goto	u182_27
  7319     05DB  0000               	nop
  7320     05DC                     i1l3408:
  7321                           
  7322                           ;Digitizer24bitsV0.c: 396:         SumData_TC = 0;
  7323     05DC  3000               	movlw	0
  7324     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  7325     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  7326     05DF  00BB               	movwf	_SumData_TC+3
  7327     05E0  3000               	movlw	0
  7328     05E1  00BA               	movwf	_SumData_TC+2
  7329     05E2  3000               	movlw	0
  7330     05E3  00B9               	movwf	_SumData_TC+1
  7331     05E4  3000               	movlw	0
  7332     05E5  00B8               	movwf	_SumData_TC
  7333     05E6                     i1l3410:
  7334                           
  7335                           ;Digitizer24bitsV0.c: 397:         ReadAD24(0,0x00);
  7336     05E6  01D6               	clrf	ReadAD24@cmd_convert
  7337     05E7  3000               	movlw	0
  7338     05E8  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7339     05ED                     i1l3412:
  7340                           
  7341                           ;Digitizer24bitsV0.c: 398:         for(conta=0; conta<5; conta++){
  7342     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  7343     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  7344     05EF  01EC               	clrf	Interrups@conta
  7345     05F0                     i1l3418:
  7346                           
  7347                           ;Digitizer24bitsV0.c: 399:             Data_TC = ReadAD24(1,0x00);
  7348     05F0  01D6               	clrf	ReadAD24@cmd_convert
  7349     05F1  3001               	movlw	1
  7350     05F2  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7351     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  7352     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  7353     05F9  0859               	movf	?_ReadAD24+3,w
  7354     05FA  00A7               	movwf	_Data_TC+3
  7355     05FB  0858               	movf	?_ReadAD24+2,w
  7356     05FC  00A6               	movwf	_Data_TC+2
  7357     05FD  0857               	movf	?_ReadAD24+1,w
  7358     05FE  00A5               	movwf	_Data_TC+1
  7359     05FF  0856               	movf	?_ReadAD24,w
  7360     0600  00A4               	movwf	_Data_TC
  7361     0601                     i1l3420:
  7362                           
  7363                           ;Digitizer24bitsV0.c: 400:             SumData_TC = SumData_TC + Data_TC;
  7364     0601  0838               	movf	_SumData_TC,w
  7365     0602  0724               	addwf	_Data_TC,w
  7366     0603  00E3               	movwf	??_Interrups
  7367     0604  3000               	movlw	0
  7368     0605  1803               	skipnc
  7369     0606  3001               	movlw	1
  7370     0607  0739               	addwf	_SumData_TC+1,w
  7371     0608  01E5               	clrf	??_Interrups+2
  7372     0609  1803               	skipnc
  7373     060A  0AE5               	incf	??_Interrups+2,f
  7374     060B  0725               	addwf	_Data_TC+1,w
  7375     060C  00E4               	movwf	??_Interrups+1
  7376     060D  1803               	skipnc
  7377     060E  0AE5               	incf	??_Interrups+2,f
  7378     060F  083A               	movf	_SumData_TC+2,w
  7379     0610  0765               	addwf	??_Interrups+2,w
  7380     0611  01E6               	clrf	??_Interrups+3
  7381     0612  1803               	skipnc
  7382     0613  0AE6               	incf	??_Interrups+3,f
  7383     0614  0726               	addwf	_Data_TC+2,w
  7384     0615  00E5               	movwf	??_Interrups+2
  7385     0616  1803               	skipnc
  7386     0617  0AE6               	incf	??_Interrups+3,f
  7387     0618  083B               	movf	_SumData_TC+3,w
  7388     0619  0766               	addwf	??_Interrups+3,w
  7389     061A  0727               	addwf	_Data_TC+3,w
  7390     061B  00E6               	movwf	??_Interrups+3
  7391     061C  0866               	movf	??_Interrups+3,w
  7392     061D  00BB               	movwf	_SumData_TC+3
  7393     061E  0865               	movf	??_Interrups+2,w
  7394     061F  00BA               	movwf	_SumData_TC+2
  7395     0620  0864               	movf	??_Interrups+1,w
  7396     0621  00B9               	movwf	_SumData_TC+1
  7397     0622  0863               	movf	??_Interrups,w
  7398     0623  00B8               	movwf	_SumData_TC
  7399     0624                     i1l3422:
  7400                           
  7401                           ;Digitizer24bitsV0.c: 401:         }
  7402     0624  3001               	movlw	1
  7403     0625  00FF               	movwf	btemp+1
  7404     0626  087F               	movf	btemp+1,w
  7405     0627  07EC               	addwf	Interrups@conta,f
  7406     0628                     i1l3424:
  7407     0628  3005               	movlw	5
  7408     0629  026C               	subwf	Interrups@conta,w
  7409     062A  1C03               	skipc
  7410     062B  2E2D               	goto	u163_21
  7411     062C  2E2E               	goto	u163_20
  7412     062D                     u163_21:
  7413     062D  2DF0               	goto	i1l3418
  7414     062E                     u163_20:
  7415     062E                     i1l3426:
  7416                           
  7417                           ;Digitizer24bitsV0.c: 403:         CleanHolding();
  7418     062E  160A  118A  2631  120A  118A  	fcall	_CleanHolding
  7419     0633                     i1l3428:
  7420                           
  7421                           ;Digitizer24bitsV0.c: 405:         PORTB = 0x04;
  7422     0633  3004               	movlw	4
  7423     0634  1283               	bcf	3,5	;RP0=0, select bank0
  7424     0635  1303               	bcf	3,6	;RP1=0, select bank0
  7425     0636  0086               	movwf	6	;volatile
  7426     0637                     i1l3430:
  7427                           
  7428                           ;Digitizer24bitsV0.c: 406:         _delay((unsigned long)((7)*(9830400UL/4000.0)));
  7429     0637  3017               	movlw	23
  7430     0638  1283               	bcf	3,5	;RP0=0, select bank0
  7431     0639  1303               	bcf	3,6	;RP1=0, select bank0
  7432     063A  00E4               	movwf	??_Interrups+1
  7433     063B  3055               	movlw	85
  7434     063C  00E3               	movwf	??_Interrups
  7435     063D                     u183_27:
  7436     063D  0BE3               	decfsz	??_Interrups,f
  7437     063E  2E3D               	goto	u183_27
  7438     063F  0BE4               	decfsz	??_Interrups+1,f
  7439     0640  2E3D               	goto	u183_27
  7440     0641  0000               	nop
  7441     0642                     i1l3432:
  7442                           
  7443                           ;Digitizer24bitsV0.c: 407:         SumData_TS = 0;
  7444     0642  3000               	movlw	0
  7445     0643  1283               	bcf	3,5	;RP0=0, select bank0
  7446     0644  1303               	bcf	3,6	;RP1=0, select bank0
  7447     0645  00B7               	movwf	_SumData_TS+3
  7448     0646  3000               	movlw	0
  7449     0647  00B6               	movwf	_SumData_TS+2
  7450     0648  3000               	movlw	0
  7451     0649  00B5               	movwf	_SumData_TS+1
  7452     064A  3000               	movlw	0
  7453     064B  00B4               	movwf	_SumData_TS
  7454     064C                     i1l3434:
  7455                           
  7456                           ;Digitizer24bitsV0.c: 408:         ReadAD24(0,0x00);
  7457     064C  01D6               	clrf	ReadAD24@cmd_convert
  7458     064D  3000               	movlw	0
  7459     064E  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7460     0653                     i1l3436:
  7461                           
  7462                           ;Digitizer24bitsV0.c: 409:         for(conta=0; conta<5; conta++){
  7463     0653  1283               	bcf	3,5	;RP0=0, select bank0
  7464     0654  1303               	bcf	3,6	;RP1=0, select bank0
  7465     0655  01EC               	clrf	Interrups@conta
  7466     0656                     i1l3442:
  7467                           
  7468                           ;Digitizer24bitsV0.c: 410:             Data_TS = ReadAD24(1,0x00);
  7469     0656  01D6               	clrf	ReadAD24@cmd_convert
  7470     0657  3001               	movlw	1
  7471     0658  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7472     065D  1283               	bcf	3,5	;RP0=0, select bank0
  7473     065E  1303               	bcf	3,6	;RP1=0, select bank0
  7474     065F  0859               	movf	?_ReadAD24+3,w
  7475     0660  00A3               	movwf	_Data_TS+3
  7476     0661  0858               	movf	?_ReadAD24+2,w
  7477     0662  00A2               	movwf	_Data_TS+2
  7478     0663  0857               	movf	?_ReadAD24+1,w
  7479     0664  00A1               	movwf	_Data_TS+1
  7480     0665  0856               	movf	?_ReadAD24,w
  7481     0666  00A0               	movwf	_Data_TS
  7482     0667                     i1l3444:
  7483                           
  7484                           ;Digitizer24bitsV0.c: 411:             SumData_TS = SumData_TS + Data_TS;
  7485     0667  0834               	movf	_SumData_TS,w
  7486     0668  0720               	addwf	_Data_TS,w
  7487     0669  00E3               	movwf	??_Interrups
  7488     066A  3000               	movlw	0
  7489     066B  1803               	skipnc
  7490     066C  3001               	movlw	1
  7491     066D  0735               	addwf	_SumData_TS+1,w
  7492     066E  01E5               	clrf	??_Interrups+2
  7493     066F  1803               	skipnc
  7494     0670  0AE5               	incf	??_Interrups+2,f
  7495     0671  0721               	addwf	_Data_TS+1,w
  7496     0672  00E4               	movwf	??_Interrups+1
  7497     0673  1803               	skipnc
  7498     0674  0AE5               	incf	??_Interrups+2,f
  7499     0675  0836               	movf	_SumData_TS+2,w
  7500     0676  0765               	addwf	??_Interrups+2,w
  7501     0677  01E6               	clrf	??_Interrups+3
  7502     0678  1803               	skipnc
  7503     0679  0AE6               	incf	??_Interrups+3,f
  7504     067A  0722               	addwf	_Data_TS+2,w
  7505     067B  00E5               	movwf	??_Interrups+2
  7506     067C  1803               	skipnc
  7507     067D  0AE6               	incf	??_Interrups+3,f
  7508     067E  0837               	movf	_SumData_TS+3,w
  7509     067F  0766               	addwf	??_Interrups+3,w
  7510     0680  0723               	addwf	_Data_TS+3,w
  7511     0681  00E6               	movwf	??_Interrups+3
  7512     0682  0866               	movf	??_Interrups+3,w
  7513     0683  00B7               	movwf	_SumData_TS+3
  7514     0684  0865               	movf	??_Interrups+2,w
  7515     0685  00B6               	movwf	_SumData_TS+2
  7516     0686  0864               	movf	??_Interrups+1,w
  7517     0687  00B5               	movwf	_SumData_TS+1
  7518     0688  0863               	movf	??_Interrups,w
  7519     0689  00B4               	movwf	_SumData_TS
  7520     068A                     i1l3446:
  7521                           
  7522                           ;Digitizer24bitsV0.c: 412:         }
  7523     068A  3001               	movlw	1
  7524     068B  00FF               	movwf	btemp+1
  7525     068C  087F               	movf	btemp+1,w
  7526     068D  07EC               	addwf	Interrups@conta,f
  7527     068E                     i1l3448:
  7528     068E  3005               	movlw	5
  7529     068F  026C               	subwf	Interrups@conta,w
  7530     0690  1C03               	skipc
  7531     0691  2E93               	goto	u164_21
  7532     0692  2E94               	goto	u164_20
  7533     0693                     u164_21:
  7534     0693  2E56               	goto	i1l3442
  7535     0694                     u164_20:
  7536     0694                     i1l3450:
  7537                           
  7538                           ;Digitizer24bitsV0.c: 415:         Data_X = SumData_X/5;
  7539     0694  3000               	movlw	0
  7540     0695  00F3               	movwf	___aldiv@divisor+3
  7541     0696  3000               	movlw	0
  7542     0697  00F2               	movwf	___aldiv@divisor+2
  7543     0698  3000               	movlw	0
  7544     0699  00F1               	movwf	___aldiv@divisor+1
  7545     069A  3005               	movlw	5
  7546     069B  00F0               	movwf	___aldiv@divisor
  7547     069C  0847               	movf	_SumData_X+3,w
  7548     069D  00F7               	movwf	___aldiv@dividend+3
  7549     069E  0846               	movf	_SumData_X+2,w
  7550     069F  00F6               	movwf	___aldiv@dividend+2
  7551     06A0  0845               	movf	_SumData_X+1,w
  7552     06A1  00F5               	movwf	___aldiv@dividend+1
  7553     06A2  0844               	movf	_SumData_X,w
  7554     06A3  00F4               	movwf	___aldiv@dividend
  7555     06A4  120A  158A  224A  120A  118A  	fcall	___aldiv
  7556     06A9  0873               	movf	?___aldiv+3,w
  7557     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  7558     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  7559     06AC  00B3               	movwf	_Data_X+3
  7560     06AD  0872               	movf	?___aldiv+2,w
  7561     06AE  00B2               	movwf	_Data_X+2
  7562     06AF  0871               	movf	?___aldiv+1,w
  7563     06B0  00B1               	movwf	_Data_X+1
  7564     06B1  0870               	movf	?___aldiv,w
  7565     06B2  00B0               	movwf	_Data_X
  7566                           
  7567                           ;Digitizer24bitsV0.c: 416:         Data_Y = SumData_Y/5;
  7568     06B3  3000               	movlw	0
  7569     06B4  00F3               	movwf	___aldiv@divisor+3
  7570     06B5  3000               	movlw	0
  7571     06B6  00F2               	movwf	___aldiv@divisor+2
  7572     06B7  3000               	movlw	0
  7573     06B8  00F1               	movwf	___aldiv@divisor+1
  7574     06B9  3005               	movlw	5
  7575     06BA  00F0               	movwf	___aldiv@divisor
  7576     06BB  0843               	movf	_SumData_Y+3,w
  7577     06BC  00F7               	movwf	___aldiv@dividend+3
  7578     06BD  0842               	movf	_SumData_Y+2,w
  7579     06BE  00F6               	movwf	___aldiv@dividend+2
  7580     06BF  0841               	movf	_SumData_Y+1,w
  7581     06C0  00F5               	movwf	___aldiv@dividend+1
  7582     06C1  0840               	movf	_SumData_Y,w
  7583     06C2  00F4               	movwf	___aldiv@dividend
  7584     06C3  120A  158A  224A  120A  118A  	fcall	___aldiv
  7585     06C8  0873               	movf	?___aldiv+3,w
  7586     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  7587     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  7588     06CB  00AF               	movwf	_Data_Y+3
  7589     06CC  0872               	movf	?___aldiv+2,w
  7590     06CD  00AE               	movwf	_Data_Y+2
  7591     06CE  0871               	movf	?___aldiv+1,w
  7592     06CF  00AD               	movwf	_Data_Y+1
  7593     06D0  0870               	movf	?___aldiv,w
  7594     06D1  00AC               	movwf	_Data_Y
  7595                           
  7596                           ;Digitizer24bitsV0.c: 417:         Data_Z = SumData_Z/5;
  7597     06D2  3000               	movlw	0
  7598     06D3  00F3               	movwf	___aldiv@divisor+3
  7599     06D4  3000               	movlw	0
  7600     06D5  00F2               	movwf	___aldiv@divisor+2
  7601     06D6  3000               	movlw	0
  7602     06D7  00F1               	movwf	___aldiv@divisor+1
  7603     06D8  3005               	movlw	5
  7604     06D9  00F0               	movwf	___aldiv@divisor
  7605     06DA  083F               	movf	_SumData_Z+3,w
  7606     06DB  00F7               	movwf	___aldiv@dividend+3
  7607     06DC  083E               	movf	_SumData_Z+2,w
  7608     06DD  00F6               	movwf	___aldiv@dividend+2
  7609     06DE  083D               	movf	_SumData_Z+1,w
  7610     06DF  00F5               	movwf	___aldiv@dividend+1
  7611     06E0  083C               	movf	_SumData_Z,w
  7612     06E1  00F4               	movwf	___aldiv@dividend
  7613     06E2  120A  158A  224A  120A  118A  	fcall	___aldiv
  7614     06E7  0873               	movf	?___aldiv+3,w
  7615     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  7616     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  7617     06EA  00AB               	movwf	_Data_Z+3
  7618     06EB  0872               	movf	?___aldiv+2,w
  7619     06EC  00AA               	movwf	_Data_Z+2
  7620     06ED  0871               	movf	?___aldiv+1,w
  7621     06EE  00A9               	movwf	_Data_Z+1
  7622     06EF  0870               	movf	?___aldiv,w
  7623     06F0  00A8               	movwf	_Data_Z
  7624                           
  7625                           ;Digitizer24bitsV0.c: 418:         Data_TC = SumData_TC/5;
  7626     06F1  3000               	movlw	0
  7627     06F2  00F3               	movwf	___aldiv@divisor+3
  7628     06F3  3000               	movlw	0
  7629     06F4  00F2               	movwf	___aldiv@divisor+2
  7630     06F5  3000               	movlw	0
  7631     06F6  00F1               	movwf	___aldiv@divisor+1
  7632     06F7  3005               	movlw	5
  7633     06F8  00F0               	movwf	___aldiv@divisor
  7634     06F9  083B               	movf	_SumData_TC+3,w
  7635     06FA  00F7               	movwf	___aldiv@dividend+3
  7636     06FB  083A               	movf	_SumData_TC+2,w
  7637     06FC  00F6               	movwf	___aldiv@dividend+2
  7638     06FD  0839               	movf	_SumData_TC+1,w
  7639     06FE  00F5               	movwf	___aldiv@dividend+1
  7640     06FF  0838               	movf	_SumData_TC,w
  7641     0700  00F4               	movwf	___aldiv@dividend
  7642     0701  120A  158A  224A  120A  118A  	fcall	___aldiv
  7643     0706  0873               	movf	?___aldiv+3,w
  7644     0707  1283               	bcf	3,5	;RP0=0, select bank0
  7645     0708  1303               	bcf	3,6	;RP1=0, select bank0
  7646     0709  00A7               	movwf	_Data_TC+3
  7647     070A  0872               	movf	?___aldiv+2,w
  7648     070B  00A6               	movwf	_Data_TC+2
  7649     070C  0871               	movf	?___aldiv+1,w
  7650     070D  00A5               	movwf	_Data_TC+1
  7651     070E  0870               	movf	?___aldiv,w
  7652     070F  00A4               	movwf	_Data_TC
  7653                           
  7654                           ;Digitizer24bitsV0.c: 419:         Data_TS = SumData_TS/5;
  7655     0710  3000               	movlw	0
  7656     0711  00F3               	movwf	___aldiv@divisor+3
  7657     0712  3000               	movlw	0
  7658     0713  00F2               	movwf	___aldiv@divisor+2
  7659     0714  3000               	movlw	0
  7660     0715  00F1               	movwf	___aldiv@divisor+1
  7661     0716  3005               	movlw	5
  7662     0717  00F0               	movwf	___aldiv@divisor
  7663     0718  0837               	movf	_SumData_TS+3,w
  7664     0719  00F7               	movwf	___aldiv@dividend+3
  7665     071A  0836               	movf	_SumData_TS+2,w
  7666     071B  00F6               	movwf	___aldiv@dividend+2
  7667     071C  0835               	movf	_SumData_TS+1,w
  7668     071D  00F5               	movwf	___aldiv@dividend+1
  7669     071E  0834               	movf	_SumData_TS,w
  7670     071F  00F4               	movwf	___aldiv@dividend
  7671     0720  120A  158A  224A  120A  118A  	fcall	___aldiv
  7672     0725  0873               	movf	?___aldiv+3,w
  7673     0726  1283               	bcf	3,5	;RP0=0, select bank0
  7674     0727  1303               	bcf	3,6	;RP1=0, select bank0
  7675     0728  00A3               	movwf	_Data_TS+3
  7676     0729  0872               	movf	?___aldiv+2,w
  7677     072A  00A2               	movwf	_Data_TS+2
  7678     072B  0871               	movf	?___aldiv+1,w
  7679     072C  00A1               	movwf	_Data_TS+1
  7680     072D  0870               	movf	?___aldiv,w
  7681     072E  00A0               	movwf	_Data_TS
  7682     072F                     i1l3452:
  7683                           
  7684                           ;Digitizer24bitsV0.c: 422:         print_string("JROADQ");
  7685     072F  3039               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  7686     0730  00F1               	movwf	print_string@str
  7687     0731  3080               	movlw	128
  7688     0732  00F2               	movwf	print_string@str+1
  7689     0733  160A  118A  269B  120A  118A  	fcall	_print_string
  7690     0738                     i1l3454:
  7691                           
  7692                           ;Digitizer24bitsV0.c: 423:         WriteByte_USART(ContaSample);
  7693     0738  1283               	bcf	3,5	;RP0=0, select bank0
  7694     0739  1303               	bcf	3,6	;RP1=0, select bank0
  7695     073A  084C               	movf	_ContaSample,w
  7696     073B  120A  158A  2001  120A  118A  	fcall	_WriteByte_USART
  7697     0740                     i1l3456:
  7698                           
  7699                           ;Digitizer24bitsV0.c: 424:         print_value(Data_X);
  7700     0740  1283               	bcf	3,5	;RP0=0, select bank0
  7701     0741  1303               	bcf	3,6	;RP1=0, select bank0
  7702     0742  0833               	movf	_Data_X+3,w
  7703     0743  00F4               	movwf	print_value@value+3
  7704     0744  0832               	movf	_Data_X+2,w
  7705     0745  00F3               	movwf	print_value@value+2
  7706     0746  0831               	movf	_Data_X+1,w
  7707     0747  00F2               	movwf	print_value@value+1
  7708     0748  0830               	movf	_Data_X,w
  7709     0749  00F1               	movwf	print_value@value
  7710     074A  160A  118A  26E9  120A  118A  	fcall	_print_value
  7711     074F                     i1l3458:
  7712                           
  7713                           ;Digitizer24bitsV0.c: 425:         print_value(Data_Y);
  7714     074F  1283               	bcf	3,5	;RP0=0, select bank0
  7715     0750  1303               	bcf	3,6	;RP1=0, select bank0
  7716     0751  082F               	movf	_Data_Y+3,w
  7717     0752  00F4               	movwf	print_value@value+3
  7718     0753  082E               	movf	_Data_Y+2,w
  7719     0754  00F3               	movwf	print_value@value+2
  7720     0755  082D               	movf	_Data_Y+1,w
  7721     0756  00F2               	movwf	print_value@value+1
  7722     0757  082C               	movf	_Data_Y,w
  7723     0758  00F1               	movwf	print_value@value
  7724     0759  160A  118A  26E9  120A  118A  	fcall	_print_value
  7725     075E                     i1l3460:
  7726                           
  7727                           ;Digitizer24bitsV0.c: 426:         print_value(Data_Z);
  7728     075E  1283               	bcf	3,5	;RP0=0, select bank0
  7729     075F  1303               	bcf	3,6	;RP1=0, select bank0
  7730     0760  082B               	movf	_Data_Z+3,w
  7731     0761  00F4               	movwf	print_value@value+3
  7732     0762  082A               	movf	_Data_Z+2,w
  7733     0763  00F3               	movwf	print_value@value+2
  7734     0764  0829               	movf	_Data_Z+1,w
  7735     0765  00F2               	movwf	print_value@value+1
  7736     0766  0828               	movf	_Data_Z,w
  7737     0767  00F1               	movwf	print_value@value
  7738     0768  160A  118A  26E9  120A  118A  	fcall	_print_value
  7739     076D                     i1l3462:
  7740                           
  7741                           ;Digitizer24bitsV0.c: 427:         print_value(Data_TC);
  7742     076D  1283               	bcf	3,5	;RP0=0, select bank0
  7743     076E  1303               	bcf	3,6	;RP1=0, select bank0
  7744     076F  0827               	movf	_Data_TC+3,w
  7745     0770  00F4               	movwf	print_value@value+3
  7746     0771  0826               	movf	_Data_TC+2,w
  7747     0772  00F3               	movwf	print_value@value+2
  7748     0773  0825               	movf	_Data_TC+1,w
  7749     0774  00F2               	movwf	print_value@value+1
  7750     0775  0824               	movf	_Data_TC,w
  7751     0776  00F1               	movwf	print_value@value
  7752     0777  160A  118A  26E9  120A  118A  	fcall	_print_value
  7753     077C                     i1l3464:
  7754                           
  7755                           ;Digitizer24bitsV0.c: 428:         print_value(Data_TS);
  7756     077C  1283               	bcf	3,5	;RP0=0, select bank0
  7757     077D  1303               	bcf	3,6	;RP1=0, select bank0
  7758     077E  0823               	movf	_Data_TS+3,w
  7759     077F  00F4               	movwf	print_value@value+3
  7760     0780  0822               	movf	_Data_TS+2,w
  7761     0781  00F3               	movwf	print_value@value+2
  7762     0782  0821               	movf	_Data_TS+1,w
  7763     0783  00F2               	movwf	print_value@value+1
  7764     0784  0820               	movf	_Data_TS,w
  7765     0785  00F1               	movwf	print_value@value
  7766     0786  160A  118A  26E9  120A  118A  	fcall	_print_value
  7767     078B                     i1l3466:
  7768                           
  7769                           ;Digitizer24bitsV0.c: 429:         print_string("\n\r");
  7770     078B  3016               	movlw	(low (((STR_9+21)-__stringbase)| (0+32768)))& (0+255)
  7771     078C  00F1               	movwf	print_string@str
  7772     078D  3080               	movlw	128
  7773     078E  00F2               	movwf	print_string@str+1
  7774     078F  160A  118A  269B  120A  118A  	fcall	_print_string
  7775     0794                     i1l3468:
  7776                           
  7777                           ;Digitizer24bitsV0.c: 431:         PORTAbits.RA2 = 0;
  7778     0794  1283               	bcf	3,5	;RP0=0, select bank0
  7779     0795  1303               	bcf	3,6	;RP1=0, select bank0
  7780     0796  1105               	bcf	5,2	;volatile
  7781     0797                     i1l3470:
  7782                           
  7783                           ;Digitizer24bitsV0.c: 433:         if(ContaSample == 4){
  7784     0797  3004               	movlw	4
  7785     0798  064C               	xorwf	_ContaSample,w
  7786     0799  1D03               	btfss	3,2
  7787     079A  2F9C               	goto	u165_21
  7788     079B  2F9D               	goto	u165_20
  7789     079C                     u165_21:
  7790     079C  2FB3               	goto	i1l508
  7791     079D                     u165_20:
  7792     079D                     i1l3472:
  7793                           
  7794                           ;Digitizer24bitsV0.c: 434:             PIE1bits.TMR1IE = 0;
  7795     079D  1683               	bsf	3,5	;RP0=1, select bank1
  7796     079E  1303               	bcf	3,6	;RP1=0, select bank1
  7797     079F  100C               	bcf	12,0	;volatile
  7798     07A0                     i1l3474:
  7799                           
  7800                           ;Digitizer24bitsV0.c: 435:             if(ControlSample == 1){
  7801     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7802     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7803     07A2  034D               	decf	_ControlSample,w
  7804     07A3  1D03               	btfss	3,2
  7805     07A4  2FA6               	goto	u166_21
  7806     07A5  2FA7               	goto	u166_20
  7807     07A6                     u166_21:
  7808     07A6  2FAA               	goto	i1l3478
  7809     07A7                     u166_20:
  7810     07A7                     i1l3476:
  7811                           
  7812                           ;Digitizer24bitsV0.c: 436:                 INTCONbits.INTF = 0;
  7813     07A7  108B               	bcf	11,1	;volatile
  7814                           
  7815                           ;Digitizer24bitsV0.c: 437:                 INTCONbits.INTE = 1;
  7816     07A8  160B               	bsf	11,4	;volatile
  7817                           
  7818                           ;Digitizer24bitsV0.c: 438:             }else{
  7819     07A9  2FB3               	goto	i1l508
  7820     07AA                     i1l3478:
  7821                           
  7822                           ;Digitizer24bitsV0.c: 439:                 ReadAD24(0,0xFF);
  7823     07AA  30FF               	movlw	255
  7824     07AB  00D6               	movwf	ReadAD24@cmd_convert
  7825     07AC  3000               	movlw	0
  7826     07AD  120A  158A  22E7  120A  118A  	fcall	_ReadAD24
  7827     07B2  2FB3               	goto	i1l508
  7828     07B3                     i1l466:
  7829     07B3                     i1l508:
  7830     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  7831     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  7832     07B5  086A               	movf	??_Interrups+7,w
  7833     07B6  00FF               	movwf	btemp+1
  7834     07B7  0869               	movf	??_Interrups+6,w
  7835     07B8  008A               	movwf	10
  7836     07B9  0868               	movf	??_Interrups+5,w
  7837     07BA  0084               	movwf	4
  7838     07BB  0E67               	swapf	??_Interrups+4,w
  7839     07BC  0083               	movwf	3
  7840     07BD  0EFE               	swapf	btemp,f
  7841     07BE  0E7E               	swapf	btemp,w
  7842     07BF  0009               	retfie
  7843     07C0                     L1:
  7844     07C0                     __end_of_Interrups:
  7845     07C0  120A  158A  2CC1   	ljmp	i1l2850
  7846     07C3                     L6:
  7847     07C3                     L5:
  7848     07C3  120A  158A  2C01   	ljmp	i1l3032

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      77
    BANK1            80      3      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print_string@str	PTR unsigned char  size(2) Largest target is 24
		 -> STR_13(CODE[3]), STR_12(CODE[7]), STR_11(CODE[3]), STR_10(CODE[7]), 
		 -> STR_9(CODE[24]), STR_8(CODE[3]), STR_7(CODE[7]), STR_6(CODE[3]), 
		 -> STR_5(CODE[10]), STR_4(CODE[3]), STR_3(CODE[11]), STR_2(CODE[3]), 
		 -> STR_1(CODE[11]), BufferDAT(BANK1[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrups in COMMON

    _Interrups->_ReadAD24
    _print_value->_WriteByte_USART
    _TransmitDAT_USART->_print_string
    _TransmitCMD_USART->_print_string
    _print_string->_WriteByte_USART
    _ResetCS5532->_ReadRegister_4bytesCS5532
    _ResetCS5532->_WriteRegister_4bytesCS5532
    _InitCS5532->_ReadRegister_4bytesCS5532
    _InitCS5532->_WriteRegister_4bytesCS5532
    _WriteRegister_4bytesCS5532->_TransferByte_SPI
    _GPS_TIMEDATE->_ReadByteSW_USART
    _GPS_STATUS->_ReadByteSW_USART
    _GPS_LONGITUDE->_ReadByteSW_USART
    _GPS_LATITUDE->_ReadByteSW_USART
    _CleanHolding->_ReadAD24
    _ReadAD24->___aldiv
    _ReadRegister_4bytesCS5532->_TransferByte_SPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrups in BANK0

    _Interrups->_CleanHolding
    _CleanHolding->_ReadAD24
    _ReadAD24->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrups in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrups in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrups in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK1      3     3      0
                      _ClosePort_SPI
                    _ClosePort_USART
                     _ConfigPort_SPI
                   _ConfigPort_USART
                       _OpenPort_SPI
                     _OpenPort_USART
 ---------------------------------------------------------------------------------
 (1) _OpenPort_USART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenPort_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPort_USART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPort_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClosePort_USART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClosePort_SPI                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrups                                           10    10      0   21252
                                             19 BANK0     10    10      0
                       _CleanHolding
                       _GPS_LATITUDE
                      _GPS_LONGITUDE
                         _GPS_STATUS
                       _GPS_TIMEDATE
                         _InitCS5532
                           _ReadAD24
          _ReadRegister_4bytesCS5532
                   _ReceiveCMD_USART
                        _ResetCS5532
                   _TransferByte_SPI
                  _TransmitCMD_USART
                  _TransmitDAT_USART
                    _WriteByte_USART
                            ___aldiv
                       _print_string
                        _print_value
 ---------------------------------------------------------------------------------
 (3) _print_value                                         12     8      4    1421
                                              1 COMMON    12     8      4
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (3) _TransmitDAT_USART                                    2     2      0    1243
                                              3 COMMON     2     2      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _TransmitCMD_USART                                    1     1      0    1175
                                              3 COMMON     1     1      0
                    _WriteByte_USART
                       _print_string
 ---------------------------------------------------------------------------------
 (3) _print_string                                         2     0      2    1131
                                              1 COMMON     2     0      2
                    _WriteByte_USART
 ---------------------------------------------------------------------------------
 (4) _WriteByte_USART                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ResetCS5532                                          3     3      0     159
                                              2 COMMON     3     3      0
          _ReadRegister_4bytesCS5532
                   _TransferByte_SPI
         _WriteRegister_4bytesCS5532
 ---------------------------------------------------------------------------------
 (3) _ReceiveCMD_USART                                     2     2      0     164
                                              0 COMMON     2     2      0
                     _ReadByte_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByte_USART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitCS5532                                           0     0      0      90
          _ReadRegister_4bytesCS5532
         _WriteRegister_4bytesCS5532
 ---------------------------------------------------------------------------------
 (4) _WriteRegister_4bytesCS5532                           1     1      0      45
                                              1 COMMON     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _GPS_TIMEDATE                                         2     2      0     232
                                              2 COMMON     2     2      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (3) _GPS_STATUS                                           3     3      0     232
                                              2 COMMON     3     3      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (3) _GPS_LONGITUDE                                        4     4      0     164
                                              2 COMMON     4     4      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (3) _GPS_LATITUDE                                         4     4      0     164
                                              2 COMMON     4     4      0
                   _ReadByteSW_USART
 ---------------------------------------------------------------------------------
 (4) _ReadByteSW_USART                                     2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CleanHolding                                         1     1      0    5672
                                             18 BANK0      1     1      0
                           _ReadAD24
 ---------------------------------------------------------------------------------
 (3) _ReadAD24                                            17    13      4    5672
                                              9 COMMON     5     5      0
                                              6 BANK0     12     8      4
          _ReadRegister_4bytesCS5532
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    2884
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _ReadRegister_4bytesCS5532                            1     1      0      45
                                              1 COMMON     1     1      0
                   _TransferByte_SPI
 ---------------------------------------------------------------------------------
 (3) _TransferByte_SPI                                     2     2      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClosePort_SPI
   _ClosePort_USART
   _ConfigPort_SPI
   _ConfigPort_USART
   _OpenPort_SPI
   _OpenPort_USART

 _Interrups (ROOT)
   _CleanHolding
     _ReadAD24
       _ReadRegister_4bytesCS5532
         _TransferByte_SPI
       ___aldiv
   _GPS_LATITUDE
     _ReadByteSW_USART
   _GPS_LONGITUDE
     _ReadByteSW_USART
   _GPS_STATUS
     _ReadByteSW_USART
   _GPS_TIMEDATE
     _ReadByteSW_USART
   _InitCS5532
     _ReadRegister_4bytesCS5532
     _WriteRegister_4bytesCS5532
       _TransferByte_SPI
   _ReadAD24
   _ReadRegister_4bytesCS5532
   _ReceiveCMD_USART
     _ReadByte_USART
   _ResetCS5532
     _ReadRegister_4bytesCS5532
     _TransferByte_SPI
     _WriteRegister_4bytesCS5532
   _TransferByte_SPI
   _TransmitCMD_USART
     _WriteByte_USART
     _print_string
       _WriteByte_USART
   _TransmitDAT_USART
     _WriteByte_USART
     _print_string
   _WriteByte_USART
   ___aldiv
   _print_string
   _print_value
     _WriteByte_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      73       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3      18       7       30.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      73      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 12 16:19:42 2023

                                 pc 0002                         _SSPSTATbits 0094  
                                fsr 0004                                 l172 1610  
                               l175 15FD                                 l281 15F9  
                               l513 175F                                 l178 15F5  
                               l514 175F                                 l275 167C  
                               l278 1601                                 _PR2 0092  
                   ?_OpenPort_USART 0070             TransmitDAT_USART@DAT_ID 0073  
                               fsr0 0004                                 indf 0000  
            TransmitDAT_USART@conta 0074                         ?_GPS_STATUS 0070  
                              l3600 15F2                                l3602 1660  
                              l3604 1664                                l3612 15FE  
                              l3620 172B                                l3614 15F6  
                              l3606 1676                                l3630 1734  
                              l3622 172C                                l3608 1679  
                              l3640 1758                                l3632 1735  
                              l3624 172D                                l3616 1724  
                              l3642 1759                                l3634 1744  
                              l3626 172E                                l3618 1728  
                              l3644 175A                                l3636 174E  
                              l3628 1732                                l3646 175D  
                              l3638 1753                                l3592 1602  
                              l3648 175E                                l3594 160C  
                              l3598 15FA                                STR_1 1028  
                              STR_2 1025                                STR_3 1033  
                              STR_4 1025                                STR_5 103E  
                              STR_6 1025                                STR_7 1048  
                              STR_8 1025                                STR_9 1010  
                              u1677 173E                                i1l50 17CE  
                              i1l52 17F4                                i1l45 17B3  
                              i1l54 17FF                                i1l71 0A49  
                              i1l57 0A40                                i1l85 08EA  
                              i1l99 0891                                _TMR2 0011  
                              _main 1724                                btemp 007E  
                              start 0012             __end_of_ClosePort_USART 15FA  
         _ReadRegister_4bytesCS5532 080E                     __end_of___aldiv 0AE7  
                             ?_main 0070                               STR_10 1048  
                             STR_11 1025                               STR_12 1048  
                             STR_13 1025                               _T1CON 0010  
                             _T2CON 0012                               i1l201 0AE8  
                             i1l115 09C1                               i1l205 0B9C  
                             i1l301 16C0                               i1l311 0955  
                             i1l208 1645                               i1l314 165F  
                             i1l322 1723                               i1l307 0951  
                             i1l181 1617                               i1l319 07F4  
                             i1l184 1620                               i1l192 169A  
                             i1l450 0D61                               i1l195 0839  
                             i1l284 1625                               i1l292 0807  
                             i1l508 07B3                               i1l189 17AF  
                             i1l445 0BEA                               i1l198 16E8  
                             i1l295 080D                               i1l288 162D  
                             i1l289 1630                               i1l481 011F  
                             i1l465 0BD2                               i1l466 07B3  
                             i1l483 01AA                               i1l467 047D  
                             i1l496 04FB                               i1l667 0A5E  
                             i1l677 0AE6                               _RCREG 001A  
                             _RCSTA 0018                               _TMR1H 000F  
                             _TMR1L 000E                               _SPBRG 0099  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             u90_20 0A95                               u90_21 0A94  
                             u91_25 0A97                               u84_20 161D  
                             u92_20 0AB0                               u84_21 161C  
                             u92_21 0AAF                               u92_25 0AAC  
                             u85_20 080D                               u85_21 080C  
                             u93_25 0AC0                               u94_20 0ACE  
                             u86_20 0A51                               u94_21 0ACD  
                             u86_21 0A50                               u95_20 0AD3  
                             u87_20 0A62                               u95_21 0AD2  
                             u87_21 0A61                               u88_20 0A81  
                             u96_20 17B7                               u88_21 0A80  
                             u96_21 17B6                               u97_20 17CA  
                             u97_21 17C9                               _TXREG 0019  
                             u89_25 0A86                               u98_20 17E2  
                             u98_21 17E1                               u99_20 17F0  
                             u99_21 17EF                               _TXSTA 0098  
                        _InitCS5532 167D                               pclath 000A  
                             status 0003                               wtemp0 007E  
            GPS_TIMEDATE@LimitConta 0072                     __initialization 0015  
                  __end_of_ReadAD24 0B9D                        __end_of_main 1763  
                     ?_GPS_LATITUDE 0070                       ??_ResetCS5532 0072  
                            ??_main 00B5                   ?_ReadByteSW_USART 0070  
                     ?_GPS_TIMEDATE 0070                GPS_STATUS@LimitConta 0072  
                ??_ReadByteSW_USART 0070                      _ReadByte_USART 1621  
                            _ADCON1 009F                              u100_20 0AEE  
                            u100_21 0AED                              u101_20 0B01  
                            u101_21 0B00                              u102_20 0B16  
                            u110_20 0A01                              u110_21 0A00  
                            u102_25 0B11                              u103_20 0B3C  
                            u111_20 0A10                              i1l3000 0FA6  
                            u111_21 0A0F                              i1l3010 0FF1  
                            i1l3002 0FB5                              i1l3100 0C9E  
                            i1l3020 0BBC                              i1l3012 0FFA  
                            i1l3004 0FC4                              u103_25 0B37  
                            i1l3110 0CAD                              i1l3102 0CA1  
                            i1l3030 0BF6                              i1l3022 0BC4  
                            i1l3014 0B9D                              i1l3006 0FD3  
                            u104_20 0B62                              u120_20 0849  
                            u112_20 0A1A                              i1l3200 01B0  
                            i1l3120 0049                              i1l3112 002A  
                            i1l3104 0CA3                              i1l3040 0C15  
                            i1l3032 0C01                              i1l3024 0BCB  
                            i1l3016 0BAB                              i1l3008 0FE2  
                            u120_21 0848                              u112_21 0A19  
                            i1l2402 17B0                              i1l3202 01B4  
                            i1l3130 005B                              i1l3122 004F  
                            i1l3114 0030                              i1l3106 0CA9  
                            i1l3050 0C27                              i1l3042 0C17  
                            i1l3034 0C07                              i1l3018 0BB7  
                            i1l3026 0BD4                              i1l2340 161D  
                            i1l2420 17CA                              i1l2412 17BD  
                            i1l2404 17B7                              i1l2500 09E5  
                            i1l3300 03EF                              i1l3220 020B  
                            i1l3204 01BF                              i1l3140 00D9  
                            i1l3132 0061                              i1l3124 0058  
                            i1l3116 0034                              i1l3108 0CAC  
                            i1l3060 0C37                              i1l3052 0C2B  
                            i1l3044 0C19                              i1l3036 0C0B  
                            i1l3028 0BF0                              u104_25 0B5D  
                            i1l2350 0827                              i1l2430 17E7  
                            i1l2422 17D4                              i1l2414 17C2  
                            i1l2406 17BC                              i1l2510 0A03  
                            i1l2502 09E9                              i1l3310 043A  
                            i1l3302 03FE                              i1l3230 022F  
                            i1l3222 0211                              i1l3214 01D3  
                            i1l3206 01C9                              i1l3150 0119  
                            i1l3142 00FA                              i1l3134 0082  
                            i1l3118 003F                              i1l3070 0C47  
                            i1l3062 0C3B                              i1l3054 0C2E  
                            i1l3046 0C1A                              i1l3038 0C11  
                            i1l2352 0830                              i1l2344 080F  
                            i1l2360 0A4A                              i1l2440 17FA  
                            i1l2432 17E8                              i1l2424 17D8  
                            i1l2416 17C3                              i1l2600 0862  
                            u121_20 0858                              u113_20 0A32  
                            i1l2512 0A08                              i1l2504 09EF  
                            u105_20 1629                              i1l3400 05C2  
                            i1l3320 0482                              i1l3312 0443  
                            i1l3304 040D                              i1l3240 024A  
                            i1l3232 0236                              i1l3224 0216  
                            i1l3216 01E4                              i1l3208 01D0  
                            i1l3160 0127                              i1l3152 011C  
                            i1l3144 0108                              i1l3136 00CD  
                            i1l3080 0C66                              i1l3072 0C4F  
                            i1l3064 0C3E                              i1l3056 0C2F  
                            i1l3048 0C21                              u121_21 0857  
                            u113_21 0A31                              u105_21 1628  
                            i1l2338 1612                              i1l2346 0815  
                            i1l2370 0A71                              i1l2362 0A4D  
                            i1l2450 0AEE                              i1l2434 17E9  
                            i1l2426 17DC                              i1l2418 17C4  
                            i1l2610 0870                              i1l2530 0A2C  
                            i1l2514 0A10                              i1l2506 09F9  
                            i1l3410 05E6                              i1l3402 05C8  
                            i1l3330 0499                              i1l3322 0488  
                            i1l3314 0447                              i1l3306 041C  
                            i1l3250 0280                              i1l3242 026D  
                            i1l3226 021A                              i1l3218 0207  
                            i1l3170 013A                              i1l3162 012A  
                            i1l3154 011D                              i1l3146 010F  
                            i1l3138 00D3                              i1l3090 0C84  
                            i1l3082 0C6C                              i1l3074 0C54  
                            i1l3066 0C3F                              i1l3058 0C31  
                            i1l2348 081E                              i1l2380 0A91  
                            i1l2372 0A79                              i1l2364 0A51  
                            i1l2460 0B92                              i1l2452 0AF4  
                            i1l2436 17EA                              i1l2428 17E2  
                            i1l2540 0892                              i1l2612 0874  
                            i1l2620 087E                              i1l2532 0A32  
                            i1l2524 0A1B                              i1l2516 0A14  
                            i1l2508 0A01                              i1l2444 16C2  
                            i1l2700 1764                              i1l2356 0802  
                            i1l3420 0601                              i1l3412 05ED  
                            i1l3404 05CD                              i1l3340 04BA  
                            i1l3332 049D                              i1l3324 048C  
                            i1l3316 044D                              i1l3308 042B  
                            i1l3252 028B                              i1l3244 0271  
                            i1l3228 0225                              i1l3180 0158  
                            i1l3172 0143                              i1l3164 0130  
                            i1l3156 0120                              i1l3148 0115  
                            i1l3092 0C8A                              i1l3084 0C72  
                            i1l3076 0C5A                              i1l3068 0C41  
                            i1l2390 0ABF                              i1l2382 0A95  
                            i1l2374 0A81                              i1l2366 0A62  
                            i1l2454 0AFC                              i1l2438 17F0  
                            i1l2550 08A8                              i1l2542 0894  
                            i1l2614 087A                              i1l2606 0863  
                            i1l2622 0882                              i1l2534 0A35  
                            i1l2526 0A20                              i1l2518 0A1A  
                            i1l2630 0958                              i1l2470 162F  
                            i1l2710 1783                              i1l2702 176A  
                            i1l2358 0806                              i1l3430 0637  
                            i1l3422 0624                              i1l3406 05D1  
                            i1l3350 04F1                              i1l3334 049E  
                            i1l3326 0490                              i1l3270 02DD  
                            i1l3262 029F                              i1l3254 0295  
                            i1l3246 0277                              i1l3238 0239  
                            i1l3190 016C                              i1l3182 0162  
                            i1l3174 0148                              i1l3166 0136  
                            i1l3158 0126                              i1l3094 0C90  
                            i1l3086 0C78                              i1l3078 0C60  
                            i1l3318 0451                              i1l2392 0AC8  
                            i1l2384 0A9E                              i1l2376 0A84  
                            i1l2368 0A6D                              i1l2456 0B01  
                            i1l2448 0AE8                              i1l2552 08B0  
                            i1l2544 0899                              i1l2624 0888  
                            i1l2616 087D                              i1l2608 0868  
                            u122_20 0862                              u114_20 0A49  
                            i1l2536 0A39                              i1l2528 0A28  
                            u130_20 09C1                              i1l2632 095D  
                            u106_20 162D                              i1l2464 1621  
                            i1l2800 0954                              i1l2720 179C  
                            i1l2712 1789                              i1l2704 176E  
                            i1l2480 16B0                              i1l3432 0642  
                            i1l3424 0628                              i1l3408 05DC  
                            i1l3360 0510                              i1l3352 04F5  
                            i1l3336 04A9                              i1l3328 0494  
                            i1l3280 0302                              i1l3272 02E2  
                            i1l3264 02B0                              i1l3256 029C  
                            i1l3248 027C                              i1l3192 017D  
                            i1l3184 0169                              i1l3176 014C  
                            i1l3168 0139                              i1l3096 0C91  
                            i1l3088 0C7E                              u122_21 0861  
                            u114_21 0A48                              u130_21 09C0  
                            u106_21 162C                              i1l2386 0AB0  
                            i1l2378 0A8D                              i1l2394 0ACE  
                            i1l2458 0B75                              i1l2570 08D2  
                            i1l2562 08BB                              i1l2554 08B4  
                            i1l2546 08A1                              i1l2490 09D7  
                            i1l2538 0A3A                              i1l2482 09C2  
                            i1l2650 0982                              i1l2642 096B  
                            i1l2634 0965                              i1l2730 167D  
                            i1l2466 1624                              i1l2722 17A2  
                            i1l2714 178C                              i1l2706 1774  
                            i1l2474 169B                              i1l3450 0694  
                            i1l3442 0656                              i1l3434 064C  
                            i1l3426 062E                              i1l3418 05F0  
                            i1l3370 0524                              i1l3362 051A  
                            i1l3354 04FC                              i1l3346 04BD  
                            i1l3338 04B3                              i1l3290 0339  
                            i1l3274 02E6                              i1l3266 02D3  
                            i1l3194 01A0                              i1l3178 014D  
                            i1l3098 0C98                              i1l2396 0AD3  
                            i1l2388 0ABE                              i1l2580 08E1  
                            i1l2572 08D6                              i1l2564 08C0  
                            i1l2556 08BA                              i1l2548 08A3  
                            i1l2484 09C5                              i1l2660 099B  
                            i1l2652 0984                              i1l2644 0970  
                            i1l2636 096A                              i1l2628 0956  
                            i1l2740 1693                              i1l2732 1683  
                            i1l2468 1629                              i1l2724 17A6  
                            i1l2716 1792                              i1l2708 177A  
                            i1l2476 169C                              i1l2804 1647  
                            i1l2812 07C7                              i1l3460 075E  
                            i1l3452 072F                              i1l3444 0667  
                            i1l3436 0653                              i1l3428 0633  
                            i1l3380 0567                              i1l3372 0535  
                            i1l3364 0521                              i1l3356 0501  
                            i1l3348 04CE                              i1l3292 033D  
                            i1l3276 02F1                              i1l3268 02D7  
                            i1l3196 01A4                              i1l2900 0D67  
                            i1l2398 0ADE                              i1l2566 08C8  
                            i1l2590 0849                              i1l2486 09CA  
                            i1l2670 09A9                              i1l2654 0989  
                            i1l2646 0978                              i1l2734 168C  
                            i1l2726 17AC                              i1l2718 1796  
                            i1l2478 16AA                              i1l2806 1650  
                            i1l2822 07D7                              i1l2814 07D0  
                            i1l3470 0797                              i1l3462 076D  
                            i1l3454 0738                              i1l3446 068A  
                            i1l3382 056B                              i1l3374 0558  
                            i1l3358 0505                              i1l3294 0343  
                            i1l3286 0305                              i1l3278 02FB  
                            i1l3198 01AB                              i1l2902 0D6B  
                            i1l2744 1631                              i1l2568 08CC  
                            i1l2576 08D7                              u115_20 08A1  
                            u123_20 087A                              i1l2592 084B  
                            i1l2584 083A                              i1l2496 09D8  
                            i1l2488 09D2                              i1l2672 09AD  
                            i1l2656 0991                              i1l2648 097C  
                            i1l2680 09B7                              i1l2736 1690  
                            u131_20 1774                              u107_20 16C0  
                            i1l2808 1656                              i1l2824 07E1  
                            i1l2816 07D6                              i1l2840 171D  
                            i1l2832 16E9                              i1l3472 079D  
                            i1l3464 077C                              i1l3456 0740  
                            i1l3448 068E                              i1l3384 0576  
                            i1l3376 055C                              i1l3296 03DE  
                            i1l3288 0316                              i1l2920 0DC2  
                            i1l2904 0D76                              u115_21 08A0  
                            u123_21 0879                              u131_21 1773  
                            u107_21 16BF                              i1l2746 163C  
                            i1l2578 08DB                              i1l2594 0850  
                            i1l2586 083C                              i1l2498 09DD  
                            i1l2674 09B3                              i1l2666 099C  
                            i1l2658 0995                              i1l2682 09BB  
                            i1l2738 1691                              i1l2770 08EC  
                            i1l2826 07E5                              i1l2834 170F  
                            i1l3474 07A0                              i1l3466 078B  
                            i1l3458 074F                              i1l3394 058A  
                            i1l3386 0580                              i1l3378 0562  
                            i1l3298 03E7                              i1l3714 0BDC  
                            i1l2930 0DE6                              i1l2922 0DC8  
                            i1l2914 0D8A                              i1l2906 0D80  
                            i1l2850 0CC1                              i1l2596 0858  
                            i1l2588 0841                              i1l2676 09B6  
                            i1l2668 09A1                              i1l2780 0903  
                            i1l2772 08F2                              i1l2764 08EB  
                            i1l2828 07EB                              i1l2836 1711  
                            i1l3476 07A7                              i1l3468 0794  
                            i1l3396 059B                              i1l3388 0587  
                            i1l3716 0459                              i1l2940 0E01  
                            i1l2932 0DED                              i1l2924 0DCD  
                            i1l2916 0D9B                              i1l2908 0D87  
                            i1l2860 0CD3                              i1l2852 0CC8  
                            i1l2844 0CB2                              i1l2598 085C  
                            i1l2790 0921                              i1l2782 0909  
                            i1l2694 1763                              i1l2838 1717  
                            i1l3478 07AA                              i1l3398 05BE  
                            i1l2950 0E37                              i1l2942 0E24  
                            i1l2926 0DD1                              i1l2918 0DBE  
                            i1l2870 0CE8                              i1l2862 0CD6  
                            i1l2854 0CC9                              i1l2846 0CB8  
                            u116_20 08B0                              u124_20 0888  
                            u108_20 09D2                              i1l2792 0927  
                            i1l2784 090F                              i1l2776 08F9  
                            u132_20 08F8                              u140_20 170B  
                            i1l2952 0E42                              i1l2944 0E28  
                            i1l2928 0DDC                              i1l2880 0D04  
                            i1l2872 0CF1                              i1l2864 0CD7  
                            i1l2856 0CCF                              i1l2848 0CBC  
                            u116_21 08AF                              u124_21 0887  
                            u108_21 09D1                              u132_21 08F7  
                            i1l2794 092D                              i1l2786 0915  
                            i1l2778 08FD                              i1l2970 0E94  
                            i1l2962 0E56                              i1l2954 0E4C  
                            i1l2946 0E2E                              i1l2938 0DF0  
                            i1l2890 0D23                              i1l2882 0D0F  
                            i1l2874 0CFA                              i1l2866 0CDC  
                            i1l2858 0CD0                              i1l2796 094D  
                            i1l2788 091B                              i1l2980 0EB9  
                            i1l2972 0E99                              i1l2964 0E67  
                            i1l2956 0E53                              i1l2948 0E33  
                            i1l2892 0D34                              i1l2884 0D19  
                            i1l2876 0CFF                              i1l2868 0CDF  
                            u140_25 1706                              i1l2990 0EF0  
                            i1l2974 0E9D                              i1l2966 0E8A  
                            i1l2894 0D57                              i1l2878 0D03  
                            u117_20 08BA                              u109_20 09EF  
                            u125_20 0965                              u133_20 0903  
                            i1l2992 0EF4                              i1l2976 0EA8  
                            i1l2968 0E8E                              i1l2896 0D5B  
                            u141_20 0CB8                              u117_21 08B9  
                            u109_21 09EE                              u125_21 0964  
                            u133_21 0902                              u141_21 0CB5  
                            i1l2994 0EFA                              i1l2986 0EBC  
                            i1l2978 0EB2                              i1l2898 0D62  
                            i1l2996 0F95                              i1l2988 0ECD  
                            i1l2998 0F9E                              u118_20 08D2  
                            u126_20 0982                              u134_20 0909  
                            u150_20 0BF0                              u142_20 0CBC  
                            u118_21 08D1                              u126_21 0981  
                            u134_21 0908                              u150_21 0BED  
                            u142_21 0CBB                              u119_20 08E1  
                            u127_20 0991                              u135_20 0915  
                            u151_20 0BF6                              u143_20 0CC8  
                            u119_21 08E0                              u127_21 0990  
                            u135_21 0914                              u151_21 0BF5  
                            u143_21 0CC5                              u128_20 099B  
                            u136_20 0921                              u160_20 04FB  
                            u152_20 00D9                              u144_20 0D61  
                            u128_21 099A                              u136_21 0920  
                            u160_21 04FA                              u152_21 00D8  
                            u144_21 0D60                              u129_20 09B3  
                            u137_20 092D                              u161_20 0562  
                            u153_20 01AA                              u145_20 0DC8  
                            u129_21 09B2                              u137_21 092C  
                            u161_21 0561                              u153_21 01A9  
                            u145_21 0DC7                              u138_20 07EB  
                            u162_20 05C8                              u154_20 0211  
                            u146_20 0E2E                              u138_21 07EA  
                            u162_21 05C7                              u154_21 0210  
                            u146_21 0E2D                              u170_27 0DD7  
                            u139_20 16F8                              u163_20 062E  
                            u155_20 0277                              u147_20 0E94  
                            u163_21 062D                              u155_21 0276  
                            u147_21 0E93                              u139_25 16F3  
                            u171_27 0E3D                              u164_20 0694  
                            u156_20 02DD                              u148_20 0EFA  
                            u164_21 0693                              u156_21 02DC  
                            u148_21 0EF9                              u180_27 050B  
                            u172_27 0EA3                              u165_20 079D  
                            u157_20 0343                              u149_20 0BC4  
                            u165_21 079C                              u157_21 0342  
                            u149_21 0BC3                              u181_27 0571  
                            u173_27 003A                              u166_20 07A7  
                            u158_20 0482                              u166_21 07A6  
                            u158_21 0481                              u190_27 17BF  
                            u182_27 05D7                              u174_27 0153  
                            u159_20 0488                              u159_21 0487  
                            u191_27 17E4                              u183_27 063D  
                            u175_27 01BA                              u192_27 17FC  
                            u184_27 177E                              u176_27 0220  
                            u168_27 0D0A                              u193_27 1639  
                            u185_27 1794                              u177_27 0286  
                            u169_27 0D71                              u186_27 17A4  
                            u178_27 02EC                              u187_27 088C  
                            u179_27 04A4                              u188_27 08E5  
                            u189_27 17B9                              _SSPBUF 0013  
                            _CmdGPS 004E                              _Data_X 0030  
                            _Data_Y 002C                              _Data_Z 0028  
          __end_of_ReceiveCMD_USART 0956  __end_of_WriteRegister_4bytesCS5532 16E9  
        _WriteRegister_4bytesCS5532 16C1                         _ContaSample 004C  
                    ??_GPS_LATITUDE 0072                           ??___aldiv 0078  
                  print_value@Bytes 007A                    ?_ClosePort_USART 0070  
                        _SumData_TC 0038                          _SumData_TS 0034  
          __end_of_ConfigPort_USART 167D                    print_value@value 0071  
                  _TransferByte_SPI 1611                        _CleanHolding 1631  
                       Interrups@ID 006B                      ??_GPS_TIMEDATE 0072  
            __end_of_ReadByte_USART 1631                              saved_w 007E  
               __end_of_ResetCS5532 17B0                       _GPS_LONGITUDE 083A  
                       ?_InitCS5532 0070             __end_of__initialization 0026  
                      ?_print_value 0071                       ?_OpenPort_SPI 0070  
             __end_of_ClosePort_SPI 15F6                      __pcstackCOMMON 0070  
                  ??_OpenPort_USART 00B5                     ?_ReadByte_USART 0070  
                   GPS_STATUS@conta 0074                      _OPTION_REGbits 0081  
                 __end_of_Interrups 07C0                      ?_GPS_LONGITUDE 0070  
                      ??_GPS_STATUS 0072                           ?_ReadAD24 0056  
                        __pbssBANK0 0020                          __pbssBANK1 00A0  
                    ??_OpenPort_SPI 00B5                          __pmaintext 1724  
                        __pintentry 0004                   GPS_LATITUDE@conta 0075  
                __end_of_GPS_STATUS 0A4A                         _ResetCS5532 1763  
              __end_of_GPS_LATITUDE 08EB                          ??_ReadAD24 005A  
                        __stringtab 1000                             _Data_TC 0024  
                           _Data_TS 0020                __end_of_GPS_TIMEDATE 09C2  
                           ___aldiv 0A4A                 ReadAD24@cmd_convert 0056  
      ??_WriteRegister_4bytesCS5532 0071                             __ptext1 15FE  
                           __ptext2 15FA                             __ptext3 1660  
                           __ptext4 1602                             __ptext5 15F6  
                           __ptext6 15F2                             __ptext7 0CB2  
                           __ptext8 16E9                             __ptext9 07C6  
                         _T2CONbits 0012                     ??_GPS_LONGITUDE 0072  
                       _SumData_GND 00A4                    ___aldiv@dividend 0074  
                           clrloop0 07F6                end_of_initialization 0026  
               WriteByte_USART@byte 0070            __end_of_TransferByte_SPI 1621  
                 ?_ReceiveCMD_USART 0070                  ??_ReceiveCMD_USART 0070  
                         _RCSTAbits 0018                    ___aldiv@quotient 0052  
                           psplit$0 110029                             psplit$1 29002A  
                 GPS_TIMEDATE@conta 0073                   ??_WriteByte_USART 0070  
                 ?_ConfigPort_USART 0070                           _PORTAbits 0005  
                         _PORTBbits 0006                           _PORTCbits 0007  
              __end_of_OpenPort_SPI 15FE                  ??_ConfigPort_USART 00B5  
                    _ConfigPort_SPI 1602                           _TRISCbits 0087  
                     ?_print_string 0071                        ??_InitCS5532 0072  
              TransferByte_SPI@data 0070                           _BufferDAT 00A8  
                  ??_ReadByte_USART 0070                           _BufferSPI 0048  
                __end_of_InitCS5532 169B              __end_of_ConfigPort_SPI 1611  
               start_initialization 0015                      ??_print_string 0073  
           TransmitCMD_USART@CMD_ID 0073                   pnum$text7_split_1 0029  
                 pnum$text7_split_2 002A                           _Interrups 0CB2  
        ReceiveCMD_USART@conta_byte 0070                   _TransmitDAT_USART 07C6  
                         _SumData_X 0044                           _SumData_Y 0040  
                         _SumData_Z 003C                   _TransmitCMD_USART 1646  
                      _GPS_LATITUDE 0892                  ?_TransmitDAT_USART 0070  
                ?_TransmitCMD_USART 0070                        ?_ResetCS5532 0070  
                   ?_ConfigPort_SPI 0070                        _GPS_TIMEDATE 0956  
               ??_TransmitDAT_USART 0073                           ___latbits 0002  
                     __pcstackBANK0 0050                       __pcstackBANK1 00B5  
               ??_TransmitCMD_USART 0073                          ?_Interrups 0070  
                  _ReadByteSW_USART 17B0           __end_of_TransmitDAT_USART 07F5  
         __end_of_TransmitCMD_USART 1660                            ?___aldiv 0070  
                   print_string@str 0071                           __pstrings 1000  
                 ??_ClosePort_USART 00B5          ?_ReadRegister_4bytesCS5532 0070  
                   ___aldiv@divisor 0070                   interrupt_function 0004  
                   ___aldiv@counter 0050                   ?_TransferByte_SPI 0070  
                   _WriteByte_USART 0801                           clear_ram0 07F5  
                      _OpenPort_SPI 15FA                            _PIE1bits 008C  
                ??_TransferByte_SPI 0070                            _PIR1bits 000C  
                     _ClosePort_SPI 15F2                __end_of_print_string 16C1  
                     ?_CleanHolding 0070                         __stringbase 100F  
                          _Data_GND 00A0               __end_of_GPS_LONGITUDE 0892  
         ReceiveCMD_USART@data_byte 0071                            _ReadAD24 0AE7  
                    Interrups@conta 006C                         ??_Interrups 0063  
                     ??_print_value 0075   __end_of_ReadRegister_4bytesCS5532 083A  
                          _RxBuffer 004F    ReadRegister_4bytesCS5532@command 0071  
                    ?_ClosePort_SPI 0070                      ??_CleanHolding 0062  
                __end_of__stringtab 1010                    ResetCS5532@conta 0074  
                          __ptext10 1646                            __ptext11 169B  
                          __ptext20 083A                            __ptext12 0801  
                          __ptext21 0892                            __ptext13 1763  
                          __ptext22 17B0                            __ptext14 08EB  
                          __ptext23 1631                            __ptext15 1621  
                          __ptext24 0AE7                            __ptext16 167D  
                          __ptext25 0A4A                            __ptext17 16C1  
                          __ptext26 080E                            __ptext18 0956  
                          __ptext27 1611                            __ptext19 09C2  
            GPS_LATITUDE@LimitConta 0074             __end_of_WriteByte_USART 080E  
                         pnum$text7 0011                 __end_of_print_value 1724  
                  ??_ConfigPort_SPI 00B5         ?_WriteRegister_4bytesCS5532 0070  
 WriteRegister_4bytesCS5532@command 0071                ReadAD24@flag_convert 0079  
          __end_of_ReadByteSW_USART 1800                          _INTCONbits 000B  
                    _OpenPort_USART 15FE             GPS_LONGITUDE@LimitConta 0074  
             ReadByteSW_USART@conta 0071                          _GPS_STATUS 09C2  
                          intlevel1 0000                     ??_ClosePort_SPI 00B5  
                         stringcode 100A                       _ControlSample 004D  
                   _ClosePort_USART 15F6              __end_of_OpenPort_USART 1602  
                  _ReceiveCMD_USART 08EB                            stringdir 100A  
                          stringtab 1000                        ___aldiv@sign 0051  
                GPS_LONGITUDE@conta 0075                        _print_string 169B  
                  ?_WriteByte_USART 0070                    _ConfigPort_USART 1660  
              __end_of_CleanHolding 1646         ??_ReadRegister_4bytesCS5532 0071  
                       _print_value 16E9                     ReadAD24@DataADC 007A  
                        _SSPCONbits 0014  
